/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const ChildProduct = {
  required: false,
  serializedName: 'ChildProduct',
  type: {
    name: 'Composite',
    className: 'ChildProduct',
    modelProperties: {
      constProperty: {
        required: true,
        isConstant: true,
        serializedName: 'constProperty',
        defaultValue: 'constant',
        type: {
          name: 'String'
        }
      },
      count: {
        required: false,
        serializedName: 'count',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const ConstantProduct = {
  required: false,
  serializedName: 'ConstantProduct',
  type: {
    name: 'Composite',
    className: 'ConstantProduct',
    modelProperties: {
      constProperty: {
        required: true,
        isConstant: true,
        serializedName: 'constProperty',
        defaultValue: 'constant',
        type: {
          name: 'String'
        }
      },
      constProperty2: {
        required: true,
        isConstant: true,
        serializedName: 'constProperty2',
        defaultValue: 'constant2',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const Product = {
  required: false,
  serializedName: 'Product',
  type: {
    name: 'Composite',
    className: 'Product',
    modelProperties: {
      displayNames: {
        required: false,
        serializedName: 'display_names',
        constraints: {
          MaxItems: 6,
          MinItems: 0,
          UniqueItems: true
        },
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      capacity: {
        required: false,
        serializedName: 'capacity',
        constraints: {
          ExclusiveMaximum: 100,
          ExclusiveMinimum: 0
        },
        type: {
          name: 'Number'
        }
      },
      image: {
        required: false,
        serializedName: 'image',
        constraints: {
          Pattern: 'http://\w+'
        },
        type: {
          name: 'String'
        }
      },
      child: {
        required: true,
        serializedName: 'child',
        defaultValue: {},
        type: {
          name: 'Composite',
          className: 'ChildProduct'
        }
      },
      constChild: {
        required: true,
        isConstant: true,
        serializedName: 'constChild',
        defaultValue: {},
        type: {
          name: 'Composite',
          className: 'ConstantProduct'
        }
      },
      constInt: {
        required: true,
        isConstant: true,
        serializedName: 'constInt',
        defaultValue: 0,
        type: {
          name: 'Number'
        }
      },
      constString: {
        required: true,
        isConstant: true,
        serializedName: 'constString',
        defaultValue: 'constant',
        type: {
          name: 'String'
        }
      },
      constStringAsEnum: {
        required: false,
        serializedName: 'constStringAsEnum',
        type: {
          name: 'Enum',
          allowedValues: [ 'constant_string_as_enum' ]
        }
      }
    }
  }
};

export const ErrorModel = {
  required: false,
  serializedName: 'Error',
  type: {
    name: 'Composite',
    className: 'ErrorModel',
    modelProperties: {
      code: {
        required: false,
        serializedName: 'code',
        type: {
          name: 'Number'
        }
      },
      message: {
        required: false,
        serializedName: 'message',
        type: {
          name: 'String'
        }
      },
      fields: {
        required: false,
        serializedName: 'fields',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const AutoRestValidationTestValidationOfBodyOptionalParams = {
  required: false,
  serializedName: 'ValidationOfBodyOptions',
  type: {
    name: 'Composite',
    className: 'AutoRestValidationTestValidationOfBodyOptionalParams',
    modelProperties: {
      body: {
        required: false,
        serializedName: 'body',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const AutoRestValidationTestPostWithConstantInBodyOptionalParams = {
  required: false,
  serializedName: 'PostWithConstantInBodyOptions',
  type: {
    name: 'Composite',
    className: 'AutoRestValidationTestPostWithConstantInBodyOptionalParams',
    modelProperties: {
      body: {
        required: false,
        serializedName: 'body',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};
