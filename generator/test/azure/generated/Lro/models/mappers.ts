/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import {CloudErrorMapper, BaseResourceMapper } from "ms-rest-azure-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource = {
  required: false,
  serializedName: 'Resource',
  type: {
    name: 'Composite',
    className: 'Resource',
    modelProperties: {
      id: {
        required: false,
        readOnly: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      type: {
        required: false,
        readOnly: true,
        serializedName: 'type',
        type: {
          name: 'String'
        }
      },
      tags: {
        required: false,
        serializedName: 'tags',
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      location: {
        required: false,
        serializedName: 'location',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        readOnly: true,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const Sku = {
  required: false,
  serializedName: 'Sku',
  type: {
    name: 'Composite',
    className: 'Sku',
    modelProperties: {
      name: {
        required: false,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const Product = {
  required: false,
  serializedName: 'Product',
  type: {
    name: 'Composite',
    className: 'Product',
    modelProperties: {
      id: {
        required: false,
        readOnly: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      type: {
        required: false,
        readOnly: true,
        serializedName: 'type',
        type: {
          name: 'String'
        }
      },
      tags: {
        required: false,
        serializedName: 'tags',
        type: {
          name: 'Dictionary',
          value: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      location: {
        required: false,
        serializedName: 'location',
        type: {
          name: 'String'
        }
      },
      name: {
        required: false,
        readOnly: true,
        serializedName: 'name',
        type: {
          name: 'String'
        }
      },
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      },
      provisioningStateValues: {
        required: false,
        readOnly: true,
        serializedName: 'properties.provisioningStateValues',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const SubResource = {
  required: false,
  serializedName: 'SubResource',
  type: {
    name: 'Composite',
    className: 'SubResource',
    modelProperties: {
      id: {
        required: false,
        readOnly: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const SubProduct = {
  required: false,
  serializedName: 'SubProduct',
  type: {
    name: 'Composite',
    className: 'SubProduct',
    modelProperties: {
      id: {
        required: false,
        readOnly: true,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      },
      provisioningStateValues: {
        required: false,
        readOnly: true,
        serializedName: 'properties.provisioningStateValues',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const OperationResultError = {
  required: false,
  serializedName: 'OperationResult_error',
  type: {
    name: 'Composite',
    className: 'OperationResultError',
    modelProperties: {
      code: {
        required: false,
        serializedName: 'code',
        type: {
          name: 'Number'
        }
      },
      message: {
        required: false,
        serializedName: 'message',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const OperationResult = {
  required: false,
  serializedName: 'OperationResult',
  type: {
    name: 'Composite',
    className: 'OperationResult',
    modelProperties: {
      status: {
        required: false,
        serializedName: 'status',
        type: {
          name: 'String'
        }
      },
      error: {
        required: false,
        serializedName: 'error',
        type: {
          name: 'Composite',
          className: 'OperationResultError'
        }
      }
    }
  }
};

export const LROsPut200SucceededOptionalParams = {
  required: false,
  serializedName: 'Put200SucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsPut200SucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut200SucceededNoStateOptionalParams = {
  required: false,
  serializedName: 'Put200SucceededNoStateOptions',
  type: {
    name: 'Composite',
    className: 'LROsPut200SucceededNoStateOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut202Retry200OptionalParams = {
  required: false,
  serializedName: 'Put202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsPut202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'Put201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LROsPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut200UpdatingSucceeded204OptionalParams = {
  required: false,
  serializedName: 'Put200UpdatingSucceeded204Options',
  type: {
    name: 'Composite',
    className: 'LROsPut200UpdatingSucceeded204OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut201CreatingFailed200OptionalParams = {
  required: false,
  serializedName: 'Put201CreatingFailed200Options',
  type: {
    name: 'Composite',
    className: 'LROsPut201CreatingFailed200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPut200Acceptedcanceled200OptionalParams = {
  required: false,
  serializedName: 'Put200Acceptedcanceled200Options',
  type: {
    name: 'Composite',
    className: 'LROsPut200Acceptedcanceled200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutNoHeaderInRetryOptionalParams = {
  required: false,
  serializedName: 'PutNoHeaderInRetryOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutNoHeaderInRetryOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutAsyncNoRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PutAsyncNoRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncNoRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutAsyncRetryFailedOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRetryFailedOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncRetryFailedOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutAsyncNoRetrycanceledOptionalParams = {
  required: false,
  serializedName: 'PutAsyncNoRetrycanceledOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncNoRetrycanceledOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutAsyncNoHeaderInRetryOptionalParams = {
  required: false,
  serializedName: 'PutAsyncNoHeaderInRetryOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncNoHeaderInRetryOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPutNonResourceOptionalParams = {
  required: false,
  serializedName: 'PutNonResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutNonResourceOptionalParams',
    modelProperties: {
      sku: {
        required: false,
        serializedName: 'sku',
        type: {
          name: 'Composite',
          className: 'Sku'
        }
      }
    }
  }
};

export const LROsPutAsyncNonResourceOptionalParams = {
  required: false,
  serializedName: 'PutAsyncNonResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncNonResourceOptionalParams',
    modelProperties: {
      sku: {
        required: false,
        serializedName: 'sku',
        type: {
          name: 'Composite',
          className: 'Sku'
        }
      }
    }
  }
};

export const LROsPutSubResourceOptionalParams = {
  required: false,
  serializedName: 'PutSubResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutSubResourceOptionalParams',
    modelProperties: {
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LROsPutAsyncSubResourceOptionalParams = {
  required: false,
  serializedName: 'PutAsyncSubResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsPutAsyncSubResourceOptionalParams',
    modelProperties: {
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LROsPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'Post202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPost202NoRetry204OptionalParams = {
  required: false,
  serializedName: 'Post202NoRetry204Options',
  type: {
    name: 'Composite',
    className: 'LROsPost202NoRetry204OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPostAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsPostAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPostAsyncNoRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PostAsyncNoRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsPostAsyncNoRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPostAsyncRetryFailedOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRetryFailedOptions',
  type: {
    name: 'Composite',
    className: 'LROsPostAsyncRetryFailedOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsPostAsyncRetrycanceledOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRetrycanceledOptions',
  type: {
    name: 'Composite',
    className: 'LROsPostAsyncRetrycanceledOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut200SucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPut200SucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut200SucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut200SucceededNoStateOptionalParams = {
  required: false,
  serializedName: 'BeginPut200SucceededNoStateOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut200SucceededNoStateOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut202Retry200OptionalParams = {
  required: false,
  serializedName: 'BeginPut202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'BeginPut201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut200UpdatingSucceeded204OptionalParams = {
  required: false,
  serializedName: 'BeginPut200UpdatingSucceeded204Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut200UpdatingSucceeded204OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut201CreatingFailed200OptionalParams = {
  required: false,
  serializedName: 'BeginPut201CreatingFailed200Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut201CreatingFailed200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPut200Acceptedcanceled200OptionalParams = {
  required: false,
  serializedName: 'BeginPut200Acceptedcanceled200Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPut200Acceptedcanceled200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutNoHeaderInRetryOptionalParams = {
  required: false,
  serializedName: 'BeginPutNoHeaderInRetryOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutNoHeaderInRetryOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncNoRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncNoRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncNoRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncRetryFailedOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRetryFailedOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncRetryFailedOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncNoRetrycanceledOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncNoRetrycanceledOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncNoRetrycanceledOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncNoHeaderInRetryOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncNoHeaderInRetryOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncNoHeaderInRetryOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPutNonResourceOptionalParams = {
  required: false,
  serializedName: 'BeginPutNonResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutNonResourceOptionalParams',
    modelProperties: {
      sku: {
        required: false,
        serializedName: 'sku',
        type: {
          name: 'Composite',
          className: 'Sku'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncNonResourceOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncNonResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncNonResourceOptionalParams',
    modelProperties: {
      sku: {
        required: false,
        serializedName: 'sku',
        type: {
          name: 'Composite',
          className: 'Sku'
        }
      }
    }
  }
};

export const LROsBeginPutSubResourceOptionalParams = {
  required: false,
  serializedName: 'BeginPutSubResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutSubResourceOptionalParams',
    modelProperties: {
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LROsBeginPutAsyncSubResourceOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncSubResourceOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPutAsyncSubResourceOptionalParams',
    modelProperties: {
      provisioningState: {
        required: false,
        serializedName: 'properties.provisioningState',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LROsBeginPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'BeginPost202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPost202NoRetry204OptionalParams = {
  required: false,
  serializedName: 'BeginPost202NoRetry204Options',
  type: {
    name: 'Composite',
    className: 'LROsBeginPost202NoRetry204OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPostAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPostAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPostAsyncNoRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncNoRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPostAsyncNoRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPostAsyncRetryFailedOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRetryFailedOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPostAsyncRetryFailedOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsBeginPostAsyncRetrycanceledOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRetrycanceledOptions',
  type: {
    name: 'Composite',
    className: 'LROsBeginPostAsyncRetrycanceledOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'Put201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LRORetrysPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysPutAsyncRelativeRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LRORetrysPutAsyncRelativeRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'Post202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LRORetrysPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysPostAsyncRelativeRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRelativeRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LRORetrysPostAsyncRelativeRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysBeginPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'BeginPut201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LRORetrysBeginPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysBeginPutAsyncRelativeRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LRORetrysBeginPutAsyncRelativeRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysBeginPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'BeginPost202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LRORetrysBeginPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LRORetrysBeginPostAsyncRelativeRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRelativeRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LRORetrysBeginPostAsyncRelativeRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutNonRetry400OptionalParams = {
  required: false,
  serializedName: 'PutNonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPutNonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutNonRetry201Creating400OptionalParams = {
  required: false,
  serializedName: 'PutNonRetry201Creating400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPutNonRetry201Creating400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutNonRetry201Creating400InvalidJsonOptionalParams = {
  required: false,
  serializedName: 'PutNonRetry201Creating400InvalidJsonOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutNonRetry201Creating400InvalidJsonOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutAsyncRelativeRetry400OptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPutAsyncRelativeRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPostNonRetry400OptionalParams = {
  required: false,
  serializedName: 'PostNonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPostNonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPost202NonRetry400OptionalParams = {
  required: false,
  serializedName: 'Post202NonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPost202NonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPostAsyncRelativeRetry400OptionalParams = {
  required: false,
  serializedName: 'PostAsyncRelativeRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsPostAsyncRelativeRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutError201NoProvisioningStatePayloadOptionalParams = {
  required: false,
  serializedName: 'PutError201NoProvisioningStatePayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutError201NoProvisioningStatePayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutAsyncRelativeRetryNoStatusOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetryNoStatusOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutAsyncRelativeRetryNoStatusOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutAsyncRelativeRetryNoStatusPayloadOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetryNoStatusPayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutAsyncRelativeRetryNoStatusPayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPost202NoLocationOptionalParams = {
  required: false,
  serializedName: 'Post202NoLocationOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPost202NoLocationOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPostAsyncRelativeRetryNoPayloadOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRelativeRetryNoPayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPostAsyncRelativeRetryNoPayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPut200InvalidJsonOptionalParams = {
  required: false,
  serializedName: 'Put200InvalidJsonOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPut200InvalidJsonOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutAsyncRelativeRetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutAsyncRelativeRetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPutAsyncRelativeRetryInvalidJsonPollingOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRelativeRetryInvalidJsonPollingOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPutAsyncRelativeRetryInvalidJsonPollingOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPost202RetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'Post202RetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPost202RetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPostAsyncRelativeRetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRelativeRetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPostAsyncRelativeRetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsPostAsyncRelativeRetryInvalidJsonPollingOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRelativeRetryInvalidJsonPollingOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsPostAsyncRelativeRetryInvalidJsonPollingOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutNonRetry400OptionalParams = {
  required: false,
  serializedName: 'BeginPutNonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutNonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutNonRetry201Creating400OptionalParams = {
  required: false,
  serializedName: 'BeginPutNonRetry201Creating400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutNonRetry201Creating400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutNonRetry201Creating400InvalidJsonOptionalParams = {
  required: false,
  serializedName: 'BeginPutNonRetry201Creating400InvalidJsonOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutNonRetry201Creating400InvalidJsonOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutAsyncRelativeRetry400OptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutAsyncRelativeRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPostNonRetry400OptionalParams = {
  required: false,
  serializedName: 'BeginPostNonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPostNonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPost202NonRetry400OptionalParams = {
  required: false,
  serializedName: 'BeginPost202NonRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPost202NonRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPostAsyncRelativeRetry400OptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRelativeRetry400Options',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPostAsyncRelativeRetry400OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutError201NoProvisioningStatePayloadOptionalParams = {
  required: false,
  serializedName: 'BeginPutError201NoProvisioningStatePayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutError201NoProvisioningStatePayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutAsyncRelativeRetryNoStatusOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetryNoStatusOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutAsyncRelativeRetryNoStatusOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutAsyncRelativeRetryNoStatusPayloadOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetryNoStatusPayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutAsyncRelativeRetryNoStatusPayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPost202NoLocationOptionalParams = {
  required: false,
  serializedName: 'BeginPost202NoLocationOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPost202NoLocationOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPostAsyncRelativeRetryNoPayloadOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRelativeRetryNoPayloadOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPostAsyncRelativeRetryNoPayloadOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPut200InvalidJsonOptionalParams = {
  required: false,
  serializedName: 'BeginPut200InvalidJsonOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPut200InvalidJsonOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutAsyncRelativeRetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutAsyncRelativeRetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPutAsyncRelativeRetryInvalidJsonPollingOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRelativeRetryInvalidJsonPollingOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPutAsyncRelativeRetryInvalidJsonPollingOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPost202RetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'BeginPost202RetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPost202RetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPostAsyncRelativeRetryInvalidHeaderOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRelativeRetryInvalidHeaderOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPostAsyncRelativeRetryInvalidHeaderOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROSADsBeginPostAsyncRelativeRetryInvalidJsonPollingOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRelativeRetryInvalidJsonPollingOptions',
  type: {
    name: 'Composite',
    className: 'LROSADsBeginPostAsyncRelativeRetryInvalidJsonPollingOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderPutAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PutAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderPutAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'Put201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'Post202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderPostAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'PostAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderPostAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderBeginPutAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPutAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderBeginPutAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderBeginPut201CreatingSucceeded200OptionalParams = {
  required: false,
  serializedName: 'BeginPut201CreatingSucceeded200Options',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderBeginPut201CreatingSucceeded200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderBeginPost202Retry200OptionalParams = {
  required: false,
  serializedName: 'BeginPost202Retry200Options',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderBeginPost202Retry200OptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};

export const LROsCustomHeaderBeginPostAsyncRetrySucceededOptionalParams = {
  required: false,
  serializedName: 'BeginPostAsyncRetrySucceededOptions',
  type: {
    name: 'Composite',
    className: 'LROsCustomHeaderBeginPostAsyncRetrySucceededOptionalParams',
    modelProperties: {
      product: {
        required: false,
        serializedName: 'product',
        type: {
          name: 'Composite',
          className: 'Product'
        }
      }
    }
  }
};
