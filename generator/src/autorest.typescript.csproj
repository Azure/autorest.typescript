<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup><PowerShell># 2&gt;nul || type %~df0|C:\Windows\system32\find.exe /v "setlocal"|C:\Windows\system32\find.exe /v "errorlevel"|powershell.exe -noninteractive -&amp; exit %errorlevel% || #</PowerShell></PropertyGroup>

  <PropertyGroup>
    <AssemblyName>autorest.typescript</AssemblyName>
    <PackageTags>autorest.extension</PackageTags>
    <VersionPrefix>1.0.0</VersionPrefix>
    
    <GenerateFullPaths>true</GenerateFullPaths>
    <Common>$(MsBuildThisFileDirectory)</Common>
    <SolutionDir>$(Common)../</SolutionDir>
 
    <Copyright>Copyright (c) Microsoft Corporation</Copyright>

    <PackageIconUrl>http://go.microsoft.com/fwlink/?LinkID=288890</PackageIconUrl>
    <PackageProjectUrl>https://github.com/Azure/AutoRest</PackageProjectUrl>
    <PackageLicenseUrl>https://raw.githubusercontent.com/Microsoft/dotnet/master/LICENSE</PackageLicenseUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
 
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <RootNamespace>AutoRest.TypeScript</RootNamespace>
 
    <BaseOutputPath>$(MSBuildProjectDirectory)/bin</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)</OutputPath>
  </PropertyGroup>

  <Target Name="Nuke" AfterTargets="clean">
    <Delete Files="$(BaseOutputPath)**;$(BaseIntermediateOutputPath)razor/**;$(BaseIntermediateOutputPath)Debug/**;$(BaseIntermediateOutputPath)Release/**" />
    <RemoveDir Directories="$(BaseOutputPath);$(BaseIntermediateOutputPath)/Debug;$(BaseIntermediateOutputPath)/Release" />
  </Target>
  
  <Target Name="UpdateResources" BeforeTargets="BeforeBuild">
    <!-- <Message Text="Ensuring resources .cs files are netframework compatible [$(MSBuildProjectName)]" Importance="high" /> -->
    <PropertyGroup>
      <ResGenFix>$(Powershell)
        #
        # modify resgen'd designer files for netframework1.4
        #
        cmd /c dir /s /b *.designer.cs |% { dir $_ } |% { 
          $content = (Get-Content "$_" -Raw )
          if ( -not ($content -match "using System.Reflection") -and ($content -match "This class was auto-generated by the StronglyTypedResourceBuilder") )  {
            write-host -fore green updating $_
            $content = $content -replace "(using System;)", "`$1`n    using System.Reflection;"  -replace "(typeof\(.*\)).Assembly", "`$1.GetTypeInfo().Assembly"
            Set-Content -value $content -path $_
          }
        }
      </ResGenFix>
      
    </PropertyGroup>
    <Exec Condition="$(SolutionDir) != '' AND $(OS) =='WINDOWS_NT' " Command="$(ResGenFix)" EchoOff="true" WorkingDirectory="$(MSBuildProjectDirectory)" /> 
  </Target>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" />
    <PackageReference Include="YamlDotNet.Signed" Version="4.2.1" />
    <PackageReference Include="Microsoft.AutoRest.Common" Version="2.4.48" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <ItemGroup>
    <DotNetCliToolReference Include="dotnet-Perks.CodeGen" Version="2.0.1" />
    <PackageReference Include="dotnet-Perks.CodeGen" Version="2.0.1">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
  </ItemGroup>
</Project>
