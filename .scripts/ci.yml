trigger:
  - v6

parameters:
- name: LinuxPool
    type: string
    default: azsdk-pool-mms-ubuntu-1804-general
- name: WindowsPool
  type: string
  default: azsdk-pool-mms-win-2019-general

pool:
  vmImage: "ubuntu-latest"

jobs:
  - job: Build
    steps:
      - template: build.yml
      - script: npm pack
      - task: CopyFiles@2
        inputs:
          contents: "*.tgz"
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: true
        displayName: "Copy packages"

      - task: PublishPipelineArtifact@1
        condition: succeededOrFailed()
        displayName: "Publish artifacts"
        inputs:
          artifactName: packages
          path: $(Build.ArtifactStagingDirectory)

  - job: Test
    strategy:
      matrix:
        Linux_Node8:
          Pool: ${{ parameters.LinuxPool }}
          OSVmImage:
          NodeTestVersion: "8.x"
          TestType: "node"
        Windows_Node10:
          Pool: ${{ parameters.WindowsPool }}
          OSVmImage:
          NodeTestVersion: "10.x"
          TestType: "node"
        macOS_Node12:
          Pool:
          OSVmImage: "macOS-10.15"
          NodeTestVersion: "12.x"
          TestType: "node"
        Browser_Linux_Node12:
          Pool: ${{ parameters.LinuxPool }}
          OSVmImage: "ubuntu-18.04"
          NodeTestVersion: "$(NodeVersion)"
          TestType: "browser"
        Linux_Node14:
          Pool: ${{ parameters.LinuxPool }}
          OSVmImage: "ubuntu-18.04"
          NodeTestVersion: "14.x"
          TestType: "node"
    
    pool:
      name: $[coalesce(variables['Pool'], '')]
      vmImage: $[coalesce(variables['OSVmImage'], '')]

    steps:
      - template: build.yml
      - task: NodeTool@0
        inputs:
          versionSpec: $(NodeTestVersion)
        displayName: "Use Node $(NodeTestVersion)"
      - script: npm run test
        displayName: "Run Tests"

      - script: npm run check:tree
        displayName: "Check git Tree"

      - script: |
          npm run coverage-push -- $(Build.Repository.Name) $(Build.SourceBranch) $(github-token) $(storage-coverage-user) $(storage-coverage-pass)
        workingDirectory: node_modules/@microsoft.azure/autorest.testserver
        displayName: "Upload Coverage Report"

  - template: smoke-test.yml
    parameters:
      name: SmokeTest_1
      tag: ci_1

  - template: smoke-test.yml
    parameters:
      name: SmokeTest_2
      tag: ci_2

  - template: smoke-test.yml
    parameters:
      name: SmokeTest_3
      tag: ci_3
