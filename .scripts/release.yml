parameters:
  - name: DependsOn
    type: string
    default: Build

  - name: PublishAlpha
    type: boolean
    default: false

stages:
  ${{if eq(${{parameters.PublishAlpha}}, 'true')}}
  - stage: Integration
    dependsOn: ${{parameters.DependsOn}}
    jobs:
      - deployment: PublishToGithub
        environment: github
        displayName: Publish dev version to GitHub
        pool:
          vmImage: ubuntu-18.04
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: NodeTool@0
                  inputs:
                    versionSpec: "14.x"
                  displayName: "Install Node.js"
                - script: |
                    npm install
                    npm run build
                  displayName: "npm install and build"
                - script: |
                    export DEV_VERSION=$(node -p -e "require('./package.json').version")-alpha.$BUILD_BUILDNUMBER
                    npm version --no-git-tag-version $DEV_VERSION
                    npm pack
                    npx publish-release --token $(azuresdk-github-pat) --repo autorest.typescript --owner azure --name v$DEV_VERSION --tag v$DEV_VERSION --notes='prerelease build' --prerelease --editRelease false --assets autorest-typescript-$DEV_VERSION.tgz --target_commitish $(Build.SourceBranchName)
                  displayName: "Publish to GitHub"
      - deployment: PublishToNpm
        environment: npm
        displayName: Publish dev version to NPM
        pool:
          vmImage: ubuntu-18.04
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: NodeTool@0
                  inputs:
                    versionSpec: "14.x"
                  displayName: "Install Node.js"
                - script: |
                    npm install
                    npm run build
                  displayName: "npm install and build"
                - script: |
                    export DEV_VERSION=$(node -p -e "require('./package.json').version")-alpha.$BUILD_BUILDNUMBER
                    npm version --no-git-tag-version $DEV_VERSION
                  displayName: "Set Dev Version"
                - script: |
                    export TAR_NAME=$(npm pack -q)
                    echo $TAR_NAME
                  displayName: "Npm Pack"
                - script: |
                    echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" > ./.npmrc
                    npm publish $TAR_NAME --access-level="public" --registry="https://registry.npmjs.org/" --always-auth=true --tag="dev"
                  displayName: "Publish to NPM"
