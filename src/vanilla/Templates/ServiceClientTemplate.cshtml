@using System.Linq
@using AutoRest.TypeScript
@inherits AutoRest.Core.Template<AutoRest.TypeScript.Model.CodeModelTS>
/*
@Header(" * ")
 */
@EmptyLine
@(Model.GenerateServiceClientImports())
@EmptyLine
class @(Model.Name) extends @(Model.ContextName) {
@if (Model.MethodGroupModels.Any())
{
<text>
  // Operation groups
@foreach (var methodGroup in Model.MethodGroupModels)
{
<text>
  @(methodGroup.NameForProperty): operations.@(methodGroup.TypeName);
</text>
}
@EmptyLine
</text>
}
  @(Model.GenerateConstructorComment(Model.Name))
@{ var clientOptionType = Model.OptionalParameterTypeForClientConstructor == "ServiceClientOptions" ? "msRest.ServiceClientOptions" : Model.OptionalParameterTypeForClientConstructor;}
  constructor(@(!string.IsNullOrEmpty(Model.RequiredConstructorParametersTS) ? Model.RequiredConstructorParametersTS + ", " : "")options?: @clientOptionType) {
    super(@(!string.IsNullOrEmpty(Model.RequiredConstructorParameters) ? Model.RequiredConstructorParameters + ", " : "")options);
@foreach (var methodGroup in Model.MethodGroupModels)
{
<text>
    this.@(methodGroup.NameForProperty) = new operations.@(methodGroup.TypeName)(this);
</text>
}
  }
  @(CodeGeneratorTS.GenerateMethods(Model.MethodTemplateModels, EmptyLine))
}
@EmptyLine
@(Model.GenerateOperationSpecDefinitions(EmptyLine))
@EmptyLine
@(Model.GenerateServiceClientExports())
