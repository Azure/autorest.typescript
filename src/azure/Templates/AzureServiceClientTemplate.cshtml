@using System.Linq
@using AutoRest.TypeScript.Model
@using AutoRest.TypeScript.Azure.Model
@inherits AutoRest.Core.Template<CodeModelTSa>
/*
@Header(" * ")
 */
@EmptyLine
@(Model.GenerateAzureServiceClientImports())
@EmptyLine
@EmptyLine
class @(Model.Name) extends @(Model.ContextName) {
@if (Model.MethodGroupModels.Any())
{
  @:// Operation groups
foreach (var methodGroup in Model.MethodGroupModels)
{
  @:@(methodGroup.NameForProperty): operations.@(methodGroup.TypeName);
}
@EmptyLine
}
  @(Model.GenerateConstructorComment(Model.Name))
@{ var clientOptionType = Model.OptionalParameterTypeForClientConstructor == "AzureServiceClientOptions" ? "msRestAzure.AzureServiceClientOptions" : Model.OptionalParameterTypeForClientConstructor;}
  constructor(@(!string.IsNullOrEmpty(Model.RequiredConstructorParametersTS) ? Model.RequiredConstructorParametersTS + ", " : "")options?: @clientOptionType) {
    super(@(!string.IsNullOrEmpty(Model.RequiredConstructorParameters) ? Model.RequiredConstructorParameters + ", " : "")options);
  @foreach (var methodGroup in Model.MethodGroupModels)
  {
    @:this.@(methodGroup.NameForProperty) = new operations.@(methodGroup.TypeName)(this);
  }
  }
@foreach (MethodTS method in Model.MethodTemplateModels)
{
@:  // methods on the client.
@EmptyLine
@:  @(method.Generate(EmptyLine))
}
}
@EmptyLine
@(Model.GenerateOperationSpecDefinitions(EmptyLine))
@EmptyLine
@(Model.GenerateServiceClientExports())
