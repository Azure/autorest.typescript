// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
{{#each importedTypes}}
{{this}}
{{/each}}
import * as dotenv from "dotenv";

dotenv.config();

{{#each samples}}
/**
 * This sample demonstrates how to {{this.description}}
 *
 * @summary {{this.description}}
 * x-ms-original-file: {{this.originalFileLocation}}
 */
async function {{name}}() {
  {{#each this.clientParamAssignments}}
  {{this}}
  {{/each}}
  const client = {{this.defaultFactoryName}}({{this.clientParamNames}});
  {{#each this.pathParamAssignments}}
  {{this}}
  {{/each}}
  {{#each this.methodParamAssignments}}
  {{this}}
  {{/each}}
  {{#if this.isPaging}}
  const initialResponse = await client.path({{this.pathParamNames}}).{{method}}({{methodParamNames}});
  const pageData = paginate(client, initialResponse);
  const result = [];
  for await (const item of pageData) {
    result.push(item);
  }
  {{else if this.isLRO}}
  const initialResponse = await client.path({{this.pathParamNames}}).{{method}}({{methodParamNames}});
  const poller = getLongRunningPoller(client, initialResponse);
  const result = await poller.pollUntilDone();
  {{else}}
  const result = await client.path({{this.pathParamNames}}).{{method}}({{methodParamNames}});
  {{/if}}
  console.log(result);
}

{{name}}().catch(console.error);
{{/each}}

