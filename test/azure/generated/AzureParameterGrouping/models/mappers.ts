/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/core-arm";
import * as coreHttp from "@azure/core-http";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ErrorModel: coreHttp.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterGroupingPostRequiredParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParameterGroupingPostRequiredParameters",
    modelProperties: {
      body: {
        required: true,
        type: {
          name: "Number"
        }
      },
      customHeader: {
        type: {
          name: "String"
        }
      },
      query: {
        defaultValue: 30,
        type: {
          name: "Number"
        }
      },
      path: {
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ParameterGroupingPostOptionalParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParameterGroupingPostOptionalParameters",
    modelProperties: {
      customHeader: {
        type: {
          name: "String"
        }
      },
      query: {
        defaultValue: 30,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FirstParameterGroup: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FirstParameterGroup",
    modelProperties: {
      headerOne: {
        type: {
          name: "String"
        }
      },
      queryOne: {
        defaultValue: 30,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ParameterGroupingPostMultiParamGroupsSecondParamGroup: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ParameterGroupingPostMultiParamGroupsSecondParamGroup",
    modelProperties: {
      headerTwo: {
        type: {
          name: "String"
        }
      },
      queryTwo: {
        defaultValue: 30,
        type: {
          name: "Number"
        }
      }
    }
  }
};
