/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const accountName: coreHttp.OperationURLParameter = {
  parameterPath: "accountName",
  mapper: {
    serializedName: "accountName",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const adlsFileSystemDnsSuffix: coreHttp.OperationURLParameter = {
  parameterPath: "adlsFileSystemDnsSuffix",
  mapper: {
    serializedName: "adlsFileSystemDnsSuffix",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const path: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expiryOption: coreHttp.OperationQueryParameter = {
  parameterPath: "expiryOption",
  mapper: {
    serializedName: "expiryOption",
    required: true,
    type: {
      name: "Enum",
      allowedValues: [
        "NeverExpire",
        "RelativeToNow",
        "RelativeToCreationDate",
        "Absolute"
      ]
    }
  }
};

export const expireTime: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expireTime"],
  mapper: {
    serializedName: "expireTime",
    type: {
      name: "Number"
    }
  }
};

export const op: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "SETEXPIRY",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2016-11-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/octet-stream",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const streamContents: coreHttp.OperationParameter = {
  parameterPath: "streamContents",
  mapper: {
    serializedName: "streamContents",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const path1: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const appendMode: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "appendMode"],
  mapper: {
    defaultValue: "autocreate",
    serializedName: "appendMode",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const op1: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "CONCURRENTAPPEND",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const transferEncoding: coreHttp.OperationParameter = {
  parameterPath: "transferEncoding",
  mapper: {
    defaultValue: "chunked",
    serializedName: "Transfer-Encoding",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const syncFlag: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "syncFlag"],
  mapper: {
    serializedName: "syncFlag",
    type: {
      name: "Enum",
      allowedValues: ["DATA", "METADATA", "CLOSE"]
    }
  }
};

export const path2: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const fsaction: coreHttp.OperationQueryParameter = {
  parameterPath: "fsaction",
  mapper: {
    serializedName: "fsaction",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op2: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "CHECKACCESS",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path3: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const permission: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "permission"],
  mapper: {
    serializedName: "permission",
    type: {
      name: "Number"
    }
  }
};

export const op3: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "MKDIRS",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path4: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const sources: coreHttp.OperationQueryParameter = {
  parameterPath: "sources",
  mapper: {
    serializedName: "sources",
    required: true,
    type: {
      name: "Sequence",
      element: { type: { name: "String" }, serializedName: "Post1ItemsItem" }
    }
  },
  collectionFormat: coreHttp.QueryCollectionFormat.Csv
};

export const op4: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "CONCAT",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const streamContents1: coreHttp.OperationParameter = {
  parameterPath: "streamContents",
  mapper: {
    serializedName: "streamContents",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const deleteSourceDirectory: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "deleteSourceDirectory"],
  mapper: {
    serializedName: "deleteSourceDirectory",
    type: {
      name: "Boolean"
    }
  }
};

export const op5: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "MSCONCAT",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path5: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const listSize: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "listSize"],
  mapper: {
    serializedName: "listSize",
    type: {
      name: "Number"
    }
  }
};

export const listAfter: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "listAfter"],
  mapper: {
    serializedName: "listAfter",
    type: {
      name: "String"
    }
  }
};

export const listBefore: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "listBefore"],
  mapper: {
    serializedName: "listBefore",
    type: {
      name: "String"
    }
  }
};

export const tooId: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "tooId"],
  mapper: {
    serializedName: "tooId",
    type: {
      name: "Boolean"
    }
  }
};

export const op6: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "LISTSTATUS",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path6: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op7: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "GETCONTENTSUMMARY",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path7: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op8: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "GETFILESTATUS",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path8: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const length: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "length"],
  mapper: {
    serializedName: "length",
    type: {
      name: "Number"
    }
  }
};

export const offset: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "offset"],
  mapper: {
    serializedName: "offset",
    type: {
      name: "Number"
    }
  }
};

export const fileSessionId: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "fileSessionId"],
  mapper: {
    serializedName: "fileSessionId",
    type: {
      name: "Uuid"
    }
  }
};

export const read: coreHttp.OperationQueryParameter = {
  parameterPath: "read",
  mapper: {
    defaultValue: "true",
    serializedName: "read",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const op9: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "OPEN",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path9: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const offset1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "offset"],
  mapper: {
    serializedName: "offset",
    type: {
      name: "Number"
    }
  }
};

export const leaseId: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "leaseId"],
  mapper: {
    serializedName: "leaseId",
    type: {
      name: "Uuid"
    }
  }
};

export const fileSessionId1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "fileSessionId"],
  mapper: {
    serializedName: "fileSessionId",
    type: {
      name: "Uuid"
    }
  }
};

export const append: coreHttp.OperationQueryParameter = {
  parameterPath: "append",
  mapper: {
    defaultValue: "true",
    serializedName: "append",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const op10: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "APPEND",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const streamContents2: coreHttp.OperationParameter = {
  parameterPath: "streamContents",
  mapper: {
    serializedName: "streamContents",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const path10: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const overwrite: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "overwrite"],
  mapper: {
    serializedName: "overwrite",
    type: {
      name: "Boolean"
    }
  }
};

export const syncFlag1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "syncFlag"],
  mapper: {
    serializedName: "syncFlag",
    type: {
      name: "Enum",
      allowedValues: ["DATA", "METADATA", "CLOSE"]
    }
  }
};

export const permission1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "permission"],
  mapper: {
    serializedName: "permission",
    type: {
      name: "Number"
    }
  }
};

export const write: coreHttp.OperationQueryParameter = {
  parameterPath: "write",
  mapper: {
    defaultValue: "true",
    serializedName: "write",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const op11: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "CREATE",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path11: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const aclspec: coreHttp.OperationQueryParameter = {
  parameterPath: "aclspec",
  mapper: {
    serializedName: "aclspec",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op12: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "SETACL",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path12: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const aclspec1: coreHttp.OperationQueryParameter = {
  parameterPath: "aclspec",
  mapper: {
    serializedName: "aclspec",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op13: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "MODIFYACLENTRIES",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path13: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const aclspec2: coreHttp.OperationQueryParameter = {
  parameterPath: "aclspec",
  mapper: {
    serializedName: "aclspec",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op14: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "REMOVEACLENTRIES",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path14: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op15: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "REMOVEDEFAULTACL",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const op16: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "REMOVEACL",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path15: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const tooId1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "tooId"],
  mapper: {
    serializedName: "tooId",
    type: {
      name: "Boolean"
    }
  }
};

export const op17: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "GETACLSTATUS",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path16: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const recursive: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "recursive"],
  mapper: {
    serializedName: "recursive",
    type: {
      name: "Boolean"
    }
  }
};

export const op18: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "DELETE",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path17: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const destination: coreHttp.OperationQueryParameter = {
  parameterPath: "destination",
  mapper: {
    serializedName: "destination",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const op19: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "RENAME",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path18: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const owner: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "owner"],
  mapper: {
    serializedName: "owner",
    type: {
      name: "String"
    }
  }
};

export const group: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "group"],
  mapper: {
    serializedName: "group",
    type: {
      name: "String"
    }
  }
};

export const op20: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "SETOWNER",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const path19: coreHttp.OperationURLParameter = {
  parameterPath: "path",
  mapper: {
    serializedName: "path",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const permission2: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "permission"],
  mapper: {
    serializedName: "permission",
    type: {
      name: "String"
    }
  }
};

export const op21: coreHttp.OperationQueryParameter = {
  parameterPath: "op",
  mapper: {
    defaultValue: "SETPERMISSION",
    serializedName: "op",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};
