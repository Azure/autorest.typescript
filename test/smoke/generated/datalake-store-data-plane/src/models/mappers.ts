/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const AdlsError: coreHttp.CompositeMapper = {
  serializedName: "AdlsError",
  type: {
    name: "Composite",
    className: "AdlsError",
    modelProperties: {
      remoteException: {
        serializedName: "remoteException",
        type: {
          name: "Composite",
          className: "AdlsRemoteException"
        }
      }
    }
  }
};

export const AdlsRemoteException: coreHttp.CompositeMapper = {
  serializedName: "AdlsRemoteException",
  type: {
    name: "Composite",
    className: "AdlsRemoteException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: {
      serializedName: "exception",
      clientName: "exception"
    },
    modelProperties: {
      exception: {
        serializedName: "exception",
        required: true,
        type: {
          name: "String"
        }
      },
      javaClassName: {
        serializedName: "javaClassName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileOperationResult: coreHttp.CompositeMapper = {
  serializedName: "FileOperationResult",
  type: {
    name: "Composite",
    className: "FileOperationResult",
    modelProperties: {
      operationResult: {
        serializedName: "boolean",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const FileStatusesResult: coreHttp.CompositeMapper = {
  serializedName: "FileStatusesResult",
  type: {
    name: "Composite",
    className: "FileStatusesResult",
    modelProperties: {
      fileStatuses: {
        serializedName: "fileStatuses",
        type: {
          name: "Composite",
          className: "FileStatuses"
        }
      }
    }
  }
};

export const FileStatuses: coreHttp.CompositeMapper = {
  serializedName: "FileStatuses",
  type: {
    name: "Composite",
    className: "FileStatuses",
    modelProperties: {
      fileStatus: {
        serializedName: "fileStatus",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "FileStatusProperties" }
          }
        }
      }
    }
  }
};

export const FileStatusProperties: coreHttp.CompositeMapper = {
  serializedName: "FileStatusProperties",
  type: {
    name: "Composite",
    className: "FileStatusProperties",
    modelProperties: {
      accessTime: {
        serializedName: "accessTime",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      blockSize: {
        serializedName: "blockSize",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      expirationTime: {
        serializedName: "msExpirationTime",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      group: {
        serializedName: "group",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      length: {
        serializedName: "length",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      modificationTime: {
        serializedName: "modificationTime",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      owner: {
        serializedName: "owner",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      pathSuffix: {
        serializedName: "pathSuffix",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      permission: {
        serializedName: "permission",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "Enum",
          allowedValues: ["FILE", "DIRECTORY"]
        }
      },
      aclBit: {
        serializedName: "aclBit",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ContentSummaryResult: coreHttp.CompositeMapper = {
  serializedName: "ContentSummaryResult",
  type: {
    name: "Composite",
    className: "ContentSummaryResult",
    modelProperties: {
      contentSummary: {
        serializedName: "contentSummary",
        type: {
          name: "Composite",
          className: "ContentSummary"
        }
      }
    }
  }
};

export const ContentSummary: coreHttp.CompositeMapper = {
  serializedName: "ContentSummary",
  type: {
    name: "Composite",
    className: "ContentSummary",
    modelProperties: {
      directoryCount: {
        serializedName: "directoryCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      fileCount: {
        serializedName: "fileCount",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      length: {
        serializedName: "length",
        readOnly: true,
        type: {
          name: "Number"
        }
      },
      spaceConsumed: {
        serializedName: "spaceConsumed",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FileStatusResult: coreHttp.CompositeMapper = {
  serializedName: "FileStatusResult",
  type: {
    name: "Composite",
    className: "FileStatusResult",
    modelProperties: {
      fileStatus: {
        serializedName: "fileStatus",
        type: {
          name: "Composite",
          className: "FileStatusProperties"
        }
      }
    }
  }
};

export const AclStatusResult: coreHttp.CompositeMapper = {
  serializedName: "AclStatusResult",
  type: {
    name: "Composite",
    className: "AclStatusResult",
    modelProperties: {
      aclStatus: {
        serializedName: "aclStatus",
        type: {
          name: "Composite",
          className: "AclStatus"
        }
      }
    }
  }
};

export const AclStatus: coreHttp.CompositeMapper = {
  serializedName: "AclStatus",
  type: {
    name: "Composite",
    className: "AclStatus",
    modelProperties: {
      entries: {
        serializedName: "entries",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "AclStatusEntriesItem"
          }
        }
      },
      group: {
        serializedName: "group",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      permission: {
        serializedName: "permission",
        type: {
          name: "String"
        }
      },
      stickyBit: {
        serializedName: "stickyBit",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const AdlsIllegalArgumentException: coreHttp.CompositeMapper = {
  serializedName: "IllegalArgumentException",
  type: {
    name: "Composite",
    className: "AdlsIllegalArgumentException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsUnsupportedOperationException: coreHttp.CompositeMapper = {
  serializedName: "UnsupportedOperationException",
  type: {
    name: "Composite",
    className: "AdlsUnsupportedOperationException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsSecurityException: coreHttp.CompositeMapper = {
  serializedName: "SecurityException",
  type: {
    name: "Composite",
    className: "AdlsSecurityException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsIOException: coreHttp.CompositeMapper = {
  serializedName: "IOException",
  type: {
    name: "Composite",
    className: "AdlsIOException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsFileNotFoundException: coreHttp.CompositeMapper = {
  serializedName: "FileNotFoundException",
  type: {
    name: "Composite",
    className: "AdlsFileNotFoundException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsFileAlreadyExistsException: coreHttp.CompositeMapper = {
  serializedName: "FileAlreadyExistsException",
  type: {
    name: "Composite",
    className: "AdlsFileAlreadyExistsException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsBadOffsetException: coreHttp.CompositeMapper = {
  serializedName: "BadOffsetException",
  type: {
    name: "Composite",
    className: "AdlsBadOffsetException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsRuntimeException: coreHttp.CompositeMapper = {
  serializedName: "RuntimeException",
  type: {
    name: "Composite",
    className: "AdlsRuntimeException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsAccessControlException: coreHttp.CompositeMapper = {
  serializedName: "AccessControlException",
  type: {
    name: "Composite",
    className: "AdlsAccessControlException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export const AdlsThrottledException: coreHttp.CompositeMapper = {
  serializedName: "ThrottledException",
  type: {
    name: "Composite",
    className: "AdlsThrottledException",
    uberParent: "AdlsRemoteException",
    polymorphicDiscriminator: AdlsRemoteException.type.polymorphicDiscriminator,
    modelProperties: {
      ...AdlsRemoteException.type.modelProperties
    }
  }
};

export let discriminators = {
  AdlsRemoteException: AdlsRemoteException,
  "AdlsRemoteException.IllegalArgumentException": AdlsIllegalArgumentException,
  "AdlsRemoteException.UnsupportedOperationException": AdlsUnsupportedOperationException,
  "AdlsRemoteException.SecurityException": AdlsSecurityException,
  "AdlsRemoteException.IOException": AdlsIOException,
  "AdlsRemoteException.FileNotFoundException": AdlsFileNotFoundException,
  "AdlsRemoteException.FileAlreadyExistsException": AdlsFileAlreadyExistsException,
  "AdlsRemoteException.BadOffsetException": AdlsBadOffsetException,
  "AdlsRemoteException.RuntimeException": AdlsRuntimeException,
  "AdlsRemoteException.AccessControlException": AdlsAccessControlException,
  "AdlsRemoteException.ThrottledException": AdlsThrottledException
};
