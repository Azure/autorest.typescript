/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The metadata entity contract.
 */
export interface MetadataEntity {
  /**
   * The resource Id of the metadata entity.
   */
  id?: string;
  /**
   * The type of the metadata entity.
   */
  type?: string;
  /**
   * The name of the metadata entity.
   */
  name?: string;
  /**
   * The display name.
   */
  displayName?: string;
  /**
   * The list of keys on which this entity depends on.
   */
  dependsOn?: string[];
  /**
   * The list of scenarios applicable to this metadata entity.
   */
  applicableScenarios?: string[];
  /**
   * The list of supported values.
   */
  supportedValues?: MetadataSupportedValueDetail[];
}

/**
 * The metadata supported value detail.
 */
export interface MetadataSupportedValueDetail {
  /**
   * The id.
   */
  id?: string;
  /**
   * The display name.
   */
  displayName?: string;
}

/**
 * ARM error response body.
 */
export interface ARMErrorResponseBody {
  /**
   * Gets or sets the string that describes the error in detail and provides debugging information.
   */
  message?: string;
  /**
   * Gets or sets the string that can be used to programmatically identify the error.
   */
  code?: string;
}

/**
 * The list of metadata entities
 */
export interface MetadataEntityListResult {
  /**
   * The list of metadata entities.
   */
  value?: MetadataEntity[];
  /**
   * The link used to get the next page of metadata.
   */
  nextLink?: string;
}

/**
 * The list of Advisor configurations.
 */
export interface ConfigurationListResult {
  /**
   * The list of configurations.
   */
  value?: ConfigData[];
  /**
   * The link used to get the next page of configurations.
   */
  nextLink?: string;
}

/**
 * An Azure resource.
 */
export interface Resource {
  /**
   * The resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   */
  readonly type?: string;
}

/**
 * The Advisor configuration data structure.
 */
export type ConfigData = Resource & {
  /**
   * Exclude the resource from Advisor evaluations. Valid values: False (default) or True.
   */
  exclude?: boolean;
  /**
   * Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
   */
  lowCpuThreshold?: CpuThreshold;
  /**
   * Advisor digest configuration. Valid only for subscriptions
   */
  digests?: DigestConfig[];
};

/**
 * Advisor Digest configuration entity
 */
export interface DigestConfig {
  /**
   * Name of digest configuration. Value is case-insensitive and must be unique within a subscription.
   */
  name?: string;
  /**
   * Action group resource id used by digest.
   */
  actionGroupResourceId?: string;
  /**
   * Frequency that digest will be triggered, in days. Value must be between 7 and 30 days inclusive.
   */
  frequency?: number;
  /**
   * Categories to send digest for. If categories are not provided, then digest will be sent for all categories.
   */
  categories?: Category[];
  /**
   * Language for digest content body. Value must be ISO 639-1 code for one of Azure portal supported languages. Otherwise, it will be converted into one. Default value is English (en).
   */
  language?: string;
  /**
   * State of digest configuration.
   */
  state?: DigestConfigState;
}

export interface ArmErrorResponse {
  /**
   * ARM error response body.
   */
  error?: ARMErrorResponseBody;
}

/**
 * The list of Advisor recommendations.
 */
export interface ResourceRecommendationBaseListResult {
  /**
   * The link used to get the next page of recommendations.
   */
  nextLink?: string;
  /**
   * The list of recommendations.
   */
  value?: ResourceRecommendationBase[];
}

/**
 * Advisor Recommendation.
 */
export type ResourceRecommendationBase = Resource & {
  /**
   * The category of the recommendation.
   */
  category?: Category;
  /**
   * The business impact of the recommendation.
   */
  impact?: Impact;
  /**
   * The resource type identified by Advisor.
   */
  impactedField?: string;
  /**
   * The resource identified by Advisor.
   */
  impactedValue?: string;
  /**
   * The most recent time that Advisor checked the validity of the recommendation.
   */
  lastUpdated?: Date;
  /**
   * The recommendation metadata.
   */
  metadata?: { [propertyName: string]: any };
  /**
   * The recommendation-type GUID.
   */
  recommendationTypeId?: string;
  /**
   * The potential risk of not implementing the recommendation.
   */
  risk?: Risk;
  /**
   * A summary of the recommendation.
   */
  shortDescription?: ShortDescription;
  /**
   * The list of snoozed and dismissed rules for the recommendation.
   */
  suppressionIds?: string[];
  /**
   * Extended properties
   */
  extendedProperties?: { [propertyName: string]: string };
  /**
   * Metadata of resource that was assessed
   */
  resourceMetadata?: ResourceMetadata;
};

/**
 * A summary of the recommendation.
 */
export interface ShortDescription {
  /**
   * The issue or opportunity identified by the recommendation.
   */
  problem?: string;
  /**
   * The remediation action suggested by the recommendation.
   */
  solution?: string;
}

/**
 * Recommendation resource metadata
 */
export interface ResourceMetadata {
  /**
   * Azure resource Id of the assessed resource
   */
  resourceId?: string;
  /**
   * Source from which recommendation is generated
   */
  source?: string;
}

/**
 * The list of Advisor operations.
 */
export interface OperationEntityListResult {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
  /**
   * The list of operations.
   */
  value?: OperationEntity[];
}

/**
 * The operation supported by Advisor.
 */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * The operation supported by Advisor.
   */
  display?: OperationDisplayInfo;
}

/**
 * The operation supported by Advisor.
 */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   */
  description?: string;
  /**
   * The action that users can perform, based on their permission level.
   */
  operation?: string;
  /**
   * Service provider: Microsoft Advisor.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
}

/**
 * The details of the snoozed or dismissed rule; for example, the duration, name, and GUID associated with the rule.
 */
export type SuppressionContract = Resource & {
  /**
   * The GUID of the suppression.
   */
  suppressionId?: string;
  /**
   * The duration for which the suppression is valid.
   */
  ttl?: string;
};

/**
 * The list of Advisor suppressions.
 */
export interface SuppressionContractListResult {
  /**
   * The link used to get the next page of suppressions.
   */
  nextLink?: string;
  /**
   * The list of suppressions.
   */
  value?: SuppressionContract[];
}

/**
 * Defines headers for recommendations_generate operation.
 */
export interface RecommendationsGenerateHeaders {
  location?: string;
  retryAfter?: string;
}

/**
 * Defines values for CpuThreshold.
 */
export type CpuThreshold = "5" | "10" | "15" | "20";
/**
 * Defines values for Category.
 */
export type Category =
  | "HighAvailability"
  | "Security"
  | "Performance"
  | "Cost"
  | "OperationalExcellence";
/**
 * Defines values for DigestConfigState.
 */
export type DigestConfigState = "Active" | "Disabled";
/**
 * Defines values for Impact.
 */
export type Impact = "High" | "Medium" | "Low";
/**
 * Defines values for Risk.
 */
export type Risk = "Error" | "Warning" | "None";

/**
 * Contains response data for the get operation.
 */
export type RecommendationMetadataGetResponse = MetadataEntity & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: MetadataEntity;
  };
};

/**
 * Contains response data for the list operation.
 */
export type RecommendationMetadataListResponse = MetadataEntityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: MetadataEntityListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecommendationMetadataListNextResponse = MetadataEntityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: MetadataEntityListResult;
  };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ConfigurationsListBySubscriptionResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ConfigurationListResult;
  };
};

/**
 * Contains response data for the createInSubscription operation.
 */
export type ConfigurationsCreateInSubscriptionResponse = ConfigData & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ConfigData;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ConfigurationsListByResourceGroupResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ConfigurationListResult;
  };
};

/**
 * Contains response data for the createInResourceGroup operation.
 */
export type ConfigurationsCreateInResourceGroupResponse = ConfigData & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ConfigData;
  };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type ConfigurationsListBySubscriptionNextResponse = ConfigurationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ConfigurationListResult;
  };
};

/**
 * Contains response data for the generate operation.
 */
export type RecommendationsGenerateResponse = RecommendationsGenerateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: RecommendationsGenerateHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface RecommendationsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply to the recommendations.
   */
  filter?: string;
  /**
   * The number of recommendations per page if a paged version of this API is being used.
   */
  top?: number;
  /**
   * The page-continuation token to use with a paged version of this API.
   */
  skipToken?: string;
}

/**
 * Contains response data for the list operation.
 */
export type RecommendationsListResponse = ResourceRecommendationBaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceRecommendationBaseListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type RecommendationsGetResponse = ResourceRecommendationBase & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceRecommendationBase;
  };
};

/**
 * Optional parameters.
 */
export interface RecommendationsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply to the recommendations.
   */
  filter?: string;
  /**
   * The number of recommendations per page if a paged version of this API is being used.
   */
  top?: number;
  /**
   * The page-continuation token to use with a paged version of this API.
   */
  skipToken?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type RecommendationsListNextResponse = ResourceRecommendationBaseListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceRecommendationBaseListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationEntityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationEntityListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationEntityListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationEntityListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type SuppressionsGetResponse = SuppressionContract & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SuppressionContract;
  };
};

/**
 * Contains response data for the create operation.
 */
export type SuppressionsCreateResponse = SuppressionContract & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SuppressionContract;
  };
};

/**
 * Optional parameters.
 */
export interface SuppressionsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The page-continuation token to use with a paged version of this API.
   */
  skipToken?: string;
  /**
   * The number of suppressions per page if a paged version of this API is being used.
   */
  top?: number;
}

/**
 * Contains response data for the list operation.
 */
export type SuppressionsListResponse = SuppressionContractListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SuppressionContractListResult;
  };
};

/**
 * Optional parameters.
 */
export interface SuppressionsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The page-continuation token to use with a paged version of this API.
   */
  skipToken?: string;
  /**
   * The number of suppressions per page if a paged version of this API is being used.
   */
  top?: number;
}

/**
 * Contains response data for the listNext operation.
 */
export type SuppressionsListNextResponse = SuppressionContractListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SuppressionContractListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AdvisorManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
