/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationsDiscoveryCollection: coreHttp.CompositeMapper = {
  serializedName: "OperationsDiscoveryCollection",
  type: {
    name: "Composite",
    className: "OperationsDiscoveryCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OperationsDiscovery" }
          }
        }
      }
    }
  }
};

export const OperationsDiscovery: coreHttp.CompositeMapper = {
  serializedName: "OperationsDiscovery",
  type: {
    name: "Composite",
    className: "OperationsDiscovery",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "Display"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const Display: coreHttp.CompositeMapper = {
  serializedName: "Display",
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      publisher: {
        serializedName: "publisher",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinition"
        }
      }
    }
  }
};

export const ErrorDefinition: coreHttp.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ErrorDefinition" } }
        }
      }
    }
  }
};

export const DiagnosticSettingsResourceCollection: coreHttp.CompositeMapper = {
  serializedName: "DiagnosticSettingsResourceCollection",
  type: {
    name: "Composite",
    className: "DiagnosticSettingsResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "DiagnosticSettingsResource" }
          }
        }
      }
    }
  }
};

export const ProxyOnlyResource: coreHttp.CompositeMapper = {
  serializedName: "ProxyOnlyResource",
  type: {
    name: "Composite",
    className: "ProxyOnlyResource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DiagnosticSettingsResource: coreHttp.CompositeMapper = {
  serializedName: "DiagnosticSettingsResource",
  type: {
    name: "Composite",
    className: "DiagnosticSettingsResource",
    modelProperties: {
      ...ProxyOnlyResource.type.modelProperties,
      storageAccountId: {
        serializedName: "properties.storageAccountId",
        type: {
          name: "String"
        }
      },
      serviceBusRuleId: {
        serializedName: "properties.serviceBusRuleId",
        type: {
          name: "String"
        }
      },
      workspaceId: {
        serializedName: "properties.workspaceId",
        type: {
          name: "String"
        }
      },
      eventHubAuthorizationRuleId: {
        serializedName: "properties.eventHubAuthorizationRuleId",
        type: {
          name: "String"
        }
      },
      eventHubName: {
        serializedName: "properties.eventHubName",
        type: {
          name: "String"
        }
      },
      logs: {
        serializedName: "properties.logs",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "LogSettings" } }
        }
      }
    }
  }
};

export const LogSettings: coreHttp.CompositeMapper = {
  serializedName: "LogSettings",
  type: {
    name: "Composite",
    className: "LogSettings",
    modelProperties: {
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      retentionPolicy: {
        serializedName: "retentionPolicy",
        type: {
          name: "Composite",
          className: "RetentionPolicy"
        }
      }
    }
  }
};

export const RetentionPolicy: coreHttp.CompositeMapper = {
  serializedName: "RetentionPolicy",
  type: {
    name: "Composite",
    className: "RetentionPolicy",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      days: {
        constraints: {},
        serializedName: "days",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DiagnosticSettingsCategoryResourceCollection: coreHttp.CompositeMapper = {
  serializedName: "DiagnosticSettingsCategoryResourceCollection",
  type: {
    name: "Composite",
    className: "DiagnosticSettingsCategoryResourceCollection",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DiagnosticSettingsCategoryResource"
            }
          }
        }
      }
    }
  }
};

export const DiagnosticSettingsCategoryResource: coreHttp.CompositeMapper = {
  serializedName: "DiagnosticSettingsCategoryResource",
  type: {
    name: "Composite",
    className: "DiagnosticSettingsCategoryResource",
    modelProperties: {
      ...ProxyOnlyResource.type.modelProperties,
      categoryType: {
        defaultValue: "Logs",
        serializedName: "properties.categoryType",
        isConstant: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
