/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const url: coreHttp.OperationURLParameter = {
  parameterPath: "url",
  mapper: {
    serializedName: "url",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const name: coreHttp.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const reference: coreHttp.OperationURLParameter = {
  parameterPath: "reference",
  mapper: {
    serializedName: "reference",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accept: coreHttp.OperationParameter = {
  parameterPath: ["options", "accept"],
  mapper: {
    serializedName: "accept",
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/vnd.docker.distribution.manifest.v2+json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const payload: coreHttp.OperationParameter = {
  parameterPath: "payload",
  mapper: Mappers.Manifest
};

export const last: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "last"],
  mapper: {
    serializedName: "last",
    type: {
      name: "String"
    }
  }
};

export const n: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "n"],
  mapper: {
    serializedName: "n",
    type: {
      name: "Number"
    }
  }
};

export const orderby: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "orderby"],
  mapper: {
    serializedName: "orderby",
    type: {
      name: "String"
    }
  }
};

export const contentType1: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const value: coreHttp.OperationParameter = {
  parameterPath: ["options", "value"],
  mapper: Mappers.ChangeableAttributes
};

export const digest: coreHttp.OperationURLParameter = {
  parameterPath: "digest",
  mapper: {
    serializedName: "digest",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const from: coreHttp.OperationQueryParameter = {
  parameterPath: "from",
  mapper: {
    serializedName: "from",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const mount: coreHttp.OperationQueryParameter = {
  parameterPath: "mount",
  mapper: {
    serializedName: "mount",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const location: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "nextBlobUuidLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const contentType2: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/octet-stream",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const value1: coreHttp.OperationParameter = {
  parameterPath: "value",
  mapper: {
    serializedName: "value",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const value2: coreHttp.OperationParameter = {
  parameterPath: "value",
  mapper: {
    serializedName: "value",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const digest1: coreHttp.OperationQueryParameter = {
  parameterPath: "digest",
  mapper: {
    serializedName: "digest",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const range: coreHttp.OperationParameter = {
  parameterPath: "range",
  mapper: {
    serializedName: "Range",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const digest2: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "digest"],
  mapper: {
    serializedName: "digest",
    type: {
      name: "String"
    }
  }
};

export const reference1: coreHttp.OperationURLParameter = {
  parameterPath: "reference",
  mapper: {
    serializedName: "reference",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType3: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/x-www-form-urlencoded",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const accessToken: coreHttp.OperationParameter = {
  parameterPath: ["options", "accessToken"],
  mapper:
    Mappers.Paths108HwamOauth2ExchangePostRequestbodyContentApplicationXWwwFormUrlencodedSchema
};

export const refreshToken: coreHttp.OperationParameter = {
  parameterPath: ["options", "refreshToken"],
  mapper:
    Mappers.PathsV3R3RxOauth2TokenPostRequestbodyContentApplicationXWwwFormUrlencodedSchema
};

export const service: coreHttp.OperationQueryParameter = {
  parameterPath: "service",
  mapper: {
    serializedName: "service",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const scope: coreHttp.OperationQueryParameter = {
  parameterPath: "scope",
  mapper: {
    serializedName: "scope",
    required: true,
    type: {
      name: "String"
    }
  }
};
