/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AzureContainerRegistry } from "../azureContainerRegistry";

/**
 * Class representing a V2Support.
 */
export class V2Support {
  private readonly client: AzureContainerRegistry;

  /**
   * Initialize a new instance of the class V2Support class.
   * @param client Reference to the service client
   */
  constructor(client: AzureContainerRegistry) {
    this.client = client;
  }

  /**
   * Tells whether this Docker Registry instance supports Docker Registry HTTP API v2
   * @param options The options parameters.
   */
  check(options?: coreHttp.OperationOptions): Promise<coreHttp.RestResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { options: operationOptions },
      checkOperationSpec
    ) as Promise<coreHttp.RestResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const checkOperationSpec: coreHttp.OperationSpec = {
  path: "/v2/",
  httpMethod: "GET",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.AcrErrors
    }
  },
  urlParameters: [Parameters.url],
  serializer
};
