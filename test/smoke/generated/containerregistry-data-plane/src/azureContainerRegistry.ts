/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { AzureContainerRegistryContext } from "./azureContainerRegistryContext";

class AzureContainerRegistry extends AzureContainerRegistryContext {
  /**
   * Initializes a new instance of the AzureContainerRegistry class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param url Registry login URL
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    url: string,
    options?: Models.AzureContainerRegistryOptionalParams
  ) {
    super(credentials, url, options);
    this.v2Support = new operations.V2Support(this);
    this.manifests = new operations.Manifests(this);
    this.blob = new operations.Blob(this);
    this.repository = new operations.Repository(this);
    this.tag = new operations.Tag(this);
    this.refreshTokens = new operations.RefreshTokens(this);
    this.accessTokens = new operations.AccessTokens(this);
  }

  v2Support: operations.V2Support;
  manifests: operations.Manifests;
  blob: operations.Blob;
  repository: operations.Repository;
  tag: operations.Tag;
  refreshTokens: operations.RefreshTokens;
  accessTokens: operations.AccessTokens;
}

// Operation Specifications

export {
  AzureContainerRegistry,
  AzureContainerRegistryContext,
  Models as AzureContainerRegistryModels,
  Mappers as AzureContainerRegistryMappers
};
export * from "./operations";
