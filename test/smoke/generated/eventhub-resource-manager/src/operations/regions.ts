/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EventHubManagementClient } from "../eventHubManagementClient";
import {
  RegionsListBySkuResponse,
  RegionsListBySkuNextResponse
} from "../models";

/**
 * Class representing a Regions.
 */
export class Regions {
  private readonly client: EventHubManagementClient;

  /**
   * Initialize a new instance of the class Regions class.
   * @param client Reference to the service client
   */
  constructor(client: EventHubManagementClient) {
    this.client = client;
  }

  /**
   * Gets the available Regions for a given sku
   * @param sku The sku type.
   * @param options The options parameters.
   */
  listBySku(
    sku: string,
    options?: coreHttp.OperationOptions
  ): Promise<RegionsListBySkuResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { sku, options: operationOptions },
      listBySkuOperationSpec
    ) as Promise<RegionsListBySkuResponse>;
  }

  /**
   * ListBySkuNext
   * @param sku The sku type.
   * @param nextLink The nextLink from the previous successful call to the ListBySku method.
   * @param options The options parameters.
   */
  listBySkuNext(
    sku: string,
    nextLink: string,
    options?: coreHttp.OperationOptions
  ): Promise<RegionsListBySkuNextResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { sku, nextLink, options: operationOptions },
      listBySkuNextOperationSpec
    ) as Promise<RegionsListBySkuNextResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listBySkuOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/sku/{sku}/regions",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MessagingRegionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId, Parameters.sku],
  serializer
};
const listBySkuNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MessagingRegionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.sku,
    Parameters.nextLink6
  ],
  serializer
};
