/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const mapsAccountCreateParameters: coreHttp.OperationParameter = {
  parameterPath: "mapsAccountCreateParameters",
  mapper: Mappers.MapsAccountCreateParameters
};

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-02-01-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-w._()]+$"),
      MaxLength: 90,
      MinLength: 1
    },
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accountName: coreHttp.OperationURLParameter = {
  parameterPath: "accountName",
  mapper: {
    serializedName: "accountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const mapsAccountUpdateParameters: coreHttp.OperationParameter = {
  parameterPath: "mapsAccountUpdateParameters",
  mapper: Mappers.MapsAccountUpdateParameters
};

export const keySpecification: coreHttp.OperationParameter = {
  parameterPath: "keySpecification",
  mapper: Mappers.MapsKeySpecification
};

export const privateAtlasCreateParameters: coreHttp.OperationParameter = {
  parameterPath: "privateAtlasCreateParameters",
  mapper: Mappers.PrivateAtlasCreateParameters
};

export const privateAtlasName: coreHttp.OperationURLParameter = {
  parameterPath: "privateAtlasName",
  mapper: {
    serializedName: "privateAtlasName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const privateAtlasUpdateParameters: coreHttp.OperationParameter = {
  parameterPath: "privateAtlasUpdateParameters",
  mapper: Mappers.PrivateAtlasUpdateParameters
};
