/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { LROOperationState } from "../lro";
import { PollerLike } from "@azure/core-lro";
import {
  NetworkInterface,
  NetworkInterfaceIPConfiguration,
  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsNextOptionalParams,
  NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams,
  NetworkInterfacesGetOptionalParams,
  NetworkInterfacesGetResponse,
  NetworkInterfacesCreateOrUpdateResponse,
  TagsObject,
  NetworkInterfacesUpdateTagsResponse,
  NetworkInterfacesGetEffectiveRouteTableResponse,
  NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse,
  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams,
  NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse,
  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams,
  NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a NetworkInterfaces. */
export interface NetworkInterfaces {
  /**
   * Gets all network interfaces in a subscription.
   * @param options The options parameters.
   */
  listAll(
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Gets all network interfaces in a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Gets information about all network interfaces in a virtual machine in a virtual machine scale set.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineScaleSetName The name of the virtual machine scale set.
   * @param virtualmachineIndex The virtual machine index.
   * @param options The options parameters.
   */
  listVirtualMachineScaleSetVMNetworkInterfaces(
    resourceGroupName: string,
    virtualMachineScaleSetName: string,
    virtualmachineIndex: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Gets all network interfaces in a virtual machine scale set.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineScaleSetName The name of the virtual machine scale set.
   * @param options The options parameters.
   */
  listVirtualMachineScaleSetNetworkInterfaces(
    resourceGroupName: string,
    virtualMachineScaleSetName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<NetworkInterface>;
  /**
   * Get the specified network interface ip configuration in a virtual machine scale set.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineScaleSetName The name of the virtual machine scale set.
   * @param virtualmachineIndex The virtual machine index.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  listVirtualMachineScaleSetIpConfigurations(
    resourceGroupName: string,
    virtualMachineScaleSetName: string,
    virtualmachineIndex: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesListVirtualMachineScaleSetIpConfigurationsOptionalParams
  ): PagedAsyncIterableIterator<NetworkInterfaceIPConfiguration>;
  /**
   * Deletes the specified network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<LROOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Gets information about the specified network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesGetOptionalParams
  ): Promise<NetworkInterfacesGetResponse>;
  /**
   * Creates or updates a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to the create or update network interface operation.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: NetworkInterface,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      LROOperationState<NetworkInterfacesCreateOrUpdateResponse>,
      NetworkInterfacesCreateOrUpdateResponse
    >
  >;
  /**
   * Updates a network interface tags.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param parameters Parameters supplied to update network interface tags.
   * @param options The options parameters.
   */
  updateTags(
    resourceGroupName: string,
    networkInterfaceName: string,
    parameters: TagsObject,
    options?: coreHttp.OperationOptions
  ): Promise<NetworkInterfacesUpdateTagsResponse>;
  /**
   * Gets all route tables applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  getEffectiveRouteTable(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      LROOperationState<NetworkInterfacesGetEffectiveRouteTableResponse>,
      NetworkInterfacesGetEffectiveRouteTableResponse
    >
  >;
  /**
   * Gets all network security groups applied to a network interface.
   * @param resourceGroupName The name of the resource group.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  listEffectiveNetworkSecurityGroups(
    resourceGroupName: string,
    networkInterfaceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      LROOperationState<
        NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse
      >,
      NetworkInterfacesListEffectiveNetworkSecurityGroupsResponse
    >
  >;
  /**
   * Get the specified network interface in a virtual machine scale set.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineScaleSetName The name of the virtual machine scale set.
   * @param virtualmachineIndex The virtual machine index.
   * @param networkInterfaceName The name of the network interface.
   * @param options The options parameters.
   */
  getVirtualMachineScaleSetNetworkInterface(
    resourceGroupName: string,
    virtualMachineScaleSetName: string,
    virtualmachineIndex: string,
    networkInterfaceName: string,
    options?: NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceOptionalParams
  ): Promise<
    NetworkInterfacesGetVirtualMachineScaleSetNetworkInterfaceResponse
  >;
  /**
   * Get the specified network interface ip configuration in a virtual machine scale set.
   * @param resourceGroupName The name of the resource group.
   * @param virtualMachineScaleSetName The name of the virtual machine scale set.
   * @param virtualmachineIndex The virtual machine index.
   * @param networkInterfaceName The name of the network interface.
   * @param ipConfigurationName The name of the ip configuration.
   * @param options The options parameters.
   */
  getVirtualMachineScaleSetIpConfiguration(
    resourceGroupName: string,
    virtualMachineScaleSetName: string,
    virtualmachineIndex: string,
    networkInterfaceName: string,
    ipConfigurationName: string,
    options?: NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationOptionalParams
  ): Promise<NetworkInterfacesGetVirtualMachineScaleSetIpConfigurationResponse>;
}
