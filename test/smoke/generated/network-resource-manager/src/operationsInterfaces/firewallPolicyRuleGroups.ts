/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  FirewallPolicyRuleGroup,
  FirewallPolicyRuleGroupsGetResponse,
  FirewallPolicyRuleGroupsCreateOrUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FirewallPolicyRuleGroups. */
export interface FirewallPolicyRuleGroups {
  /**
   * Lists all FirewallPolicyRuleGroups in a FirewallPolicy resource.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    firewallPolicyName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<FirewallPolicyRuleGroup>;
  /**
   * Deletes the specified FirewallPolicyRuleGroup.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param ruleGroupName The name of the FirewallPolicyRuleGroup.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    firewallPolicyName: string,
    ruleGroupName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Gets the specified FirewallPolicyRuleGroup.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param ruleGroupName The name of the FirewallPolicyRuleGroup.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    firewallPolicyName: string,
    ruleGroupName: string,
    options?: coreHttp.OperationOptions
  ): Promise<FirewallPolicyRuleGroupsGetResponse>;
  /**
   * Creates or updates the specified FirewallPolicyRuleGroup.
   * @param resourceGroupName The name of the resource group.
   * @param firewallPolicyName The name of the Firewall Policy.
   * @param ruleGroupName The name of the FirewallPolicyRuleGroup.
   * @param parameters Parameters supplied to the create or update FirewallPolicyRuleGroup operation.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    firewallPolicyName: string,
    ruleGroupName: string,
    parameters: FirewallPolicyRuleGroup,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<FirewallPolicyRuleGroupsCreateOrUpdateResponse>,
      FirewallPolicyRuleGroupsCreateOrUpdateResponse
    >
  >;
}
