/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { LROOperationState } from "../lro";
import { PollerLike } from "@azure/core-lro";
import {
  IpGroup,
  IpGroupsGetOptionalParams,
  IpGroupsGetResponse,
  IpGroupsCreateOrUpdateResponse,
  TagsObject,
  IpGroupsUpdateGroupsResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a IpGroups. */
export interface IpGroups {
  /**
   * Gets all IpGroups in a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<IpGroup>;
  /**
   * Gets all IpGroups in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<IpGroup>;
  /**
   * Gets the specified ipGroups.
   * @param resourceGroupName The name of the resource group.
   * @param ipGroupsName The name of the ipGroups.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    ipGroupsName: string,
    options?: IpGroupsGetOptionalParams
  ): Promise<IpGroupsGetResponse>;
  /**
   * Creates or updates an ipGroups in a specified resource group.
   * @param resourceGroupName The name of the resource group.
   * @param ipGroupsName The name of the ipGroups.
   * @param parameters Parameters supplied to the create or update IpGroups operation.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    ipGroupsName: string,
    parameters: IpGroup,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      LROOperationState<IpGroupsCreateOrUpdateResponse>,
      IpGroupsCreateOrUpdateResponse
    >
  >;
  /**
   * Updates tags of an IpGroups resource.
   * @param resourceGroupName The name of the resource group.
   * @param ipGroupsName The name of the ipGroups.
   * @param parameters Parameters supplied to the update ipGroups operation.
   * @param options The options parameters.
   */
  updateGroups(
    resourceGroupName: string,
    ipGroupsName: string,
    parameters: TagsObject,
    options?: coreHttp.OperationOptions
  ): Promise<IpGroupsUpdateGroupsResponse>;
  /**
   * Deletes the specified ipGroups.
   * @param resourceGroupName The name of the resource group.
   * @param ipGroupsName The name of the ipGroups.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    ipGroupsName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<LROOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
}
