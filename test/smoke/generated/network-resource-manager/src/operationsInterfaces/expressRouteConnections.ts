/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import { LROOperationState } from "../lro";
import { PollerLike } from "@azure/core-lro";
import {
  ExpressRouteConnection,
  ExpressRouteConnectionsCreateOrUpdateResponse,
  ExpressRouteConnectionsGetResponse,
  ExpressRouteConnectionsListResponse
} from "../models";

/** Interface representing a ExpressRouteConnections. */
export interface ExpressRouteConnections {
  /**
   * Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.
   * @param resourceGroupName The name of the resource group.
   * @param expressRouteGatewayName The name of the ExpressRoute gateway.
   * @param connectionName The name of the connection subresource.
   * @param putExpressRouteConnectionParameters Parameters required in an ExpressRouteConnection PUT
   *                                            operation.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    expressRouteGatewayName: string,
    connectionName: string,
    putExpressRouteConnectionParameters: ExpressRouteConnection,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      LROOperationState<ExpressRouteConnectionsCreateOrUpdateResponse>,
      ExpressRouteConnectionsCreateOrUpdateResponse
    >
  >;
  /**
   * Gets the specified ExpressRouteConnection.
   * @param resourceGroupName The name of the resource group.
   * @param expressRouteGatewayName The name of the ExpressRoute gateway.
   * @param connectionName The name of the ExpressRoute connection.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    expressRouteGatewayName: string,
    connectionName: string,
    options?: coreHttp.OperationOptions
  ): Promise<ExpressRouteConnectionsGetResponse>;
  /**
   * Deletes a connection to a ExpressRoute circuit.
   * @param resourceGroupName The name of the resource group.
   * @param expressRouteGatewayName The name of the ExpressRoute gateway.
   * @param connectionName The name of the connection subresource.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    expressRouteGatewayName: string,
    connectionName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<LROOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Lists ExpressRouteConnections.
   * @param resourceGroupName The name of the resource group.
   * @param expressRouteGatewayName The name of the ExpressRoute gateway.
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    expressRouteGatewayName: string,
    options?: coreHttp.OperationOptions
  ): Promise<ExpressRouteConnectionsListResponse>;
}
