/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * this is the management partner operations response
 */
export interface PartnerResponse {
  /**
   * Type of the partner
   */
  etag?: number;
  /**
   * Identifier of the partner
   */
  readonly id?: string;
  /**
   * Name of the partner
   */
  readonly name?: string;
  /**
   * Type of resource. "Microsoft.ManagementPartner/partners"
   */
  readonly type?: string;
  /**
   * This is the partner id
   */
  partnerId?: string;
  /**
   * This is the partner name
   */
  partnerName?: string;
  /**
   * This is the tenant id.
   */
  tenantId?: string;
  /**
   * This is the object id.
   */
  objectId?: string;
  /**
   * This is the version.
   */
  version?: number;
  /**
   * This is the DateTime when the partner was updated.
   */
  updatedTime?: Date;
  /**
   * This is the DateTime when the partner was created.
   */
  createdTime?: Date;
  /**
   * This is the partner state
   */
  state?: ManagementPartnerState;
}

/**
 * this is the management partner operations error
 */
export interface ErrorModel {
  /**
   * this is the ExtendedErrorInfo property
   */
  error?: ExtendedErrorInfo;
}

/**
 * this is the extended error info
 */
export interface ExtendedErrorInfo {
  /**
   * this is the error response code
   */
  code?: ErrorResponseCode;
  /**
   * this is the extended error info message
   */
  message?: string;
}

/**
 * this is the management partner operations list
 */
export interface OperationList {
  /**
   * this is the operation response list
   */
  value?: OperationResponse[];
  /**
   * Url to get the next page of items.
   */
  nextLink?: string;
}

/**
 * this is the management partner operations response
 */
export interface OperationResponse {
  /**
   * this is the operation response name
   */
  name?: string;
  /**
   * this is the operation display
   */
  display?: OperationDisplay;
  /**
   * the is operation response origin information
   */
  origin?: string;
}

/**
 * this is the management partner operation
 */
export interface OperationDisplay {
  /**
   * the is management partner provider
   */
  provider?: string;
  /**
   * the is management partner resource
   */
  resource?: string;
  /**
   * the is management partner operation
   */
  operation?: string;
  /**
   * the is management partner operation description
   */
  description?: string;
}

/**
 * Defines values for ManagementPartnerState.
 */
export type ManagementPartnerState = "Active" | "Deleted";
/**
 * Defines values for ErrorResponseCode.
 */
export type ErrorResponseCode = "NotFound" | "Conflict" | "BadRequest";

/**
 * Contains response data for the get operation.
 */
export type PartnerGetResponse = PartnerResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PartnerResponse;
  };
};

/**
 * Contains response data for the create operation.
 */
export type PartnerCreateResponse = PartnerResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PartnerResponse;
  };
};

/**
 * Contains response data for the update operation.
 */
export type PartnerUpdateResponse = PartnerResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PartnerResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type PartnersGetResponse = PartnerResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PartnerResponse;
  };
};

/**
 * Optional parameters.
 */
export interface AceProvisioningManagementPartnerApiOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
