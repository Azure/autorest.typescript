/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { StorageManagementClientContext } from "./storageManagementClientContext";
import { StorageManagementClientOptionalParams } from "./models";

class StorageManagementClient extends StorageManagementClientContext {
  /**
   * Initializes a new instance of the StorageManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The ID of the target subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: StorageManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.skus = new operations.Skus(this);
    this.storageAccounts = new operations.StorageAccounts(this);
    this.usages = new operations.Usages(this);
    this.managementPolicies = new operations.ManagementPolicies(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(
      this
    );
    this.privateLinkResources = new operations.PrivateLinkResources(this);
    this.objectReplicationPolicies = new operations.ObjectReplicationPolicies(
      this
    );
    this.encryptionScopes = new operations.EncryptionScopes(this);
    this.blobServices = new operations.BlobServices(this);
    this.blobContainers = new operations.BlobContainers(this);
    this.fileServices = new operations.FileServices(this);
    this.fileShares = new operations.FileShares(this);
  }

  operations: operations.Operations;
  skus: operations.Skus;
  storageAccounts: operations.StorageAccounts;
  usages: operations.Usages;
  managementPolicies: operations.ManagementPolicies;
  privateEndpointConnections: operations.PrivateEndpointConnections;
  privateLinkResources: operations.PrivateLinkResources;
  objectReplicationPolicies: operations.ObjectReplicationPolicies;
  encryptionScopes: operations.EncryptionScopes;
  blobServices: operations.BlobServices;
  blobContainers: operations.BlobContainers;
  fileServices: operations.FileServices;
  fileShares: operations.FileShares;
}

// Operation Specifications

export {
  StorageManagementClient,
  StorageManagementClientContext,
  Models as StorageManagementModels,
  Mappers as StorageManagementMappers
};
export * from "./operations";
