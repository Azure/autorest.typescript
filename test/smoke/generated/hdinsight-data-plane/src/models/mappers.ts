/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const JobDetailRootJsonObject: coreHttp.CompositeMapper = {
  serializedName: "JobDetailRootJsonObject",
  type: {
    name: "Composite",
    className: "JobDetailRootJsonObject",
    modelProperties: {
      callback: {
        serializedName: "callback",
        type: {
          name: "any"
        }
      },
      completed: {
        serializedName: "completed",
        type: {
          name: "String"
        }
      },
      exitValue: {
        serializedName: "exitValue",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      msg: {
        serializedName: "msg",
        type: {
          name: "any"
        }
      },
      parentId: {
        serializedName: "parentId",
        type: {
          name: "String"
        }
      },
      percentComplete: {
        serializedName: "percentComplete",
        type: {
          name: "String"
        }
      },
      profile: {
        serializedName: "profile",
        type: {
          name: "Composite",
          className: "Profile"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "Status"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      userargs: {
        serializedName: "userargs",
        type: {
          name: "Composite",
          className: "Userargs"
        }
      }
    }
  }
};

export const Profile: coreHttp.CompositeMapper = {
  serializedName: "Profile",
  type: {
    name: "Composite",
    className: "Profile",
    modelProperties: {
      jobFile: {
        serializedName: "jobFile",
        type: {
          name: "String"
        }
      },
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      jobID: {
        serializedName: "jobID",
        type: {
          name: "Composite",
          className: "JobID"
        }
      },
      jobName: {
        serializedName: "jobName",
        type: {
          name: "String"
        }
      },
      queueName: {
        serializedName: "queueName",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobID: coreHttp.CompositeMapper = {
  serializedName: "JobID",
  type: {
    name: "Composite",
    className: "JobID",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      jtIdentifier: {
        serializedName: "jtIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Status: coreHttp.CompositeMapper = {
  serializedName: "Status",
  type: {
    name: "Composite",
    className: "Status",
    modelProperties: {
      cleanupProgress: {
        serializedName: "cleanupProgress",
        type: {
          name: "Number"
        }
      },
      failureInfo: {
        serializedName: "failureInfo",
        type: {
          name: "String"
        }
      },
      finishTime: {
        serializedName: "finishTime",
        type: {
          name: "Number"
        }
      },
      historyFile: {
        serializedName: "historyFile",
        type: {
          name: "String"
        }
      },
      jobACLs: {
        serializedName: "jobACLs",
        type: {
          name: "any"
        }
      },
      jobComplete: {
        serializedName: "jobComplete",
        type: {
          name: "Boolean"
        }
      },
      jobFile: {
        serializedName: "jobFile",
        type: {
          name: "String"
        }
      },
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      jobID: {
        serializedName: "jobID",
        type: {
          name: "Composite",
          className: "JobID"
        }
      },
      jobName: {
        serializedName: "jobName",
        type: {
          name: "String"
        }
      },
      jobPriority: {
        serializedName: "jobPriority",
        type: {
          name: "String"
        }
      },
      mapProgress: {
        serializedName: "mapProgress",
        type: {
          name: "Number"
        }
      },
      neededMem: {
        serializedName: "neededMem",
        type: {
          name: "Number"
        }
      },
      numReservedSlots: {
        serializedName: "numReservedSlots",
        type: {
          name: "Number"
        }
      },
      numUsedSlots: {
        serializedName: "numUsedSlots",
        type: {
          name: "Number"
        }
      },
      priority: {
        serializedName: "priority",
        type: {
          name: "String"
        }
      },
      queue: {
        serializedName: "queue",
        type: {
          name: "String"
        }
      },
      reduceProgress: {
        serializedName: "reduceProgress",
        type: {
          name: "Number"
        }
      },
      reservedMem: {
        serializedName: "reservedMem",
        type: {
          name: "Number"
        }
      },
      retired: {
        serializedName: "retired",
        type: {
          name: "Boolean"
        }
      },
      runState: {
        serializedName: "runState",
        type: {
          name: "Number"
        }
      },
      schedulingInfo: {
        serializedName: "schedulingInfo",
        type: {
          name: "String"
        }
      },
      setupProgress: {
        serializedName: "setupProgress",
        type: {
          name: "Number"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      trackingUrl: {
        serializedName: "trackingUrl",
        type: {
          name: "String"
        }
      },
      uber: {
        serializedName: "uber",
        type: {
          name: "Boolean"
        }
      },
      usedMem: {
        serializedName: "usedMem",
        type: {
          name: "Number"
        }
      },
      username: {
        serializedName: "username",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Userargs: coreHttp.CompositeMapper = {
  serializedName: "Userargs",
  type: {
    name: "Composite",
    className: "Userargs",
    modelProperties: {
      arg: {
        serializedName: "arg",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "UserargsArgItem"
          }
        }
      },
      callback: {
        serializedName: "callback",
        type: {
          name: "any"
        }
      },
      define: {
        serializedName: "define",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "UserargsDefineItem"
          }
        }
      },
      enablelog: {
        serializedName: "enablelog",
        type: {
          name: "String"
        }
      },
      execute: {
        serializedName: "execute",
        type: {
          name: "String"
        }
      },
      file: {
        serializedName: "file",
        type: {
          name: "any"
        }
      },
      files: {
        serializedName: "files",
        type: {
          name: "any"
        }
      },
      jar: {
        serializedName: "jar",
        type: {
          name: "String"
        }
      },
      statusdir: {
        serializedName: "statusdir",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const JobOperationsErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "JobOperationsErrorResponse",
  type: {
    name: "Composite",
    className: "JobOperationsErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobListJsonObject: coreHttp.CompositeMapper = {
  serializedName: "JobListJsonObject",
  type: {
    name: "Composite",
    className: "JobListJsonObject",
    modelProperties: {
      detail: {
        serializedName: "detail",
        type: {
          name: "Composite",
          className: "JobDetailRootJsonObject"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobSubmissionJsonResponse: coreHttp.CompositeMapper = {
  serializedName: "JobSubmissionJsonResponse",
  type: {
    name: "Composite",
    className: "JobSubmissionJsonResponse",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppState: coreHttp.CompositeMapper = {
  serializedName: "AppState",
  type: {
    name: "Composite",
    className: "AppState",
    modelProperties: {
      state: {
        serializedName: "state",
        type: {
          name: "Enum",
          allowedValues: [
            "NEW",
            "NEW_SAVING",
            "SUBMITTED",
            "ACCEPTED",
            "RUNNING",
            "FINISHED",
            "FINISHING",
            "FAILED",
            "KILLED"
          ]
        }
      }
    }
  }
};
