/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const clusterDnsName: coreHttp.OperationURLParameter = {
  parameterPath: "clusterDnsName",
  mapper: {
    serializedName: "clusterDnsName",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const userName: coreHttp.OperationQueryParameter = {
  parameterPath: "userName",
  mapper: {
    serializedName: "user.name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const jobId: coreHttp.OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    serializedName: "jobId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const fields: coreHttp.OperationQueryParameter = {
  parameterPath: "fields",
  mapper: {
    defaultValue: "*",
    serializedName: "fields",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const jobId1: coreHttp.OperationURLParameter = {
  parameterPath: "jobId",
  mapper: {
    constraints: {
      MinLength: 1
    },
    serializedName: "jobId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const showall: coreHttp.OperationQueryParameter = {
  parameterPath: "showall",
  mapper: {
    defaultValue: "true",
    serializedName: "showall",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const jobid: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "jobid"],
  mapper: {
    serializedName: "jobid",
    type: {
      name: "String"
    }
  }
};

export const numrecords: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "numrecords"],
  mapper: {
    constraints: {
      InclusiveMinimum: 1
    },
    serializedName: "numrecords",
    type: {
      name: "Number"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/text",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const content: coreHttp.OperationParameter = {
  parameterPath: "content",
  mapper: {
    serializedName: "content",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const contentType1: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "text/plain",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const content1: coreHttp.OperationParameter = {
  parameterPath: "content",
  mapper: {
    serializedName: "content",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const content2: coreHttp.OperationParameter = {
  parameterPath: "content",
  mapper: {
    serializedName: "content",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const content3: coreHttp.OperationParameter = {
  parameterPath: "content",
  mapper: {
    serializedName: "content",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const appId: coreHttp.OperationURLParameter = {
  parameterPath: "appId",
  mapper: {
    serializedName: "appId",
    required: true,
    type: {
      name: "String"
    }
  }
};
