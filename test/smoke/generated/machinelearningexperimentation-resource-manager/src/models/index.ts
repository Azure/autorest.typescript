/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * An array of operations supported by the resource provider.
 */
export interface OperationListResult {
  /**
   * List of AML team account operations supported by the AML team account resource provider.
   */
  value?: Operation[];
}

/**
 * Azure Machine Learning team account REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * Display name of operation
 */
export interface OperationDisplay {
  /**
   * The resource provider name: Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * The resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation that users can perform.
   */
  operation?: string;
  /**
   * The description for the operation.
   */
  description?: string;
}

/**
 * The error response send when an operation fails.
 */
export interface ErrorResponse {
  /**
   * error code
   */
  code: string;
  /**
   * error message
   */
  message: string;
}

/**
 * An Azure resource.
 */
export interface Resource {
  /**
   * The resource ID.
   */
  readonly id?: string;
  /**
   * The name of the resource.
   */
  readonly name?: string;
  /**
   * The type of the resource.
   */
  readonly type?: string;
  /**
   * The location of the resource. This cannot be changed after the resource is created.
   */
  location: string;
  /**
   * The tags of the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An object that represents a machine learning team account.
 */
export type Account = Resource & {
  /**
   * The fully qualified arm id of the vso account to be used for this team account.
   */
  vsoAccountId?: string;
  /**
   * The immutable id associated with this team account.
   */
  readonly accountId?: string;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
   */
  friendlyName?: string;
  /**
   * The fully qualified arm id of the user key vault.
   */
  keyVaultId?: string;
  /**
   * The no of users/seats who can access this team account. This property defines the charge on the team account.
   */
  seats?: string;
  /**
   * The uri for this machine learning team account.
   */
  readonly discoveryUri?: string;
  /**
   * The creation date of the machine learning team account in ISO8601 format.
   */
  readonly creationDate?: Date;
  /**
   * The properties of the storage account for the machine learning team account.
   */
  storageAccount?: StorageAccountProperties;
  /**
   * The current deployment state of team account resource. The provisioningState is to indicate states for resource provisioning.
   */
  readonly provisioningState?: ProvisioningState;
};

/**
 * The properties of a storage account for a machine learning team account.
 */
export interface StorageAccountProperties {
  /**
   * The fully qualified arm Id of the storage account.
   */
  storageAccountId: string;
  /**
   * The access key to the storage account.
   */
  accessKey: string;
}

/**
 * The parameters for updating a machine learning team account.
 */
export interface AccountUpdateParameters {
  /**
   * The resource tags for the machine learning team account.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
   */
  friendlyName?: string;
  /**
   * The no of users/seats who can access this team account. This property defines the charge on the team account.
   */
  seats?: string;
  /**
   * The key for storage account associated with this team account
   */
  storageAccountKey?: string;
}

/**
 * The result of a request to list machine learning team accounts.
 */
export interface AccountListResult {
  /**
   * The list of machine learning team accounts. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning team accounts.
   */
  value?: Account[];
  /**
   * The URI that can be used to request the next list of machine learning team accounts.
   */
  nextLink?: string;
}

/**
 * An object that represents a machine learning team account workspace.
 */
export type Workspace = Resource & {
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The immutable id of the team account which contains this workspace.
   */
  readonly accountId?: string;
  /**
   * The immutable id of this workspace.
   */
  readonly workspaceId?: string;
  /**
   * The friendly name for this workspace. This will be the workspace name in the arm id when the workspace object gets created
   */
  friendlyName?: string;
  /**
   * The creation date of the machine learning workspace in ISO8601 format.
   */
  readonly creationDate?: Date;
  /**
   * The current deployment state of team account workspace resource. The provisioningState is to indicate states for resource provisioning.
   */
  readonly provisioningState?: ProvisioningState;
};

/**
 * The parameters for updating a machine learning team account workspace.
 */
export interface WorkspaceUpdateParameters {
  /**
   * The resource tags for the machine learning team account workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Friendly name of this workspace.
   */
  friendlyName?: string;
  /**
   * Description for this workspace.
   */
  description?: string;
}

/**
 * The result of a request to list machine learning team account workspaces.
 */
export interface WorkspaceListResult {
  /**
   * The list of machine learning team account workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning team accounts.
   */
  value?: Workspace[];
  /**
   * The URI that can be used to request the next list of machine learning workspaces.
   */
  nextLink?: string;
}

/**
 * An object that represents a machine learning project.
 */
export type Project = Resource & {
  /**
   * The description of this project.
   */
  description?: string;
  /**
   * The immutable id of the team account which contains this project.
   */
  readonly accountId?: string;
  /**
   * The immutable id of the workspace which contains this project.
   */
  readonly workspaceId?: string;
  /**
   * The immutable id of this project.
   */
  readonly projectId?: string;
  /**
   * The reference to git repo for this project.
   */
  gitrepo?: string;
  /**
   * The friendly name for this project.
   */
  friendlyName?: string;
  /**
   * The creation date of the project in ISO8601 format.
   */
  readonly creationDate?: Date;
  /**
   * The current deployment state of project resource. The provisioningState is to indicate states for resource provisioning.
   */
  readonly provisioningState?: ProvisioningState;
};

/**
 * The parameters for updating a machine learning project.
 */
export interface ProjectUpdateParameters {
  /**
   * The resource tags for the machine learning project.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The friendly name for this project.
   */
  friendlyName?: string;
  /**
   * The description of this project.
   */
  description?: string;
  /**
   * The reference to git repo for this project.
   */
  gitrepo?: string;
}

/**
 * The result of a request to list projects.
 */
export interface ProjectListResult {
  /**
   * The list of projects. Since this list may be incomplete, the nextLink field should be used to request the next list of projects.
   */
  value?: Project[];
  /**
   * The URI that can be used to request the next list of projects.
   */
  nextLink?: string;
}

/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Creating"
  | "Succeeded"
  | "Updating"
  | "Deleting"
  | "Failed";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Account;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccountsCreateOrUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Account;
  };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = Account & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Account;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = AccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccountListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type AccountsListResponse = AccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccountListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = AccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccountListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type AccountsListNextResponse = AccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccountListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Contains response data for the listByAccounts operation.
 */
export type WorkspacesListByAccountsResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Contains response data for the listByAccountsNext operation.
 */
export type WorkspacesListByAccountsNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProjectsGetResponse = Project & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Project;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ProjectsCreateOrUpdateResponse = Project & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Project;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ProjectsUpdateResponse = Project & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Project;
  };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type ProjectsListByWorkspaceResponse = ProjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProjectListResult;
  };
};

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type ProjectsListByWorkspaceNextResponse = ProjectListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProjectListResult;
  };
};

/**
 * Optional parameters.
 */
export interface MlTeamAccountManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
