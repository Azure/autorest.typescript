/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { SoftwarePlanRpContext } from "./softwarePlanRpContext";

class SoftwarePlanRp extends SoftwarePlanRpContext {
  /**
   * Initializes a new instance of the SoftwarePlanRp class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The ID of the target subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.SoftwarePlanRpOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.softwarePlan = new operations.SoftwarePlan(this);
    this.hybridUseBenefit = new operations.HybridUseBenefit(this);
    this.hybridUseBenefitRevision = new operations.HybridUseBenefitRevision(
      this
    );
    this.operations = new operations.Operations(this);
  }

  softwarePlan: operations.SoftwarePlan;
  hybridUseBenefit: operations.HybridUseBenefit;
  hybridUseBenefitRevision: operations.HybridUseBenefitRevision;
  operations: operations.Operations;
}

// Operation Specifications

export {
  SoftwarePlanRp,
  SoftwarePlanRpContext,
  Models as SoftwarePlanRpModels,
  Mappers as SoftwarePlanRpMappers
};
export * from "./operations";
