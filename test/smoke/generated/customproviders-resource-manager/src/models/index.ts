/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Results of the request to list operations.
 */
export interface ResourceProviderOperationList {
  /**
   * List of operations supported by this resource provider.
   */
  value?: ResourceProviderOperation[];
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Supported operations of this resource provider.
 */
export interface ResourceProviderOperation {
  /**
   * Operation name, in format of {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: ResourceProviderOperationDisplay;
}

/**
 * Display metadata associated with the operation.
 */
export interface ResourceProviderOperationDisplay {
  /**
   * Resource provider: Microsoft Custom Providers.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
  /**
   * Type of operation: get, read, delete, etc.
   */
  operation?: string;
  /**
   * Description of this operation.
   */
  description?: string;
}

/**
 * Error response.
 */
export interface ErrorResponse {
  /**
   * The error details.
   */
  error?: ErrorDefinition;
}

/**
 * Error definition.
 */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   */
  readonly code?: string;
  /**
   * Description of the error.
   */
  readonly message?: string;
  /**
   * Internal error details.
   */
  readonly details?: ErrorDefinition[];
}

/**
 * The resource definition.
 */
export interface Resource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource name
   */
  readonly name?: string;
  /**
   * Resource type
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A manifest file that defines the custom resource provider resources.
 */
export type CustomRPManifest = Resource & {
  /**
   * A list of actions that the custom resource provider implements.
   */
  actions?: CustomRPActionRouteDefinition[];
  /**
   * A list of resource types that the custom resource provider implements.
   */
  resourceTypes?: CustomRPResourceTypeRouteDefinition[];
  /**
   * A list of validations to run on the custom resource provider's requests.
   */
  validations?: CustomRPValidations[];
  /**
   * The provisioning state of the resource provider.
   */
  readonly provisioningState?: ProvisioningState;
};

/**
 * A route definition that defines an action or resource that can be interacted with through the custom resource provider.
 */
export interface CustomRPRouteDefinition {
  /**
   * The name of the route definition. This becomes the name for the ARM extension (e.g. '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomProviders/resourceProviders/{resourceProviderName}/{name}')
   */
  name: string;
  /**
   * The route definition endpoint URI that the custom resource provider will proxy requests to. This can be in the form of a flat URI (e.g. 'https://testendpoint/') or can specify to route via a path (e.g. 'https://testendpoint/{requestPath}')
   */
  endpoint: string;
}

/**
 * The route definition for an action implemented by the custom resource provider.
 */
export type CustomRPActionRouteDefinition = CustomRPRouteDefinition & {
  /**
   * The routing types that are supported for action requests.
   */
  routingType?: "Proxy";
};

/**
 * The route definition for a resource implemented by the custom resource provider.
 */
export type CustomRPResourceTypeRouteDefinition = CustomRPRouteDefinition & {
  /**
   * The routing types that are supported for resource requests.
   */
  routingType?: ResourceTypeRouting;
};

/**
 * A validation to apply on custom resource provider requests.
 */
export interface CustomRPValidations {
  /**
   * The type of validation to run against a matching request.
   */
  validationType?: "Swagger";
  /**
   * A link to the validation specification. The specification must be hosted on raw.githubusercontent.com.
   */
  specification: string;
}

/**
 * custom resource provider update information.
 */
export interface ResourceProvidersUpdate {
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * List of custom resource providers.
 */
export interface ListByCustomRPManifest {
  /**
   * The array of custom resource provider manifests.
   */
  value?: CustomRPManifest[];
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * The resource definition of this association.
 */
export interface Association {
  /**
   * The association id.
   */
  readonly id?: string;
  /**
   * The association name.
   */
  readonly name?: string;
  /**
   * The association type.
   */
  readonly type?: string;
  /**
   * The REST resource instance of the target resource for this association.
   */
  targetResourceId?: string;
  /**
   * The provisioning state of the association.
   */
  readonly provisioningState?: ProvisioningState;
}

/**
 * List of associations.
 */
export interface AssociationsList {
  /**
   * The array of associations.
   */
  value?: Association[];
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/**
 * Defines values for ResourceTypeRouting.
 */
export type ResourceTypeRouting = "Proxy" | "Proxy,Cache";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Accepted"
  | "Deleting"
  | "Running"
  | "Succeeded"
  | "Failed";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = ResourceProviderOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceProviderOperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = ResourceProviderOperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourceProviderOperationList;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type CustomResourceProviderCreateOrUpdateResponse = CustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomRPManifest;
  };
};

/**
 * Contains response data for the get operation.
 */
export type CustomResourceProviderGetResponse = CustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomRPManifest;
  };
};

/**
 * Contains response data for the update operation.
 */
export type CustomResourceProviderUpdateResponse = CustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomRPManifest;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type CustomResourceProviderListByResourceGroupResponse = ListByCustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListByCustomRPManifest;
  };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type CustomResourceProviderListBySubscriptionResponse = ListByCustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListByCustomRPManifest;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type CustomResourceProviderListByResourceGroupNextResponse = ListByCustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListByCustomRPManifest;
  };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type CustomResourceProviderListBySubscriptionNextResponse = ListByCustomRPManifest & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListByCustomRPManifest;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AssociationsCreateOrUpdateResponse = Association & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Association;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AssociationsGetResponse = Association & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Association;
  };
};

/**
 * Contains response data for the listAll operation.
 */
export type AssociationsListAllResponse = AssociationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AssociationsList;
  };
};

/**
 * Contains response data for the listAllNext operation.
 */
export type AssociationsListAllNextResponse = AssociationsList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AssociationsList;
  };
};

/**
 * Optional parameters.
 */
export interface CustomprovidersOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
