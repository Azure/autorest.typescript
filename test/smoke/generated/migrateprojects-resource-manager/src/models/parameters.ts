/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const migrateProjectName: coreHttp.OperationURLParameter = {
  parameterPath: "migrateProjectName",
  mapper: {
    serializedName: "migrateProjectName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-09-01-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const continuationToken: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "continuationToken"],
  mapper: {
    serializedName: "continuationToken",
    type: {
      name: "String"
    }
  }
};

export const pageSize: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "pageSize"],
  mapper: {
    serializedName: "pageSize",
    type: {
      name: "Number"
    }
  }
};

export const acceptLanguage: coreHttp.OperationParameter = {
  parameterPath: "acceptLanguage",
  mapper: {
    serializedName: "Accept-Language",
    type: {
      name: "String"
    }
  }
};

export const databaseInstanceName: coreHttp.OperationURLParameter = {
  parameterPath: "databaseInstanceName",
  mapper: {
    serializedName: "databaseInstanceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const databaseName: coreHttp.OperationURLParameter = {
  parameterPath: "databaseName",
  mapper: {
    serializedName: "databaseName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const eventName: coreHttp.OperationURLParameter = {
  parameterPath: "eventName",
  mapper: {
    serializedName: "eventName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const machineName: coreHttp.OperationURLParameter = {
  parameterPath: "machineName",
  mapper: {
    serializedName: "machineName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const body: coreHttp.OperationParameter = {
  parameterPath: "body",
  mapper: Mappers.MigrateProject
};

export const input: coreHttp.OperationParameter = {
  parameterPath: "input",
  mapper: Mappers.RegisterToolInput
};

export const input1: coreHttp.OperationParameter = {
  parameterPath: "input",
  mapper: Mappers.RefreshSummaryInput
};

export const solutionName: coreHttp.OperationURLParameter = {
  parameterPath: "solutionName",
  mapper: {
    serializedName: "solutionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const solutionInput: coreHttp.OperationParameter = {
  parameterPath: "solutionInput",
  mapper: Mappers.Solution
};
