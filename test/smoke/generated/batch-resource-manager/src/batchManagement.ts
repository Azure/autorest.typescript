/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { BatchManagementContext } from "./batchManagementContext";

class BatchManagement extends BatchManagementContext {
  /**
   * Initializes a new instance of the BatchManagement class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The Azure subscription ID. This is a GUID-formatted string (e.g.
   *                       00000000-0000-0000-0000-000000000000)
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.BatchManagementOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.batchAccount = new operations.BatchAccount(this);
    this.applicationPackage = new operations.ApplicationPackage(this);
    this.application = new operations.Application(this);
    this.location = new operations.Location(this);
    this.operations = new operations.Operations(this);
    this.certificate = new operations.Certificate(this);
    this.privateLinkResource = new operations.PrivateLinkResource(this);
    this.privateEndpointConnection = new operations.PrivateEndpointConnection(
      this
    );
    this.pool = new operations.Pool(this);
  }

  batchAccount: operations.BatchAccount;
  applicationPackage: operations.ApplicationPackage;
  application: operations.Application;
  location: operations.Location;
  operations: operations.Operations;
  certificate: operations.Certificate;
  privateLinkResource: operations.PrivateLinkResource;
  privateEndpointConnection: operations.PrivateEndpointConnection;
  pool: operations.Pool;
}

// Operation Specifications

export {
  BatchManagement,
  BatchManagementContext,
  Models as BatchManagementModels,
  Mappers as BatchManagementMappers
};
export * from "./operations";
