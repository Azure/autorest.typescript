/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Data Lake Analytics account list information.
 */
export interface DataLakeAnalyticsAccountListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: DataLakeAnalyticsAccountBasic[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The resource model definition.
 */
export interface Resource {
  /**
   * The resource identifer.
   */
  readonly id?: string;
  /**
   * The resource name.
   */
  readonly name?: string;
  /**
   * The resource type.
   */
  readonly type?: string;
  /**
   * The resource location.
   */
  readonly location?: string;
  /**
   * The resource tags.
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
 */
export type DataLakeAnalyticsAccountBasic = Resource & {
  /**
   * The unique identifier associated with this Data Lake Analytics account.
   */
  readonly accountId?: string;
  /**
   * The provisioning status of the Data Lake Analytics account.
   */
  readonly provisioningState?: DataLakeAnalyticsAccountStatus;
  /**
   * The state of the Data Lake Analytics account.
   */
  readonly state?: DataLakeAnalyticsAccountState;
  /**
   * The account creation time.
   */
  readonly creationTime?: Date;
  /**
   * The account last modified time.
   */
  readonly lastModifiedTime?: Date;
  /**
   * The full CName endpoint for this account.
   */
  readonly endpoint?: string;
};

/**
 * The basic account specific properties that are associated with an underlying Data Lake Analytics account.
 */
export interface DataLakeAnalyticsAccountPropertiesBasic {
  /**
   * The unique identifier associated with this Data Lake Analytics account.
   */
  readonly accountId?: string;
  /**
   * The provisioning status of the Data Lake Analytics account.
   */
  readonly provisioningState?: DataLakeAnalyticsAccountStatus;
  /**
   * The state of the Data Lake Analytics account.
   */
  readonly state?: DataLakeAnalyticsAccountState;
  /**
   * The account creation time.
   */
  readonly creationTime?: Date;
  /**
   * The account last modified time.
   */
  readonly lastModifiedTime?: Date;
  /**
   * The full CName endpoint for this account.
   */
  readonly endpoint?: string;
}

/**
 * The parameters to use for creating a Data Lake Analytics account.
 */
export interface CreateDataLakeAnalyticsAccountParameters {
  /**
   * The resource location.
   */
  location: string;
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The default Data Lake Store account associated with this account.
   */
  defaultDataLakeStoreAccount: string;
  /**
   * The list of Data Lake Store accounts associated with this account.
   */
  dataLakeStoreAccounts: AddDataLakeStoreWithAccountParameters[];
  /**
   * The list of Azure Blob Storage accounts associated with this account.
   */
  storageAccounts?: AddStorageAccountWithAccountParameters[];
  /**
   * The list of compute policies associated with this account.
   */
  computePolicies?: CreateComputePolicyWithAccountParameters[];
  /**
   * The list of firewall rules associated with this account.
   */
  firewallRules?: CreateFirewallRuleWithAccountParameters[];
  /**
   * The current state of the IP address firewall for this account.
   */
  firewallState?: FirewallState;
  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   */
  firewallAllowAzureIps?: FirewallAllowAzureIpsState;
  /**
   * The commitment tier for the next month.
   */
  newTier?: TierType;
  /**
   * The maximum supported jobs running under the account at the same time.
   */
  maxJobCount?: number;
  /**
   * The maximum supported degree of parallelism for this account.
   */
  maxDegreeOfParallelism?: number;
  /**
   * The maximum supported degree of parallelism per job for this account.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum supported priority per job for this account.
   */
  minPriorityPerJob?: number;
  /**
   * The number of days that job metadata is retained.
   */
  queryStoreRetention?: number;
}

/**
 * The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
 */
export interface AddDataLakeStoreWithAccountParameters {
  /**
   * The unique name of the Data Lake Store account to add.
   */
  name: string;
  /**
   * The optional suffix for the Data Lake Store account.
   */
  suffix?: string;
}

/**
 * The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
 */
export interface AddStorageAccountWithAccountParameters {
  /**
   * The unique name of the Azure Storage account to add.
   */
  name: string;
  /**
   * The access key associated with this Azure Storage account that will be used to connect to it.
   */
  accessKey: string;
  /**
   * The optional suffix for the storage account.
   */
  suffix?: string;
}

/**
 * The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
 */
export interface CreateComputePolicyWithAccountParameters {
  /**
   * The unique name of the compute policy to create.
   */
  name: string;
  /**
   * The AAD object identifier for the entity to create a policy for.
   */
  objectId: string;
  /**
   * The type of AAD object the object identifier refers to.
   */
  objectType: AADObjectType;
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
   */
  minPriorityPerJob?: number;
}

/**
 * The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
 */
export interface CreateFirewallRuleWithAccountParameters {
  /**
   * The unique name of the firewall rule to create.
   */
  name: string;
  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  startIpAddress: string;
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  endIpAddress: string;
}

/**
 * A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
 */
export type DataLakeAnalyticsAccount = Resource & {
  /**
   * The unique identifier associated with this Data Lake Analytics account.
   */
  readonly accountId?: string;
  /**
   * The provisioning status of the Data Lake Analytics account.
   */
  readonly provisioningState?: DataLakeAnalyticsAccountStatus;
  /**
   * The state of the Data Lake Analytics account.
   */
  readonly state?: DataLakeAnalyticsAccountState;
  /**
   * The account creation time.
   */
  readonly creationTime?: Date;
  /**
   * The account last modified time.
   */
  readonly lastModifiedTime?: Date;
  /**
   * The full CName endpoint for this account.
   */
  readonly endpoint?: string;
  /**
   * The default Data Lake Store account associated with this account.
   */
  readonly defaultDataLakeStoreAccount?: string;
  /**
   * The list of Data Lake Store accounts associated with this account.
   */
  readonly dataLakeStoreAccounts?: DataLakeStoreAccountInformation[];
  /**
   * The list of Azure Blob Storage accounts associated with this account.
   */
  readonly storageAccounts?: StorageAccountInformation[];
  /**
   * The list of compute policies associated with this account.
   */
  readonly computePolicies?: ComputePolicy[];
  /**
   * The list of firewall rules associated with this account.
   */
  readonly firewallRules?: FirewallRule[];
  /**
   * The current state of the IP address firewall for this account.
   */
  readonly firewallState?: FirewallState;
  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   */
  readonly firewallAllowAzureIps?: FirewallAllowAzureIpsState;
  /**
   * The commitment tier for the next month.
   */
  readonly newTier?: TierType;
  /**
   * The commitment tier in use for the current month.
   */
  readonly currentTier?: TierType;
  /**
   * The maximum supported jobs running under the account at the same time.
   */
  readonly maxJobCount?: number;
  /**
   * The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
   */
  readonly systemMaxJobCount?: number;
  /**
   * The maximum supported degree of parallelism for this account.
   */
  readonly maxDegreeOfParallelism?: number;
  /**
   * The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
   */
  readonly systemMaxDegreeOfParallelism?: number;
  /**
   * The maximum supported degree of parallelism per job for this account.
   */
  readonly maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum supported priority per job for this account.
   */
  readonly minPriorityPerJob?: number;
  /**
   * The number of days that job metadata is retained.
   */
  readonly queryStoreRetention?: number;
};

/**
 * The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account.
 */
export type DataLakeAnalyticsAccountProperties = DataLakeAnalyticsAccountPropertiesBasic & {
  /**
   * The default Data Lake Store account associated with this account.
   */
  readonly defaultDataLakeStoreAccount?: string;
  /**
   * The list of Data Lake Store accounts associated with this account.
   */
  readonly dataLakeStoreAccounts?: DataLakeStoreAccountInformation[];
  /**
   * The list of Azure Blob Storage accounts associated with this account.
   */
  readonly storageAccounts?: StorageAccountInformation[];
  /**
   * The list of compute policies associated with this account.
   */
  readonly computePolicies?: ComputePolicy[];
  /**
   * The list of firewall rules associated with this account.
   */
  readonly firewallRules?: FirewallRule[];
  /**
   * The current state of the IP address firewall for this account.
   */
  readonly firewallState?: FirewallState;
  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   */
  readonly firewallAllowAzureIps?: FirewallAllowAzureIpsState;
  /**
   * The commitment tier for the next month.
   */
  readonly newTier?: TierType;
  /**
   * The commitment tier in use for the current month.
   */
  readonly currentTier?: TierType;
  /**
   * The maximum supported jobs running under the account at the same time.
   */
  readonly maxJobCount?: number;
  /**
   * The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
   */
  readonly systemMaxJobCount?: number;
  /**
   * The maximum supported degree of parallelism for this account.
   */
  readonly maxDegreeOfParallelism?: number;
  /**
   * The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
   */
  readonly systemMaxDegreeOfParallelism?: number;
  /**
   * The maximum supported degree of parallelism per job for this account.
   */
  readonly maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum supported priority per job for this account.
   */
  readonly minPriorityPerJob?: number;
  /**
   * The number of days that job metadata is retained.
   */
  readonly queryStoreRetention?: number;
};

/**
 * The resource model definition for a nested resource.
 */
export interface SubResource {
  /**
   * The resource identifier.
   */
  readonly id?: string;
  /**
   * The resource name.
   */
  readonly name?: string;
  /**
   * The resource type.
   */
  readonly type?: string;
}

/**
 * Data Lake Store account information.
 */
export type DataLakeStoreAccountInformation = SubResource & {
  /**
   * The optional suffix for the Data Lake Store account.
   */
  readonly suffix?: string;
};

/**
 * Azure Storage account information.
 */
export type StorageAccountInformation = SubResource & {
  /**
   * The optional suffix for the storage account.
   */
  readonly suffix?: string;
};

/**
 * Data Lake Analytics compute policy information.
 */
export type ComputePolicy = SubResource & {
  /**
   * The AAD object identifier for the entity to create a policy for.
   */
  readonly objectId?: string;
  /**
   * The type of AAD object the object identifier refers to.
   */
  readonly objectType?: AADObjectType;
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs.
   */
  readonly maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum priority per job this user can use to submit jobs.
   */
  readonly minPriorityPerJob?: number;
};

/**
 * Data Lake Analytics firewall rule information.
 */
export type FirewallRule = SubResource & {
  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  readonly startIpAddress?: string;
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  readonly endIpAddress?: string;
};

/**
 * The parameters that can be used to update an existing Data Lake Analytics account.
 */
export interface UpdateDataLakeAnalyticsAccountParameters {
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The list of Data Lake Store accounts associated with this account.
   */
  dataLakeStoreAccounts?: UpdateDataLakeStoreWithAccountParameters[];
  /**
   * The list of Azure Blob storage accounts associated with this account.
   */
  storageAccounts?: UpdateStorageAccountWithAccountParameters[];
  /**
   * The list of compute policies associated with this account.
   */
  computePolicies?: UpdateComputePolicyWithAccountParameters[];
  /**
   * The list of firewall rules associated with this account.
   */
  firewallRules?: UpdateFirewallRuleWithAccountParameters[];
  /**
   * The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.
   */
  firewallState?: FirewallState;
  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   */
  firewallAllowAzureIps?: FirewallAllowAzureIpsState;
  /**
   * The commitment tier to use for next month.
   */
  newTier?: TierType;
  /**
   * The maximum supported jobs running under the account at the same time.
   */
  maxJobCount?: number;
  /**
   * The maximum supported degree of parallelism for this account.
   */
  maxDegreeOfParallelism?: number;
  /**
   * The maximum supported degree of parallelism per job for this account.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum supported priority per job for this account.
   */
  minPriorityPerJob?: number;
  /**
   * The number of days that job metadata is retained.
   */
  queryStoreRetention?: number;
}

/**
 * The parameters used to update a Data Lake Store account while updating a Data Lake Analytics account.
 */
export interface UpdateDataLakeStoreWithAccountParameters {
  /**
   * The unique name of the Data Lake Store account to update.
   */
  name: string;
  /**
   * The optional suffix for the Data Lake Store account.
   */
  suffix?: string;
}

/**
 * The parameters used to update an Azure Storage account while updating a Data Lake Analytics account.
 */
export interface UpdateStorageAccountWithAccountParameters {
  /**
   * The unique name of the Azure Storage account to update.
   */
  name: string;
  /**
   * The updated access key associated with this Azure Storage account that will be used to connect to it.
   */
  accessKey?: string;
  /**
   * The optional suffix for the storage account.
   */
  suffix?: string;
}

/**
 * The parameters used to update a compute policy while updating a Data Lake Analytics account.
 */
export interface UpdateComputePolicyWithAccountParameters {
  /**
   * The unique name of the compute policy to update.
   */
  name: string;
  /**
   * The AAD object identifier for the entity to create a policy for.
   */
  objectId?: string;
  /**
   * The type of AAD object the object identifier refers to.
   */
  objectType?: AADObjectType;
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
   */
  minPriorityPerJob?: number;
}

/**
 * The parameters used to update a firewall rule while updating a Data Lake Analytics account.
 */
export interface UpdateFirewallRuleWithAccountParameters {
  /**
   * The unique name of the firewall rule to update.
   */
  name: string;
  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  startIpAddress?: string;
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  endIpAddress?: string;
}

/**
 * Data Lake Store account list information.
 */
export interface DataLakeStoreAccountInformationListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: DataLakeStoreAccountInformation[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The parameters used to add a new Data Lake Store account.
 */
export interface AddDataLakeStoreParameters {
  /**
   * The optional suffix for the Data Lake Store account.
   */
  suffix?: string;
}

/**
 * Azure Storage account list information.
 */
export interface StorageAccountInformationListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: StorageAccountInformation[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The parameters used to add a new Azure Storage account.
 */
export interface AddStorageAccountParameters {
  /**
   * The access key associated with this Azure Storage account that will be used to connect to it.
   */
  accessKey: string;
  /**
   * The optional suffix for the storage account.
   */
  suffix?: string;
}

/**
 * The parameters used to update an Azure Storage account.
 */
export interface UpdateStorageAccountParameters {
  /**
   * The updated access key associated with this Azure Storage account that will be used to connect to it.
   */
  accessKey?: string;
  /**
   * The optional suffix for the storage account.
   */
  suffix?: string;
}

/**
 * The list of blob containers associated with the storage account attached to the Data Lake Analytics account.
 */
export interface StorageContainerListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: StorageContainer[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Azure Storage blob container information.
 */
export type StorageContainer = SubResource & {
  /**
   * The last modified time of the blob container.
   */
  readonly lastModifiedTime?: Date;
};

/**
 * The SAS response that contains the storage account, container and associated SAS token for connection use.
 */
export interface SasTokenInformationListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: SasTokenInformation[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * SAS token information.
 */
export interface SasTokenInformation {
  /**
   * The access token for the associated Azure Storage Container.
   */
  readonly accessToken?: string;
}

/**
 * The list of compute policies in the account.
 */
export interface ComputePolicyListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: ComputePolicy[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The parameters used to create a new compute policy.
 */
export interface CreateOrUpdateComputePolicyParameters {
  /**
   * The AAD object identifier for the entity to create a policy for.
   */
  objectId: string;
  /**
   * The type of AAD object the object identifier refers to.
   */
  objectType: AADObjectType;
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
   */
  minPriorityPerJob?: number;
}

/**
 * The parameters used to update a compute policy.
 */
export interface UpdateComputePolicyParameters {
  /**
   * The AAD object identifier for the entity to create a policy for.
   */
  objectId?: string;
  /**
   * The type of AAD object the object identifier refers to.
   */
  objectType?: AADObjectType;
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
   */
  maxDegreeOfParallelismPerJob?: number;
  /**
   * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
   */
  minPriorityPerJob?: number;
}

/**
 * Data Lake Analytics firewall rule list information.
 */
export interface FirewallRuleListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: FirewallRule[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The parameters used to create a new firewall rule.
 */
export interface CreateOrUpdateFirewallRuleParameters {
  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  startIpAddress: string;
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  endIpAddress: string;
}

/**
 * The parameters used to update a firewall rule.
 */
export interface UpdateFirewallRuleParameters {
  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  startIpAddress?: string;
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   */
  endIpAddress?: string;
}

/**
 * The list of available operations for Data Lake Analytics.
 */
export interface OperationListResult {
  /**
   * The results of the list operation.
   */
  readonly value?: Operation[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * An available operation for Data Lake Analytics.
 */
export interface Operation {
  /**
   * The name of the operation.
   */
  readonly name?: string;
  /**
   * The display information for the operation.
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   */
  readonly origin?: OperationOrigin;
}

/**
 * The display information for a particular operation.
 */
export interface OperationDisplay {
  /**
   * The resource provider of the operation.
   */
  readonly provider?: string;
  /**
   * The resource type of the operation.
   */
  readonly resource?: string;
  /**
   * A friendly name of the operation.
   */
  readonly operation?: string;
  /**
   * A friendly description of the operation.
   */
  readonly description?: string;
}

/**
 * Subscription-level properties and limits for Data Lake Analytics.
 */
export interface CapabilityInformation {
  /**
   * The subscription credentials that uniquely identifies the subscription.
   */
  readonly subscriptionId?: string;
  /**
   * The subscription state.
   */
  readonly state?: SubscriptionState;
  /**
   * The maximum supported number of accounts under this subscription.
   */
  readonly maxAccountCount?: number;
  /**
   * The current number of accounts under this subscription.
   */
  readonly accountCount?: number;
  /**
   * The Boolean value of true or false to indicate the maintenance state.
   */
  readonly migrationState?: boolean;
}

/**
 * Data Lake Analytics account name availability check parameters.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The Data Lake Analytics name to check availability for.
   */
  name: string;
  /**
   * The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeAnalytics/accounts
   */
  type: "Microsoft.DataLakeAnalytics/accounts";
}

/**
 * Data Lake Analytics account name availability result information.
 */
export interface NameAvailabilityInformation {
  /**
   * The Boolean value of true or false to indicate whether the Data Lake Analytics account name is available or not.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason why the Data Lake Analytics account name is not available, if nameAvailable is false.
   */
  readonly reason?: string;
  /**
   * The message describing why the Data Lake Analytics account name is not available, if nameAvailable is false.
   */
  readonly message?: string;
}

/**
 * Defines values for AADObjectType.
 */
export type AADObjectType = "User" | "Group" | "ServicePrincipal";
/**
 * Defines values for OperationOrigin.
 */
export type OperationOrigin = "user" | "system" | "user,system";
/**
 * Defines values for SubscriptionState.
 */
export type SubscriptionState =
  | "Registered"
  | "Suspended"
  | "Deleted"
  | "Unregistered"
  | "Warned";
/**
 * Defines values for DataLakeAnalyticsAccountStatus.
 */
export type DataLakeAnalyticsAccountStatus =
  | "Failed"
  | "Creating"
  | "Running"
  | "Succeeded"
  | "Patching"
  | "Suspending"
  | "Resuming"
  | "Deleting"
  | "Deleted"
  | "Undeleting"
  | "Canceled";
/**
 * Defines values for DataLakeAnalyticsAccountState.
 */
export type DataLakeAnalyticsAccountState = "Active" | "Suspended";
/**
 * Defines values for FirewallState.
 */
export type FirewallState = "Enabled" | "Disabled";
/**
 * Defines values for FirewallAllowAzureIpsState.
 */
export type FirewallAllowAzureIpsState = "Enabled" | "Disabled";
/**
 * Defines values for TierType.
 */
export type TierType =
  | "Consumption"
  | "Commitment_100AUHours"
  | "Commitment_500AUHours"
  | "Commitment_1000AUHours"
  | "Commitment_5000AUHours"
  | "Commitment_10000AUHours"
  | "Commitment_50000AUHours"
  | "Commitment_100000AUHours"
  | "Commitment_500000AUHours";

/**
 * Optional parameters.
 */
export interface AccountsListOptionalParams extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the list operation.
 */
export type AccountsListResponse = DataLakeAnalyticsAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccountListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AccountsListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = DataLakeAnalyticsAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccountListResult;
  };
};

/**
 * Contains response data for the create operation.
 */
export type AccountsCreateResponse = DataLakeAnalyticsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccount;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = DataLakeAnalyticsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccount;
  };
};

/**
 * Optional parameters.
 */
export interface AccountsUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Parameters supplied to the update Data Lake Analytics account operation.
   */
  parameters?: UpdateDataLakeAnalyticsAccountParameters;
}

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = DataLakeAnalyticsAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccount;
  };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type AccountsCheckNameAvailabilityResponse = NameAvailabilityInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: NameAvailabilityInformation;
  };
};

/**
 * Optional parameters.
 */
export interface AccountsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the listNext operation.
 */
export type AccountsListNextResponse = DataLakeAnalyticsAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccountListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AccountsListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = DataLakeAnalyticsAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeAnalyticsAccountListResult;
  };
};

/**
 * Optional parameters.
 */
export interface DataLakeStoreAccountsListByAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the listByAccount operation.
 */
export type DataLakeStoreAccountsListByAccountResponse = DataLakeStoreAccountInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeStoreAccountInformationListResult;
  };
};

/**
 * Optional parameters.
 */
export interface DataLakeStoreAccountsAddOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The details of the Data Lake Store account.
   */
  parameters?: AddDataLakeStoreParameters;
}

/**
 * Contains response data for the get operation.
 */
export type DataLakeStoreAccountsGetResponse = DataLakeStoreAccountInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeStoreAccountInformation;
  };
};

/**
 * Optional parameters.
 */
export interface DataLakeStoreAccountsListByAccountNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * OData filter. Optional.
   */
  filter?: string;
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
}

/**
 * Contains response data for the listByAccountNext operation.
 */
export type DataLakeStoreAccountsListByAccountNextResponse = DataLakeStoreAccountInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DataLakeStoreAccountInformationListResult;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAccountsListByAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
  /**
   * The OData filter. Optional.
   */
  filter?: string;
}

/**
 * Contains response data for the listByAccount operation.
 */
export type StorageAccountsListByAccountResponse = StorageAccountInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccountInformationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageAccountsGetResponse = StorageAccountInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccountInformation;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAccountsUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.
   */
  parameters?: UpdateStorageAccountParameters;
}

/**
 * Contains response data for the listStorageContainers operation.
 */
export type StorageAccountsListStorageContainersResponse = StorageContainerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageContainerListResult;
  };
};

/**
 * Contains response data for the getStorageContainer operation.
 */
export type StorageAccountsGetStorageContainerResponse = StorageContainer & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageContainer;
  };
};

/**
 * Contains response data for the listSasTokens operation.
 */
export type StorageAccountsListSasTokensResponse = SasTokenInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SasTokenInformationListResult;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAccountsListByAccountNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of items to return. Optional.
   */
  top?: number;
  /**
   * The number of items to skip over before returning elements. Optional.
   */
  skip?: number;
  /**
   * OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
   */
  select?: string;
  /**
   * OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
   */
  orderby?: string;
  /**
   * The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
   */
  count?: boolean;
  /**
   * The OData filter. Optional.
   */
  filter?: string;
}

/**
 * Contains response data for the listByAccountNext operation.
 */
export type StorageAccountsListByAccountNextResponse = StorageAccountInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccountInformationListResult;
  };
};

/**
 * Contains response data for the listStorageContainersNext operation.
 */
export type StorageAccountsListStorageContainersNextResponse = StorageContainerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageContainerListResult;
  };
};

/**
 * Contains response data for the listSasTokensNext operation.
 */
export type StorageAccountsListSasTokensNextResponse = SasTokenInformationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SasTokenInformationListResult;
  };
};

/**
 * Contains response data for the listByAccount operation.
 */
export type ComputePoliciesListByAccountResponse = ComputePolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputePolicyListResult;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ComputePoliciesCreateOrUpdateResponse = ComputePolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputePolicy;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ComputePoliciesGetResponse = ComputePolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputePolicy;
  };
};

/**
 * Optional parameters.
 */
export interface ComputePoliciesUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Parameters supplied to update the compute policy.
   */
  parameters?: UpdateComputePolicyParameters;
}

/**
 * Contains response data for the update operation.
 */
export type ComputePoliciesUpdateResponse = ComputePolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputePolicy;
  };
};

/**
 * Contains response data for the listByAccountNext operation.
 */
export type ComputePoliciesListByAccountNextResponse = ComputePolicyListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputePolicyListResult;
  };
};

/**
 * Contains response data for the listByAccount operation.
 */
export type FirewallRulesListByAccountResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: FirewallRuleListResult;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type FirewallRulesCreateOrUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: FirewallRule;
  };
};

/**
 * Contains response data for the get operation.
 */
export type FirewallRulesGetResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: FirewallRule;
  };
};

/**
 * Optional parameters.
 */
export interface FirewallRulesUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Parameters supplied to update the firewall rule.
   */
  parameters?: UpdateFirewallRuleParameters;
}

/**
 * Contains response data for the update operation.
 */
export type FirewallRulesUpdateResponse = FirewallRule & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: FirewallRule;
  };
};

/**
 * Contains response data for the listByAccountNext operation.
 */
export type FirewallRulesListByAccountNextResponse = FirewallRuleListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: FirewallRuleListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the getCapability operation.
 */
export type LocationsGetCapabilityResponse = CapabilityInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CapabilityInformation;
  };
};

/**
 * Optional parameters.
 */
export interface DataLakeAnalyticsAccountManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
