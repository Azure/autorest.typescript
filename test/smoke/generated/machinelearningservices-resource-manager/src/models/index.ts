/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export type ComputeUnion =
  | Compute
  | Aks
  | AmlCompute
  | VirtualMachine
  | HDInsight
  | DataFactory
  | Databricks
  | DataLakeAnalytics;
export type ComputeNodesInformationUnion =
  | ComputeNodesInformation
  | AmlComputeNodesInformation;
export type ComputeSecretsUnion =
  | ComputeSecrets
  | AksComputeSecrets
  | VirtualMachineSecrets
  | DatabricksComputeSecrets;

/**
 * An array of operations supported by the resource provider.
 */
export interface OperationListResult {
  /**
   * List of AML workspace operations supported by the AML workspace resource provider.
   */
  value?: Operation[];
}

/**
 * Azure Machine Learning workspace REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * Display name of operation
 */
export interface OperationDisplay {
  /**
   * The resource provider name: Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * The resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation that users can perform.
   */
  operation?: string;
  /**
   * The description for the operation.
   */
  description?: string;
}

/**
 * Wrapper for error response to follow ARM guidelines.
 */
export interface MachineLearningServiceError {
  /**
   * The error response.
   */
  readonly error?: ErrorResponse;
}

/**
 * Error response information.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  readonly code?: string;
  /**
   * Error message.
   */
  readonly message?: string;
  /**
   * An array of error detail objects.
   */
  readonly details?: ErrorDetail[];
}

/**
 * Error detail information.
 */
export interface ErrorDetail {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface Resource {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   */
  readonly name?: string;
  /**
   * The identity of the resource.
   */
  identity?: Identity;
  /**
   * Specifies the location of the resource.
   */
  location?: string;
  /**
   * Specifies the type of the resource.
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku of the workspace.
   */
  sku?: Sku;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   */
  readonly tenantId?: string;
  /**
   * The identity type.
   */
  type?: "SystemAssigned";
}

/**
 * Sku of the resource
 */
export interface Sku {
  /**
   * Name of the sku
   */
  name?: string;
  /**
   * Tier of the sku like Basic or Enterprise
   */
  tier?: string;
}

/**
 * An object that represents a machine learning workspace.
 */
export type Workspace = Resource & {
  /**
   * The immutable id associated with this workspace.
   */
  readonly workspaceId?: string;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This name in mutable
   */
  friendlyName?: string;
  /**
   * The creation time of the machine learning workspace in ISO8601 format.
   */
  readonly creationTime?: Date;
  /**
   * ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
   */
  keyVault?: string;
  /**
   * ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
   */
  applicationInsights?: string;
  /**
   * ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
   */
  containerRegistry?: string;
  /**
   * ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
   */
  storageAccount?: string;
  /**
   * Url for the discovery service to identify regional endpoints for machine learning experimentation services
   */
  discoveryUrl?: string;
  /**
   * The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The encryption settings of Azure ML workspace.
   */
  encryption?: EncryptionProperty;
  /**
   * The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
   */
  hbiWorkspace?: boolean;
  /**
   * The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
   */
  readonly serviceProvisionedResourceGroup?: string;
  /**
   * Count of private connections in the workspace
   */
  readonly privateLinkCount?: number;
  /**
   * The compute name for image build
   */
  imageBuildCompute?: string;
  /**
   * The flag to indicate whether to allow public access when behind VNet.
   */
  allowPublicAccessWhenBehindVnet?: boolean;
  /**
   * The list of private endpoint connections in the workspace.
   */
  readonly privateEndpointConnections?: PrivateEndpointConnection[];
  /**
   * The list of shared private link resources in this workspace.
   */
  sharedPrivateLinkResources?: SharedPrivateLinkResource[];
};

export interface EncryptionProperty {
  /**
   * Indicates whether or not the encryption is enabled for the workspace.
   */
  status: EncryptionStatus;
  /**
   * Customer Key vault properties.
   */
  keyVaultProperties: KeyVaultProperties;
}

export interface KeyVaultProperties {
  /**
   * The ArmId of the keyVault where the customer owned encryption key is present.
   */
  keyVaultArmId: string;
  /**
   * Key vault uri to access the encryption key.
   */
  keyIdentifier: string;
  /**
   * For future use - The client id of the identity which will be used to access key vault.
   */
  identityClientId?: string;
}

/**
 * The Private Endpoint Connection resource.
 */
export type PrivateEndpointConnection = Resource & {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;
  /**
   * A collection of information about the state of the connection between service consumer and provider.
   */
  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;
  /**
   * The provisioning state of the private endpoint connection resource.
   */
  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;
};

/**
 * The Private Endpoint resource.
 */
export interface PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   */
  readonly id?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
   */
  status?: PrivateEndpointServiceConnectionStatus;
  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;
  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

export interface SharedPrivateLinkResource {
  /**
   * Unique name of the private link.
   */
  name?: string;
  /**
   * The resource id that private link links to.
   */
  privateLinkResourceId?: string;
  /**
   * The private link resource group id.
   */
  groupId?: string;
  /**
   * Request message.
   */
  requestMessage?: string;
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
   */
  status?: PrivateEndpointServiceConnectionStatus;
}

/**
 * The parameters for updating a machine learning workspace.
 */
export interface WorkspaceUpdateParameters {
  /**
   * The resource tags for the machine learning workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku of the workspace.
   */
  sku?: Sku;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace.
   */
  friendlyName?: string;
}

/**
 * The List Aml user feature operation response.
 */
export interface ListAmlUserFeatureResult {
  /**
   * The list of AML user facing features.
   */
  readonly value?: AmlUserFeature[];
  /**
   * The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information.
   */
  readonly nextLink?: string;
}

/**
 * Features enabled for a workspace
 */
export interface AmlUserFeature {
  /**
   * Specifies the feature ID
   */
  id?: string;
  /**
   * Specifies the feature name
   */
  displayName?: string;
  /**
   * Describes the feature for user experience
   */
  description?: string;
}

/**
 * The result of a request to list machine learning workspaces.
 */
export interface WorkspaceListResult {
  /**
   * The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.
   */
  value?: Workspace[];
  /**
   * The URI that can be used to request the next list of machine learning workspaces.
   */
  nextLink?: string;
}

export interface ListWorkspaceKeysResult {
  readonly userStorageKey?: string;
  readonly userStorageResourceId?: string;
  readonly appInsightsInstrumentationKey?: string;
  readonly containerRegistryCredentials?: RegistryListCredentialsResult;
}

export interface RegistryListCredentialsResult {
  readonly location?: string;
  readonly username?: string;
  passwords?: Password[];
}

export interface Password {
  readonly name?: string;
  readonly value?: string;
}

/**
 * The List Usages operation response.
 */
export interface ListUsagesResult {
  /**
   * The list of AML resource usages.
   */
  readonly value?: Usage[];
  /**
   * The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information.
   */
  readonly nextLink?: string;
}

/**
 * Describes AML Resource Usage.
 */
export interface Usage {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the resource type.
   */
  readonly type?: string;
  /**
   * An enum describing the unit of usage measurement.
   */
  readonly unit?: "Count";
  /**
   * The current usage of the resource.
   */
  readonly currentValue?: number;
  /**
   * The maximum permitted usage of the resource.
   */
  readonly limit?: number;
  /**
   * The name of the type of usage.
   */
  readonly name?: UsageName;
}

/**
 * The Usage Names.
 */
export interface UsageName {
  /**
   * The name of the resource.
   */
  readonly value?: string;
  /**
   * The localized name of the resource.
   */
  readonly localizedValue?: string;
}

/**
 * The List Virtual Machine size operation response.
 */
export interface VirtualMachineSizeListResult {
  /**
   * The list of virtual machine sizes supported by AmlCompute.
   */
  amlCompute?: VirtualMachineSize[];
}

/**
 * Describes the properties of a VM size.
 */
export interface VirtualMachineSize {
  /**
   * The name of the virtual machine size.
   */
  readonly name?: string;
  /**
   * The family name of the virtual machine size.
   */
  readonly family?: string;
  /**
   * The number of vCPUs supported by the virtual machine size.
   */
  readonly vCPUs?: number;
  /**
   * The number of gPUs supported by the virtual machine size.
   */
  readonly gpus?: number;
  /**
   * The OS VHD disk size, in MB, allowed by the virtual machine size.
   */
  readonly osVhdSizeMB?: number;
  /**
   * The resource volume size, in MB, allowed by the virtual machine size.
   */
  readonly maxResourceVolumeMB?: number;
  /**
   * The amount of memory, in GB, supported by the virtual machine size.
   */
  readonly memoryGB?: number;
  /**
   * Specifies if the virtual machine size supports low priority VMs.
   */
  readonly lowPriorityCapable?: boolean;
  /**
   * Specifies if the virtual machine size supports premium IO.
   */
  readonly premiumIO?: boolean;
}

/**
 * Quota update parameters.
 */
export interface QuotaUpdateParameters {
  /**
   * The list for update quota.
   */
  value?: QuotaBaseProperties[];
}

/**
 * The properties for Quota update or retrieval.
 */
export interface QuotaBaseProperties {
  /**
   * Specifies the resource ID.
   */
  id?: string;
  /**
   * Specifies the resource type.
   */
  type?: string;
  /**
   * The maximum permitted quota of the resource.
   */
  limit?: number;
  /**
   * An enum describing the unit of quota measurement.
   */
  unit?: "Count";
}

/**
 * The result of update workspace quota.
 */
export interface UpdateWorkspaceQuotasResult {
  /**
   * The list of workspace quota update result.
   */
  readonly value?: UpdateWorkspaceQuotas[];
  /**
   * The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.
   */
  readonly nextLink?: string;
}

/**
 * The properties for update Quota response.
 */
export interface UpdateWorkspaceQuotas {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the resource type.
   */
  readonly type?: string;
  /**
   * The maximum permitted quota of the resource.
   */
  limit?: number;
  /**
   * An enum describing the unit of quota measurement.
   */
  readonly unit?: "Count";
  /**
   * Status of update workspace quota.
   */
  status?: Status;
}

/**
 * The List WorkspaceQuotasByVMFamily operation response.
 */
export interface ListWorkspaceQuotas {
  /**
   * The list of Workspace Quotas by VM Family
   */
  readonly value?: ResourceQuota[];
  /**
   * The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.
   */
  readonly nextLink?: string;
}

/**
 * The quota assigned to a resource.
 */
export interface ResourceQuota {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the resource type.
   */
  readonly type?: string;
  /**
   * Name of the resource.
   */
  readonly name?: ResourceName;
  /**
   * The maximum permitted quota of the resource.
   */
  readonly limit?: number;
  /**
   * An enum describing the unit of quota measurement.
   */
  readonly unit?: "Count";
}

/**
 * The Resource Name.
 */
export interface ResourceName {
  /**
   * The name of the resource.
   */
  readonly value?: string;
  /**
   * The localized name of the resource.
   */
  readonly localizedValue?: string;
}

/**
 * Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.
 */
export interface PaginatedComputeResourcesList {
  /**
   * An array of Machine Learning compute objects wrapped in ARM resource envelope.
   */
  value?: ComputeResource[];
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   */
  nextLink?: string;
}

/**
 * Machine Learning compute object wrapped into ARM resource envelope.
 */
export type ComputeResource = Resource & {
  /**
   * Compute properties
   */
  properties?: ComputeUnion;
};

/**
 * Machine Learning compute object.
 */
export interface Compute {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  computeType:
    | "AKS"
    | "AmlCompute"
    | "VirtualMachine"
    | "HDInsight"
    | "DataFactory"
    | "Databricks"
    | "DataLakeAnalytics";
  /**
   * Location for the underlying compute
   */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The description of the Machine Learning compute.
   */
  description?: string;
  /**
   * The date and time when the compute was created.
   */
  readonly createdOn?: Date;
  /**
   * The date and time when the compute was last modified.
   */
  readonly modifiedOn?: Date;
  /**
   * ARM resource id of the underlying compute
   */
  resourceId?: string;
  /**
   * Errors during provisioning
   */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.
   */
  readonly isAttachedCompute?: boolean;
}

/**
 * AmlCompute update parameters.
 */
export interface ClusterUpdateParameters {
  /**
   * Desired scale settings for the amlCompute.
   */
  scaleSettings?: ScaleSettings;
}

/**
 * scale settings for AML Compute
 */
export interface ScaleSettings {
  /**
   * Max number of nodes to use
   */
  maxNodeCount: number;
  /**
   * Min number of nodes to use
   */
  minNodeCount?: number;
  /**
   * Node Idle Time before scaling down amlCompute
   */
  nodeIdleTimeBeforeScaleDown?: string;
}

/**
 * Compute nodes information related to a Machine Learning compute. Might differ for every type of compute.
 */
export interface ComputeNodesInformation {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  computeType: "AmlCompute";
  /**
   * The continuation token.
   */
  readonly nextLink?: string;
}

/**
 * Compute node information related to a AmlCompute.
 */
export type AmlComputeNodesInformation = ComputeNodesInformation & {
  /**
   * The collection of returned AmlCompute nodes details.
   */
  readonly nodes?: AmlComputeNodeInformation[];
};

/**
 * Compute node information related to a AmlCompute.
 */
export interface AmlComputeNodeInformation {
  /**
   * ID of the compute node.
   */
  readonly nodeId?: string;
  /**
   * Private IP address of the compute node.
   */
  readonly privateIpAddress?: string;
  /**
   * Public IP address of the compute node.
   */
  readonly publicIpAddress?: string;
  /**
   * SSH port number of the node.
   */
  readonly port?: number;
  /**
   * State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.
   */
  readonly nodeState?: NodeState;
  /**
   * ID of the Experiment running on the node, if any else null.
   */
  readonly runId?: string;
}

/**
 * Secrets related to a Machine Learning compute. Might differ for every type of compute.
 */
export interface ComputeSecrets {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  computeType: "AKS" | "VirtualMachine" | "Databricks";
}

/**
 * List of skus with features
 */
export interface SkuListResult {
  value?: WorkspaceSku[];
  /**
   * The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the next page of Workspace Skus
   */
  nextLink?: string;
}

/**
 * Describes Workspace Sku details and features
 */
export interface WorkspaceSku {
  /**
   * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   */
  readonly locationInfo?: ResourceSkuLocationInfo[];
  /**
   * Sku Tier like Basic or Enterprise
   */
  readonly tier?: string;
  readonly resourceType?: string;
  readonly name?: string;
  /**
   * List of features/user capabilities associated with the sku
   */
  readonly capabilities?: SKUCapability[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
   */
  restrictions?: Restriction[];
}

export interface ResourceSkuLocationInfo {
  /**
   * Location of the SKU
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   */
  readonly zoneDetails?: ResourceSkuZoneDetails[];
}

/**
 * Describes The zonal capabilities of a SKU.
 */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   */
  readonly capabilities?: SKUCapability[];
}

/**
 * Features/user capabilities associated with the sku
 */
export interface SKUCapability {
  /**
   * Capability/Feature ID
   */
  name?: string;
  /**
   * Details about the feature/capability
   */
  value?: string;
}

/**
 * The restriction because of which SKU cannot be used.
 */
export interface Restriction {
  /**
   * The type of restrictions. As of now only possible value for this is location.
   */
  readonly type?: string;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
   */
  readonly values?: string[];
  /**
   * The reason for the restriction.
   */
  reasonCode?: ReasonCode;
}

/**
 * A list of private link resources
 */
export interface PrivateLinkResourceListResult {
  /**
   * Array of private link resources
   */
  value?: PrivateLinkResource[];
}

/**
 * A private link resource
 */
export type PrivateLinkResource = Resource & {
  /**
   * The private link resource group id.
   */
  readonly groupId?: string;
  /**
   * The private link resource required member names.
   */
  readonly requiredMembers?: string[];
  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
};

/**
 * Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.
 */
export interface ResourceId {
  /**
   * The ID of the resource
   */
  id: string;
}

/**
 * A Machine Learning compute based on AKS.
 */
export type Aks = Compute & {
  /**
   * AKS properties
   */
  properties?: AKSProperties;
};

/**
 * AKS properties
 */
export interface AKSProperties {
  /**
   * Cluster full qualified domain name
   */
  clusterFqdn?: string;
  /**
   * System services
   */
  readonly systemServices?: SystemService[];
  /**
   * Number of agents
   */
  agentCount?: number;
  /**
   * Agent virtual machine size
   */
  agentVMSize?: string;
  /**
   * SSL configuration
   */
  sslConfiguration?: SslConfiguration;
  /**
   * AKS networking configuration for vnet
   */
  aksNetworkingConfiguration?: AksNetworkingConfiguration;
}

/**
 * A system service running on a compute.
 */
export interface SystemService {
  /**
   * The type of this system service.
   */
  readonly systemServiceType?: string;
  /**
   * Public IP address
   */
  readonly publicIpAddress?: string;
  /**
   * The version for this type.
   */
  readonly version?: string;
}

/**
 * The ssl configuration for scoring
 */
export interface SslConfiguration {
  /**
   * Enable or disable ssl for scoring
   */
  status?: SslConfigurationStatus;
  /**
   * Cert data
   */
  cert?: string;
  /**
   * Key data
   */
  key?: string;
  /**
   * CNAME of the cert
   */
  cname?: string;
}

/**
 * Advance configuration for AKS networking
 */
export interface AksNetworkingConfiguration {
  /**
   * Virtual network subnet resource ID the compute nodes belong to
   */
  subnetId?: string;
  /**
   * A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
   */
  serviceCidr?: string;
  /**
   * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
   */
  dnsServiceIP?: string;
  /**
   * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
   */
  dockerBridgeCidr?: string;
}

/**
 * An Azure Machine Learning compute.
 */
export type AmlCompute = Compute & {
  /**
   * AML Compute properties
   */
  properties?: AmlComputeProperties;
};

/**
 * AML Compute properties
 */
export interface AmlComputeProperties {
  /**
   * Virtual Machine Size
   */
  vmSize?: string;
  /**
   * Virtual Machine priority
   */
  vmPriority?: VmPriority;
  /**
   * Scale settings for AML Compute
   */
  scaleSettings?: ScaleSettings;
  /**
   * Credentials for an administrator user account that will be created on each compute node.
   */
  userAccountCredentials?: UserAccountCredentials;
  /**
   * Virtual network subnet resource ID the compute nodes belong to.
   */
  subnet?: ResourceId;
  /**
   * State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.
   */
  remoteLoginPortPublicAccess?: RemoteLoginPortPublicAccess;
  /**
   * Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.
   */
  readonly allocationState?: AllocationState;
  /**
   * The time at which the compute entered its current allocation state.
   */
  readonly allocationStateTransitionTime?: Date;
  /**
   * Collection of errors encountered by various compute nodes during node setup.
   */
  readonly errors?: MachineLearningServiceError[];
  /**
   * The number of compute nodes currently assigned to the compute.
   */
  readonly currentNodeCount?: number;
  /**
   * The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.
   */
  readonly targetNodeCount?: number;
  /**
   * Counts of various node states on the compute.
   */
  readonly nodeStateCounts?: NodeStateCounts;
}

/**
 * Settings for user account that gets created on each on the nodes of a compute.
 */
export interface UserAccountCredentials {
  /**
   * Name of the administrator user account which can be used to SSH to nodes.
   */
  adminUserName: string;
  /**
   * SSH public key of the administrator user account.
   */
  adminUserSshPublicKey?: string;
  /**
   * Password of the administrator user account.
   */
  adminUserPassword?: string;
}

/**
 * Counts of various compute node states on the amlCompute.
 */
export interface NodeStateCounts {
  /**
   * Number of compute nodes in idle state.
   */
  readonly idleNodeCount?: number;
  /**
   * Number of compute nodes which are running jobs.
   */
  readonly runningNodeCount?: number;
  /**
   * Number of compute nodes which are being prepared.
   */
  readonly preparingNodeCount?: number;
  /**
   * Number of compute nodes which are in unusable state.
   */
  readonly unusableNodeCount?: number;
  /**
   * Number of compute nodes which are leaving the amlCompute.
   */
  readonly leavingNodeCount?: number;
  /**
   * Number of compute nodes which are in preempted state.
   */
  readonly preemptedNodeCount?: number;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
 */
export type VirtualMachine = Compute & {
  properties?: VirtualMachineProperties;
};

export interface VirtualMachineProperties {
  /**
   * Virtual Machine size
   */
  virtualMachineSize?: string;
  /**
   * Port open for ssh connections.
   */
  sshPort?: number;
  /**
   * Public IP address of the virtual machine.
   */
  address?: string;
  /**
   * Admin credentials for virtual machine
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * Admin credentials for virtual machine
 */
export interface VirtualMachineSshCredentials {
  /**
   * Username of admin account
   */
  username?: string;
  /**
   * Password of admin account
   */
  password?: string;
  /**
   * Public key data
   */
  publicKeyData?: string;
  /**
   * Private key data
   */
  privateKeyData?: string;
}

/**
 * A HDInsight compute.
 */
export type HDInsight = Compute & {
  properties?: HDInsightProperties;
};

export interface HDInsightProperties {
  /**
   * Port open for ssh connections on the master node of the cluster.
   */
  sshPort?: number;
  /**
   * Public IP address of the master node of the cluster.
   */
  address?: string;
  /**
   * Admin credentials for master node of the cluster
   */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A DataFactory compute.
 */
export type DataFactory = Compute & {};

/**
 * A DataFactory compute.
 */
export type Databricks = Compute & {
  properties?: DatabricksProperties;
};

export interface DatabricksProperties {
  /**
   * Databricks access token
   */
  databricksAccessToken?: string;
}

/**
 * A DataLakeAnalytics compute.
 */
export type DataLakeAnalytics = Compute & {
  properties?: DataLakeAnalyticsProperties;
};

export interface DataLakeAnalyticsProperties {
  /**
   * DataLake Store Account Name
   */
  dataLakeStoreAccountName?: string;
}

/**
 * Service principal credentials.
 */
export interface ServicePrincipalCredentials {
  /**
   * Client Id
   */
  clientId: string;
  /**
   * Client secret
   */
  clientSecret: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
 */
export type AksComputeSecrets = ComputeSecrets & {
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
   */
  userKubeConfig?: string;
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
   */
  adminKubeConfig?: string;
  /**
   * Image registry pull secret.
   */
  imagePullSecretName?: string;
};

/**
 * Secrets related to a Machine Learning compute based on AKS.
 */
export type VirtualMachineSecrets = ComputeSecrets & {
  /**
   * Admin credentials for virtual machine.
   */
  administratorAccount?: VirtualMachineSshCredentials;
};

/**
 * Secrets related to a Machine Learning compute based on Databricks.
 */
export type DatabricksComputeSecrets = ComputeSecrets & {
  /**
   * access token for databricks account.
   */
  databricksAccessToken?: string;
};
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Unknown"
  | "Updating"
  | "Creating"
  | "Deleting"
  | "Succeeded"
  | "Failed"
  | "Canceled";
/**
 * Defines values for EncryptionStatus.
 */
export type EncryptionStatus = "Enabled" | "Disabled";
/**
 * Defines values for PrivateEndpointServiceConnectionStatus.
 */
export type PrivateEndpointServiceConnectionStatus =
  | "Pending"
  | "Approved"
  | "Rejected"
  | "Disconnected"
  | "Timeout";
/**
 * Defines values for PrivateEndpointConnectionProvisioningState.
 */
export type PrivateEndpointConnectionProvisioningState =
  | "Succeeded"
  | "Creating"
  | "Deleting"
  | "Failed";
/**
 * Defines values for Status.
 */
export type Status =
  | "Undefined"
  | "Success"
  | "Failure"
  | "InvalidQuotaBelowClusterMinimum"
  | "InvalidQuotaExceedsSubscriptionLimit"
  | "InvalidVMFamilyName"
  | "OperationNotSupportedForSku"
  | "OperationNotEnabledForRegion";
/**
 * Defines values for ComputeType.
 */
export type ComputeType =
  | "AKS"
  | "AmlCompute"
  | "DataFactory"
  | "VirtualMachine"
  | "HDInsight"
  | "Databricks"
  | "DataLakeAnalytics";
/**
 * Defines values for UnderlyingResourceAction.
 */
export type UnderlyingResourceAction = "Delete" | "Detach";
/**
 * Defines values for NodeState.
 */
export type NodeState =
  | "idle"
  | "running"
  | "preparing"
  | "unusable"
  | "leaving"
  | "preempted";
/**
 * Defines values for ReasonCode.
 */
export type ReasonCode =
  | "NotSpecified"
  | "NotAvailableForRegion"
  | "NotAvailableForSubscription";
/**
 * Defines values for SslConfigurationStatus.
 */
export type SslConfigurationStatus = "Disabled" | "Enabled";
/**
 * Defines values for VmPriority.
 */
export type VmPriority = "Dedicated" | "LowPriority";
/**
 * Defines values for RemoteLoginPortPublicAccess.
 */
export type RemoteLoginPortPublicAccess =
  | "Enabled"
  | "Disabled"
  | "NotSpecified";
/**
 * Defines values for AllocationState.
 */
export type AllocationState = "Steady" | "Resizing";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type WorkspacesGetResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type WorkspacesCreateOrUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspacesUpdateResponse = Workspace & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Workspace;
  };
};

/**
 * Optional parameters.
 */
export interface WorkspacesListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspacesListByResourceGroupResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Contains response data for the listKeys operation.
 */
export type WorkspacesListKeysResponse = ListWorkspaceKeysResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListWorkspaceKeysResult;
  };
};

/**
 * Optional parameters.
 */
export interface WorkspacesListBySubscriptionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkspacesListBySubscriptionResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Optional parameters.
 */
export interface WorkspacesListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type WorkspacesListByResourceGroupNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Optional parameters.
 */
export interface WorkspacesListBySubscriptionNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type WorkspacesListBySubscriptionNextResponse = WorkspaceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: WorkspaceListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspaceFeaturesListResponse = ListAmlUserFeatureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListAmlUserFeatureResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type WorkspaceFeaturesListNextResponse = ListAmlUserFeatureResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListAmlUserFeatureResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListUsagesResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = ListUsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListUsagesResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineSizesListResponse = VirtualMachineSizeListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineSizeListResult;
  };
};

/**
 * Contains response data for the update operation.
 */
export type QuotasUpdateResponse = UpdateWorkspaceQuotasResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UpdateWorkspaceQuotasResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type QuotasListResponse = ListWorkspaceQuotas & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListWorkspaceQuotas;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type QuotasListNextResponse = ListWorkspaceQuotas & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ListWorkspaceQuotas;
  };
};

/**
 * Optional parameters.
 */
export interface MachineLearningComputeListByWorkspaceOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByWorkspace operation.
 */
export type MachineLearningComputeListByWorkspaceResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedComputeResourcesList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type MachineLearningComputeGetResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputeResource;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type MachineLearningComputeCreateOrUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputeResource;
  };
};

/**
 * Contains response data for the update operation.
 */
export type MachineLearningComputeUpdateResponse = ComputeResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputeResource;
  };
};

/**
 * Contains response data for the listNodes operation.
 */
export type MachineLearningComputeListNodesResponse = AmlComputeNodesInformation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AmlComputeNodesInformation;
  };
};

/**
 * Contains response data for the listKeys operation.
 */
export type MachineLearningComputeListKeysResponse = ComputeSecretsUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ComputeSecretsUnion;
  };
};

/**
 * Optional parameters.
 */
export interface MachineLearningComputeListByWorkspaceNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByWorkspaceNext operation.
 */
export type MachineLearningComputeListByWorkspaceNextResponse = PaginatedComputeResourcesList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedComputeResourcesList;
  };
};

/**
 * Contains response data for the listSkus operation.
 */
export type AzureMachineLearningWorkspacesListSkusResponse = SkuListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SkuListResult;
  };
};

/**
 * Contains response data for the listSkusNext operation.
 */
export type AzureMachineLearningWorkspacesListSkusNextResponse = SkuListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SkuListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateEndpointConnection;
  };
};

/**
 * Contains response data for the put operation.
 */
export type PrivateEndpointConnectionsPutResponse = PrivateEndpointConnection & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateEndpointConnection;
  };
};

/**
 * Contains response data for the listByWorkspace operation.
 */
export type PrivateLinkResourcesListByWorkspaceResponse = PrivateLinkResourceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateLinkResourceListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AzureMachineLearningWorkspacesOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
