/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Pageable list of storage accounts.
 */
export interface StorageAccountList {
  /**
   * List of storage accounts.
   */
  readonly value?: StorageAccount[];
  /**
   * URI to the next page.
   */
  readonly odataNextLink?: string;
}

/**
 * Base resource object.
 */
export interface Resource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource Name.
   */
  readonly name?: string;
  /**
   * Resource Type.
   */
  readonly type?: string;
  /**
   * Resource Location.
   */
  readonly location?: string;
}

/**
 * Properties of the storage account.
 */
export type StorageAccount = Resource & {
  /**
   * Indicates the type of storage account
   */
  readonly kind?: StorageAccountKind;
  /**
   * Resource tags.
   */
  readonly tags?: { [propertyName: string]: string };
  /**
   * Resource URI of storage account from tenant view.
   */
  readonly tenantViewId?: string;
  /**
   * Storage account type.
   */
  readonly accountType?: StorageAccountType;
  /**
   * The provisioning state of storage account.
   */
  readonly provisioningState?: StorageAccountState;
  /**
   * The URLs that are used to perform a retrieval of a public BLOB, queue, or table object.
   */
  readonly primaryEndpoints?: { [propertyName: string]: string };
  /**
   * The creation date and time of storage account in UTC.
   */
  readonly creationTime?: string;
  /**
   * The primary location for the storage account.
   */
  readonly primaryLocation?: string;
  /**
   * The fault domain for the storage account.
   */
  readonly faultDomain?: string;
  /**
   * The status of primary location of storage account.
   */
  readonly statusOfPrimary?: LocationStatus;
  /**
   * Subscription ID of the subscription under which the storage account locates.
   */
  readonly tenantSubscriptionId?: string;
  /**
   * Storage account name from tenant view.
   */
  readonly tenantStorageAccountName?: string;
  /**
   * The name of resource group under which the storage account locates.
   */
  readonly tenantResourceGroupName?: string;
  /**
   * The date-time when the storage account was deleted.
   */
  readonly deletedTime?: Date;
  /**
   * The status of storage account.
   */
  accountStatus?: StorageAccountStatus;
  /**
   * Internal storage account ID, which is not visible to tenant.
   */
  readonly accountId?: string;
  /**
   * The storage encryption setting
   */
  readonly encryption?: StorageEncryption;
  /**
   * Storage account supports https traffic only or not
   */
  readonly supportsHttpsTrafficOnly?: boolean;
  /**
   * Required for storage accounts where kind = BlobStorage.
   */
  readonly accessTier?: StorageAccountAccessTier;
  /**
   * The internal health state for storage account.
   */
  readonly healthState?: StorageAccountHealthState;
};

/**
 * Storage encryption setting
 */
export interface StorageEncryption {
  /**
   * Services for which encryption setting is mentioned
   */
  readonly services?: StorageEncryptionServices;
  /**
   * Encryption keySource
   */
  readonly keySource?: "Microsoft.Storage";
}

/**
 * Services for which encryption setting is mentioned.
 */
export interface StorageEncryptionServices {
  /**
   * Blob service.
   */
  readonly blob?: StorageEncryptionSetting;
  /**
   * Table service.
   */
  readonly table?: StorageEncryptionSetting;
  /**
   * Queue service
   */
  readonly queue?: StorageEncryptionSetting;
}

/**
 * Storage Encryption setting
 */
export interface StorageEncryptionSetting {
  /**
   * Bool to indicate whether enabled or not.
   */
  readonly enabled?: boolean;
  /**
   * A rough estimate of the date/time when the encryption was last enabled by the user.
   */
  readonly lastEnabledTime?: string;
}

/**
 * The error response for request which failed.
 */
export interface ErrorResponse {
  /**
   * The error description code.
   */
  readonly code?: string;
  /**
   * The error description message.
   */
  readonly message?: string;
  /**
   * The error target description.
   */
  readonly target?: string;
  /**
   * The error details information.
   */
  readonly details?: string[];
}

/**
 * Undelete storage account information.
 */
export interface UndeleteStorageAccount {
  /**
   * The internal wac id for storage account.
   */
  readonly accountId?: string;
  /**
   * The new account name for the restored account if defined.
   */
  readonly newAccountName?: string;
}

/**
 * Storage quota.
 */
export type StorageQuota = Resource & {
  /**
   * Total number of storage accounts.
   */
  numberOfStorageAccounts?: number;
  /**
   * Maximum capacity (GB).
   */
  capacityInGb?: number;
};

/**
 * Pageable list of storage quotas.
 */
export interface StorageQuotaList {
  /**
   * List of storage quotas.
   */
  value?: StorageQuota[];
}

/**
 * Storage resource provider settings
 */
export type Settings = Resource & {
  /**
   * The number of days a deleted storage account is kept before being permanently deleted.
   */
  retentionPeriodForDeletedStorageAccountsInDays?: number;
};

/**
 * Pageable list of supported operations.
 */
export interface OperationList {
  /**
   * List of operations
   */
  value?: Operation[];
}

/**
 * Describes the supported REST operation.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   */
  readonly display?: Display;
}

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface Display {
  /**
   * The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation, as it should be shown to the user.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.
   */
  readonly description?: string;
}

/**
 * The async operation body for srp request.
 */
export interface AsyncOperationModel {
  /**
   * The operation id.
   */
  readonly id?: string;
  /**
   * Operation start time.
   */
  readonly operationStartTime?: string;
  /**
   * Operation end time.
   */
  readonly operationEndTime?: string;
  /**
   * Subscription id for async operation.
   */
  readonly subscriptionId?: string;
  /**
   * Location header for async operation.
   */
  readonly locationHeader?: string;
  /**
   * Http status for the async operation.
   */
  readonly httpStatus?: string;
  /**
   * Response for the async operation.
   */
  readonly response?: string;
  /**
   * Async operation name
   */
  readonly name?: string;
  /**
   * Operation api version.
   */
  readonly apiVersion?: string;
  /**
   * Activity id for the operation.
   */
  readonly activityId?: string;
  /**
   * Async operation name.
   */
  readonly operationName?: string;
  /**
   * Async operation error code if operation failed.
   */
  readonly errorCode?: string;
  /**
   * Runtime exception if operation failed.
   */
  readonly runtimeException?: string;
  /**
   * Start time for the operation.
   */
  readonly startTime?: string;
}

/**
 * MDM storage service resource.
 */
export type StorageService = Resource & {
  /**
   * Service Name for Storage Service.
   */
  readonly serviceName?: string;
};

/**
 * The list of page BLOB acquisitions.
 */
export interface AcquisitionList {
  /**
   * List of acquisitions.
   */
  readonly value?: Acquisition[];
}

/**
 * The acquisition of the page BLOB.
 */
export interface Acquisition {
  /**
   * ID of the subscription associated with the page BLOB.
   */
  readonly susbcriptionid?: string;
  /**
   * The storage account that holds the page BLOB.
   */
  readonly storageaccount?: string;
  /**
   * The container associated with the page BLOB.
   */
  readonly container?: string;
  /**
   * The name of the page BLOB.
   */
  readonly blob?: string;
  /**
   * The ID of page BLOB acquisition.
   */
  readonly acquisitionid?: string;
  /**
   * The file path of the page BLOB file on storage cluster.
   */
  readonly filePath?: string;
  /**
   * The file path unc of the page BLOB file on storage cluster.
   */
  readonly filePathUnc?: string;
  /**
   * The maximum size of the page BLOB.
   */
  readonly maximumblobsize?: number;
  /**
   * The status of the page BLOB acquisition.
   */
  readonly status?: AcquisitionStatus;
}

/**
 * Defines values for StorageAccountType.
 */
export type StorageAccountType =
  | "Standard_LRS"
  | "Standard_GRS"
  | "Standard_ZRS"
  | "Standard_RAGRS"
  | "Premium_LRS";
/**
 * Defines values for StorageAccountState.
 */
export type StorageAccountState = "Creating" | "Succeeded";
/**
 * Defines values for LocationStatus.
 */
export type LocationStatus = "Available" | "Unavailable";
/**
 * Defines values for StorageAccountStatus.
 */
export type StorageAccountStatus = "Active" | "Deleted";
/**
 * Defines values for StorageAccountAccessTier.
 */
export type StorageAccountAccessTier = "Hot" | "Cool";
/**
 * Defines values for StorageAccountHealthState.
 */
export type StorageAccountHealthState =
  | "Healthy"
  | "Suspended"
  | "OverQuota"
  | "SuspendedAndOverQuota";
/**
 * Defines values for StorageAccountKind.
 */
export type StorageAccountKind = "Storage" | "StorageV2" | "BlobStorage";
/**
 * Defines values for AcquisitionStatus.
 */
export type AcquisitionStatus =
  | "Unknown"
  | "NotAcquired"
  | "Pending"
  | "Success"
  | "Failed";

/**
 * Optional parameters.
 */
export interface StorageAccountsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Filter string
   */
  filter?: string;
  /**
   * Switch for whether summary or detailed information is returned.
   */
  summary?: boolean;
}

/**
 * Contains response data for the list operation.
 */
export type StorageAccountsListResponse = StorageAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccountList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageAccountsGetResponse = StorageAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccount;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAccountsUndeleteOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * New storage account name when doing undelete storage account operation.
   */
  newAccountName?: string;
}

/**
 * Contains response data for the undelete operation.
 */
export type StorageAccountsUndeleteResponse = UndeleteStorageAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UndeleteStorageAccount;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAccountsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Filter string
   */
  filter?: string;
  /**
   * Switch for whether summary or detailed information is returned.
   */
  summary?: boolean;
}

/**
 * Contains response data for the listNext operation.
 */
export type StorageAccountsListNextResponse = StorageAccountList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageAccountList;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type StorageQuotasCreateOrUpdateResponse = StorageQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageQuota;
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageQuotasGetResponse = StorageQuota & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageQuota;
  };
};

/**
 * Contains response data for the list operation.
 */
export type StorageQuotasListResponse = StorageQuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageQuotaList;
  };
};

/**
 * Contains response data for the update operation.
 */
export type StorageSettingsUpdateResponse = Settings & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Settings;
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageSettingsGetResponse = Settings & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Settings;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AsyncOperationsGetResponse = AsyncOperationModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AsyncOperationModel;
  };
};

/**
 * Contains response data for the listRG operation.
 */
export type StorageServicesListRGResponse = StorageService[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageService[];
  };
};

/**
 * Contains response data for the listSub operation.
 */
export type StorageServicesListSubResponse = StorageService[] & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageService[];
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageServicesGetResponse = StorageService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageService;
  };
};

/**
 * Contains response data for the create operation.
 */
export type StorageServicesCreateResponse = StorageService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageService;
  };
};

/**
 * Contains response data for the list operation.
 */
export type AcquisitionsListResponse = AcquisitionList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AcquisitionList;
  };
};

/**
 * Optional parameters.
 */
export interface StorageAdminClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
