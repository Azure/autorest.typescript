/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * List of Operations
 */
export interface OperationList {
  /**
   * Array of operations
   */
  readonly value?: Operation[];
  /**
   * URI to the next page of operations.
   */
  readonly nextLink?: string;
}

/**
 * Describes the supported REST operation.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object. This name should match the name that appears in RBAC or the event service.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   */
  readonly display?: Display;
}

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface Display {
  /**
   * The localized friendly form of the resource provider name â€“ it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
   */
  readonly provider?: string;
  /**
   * The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
   */
  readonly resource?: string;
  /**
   * The localized, friendly name for the operation. Use the name as it will displayed to the user.
   */
  readonly operation?: string;
  /**
   * The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
   */
  readonly description?: string;
}

/**
 * Holds an array of downloaded products and the URI to the next page.
 */
export interface DownloadedProductResourcesPage {
  /**
   * Array of downloaded products.
   */
  value?: DownloadedProductResource[];
  /**
   * URI to next page.
   */
  nextLink?: string;
}

/**
 * Base Resource Object
 */
export interface Resource {
  /**
   * URI of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of resource.
   */
  readonly type?: string;
  /**
   * Location of the resource
   */
  readonly location?: string;
  /**
   * List of key value pairs.
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * Downloaded product resource.
 */
export type DownloadedProductResource = Resource & {
  /**
   * Name displayed for the product.
   */
  displayName?: string;
  /**
   * Description of the product.
   */
  description?: string;
  /**
   * Name of publisher.
   */
  publisherDisplayName?: string;
  /**
   * Publisher identifier.
   */
  publisherIdentifier?: string;
  /**
   * Offer name.
   */
  offer?: string;
  /**
   * Offer version.
   */
  offerVersion?: string;
  /**
   * Product SKU.
   */
  sku?: string;
  /**
   * Billing part number.
   */
  billingPartNumber?: string;
  /**
   * Gallery item identity.
   */
  galleryItemIdentity?: string;
  /**
   * Information about gallery icons.
   */
  iconUris?: GalleryIcons;
  /**
   * Size in bytes.
   */
  payloadLength?: number;
  /**
   * The kind. E.g. VirtualMachineProductProperties.ProductKind or WebApp, SolutionTemplate.
   */
  productKind?: string;
  /**
   * the product properties. At the moment only VirtualMachineProductProperties is allowed.
   */
  productProperties?: ProductProperties;
  /**
   * Product compatibility with current device.
   */
  compatibility?: Compatibility;
  /**
   * Extension type of the VM.
   */
  vmExtensionType?: string;
  /**
   * Gallery item identity.
   */
  links?: ProductLink[];
  /**
   * Legal terms for the product.
   */
  legalTerms?: string;
  /**
   * Privacy policy of the product.
   */
  privacyPolicy?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
  /**
   * The URI to the .azpkg file that provides information required for showing product in the gallery.
   */
  readonly galleryPackageBlobSasUri?: string;
  /**
   * Specifies kind of compute role included in the package.
   */
  readonly computeRole?: ComputeRole;
  /**
   * Specifies if product is a Virtual Machine Extension.
   */
  readonly isSystemExtension?: boolean;
  /**
   * Indicates if specified product supports multiple extensions.
   */
  readonly supportMultipleExtensions?: boolean;
  /**
   * Specifies product version.
   */
  readonly versionPropertiesProductDetailsPropertiesVersion?: string;
  /**
   * Specifies operating system used by the product.
   */
  readonly vmOsType?: OperatingSystem;
  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   */
  readonly vmScaleSetEnabled?: boolean;
  /**
   * The URI.
   */
  readonly uri?: string;
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * OS disk image used by product.
   */
  readonly osDiskImage?: OsDiskImage;
  /**
   * List of attached data disks.
   */
  readonly dataDiskImages?: DataDiskImage[];
};

/**
 * Base object for all product classes.
 */
export interface ProductBase {
  /**
   * Name displayed for the product.
   */
  displayName?: string;
  /**
   * Description of the product.
   */
  description?: string;
  /**
   * Name of publisher.
   */
  publisherDisplayName?: string;
  /**
   * Publisher identifier.
   */
  publisherIdentifier?: string;
  /**
   * Offer name.
   */
  offer?: string;
  /**
   * Offer version.
   */
  offerVersion?: string;
  /**
   * Product SKU.
   */
  sku?: string;
  /**
   * Billing part number.
   */
  billingPartNumber?: string;
  /**
   * Gallery item identity.
   */
  galleryItemIdentity?: string;
  /**
   * Information about gallery icons.
   */
  iconUris?: GalleryIcons;
  /**
   * Size in bytes.
   */
  payloadLength?: number;
  /**
   * The kind. E.g. VirtualMachineProductProperties.ProductKind or WebApp, SolutionTemplate.
   */
  productKind?: string;
  /**
   * the product properties. At the moment only VirtualMachineProductProperties is allowed.
   */
  productProperties?: ProductProperties;
  /**
   * Product compatibility with current device.
   */
  compatibility?: Compatibility;
}

/**
 * Icons for the gallery items.
 */
export interface GalleryIcons {
  /**
   * The hero (815x290) icon relative path.
   */
  hero?: string;
  /**
   * The large (115x115) icon relative path.
   */
  large?: string;
  /**
   * The wide (255x115) icon relative path.
   */
  wide?: string;
  /**
   * The medium (90x90) icon relative path.
   */
  medium?: string;
  /**
   * The small (40x40) icon relative path.
   */
  small?: string;
}

/**
 * Additional properties of the product
 */
export interface ProductProperties {
  /**
   * The version of the product
   */
  version?: string;
}

/**
 * Product compatibility
 */
export interface Compatibility {
  /**
   * Tells if product is compatible with current device
   */
  isCompatible?: boolean;
  /**
   * Short error message if any compatibility issues are found
   */
  message?: string;
  /**
   * Full error message if any compatibility issues are found
   */
  description?: string;
  /**
   * List of all issues found
   */
  issues?: CompatibilityIssue[];
}

/**
 * Properties for aggregate usage.
 */
export type DownloadedProduct = ProductBase & {
  /**
   * Extension type of the VM.
   */
  vmExtensionType?: string;
  /**
   * Gallery item identity.
   */
  links?: ProductLink[];
  /**
   * Legal terms for the product.
   */
  legalTerms?: string;
  /**
   * Privacy policy of the product.
   */
  privacyPolicy?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
  /**
   * The URI to the .azpkg file that provides information required for showing product in the gallery.
   */
  readonly galleryPackageBlobSasUri?: string;
  /**
   * Specifies kind of compute role included in the package.
   */
  readonly computeRole?: ComputeRole;
  /**
   * Specifies if product is a Virtual Machine Extension.
   */
  readonly isSystemExtension?: boolean;
  /**
   * Indicates if specified product supports multiple extensions.
   */
  readonly supportMultipleExtensions?: boolean;
  /**
   * Specifies product version.
   */
  readonly versionProductDetailsPropertiesVersion?: string;
  /**
   * Specifies operating system used by the product.
   */
  readonly vmOsType?: OperatingSystem;
  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   */
  readonly vmScaleSetEnabled?: boolean;
  /**
   * The URI.
   */
  readonly uri?: string;
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * OS disk image used by product.
   */
  readonly osDiskImage?: OsDiskImage;
  /**
   * List of attached data disks.
   */
  readonly dataDiskImages?: DataDiskImage[];
};

/**
 * Link to a product.
 */
export interface ProductLink {
  /**
   * Displayed name of product.
   */
  displayName?: string;
  /**
   * URI to product.
   */
  uri?: string;
}

/**
 * Product information.
 */
export interface VirtualMachineExtensionProductProperties {
  /**
   * Specifies kind of compute role included in the package.
   */
  readonly computeRole?: ComputeRole;
  /**
   * Specifies if product is a Virtual Machine Extension.
   */
  readonly isSystemExtension?: boolean;
  /**
   * Indicates if specified product supports multiple extensions.
   */
  readonly supportMultipleExtensions?: boolean;
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * Specifies operating system used by the product.
   */
  readonly vmOsType?: OperatingSystem;
  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   */
  readonly vmScaleSetEnabled?: boolean;
  /**
   * The URI.
   */
  readonly uri?: string;
}

/**
 * Product information.
 */
export interface VirtualMachineProductProperties {
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * OS disk image used by product.
   */
  readonly osDiskImage?: OsDiskImage;
  /**
   * List of attached data disks.
   */
  readonly dataDiskImages?: DataDiskImage[];
}

/**
 * OS disk image.
 */
export interface OsDiskImage {
  /**
   * OS operating system type.
   */
  readonly operatingSystem?: OperatingSystem;
  /**
   * SAS key for source blob.
   */
  readonly sourceBlobSasUri?: string;
}

/**
 * Data disk image.
 */
export interface DataDiskImage {
  /**
   * The LUN.
   */
  readonly lun?: number;
  /**
   * SAS key for source blob.
   */
  readonly sourceBlobSasUri?: string;
}

/**
 * Product information.
 */
export type ExtendedProductProperties = VirtualMachineExtensionProductProperties &
  VirtualMachineProductProperties & {};

/**
 * Holds an array of products and the next link.
 */
export interface ProductResourcesPage {
  /**
   * List of products.
   */
  value?: ProductResource[];
  /**
   * URI to the next page.
   */
  nextLink?: string;
}

/**
 * Product resource.
 */
export type ProductResource = Resource & {
  /**
   * Name displayed for the product.
   */
  displayName?: string;
  /**
   * Description of the product.
   */
  description?: string;
  /**
   * Name of publisher.
   */
  publisherDisplayName?: string;
  /**
   * Publisher identifier.
   */
  publisherIdentifier?: string;
  /**
   * Offer name.
   */
  offer?: string;
  /**
   * Offer version.
   */
  offerVersion?: string;
  /**
   * Product SKU.
   */
  sku?: string;
  /**
   * Billing part number.
   */
  billingPartNumber?: string;
  /**
   * Gallery item identity.
   */
  galleryItemIdentity?: string;
  /**
   * Information about gallery icons.
   */
  iconUris?: GalleryIcons;
  /**
   * Size in bytes.
   */
  payloadLength?: number;
  /**
   * The kind. E.g. VirtualMachineProductProperties.ProductKind or WebApp, SolutionTemplate.
   */
  productKind?: string;
  /**
   * the product properties. At the moment only VirtualMachineProductProperties is allowed.
   */
  productProperties?: ProductProperties;
  /**
   * Product compatibility with current device.
   */
  compatibility?: Compatibility;
  /**
   * Extension type of the VM.
   */
  vmExtensionType?: string;
  /**
   * Gallery item identity.
   */
  links?: ProductLink[];
  /**
   * Legal terms for the product.
   */
  legalTerms?: string;
  /**
   * Privacy policy of the product.
   */
  privacyPolicy?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
};

/**
 * Properties for a product.
 */
export type Product = ProductBase & {
  /**
   * Extension type of the VM.
   */
  vmExtensionType?: string;
  /**
   * Gallery item identity.
   */
  links?: ProductLink[];
  /**
   * Legal terms for the product.
   */
  legalTerms?: string;
  /**
   * Privacy policy of the product.
   */
  privacyPolicy?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
};

/**
 * Holds an array of activation resources and the next link.
 */
export interface ActivationResourcesPage {
  /**
   * List of activation resources.
   */
  value?: ActivationResource[];
  /**
   * URI to the next page.
   */
  nextLink?: string;
}

/**
 * Published activation resource.
 */
export type ActivationResource = Resource & {
  /**
   * Name displayed for the product.
   */
  displayName?: string;
  /**
   * Azure registration resource identifier.
   */
  azureRegistrationResourceIdentifier?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
  /**
   * The activation expiration.
   */
  expiration?: string;
  /**
   * Value indicating whether the marketplace syndication feature is enabled.
   */
  marketplaceSyndicationEnabled?: boolean;
  /**
   * Value indicating whether the usage reporting feature is enabled.
   */
  usageReportingEnabled?: boolean;
};

/**
 * Holds properties related to activation.
 */
export interface Activation {
  /**
   * Name displayed for the product.
   */
  displayName?: string;
  /**
   * Azure registration resource identifier.
   */
  azureRegistrationResourceIdentifier?: string;
  /**
   * Provisioning state of the resource.
   */
  provisioningState?: ProvisioningState;
  /**
   * The activation expiration.
   */
  expiration?: string;
  /**
   * Value indicating whether the marketplace syndication feature is enabled.
   */
  marketplaceSyndicationEnabled?: boolean;
  /**
   * Value indicating whether the usage reporting feature is enabled.
   */
  usageReportingEnabled?: boolean;
}

/**
 * Defines values for CompatibilityIssue.
 */
export type CompatibilityIssue =
  | "HigherDeviceVersionRequired"
  | "LowerDeviceVersionRequired"
  | "CapacityBillingModelRequired"
  | "PayAsYouGoBillingModelRequired"
  | "DevelopmentBillingModelRequired"
  | "AzureADIdentitySystemRequired"
  | "ADFSIdentitySystemRequired"
  | "ConnectionToInternetRequired"
  | "ConnectionToAzureRequired"
  | "DisconnectedEnvironmentRequired";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Stopped"
  | "Starting"
  | "Running"
  | "Stopping"
  | "Succeeded"
  | "Downloading";
/**
 * Defines values for ComputeRole.
 */
export type ComputeRole = "None" | "IaaS" | "PaaS";
/**
 * Defines values for OperatingSystem.
 */
export type OperatingSystem = "None" | "Windows" | "Linux";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type DownloadedProductsListResponse = DownloadedProductResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResourcesPage;
  };
};

/**
 * Contains response data for the get operation.
 */
export type DownloadedProductsGetResponse = DownloadedProductResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResource;
  };
};

/**
 * Contains response data for the delete operation.
 */
export type DownloadedProductsDeleteResponse = DownloadedProductResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResource;
  };
};

/**
 * Contains response data for the create operation.
 */
export type DownloadedProductsCreateResponse = DownloadedProductResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResource;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type DownloadedProductsListNextResponse = DownloadedProductResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResourcesPage;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ProductsListResponse = ProductResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductResourcesPage;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProductsGetResponse = ProductResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductResource;
  };
};

/**
 * Contains response data for the download operation.
 */
export type ProductsDownloadResponse = DownloadedProductResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadedProductResource;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProductsListNextResponse = ProductResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductResourcesPage;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ActivationsListResponse = ActivationResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationResourcesPage;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ActivationsGetResponse = ActivationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationResource;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ActivationsCreateOrUpdateResponse = ActivationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationResource;
  };
};

/**
 * Contains response data for the delete operation.
 */
export type ActivationsDeleteResponse = ActivationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationResource;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ActivationsListNextResponse = ActivationResourcesPage & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationResourcesPage;
  };
};

/**
 * Optional parameters.
 */
export interface AzureBridgeAdminClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
