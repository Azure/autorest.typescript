/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationList: coreHttp.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "Display"
        }
      }
    }
  }
};

export const Display: coreHttp.CompositeMapper = {
  serializedName: "Display",
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HanaInstancesListResult: coreHttp.CompositeMapper = {
  serializedName: "HanaInstancesListResult",
  type: {
    name: "Composite",
    className: "HanaInstancesListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "HanaInstance" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      }
    }
  }
};

export const HanaInstance: coreHttp.CompositeMapper = {
  serializedName: "HanaInstance",
  type: {
    name: "Composite",
    className: "HanaInstance",
    modelProperties: {
      ...Resource.type.modelProperties,
      hardwareProfile: {
        serializedName: "hardwareProfile",
        type: {
          name: "Composite",
          className: "HardwareProfile"
        }
      },
      storageProfile: {
        serializedName: "storageProfile",
        type: {
          name: "Composite",
          className: "StorageProfile"
        }
      },
      osProfile: {
        serializedName: "osProfile",
        type: {
          name: "Composite",
          className: "OSProfile"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      hanaInstanceId: {
        serializedName: "properties.hanaInstanceId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      powerState: {
        serializedName: "properties.powerState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      proximityPlacementGroup: {
        serializedName: "properties.proximityPlacementGroup",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hwRevision: {
        serializedName: "properties.hwRevision",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      partnerNodeId: {
        serializedName: "properties.partnerNodeId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HardwareProfile: coreHttp.CompositeMapper = {
  serializedName: "HardwareProfile",
  type: {
    name: "Composite",
    className: "HardwareProfile",
    modelProperties: {
      hardwareType: {
        serializedName: "hardwareType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      hanaInstanceSize: {
        serializedName: "hanaInstanceSize",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StorageProfile: coreHttp.CompositeMapper = {
  serializedName: "StorageProfile",
  type: {
    name: "Composite",
    className: "StorageProfile",
    modelProperties: {
      nfsIpAddress: {
        serializedName: "nfsIpAddress",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      osDisks: {
        serializedName: "osDisks",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Disk" } }
        }
      }
    }
  }
};

export const Disk: coreHttp.CompositeMapper = {
  serializedName: "Disk",
  type: {
    name: "Composite",
    className: "Disk",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      lun: {
        serializedName: "lun",
        readOnly: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OSProfile: coreHttp.CompositeMapper = {
  serializedName: "OSProfile",
  type: {
    name: "Composite",
    className: "OSProfile",
    modelProperties: {
      computerName: {
        serializedName: "computerName",
        type: {
          name: "String"
        }
      },
      osType: {
        serializedName: "osType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      sshPublicKey: {
        serializedName: "sshPublicKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkProfile: coreHttp.CompositeMapper = {
  serializedName: "NetworkProfile",
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      networkInterfaces: {
        serializedName: "networkInterfaces",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "IpAddress" } }
        }
      },
      circuitId: {
        serializedName: "circuitId",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IpAddress: coreHttp.CompositeMapper = {
  serializedName: "IpAddress",
  type: {
    name: "Composite",
    className: "IpAddress",
    modelProperties: {
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Tags: coreHttp.CompositeMapper = {
  serializedName: "Tags",
  type: {
    name: "Composite",
    className: "Tags",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      }
    }
  }
};

export const SapMonitorListResult: coreHttp.CompositeMapper = {
  serializedName: "SapMonitorListResult",
  type: {
    name: "Composite",
    className: "SapMonitorListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "SapMonitor" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SapMonitor: coreHttp.CompositeMapper = {
  serializedName: "SapMonitor",
  type: {
    name: "Composite",
    className: "SapMonitor",
    modelProperties: {
      ...Resource.type.modelProperties,
      hanaSubnet: {
        serializedName: "properties.hanaSubnet",
        type: {
          name: "String"
        }
      },
      hanaHostname: {
        serializedName: "properties.hanaHostname",
        type: {
          name: "String"
        }
      },
      hanaDbName: {
        serializedName: "properties.hanaDbName",
        type: {
          name: "String"
        }
      },
      hanaDbSqlPort: {
        serializedName: "properties.hanaDbSqlPort",
        type: {
          name: "Number"
        }
      },
      hanaDbUsername: {
        serializedName: "properties.hanaDbUsername",
        type: {
          name: "String"
        }
      },
      hanaDbPassword: {
        serializedName: "properties.hanaDbPassword",
        type: {
          name: "String"
        }
      },
      hanaDbPasswordKeyVaultUrl: {
        serializedName: "properties.hanaDbPasswordKeyVaultUrl",
        type: {
          name: "String"
        }
      },
      hanaDbCredentialsMsiId: {
        serializedName: "properties.hanaDbCredentialsMsiId",
        type: {
          name: "String"
        }
      },
      keyVaultId: {
        serializedName: "properties.keyVaultId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      managedResourceGroupName: {
        serializedName: "properties.managedResourceGroupName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      logAnalyticsWorkspaceArmId: {
        serializedName: "properties.logAnalyticsWorkspaceArmId",
        type: {
          name: "String"
        }
      },
      enableCustomerAnalytics: {
        serializedName: "properties.enableCustomerAnalytics",
        type: {
          name: "Boolean"
        }
      },
      logAnalyticsWorkspaceId: {
        serializedName: "properties.logAnalyticsWorkspaceId",
        type: {
          name: "String"
        }
      },
      logAnalyticsWorkspaceSharedKey: {
        serializedName: "properties.logAnalyticsWorkspaceSharedKey",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MonitoringDetails: coreHttp.CompositeMapper = {
  serializedName: "MonitoringDetails",
  type: {
    name: "Composite",
    className: "MonitoringDetails",
    modelProperties: {
      hanaSubnet: {
        serializedName: "hanaSubnet",
        type: {
          name: "String"
        }
      },
      hanaHostname: {
        serializedName: "hanaHostname",
        type: {
          name: "String"
        }
      },
      hanaDbName: {
        serializedName: "hanaDbName",
        type: {
          name: "String"
        }
      },
      hanaDbSqlPort: {
        serializedName: "hanaDbSqlPort",
        type: {
          name: "Number"
        }
      },
      hanaDbUsername: {
        serializedName: "hanaDbUsername",
        type: {
          name: "String"
        }
      },
      hanaDbPassword: {
        serializedName: "hanaDbPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};
