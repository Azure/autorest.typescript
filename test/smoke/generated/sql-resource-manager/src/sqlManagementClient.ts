/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  RecoverableDatabases,
  RestorableDroppedDatabases,
  ServerConnectionPolicies,
  DatabaseThreatDetectionPolicies,
  DataMaskingPolicies,
  DataMaskingRules,
  FirewallRules,
  GeoBackupPolicies,
  Databases,
  ElasticPools,
  RecommendedElasticPools,
  ReplicationLinks,
  ServerCommunicationLinks,
  ServiceObjectives,
  ElasticPoolActivities,
  ElasticPoolDatabaseActivities,
  ServiceTierAdvisors,
  TransparentDataEncryptions,
  TransparentDataEncryptionActivities,
  ServerUsages,
  DatabaseUsages,
  DatabaseAutomaticTuning,
  EncryptionProtectors,
  FailoverGroups,
  Operations,
  ServerKeys,
  SyncAgents,
  SyncGroups,
  SyncMembers,
  SubscriptionUsages,
  VirtualClusters,
  VirtualNetworkRules,
  ExtendedDatabaseBlobAuditingPolicies,
  ExtendedServerBlobAuditingPolicies,
  ServerBlobAuditingPolicies,
  DatabaseBlobAuditingPolicies,
  DatabaseVulnerabilityAssessmentRuleBaselines,
  DatabaseVulnerabilityAssessments,
  JobAgents,
  JobCredentials,
  JobExecutions,
  Jobs,
  JobStepExecutions,
  JobSteps,
  JobTargetExecutions,
  JobTargetGroups,
  JobVersions,
  LongTermRetentionBackups,
  BackupLongTermRetentionPolicies,
  ManagedBackupShortTermRetentionPolicies,
  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies,
  ServerAutomaticTuning,
  ServerDnsAliases,
  ServerSecurityAlertPolicies,
  RestorableDroppedManagedDatabases,
  RestorePoints,
  ManagedDatabaseSecurityAlertPolicies,
  ManagedServerSecurityAlertPolicies,
  SensitivityLabels,
  ManagedInstanceAdministrators,
  DatabaseOperations,
  ElasticPoolOperations,
  DatabaseVulnerabilityAssessmentScans,
  ManagedDatabaseVulnerabilityAssessmentRuleBaselines,
  ManagedDatabaseVulnerabilityAssessmentScans,
  ManagedDatabaseVulnerabilityAssessments,
  InstanceFailoverGroups,
  BackupShortTermRetentionPolicies,
  TdeCertificates,
  ManagedInstanceTdeCertificates,
  ManagedInstanceKeys,
  ManagedInstanceEncryptionProtectors,
  RecoverableManagedDatabases,
  ManagedInstanceVulnerabilityAssessments,
  ServerVulnerabilityAssessments,
  ManagedDatabaseSensitivityLabels,
  InstancePools,
  Usages,
  ManagedInstances,
  PrivateEndpointConnections,
  PrivateLinkResources,
  Servers,
  Capabilities,
  LongTermRetentionManagedInstanceBackups,
  ManagedInstanceLongTermRetentionPolicies,
  WorkloadGroups,
  WorkloadClassifiers,
  ManagedDatabaseRestoreDetails,
  ManagedDatabases,
  ServerAzureADAdministrators,
  ManagedInstanceOperations
} from "./operations";
import { SqlManagementClientContext } from "./sqlManagementClientContext";
import { SqlManagementClientOptionalParams } from "./models";

export class SqlManagementClient extends SqlManagementClientContext {
  /**
   * Initializes a new instance of the SqlManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The subscription ID that identifies an Azure subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: SqlManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.recoverableDatabases = new RecoverableDatabases(this);
    this.restorableDroppedDatabases = new RestorableDroppedDatabases(this);
    this.serverConnectionPolicies = new ServerConnectionPolicies(this);
    this.databaseThreatDetectionPolicies = new DatabaseThreatDetectionPolicies(
      this
    );
    this.dataMaskingPolicies = new DataMaskingPolicies(this);
    this.dataMaskingRules = new DataMaskingRules(this);
    this.firewallRules = new FirewallRules(this);
    this.geoBackupPolicies = new GeoBackupPolicies(this);
    this.databases = new Databases(this);
    this.elasticPools = new ElasticPools(this);
    this.recommendedElasticPools = new RecommendedElasticPools(this);
    this.replicationLinks = new ReplicationLinks(this);
    this.serverCommunicationLinks = new ServerCommunicationLinks(this);
    this.serviceObjectives = new ServiceObjectives(this);
    this.elasticPoolActivities = new ElasticPoolActivities(this);
    this.elasticPoolDatabaseActivities = new ElasticPoolDatabaseActivities(
      this
    );
    this.serviceTierAdvisors = new ServiceTierAdvisors(this);
    this.transparentDataEncryptions = new TransparentDataEncryptions(this);
    this.transparentDataEncryptionActivities = new TransparentDataEncryptionActivities(
      this
    );
    this.serverUsages = new ServerUsages(this);
    this.databaseUsages = new DatabaseUsages(this);
    this.databaseAutomaticTuning = new DatabaseAutomaticTuning(this);
    this.encryptionProtectors = new EncryptionProtectors(this);
    this.failoverGroups = new FailoverGroups(this);
    this.operations = new Operations(this);
    this.serverKeys = new ServerKeys(this);
    this.syncAgents = new SyncAgents(this);
    this.syncGroups = new SyncGroups(this);
    this.syncMembers = new SyncMembers(this);
    this.subscriptionUsages = new SubscriptionUsages(this);
    this.virtualClusters = new VirtualClusters(this);
    this.virtualNetworkRules = new VirtualNetworkRules(this);
    this.extendedDatabaseBlobAuditingPolicies = new ExtendedDatabaseBlobAuditingPolicies(
      this
    );
    this.extendedServerBlobAuditingPolicies = new ExtendedServerBlobAuditingPolicies(
      this
    );
    this.serverBlobAuditingPolicies = new ServerBlobAuditingPolicies(this);
    this.databaseBlobAuditingPolicies = new DatabaseBlobAuditingPolicies(this);
    this.databaseVulnerabilityAssessmentRuleBaselines = new DatabaseVulnerabilityAssessmentRuleBaselines(
      this
    );
    this.databaseVulnerabilityAssessments = new DatabaseVulnerabilityAssessments(
      this
    );
    this.jobAgents = new JobAgents(this);
    this.jobCredentials = new JobCredentials(this);
    this.jobExecutions = new JobExecutions(this);
    this.jobs = new Jobs(this);
    this.jobStepExecutions = new JobStepExecutions(this);
    this.jobSteps = new JobSteps(this);
    this.jobTargetExecutions = new JobTargetExecutions(this);
    this.jobTargetGroups = new JobTargetGroups(this);
    this.jobVersions = new JobVersions(this);
    this.longTermRetentionBackups = new LongTermRetentionBackups(this);
    this.backupLongTermRetentionPolicies = new BackupLongTermRetentionPolicies(
      this
    );
    this.managedBackupShortTermRetentionPolicies = new ManagedBackupShortTermRetentionPolicies(
      this
    );
    this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies = new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies(
      this
    );
    this.serverAutomaticTuning = new ServerAutomaticTuning(this);
    this.serverDnsAliases = new ServerDnsAliases(this);
    this.serverSecurityAlertPolicies = new ServerSecurityAlertPolicies(this);
    this.restorableDroppedManagedDatabases = new RestorableDroppedManagedDatabases(
      this
    );
    this.restorePoints = new RestorePoints(this);
    this.managedDatabaseSecurityAlertPolicies = new ManagedDatabaseSecurityAlertPolicies(
      this
    );
    this.managedServerSecurityAlertPolicies = new ManagedServerSecurityAlertPolicies(
      this
    );
    this.sensitivityLabels = new SensitivityLabels(this);
    this.managedInstanceAdministrators = new ManagedInstanceAdministrators(
      this
    );
    this.databaseOperations = new DatabaseOperations(this);
    this.elasticPoolOperations = new ElasticPoolOperations(this);
    this.databaseVulnerabilityAssessmentScans = new DatabaseVulnerabilityAssessmentScans(
      this
    );
    this.managedDatabaseVulnerabilityAssessmentRuleBaselines = new ManagedDatabaseVulnerabilityAssessmentRuleBaselines(
      this
    );
    this.managedDatabaseVulnerabilityAssessmentScans = new ManagedDatabaseVulnerabilityAssessmentScans(
      this
    );
    this.managedDatabaseVulnerabilityAssessments = new ManagedDatabaseVulnerabilityAssessments(
      this
    );
    this.instanceFailoverGroups = new InstanceFailoverGroups(this);
    this.backupShortTermRetentionPolicies = new BackupShortTermRetentionPolicies(
      this
    );
    this.tdeCertificates = new TdeCertificates(this);
    this.managedInstanceTdeCertificates = new ManagedInstanceTdeCertificates(
      this
    );
    this.managedInstanceKeys = new ManagedInstanceKeys(this);
    this.managedInstanceEncryptionProtectors = new ManagedInstanceEncryptionProtectors(
      this
    );
    this.recoverableManagedDatabases = new RecoverableManagedDatabases(this);
    this.managedInstanceVulnerabilityAssessments = new ManagedInstanceVulnerabilityAssessments(
      this
    );
    this.serverVulnerabilityAssessments = new ServerVulnerabilityAssessments(
      this
    );
    this.managedDatabaseSensitivityLabels = new ManagedDatabaseSensitivityLabels(
      this
    );
    this.instancePools = new InstancePools(this);
    this.usages = new Usages(this);
    this.managedInstances = new ManagedInstances(this);
    this.privateEndpointConnections = new PrivateEndpointConnections(this);
    this.privateLinkResources = new PrivateLinkResources(this);
    this.servers = new Servers(this);
    this.capabilities = new Capabilities(this);
    this.longTermRetentionManagedInstanceBackups = new LongTermRetentionManagedInstanceBackups(
      this
    );
    this.managedInstanceLongTermRetentionPolicies = new ManagedInstanceLongTermRetentionPolicies(
      this
    );
    this.workloadGroups = new WorkloadGroups(this);
    this.workloadClassifiers = new WorkloadClassifiers(this);
    this.managedDatabaseRestoreDetails = new ManagedDatabaseRestoreDetails(
      this
    );
    this.managedDatabases = new ManagedDatabases(this);
    this.serverAzureADAdministrators = new ServerAzureADAdministrators(this);
    this.managedInstanceOperations = new ManagedInstanceOperations(this);
  }

  recoverableDatabases: RecoverableDatabases;
  restorableDroppedDatabases: RestorableDroppedDatabases;
  serverConnectionPolicies: ServerConnectionPolicies;
  databaseThreatDetectionPolicies: DatabaseThreatDetectionPolicies;
  dataMaskingPolicies: DataMaskingPolicies;
  dataMaskingRules: DataMaskingRules;
  firewallRules: FirewallRules;
  geoBackupPolicies: GeoBackupPolicies;
  databases: Databases;
  elasticPools: ElasticPools;
  recommendedElasticPools: RecommendedElasticPools;
  replicationLinks: ReplicationLinks;
  serverCommunicationLinks: ServerCommunicationLinks;
  serviceObjectives: ServiceObjectives;
  elasticPoolActivities: ElasticPoolActivities;
  elasticPoolDatabaseActivities: ElasticPoolDatabaseActivities;
  serviceTierAdvisors: ServiceTierAdvisors;
  transparentDataEncryptions: TransparentDataEncryptions;
  transparentDataEncryptionActivities: TransparentDataEncryptionActivities;
  serverUsages: ServerUsages;
  databaseUsages: DatabaseUsages;
  databaseAutomaticTuning: DatabaseAutomaticTuning;
  encryptionProtectors: EncryptionProtectors;
  failoverGroups: FailoverGroups;
  operations: Operations;
  serverKeys: ServerKeys;
  syncAgents: SyncAgents;
  syncGroups: SyncGroups;
  syncMembers: SyncMembers;
  subscriptionUsages: SubscriptionUsages;
  virtualClusters: VirtualClusters;
  virtualNetworkRules: VirtualNetworkRules;
  extendedDatabaseBlobAuditingPolicies: ExtendedDatabaseBlobAuditingPolicies;
  extendedServerBlobAuditingPolicies: ExtendedServerBlobAuditingPolicies;
  serverBlobAuditingPolicies: ServerBlobAuditingPolicies;
  databaseBlobAuditingPolicies: DatabaseBlobAuditingPolicies;
  databaseVulnerabilityAssessmentRuleBaselines: DatabaseVulnerabilityAssessmentRuleBaselines;
  databaseVulnerabilityAssessments: DatabaseVulnerabilityAssessments;
  jobAgents: JobAgents;
  jobCredentials: JobCredentials;
  jobExecutions: JobExecutions;
  jobs: Jobs;
  jobStepExecutions: JobStepExecutions;
  jobSteps: JobSteps;
  jobTargetExecutions: JobTargetExecutions;
  jobTargetGroups: JobTargetGroups;
  jobVersions: JobVersions;
  longTermRetentionBackups: LongTermRetentionBackups;
  backupLongTermRetentionPolicies: BackupLongTermRetentionPolicies;
  managedBackupShortTermRetentionPolicies: ManagedBackupShortTermRetentionPolicies;
  managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
  serverAutomaticTuning: ServerAutomaticTuning;
  serverDnsAliases: ServerDnsAliases;
  serverSecurityAlertPolicies: ServerSecurityAlertPolicies;
  restorableDroppedManagedDatabases: RestorableDroppedManagedDatabases;
  restorePoints: RestorePoints;
  managedDatabaseSecurityAlertPolicies: ManagedDatabaseSecurityAlertPolicies;
  managedServerSecurityAlertPolicies: ManagedServerSecurityAlertPolicies;
  sensitivityLabels: SensitivityLabels;
  managedInstanceAdministrators: ManagedInstanceAdministrators;
  databaseOperations: DatabaseOperations;
  elasticPoolOperations: ElasticPoolOperations;
  databaseVulnerabilityAssessmentScans: DatabaseVulnerabilityAssessmentScans;
  managedDatabaseVulnerabilityAssessmentRuleBaselines: ManagedDatabaseVulnerabilityAssessmentRuleBaselines;
  managedDatabaseVulnerabilityAssessmentScans: ManagedDatabaseVulnerabilityAssessmentScans;
  managedDatabaseVulnerabilityAssessments: ManagedDatabaseVulnerabilityAssessments;
  instanceFailoverGroups: InstanceFailoverGroups;
  backupShortTermRetentionPolicies: BackupShortTermRetentionPolicies;
  tdeCertificates: TdeCertificates;
  managedInstanceTdeCertificates: ManagedInstanceTdeCertificates;
  managedInstanceKeys: ManagedInstanceKeys;
  managedInstanceEncryptionProtectors: ManagedInstanceEncryptionProtectors;
  recoverableManagedDatabases: RecoverableManagedDatabases;
  managedInstanceVulnerabilityAssessments: ManagedInstanceVulnerabilityAssessments;
  serverVulnerabilityAssessments: ServerVulnerabilityAssessments;
  managedDatabaseSensitivityLabels: ManagedDatabaseSensitivityLabels;
  instancePools: InstancePools;
  usages: Usages;
  managedInstances: ManagedInstances;
  privateEndpointConnections: PrivateEndpointConnections;
  privateLinkResources: PrivateLinkResources;
  servers: Servers;
  capabilities: Capabilities;
  longTermRetentionManagedInstanceBackups: LongTermRetentionManagedInstanceBackups;
  managedInstanceLongTermRetentionPolicies: ManagedInstanceLongTermRetentionPolicies;
  workloadGroups: WorkloadGroups;
  workloadClassifiers: WorkloadClassifiers;
  managedDatabaseRestoreDetails: ManagedDatabaseRestoreDetails;
  managedDatabases: ManagedDatabases;
  serverAzureADAdministrators: ServerAzureADAdministrators;
  managedInstanceOperations: ManagedInstanceOperations;
}
