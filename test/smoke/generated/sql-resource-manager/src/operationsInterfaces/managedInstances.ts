/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagedInstance,
  TopQueries,
  ManagedInstancesGetResponse,
  ManagedInstancesCreateOrUpdateResponse,
  ManagedInstancesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedInstances. */
export interface ManagedInstances {
  /**
   * Gets a list of all managed instances in an instance pool.
   *
   */
  listByInstancePool(): PagedAsyncIterableIterator<ManagedInstance>;
  /**
   * Gets a list of all managed instances in the subscription.
   *
   */
  list(): PagedAsyncIterableIterator<ManagedInstance>;
  /**
   * Gets a list of managed instances in a resource group.
   *
   */
  listByResourceGroup(): PagedAsyncIterableIterator<ManagedInstance>;
  /**
   * Get top resource consuming queries of a managed instance.
   *
   */
  listByManagedInstance(): PagedAsyncIterableIterator<TopQueries>;
  /**
   * Gets a managed instance.
   *
   */
  get(): Promise<ManagedInstancesGetResponse>;
  /**
   * Creates or updates a managed instance.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<ManagedInstancesCreateOrUpdateResponse>,
      ManagedInstancesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a managed instance.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<ManagedInstancesCreateOrUpdateResponse>;
  /**
   * Deletes a managed instance.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a managed instance.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Updates a managed instance.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<ManagedInstancesUpdateResponse>,
      ManagedInstancesUpdateResponse
    >
  >;
  /**
   * Updates a managed instance.
   *
   */
  beginUpdateAndWait(): Promise<ManagedInstancesUpdateResponse>;
  /**
   * Failovers a managed instance.
   *
   */
  beginFailover(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Failovers a managed instance.
   *
   */
  beginFailoverAndWait(): Promise<void>;
}
