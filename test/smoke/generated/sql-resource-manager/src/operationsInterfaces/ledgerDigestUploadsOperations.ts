/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  LedgerDigestUploads,
  LedgerDigestUploadsGetResponse,
  LedgerDigestUploadsCreateOrUpdateResponse,
  LedgerDigestUploadsDisableResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LedgerDigestUploadsOperations. */
export interface LedgerDigestUploadsOperations {
  /**
   * Gets all ledger digest upload settings on a database.
   *
   */
  listByDatabase(): PagedAsyncIterableIterator<LedgerDigestUploads>;
  /**
   * Gets the current ledger digest upload configuration for a database.
   *
   */
  get(): Promise<LedgerDigestUploadsGetResponse>;
  /**
   * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<LedgerDigestUploadsCreateOrUpdateResponse>,
      LedgerDigestUploadsCreateOrUpdateResponse
    >
  >;
  /**
   * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<
    LedgerDigestUploadsCreateOrUpdateResponse
  >;
  /**
   * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger
   * instance.
   *
   */
  beginDisable(): Promise<
    PollerLike<
      PollOperationState<LedgerDigestUploadsDisableResponse>,
      LedgerDigestUploadsDisableResponse
    >
  >;
  /**
   * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger
   * instance.
   *
   */
  beginDisableAndWait(): Promise<LedgerDigestUploadsDisableResponse>;
}
