/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  SyncMember,
  SyncFullSchemaProperties,
  SyncMembersGetResponse,
  SyncMembersCreateOrUpdateResponse,
  SyncMembersUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a SyncMembers. */
export interface SyncMembers {
  /**
   * Lists sync members in the given sync group.
   *
   */
  listBySyncGroup(): PagedAsyncIterableIterator<SyncMember>;
  /**
   * Gets a sync member database schema.
   *
   */
  listMemberSchemas(): PagedAsyncIterableIterator<SyncFullSchemaProperties>;
  /**
   * Gets a sync member.
   *
   */
  get(): Promise<SyncMembersGetResponse>;
  /**
   * Creates or updates a sync member.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<SyncMembersCreateOrUpdateResponse>,
      SyncMembersCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a sync member.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<SyncMembersCreateOrUpdateResponse>;
  /**
   * Deletes a sync member.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a sync member.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Updates an existing sync member.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<SyncMembersUpdateResponse>,
      SyncMembersUpdateResponse
    >
  >;
  /**
   * Updates an existing sync member.
   *
   */
  beginUpdateAndWait(): Promise<SyncMembersUpdateResponse>;
  /**
   * Refreshes a sync member database schema.
   *
   */
  beginRefreshMemberSchema(): Promise<
    PollerLike<PollOperationState<void>, void>
  >;
  /**
   * Refreshes a sync member database schema.
   *
   */
  beginRefreshMemberSchemaAndWait(): Promise<void>;
}
