/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  FailoverGroup,
  FailoverGroupsGetResponse,
  FailoverGroupsCreateOrUpdateResponse,
  FailoverGroupsUpdateResponse,
  FailoverGroupsFailoverResponse,
  FailoverGroupsForceFailoverAllowDataLossResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a FailoverGroups. */
export interface FailoverGroups {
  /**
   * Lists the failover groups in a server.
   *
   */
  listByServer(): PagedAsyncIterableIterator<FailoverGroup>;
  /**
   * Gets a failover group.
   *
   */
  get(): Promise<FailoverGroupsGetResponse>;
  /**
   * Creates or updates a failover group.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<FailoverGroupsCreateOrUpdateResponse>,
      FailoverGroupsCreateOrUpdateResponse
    >
  >;
  /**
   * Creates or updates a failover group.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<FailoverGroupsCreateOrUpdateResponse>;
  /**
   * Deletes a failover group.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a failover group.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Updates a failover group.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<FailoverGroupsUpdateResponse>,
      FailoverGroupsUpdateResponse
    >
  >;
  /**
   * Updates a failover group.
   *
   */
  beginUpdateAndWait(): Promise<FailoverGroupsUpdateResponse>;
  /**
   * Fails over from the current primary server to this server.
   *
   */
  beginFailover(): Promise<
    PollerLike<
      PollOperationState<FailoverGroupsFailoverResponse>,
      FailoverGroupsFailoverResponse
    >
  >;
  /**
   * Fails over from the current primary server to this server.
   *
   */
  beginFailoverAndWait(): Promise<FailoverGroupsFailoverResponse>;
  /**
   * Fails over from the current primary server to this server. This operation might result in data loss.
   *
   */
  beginForceFailoverAllowDataLoss(): Promise<
    PollerLike<
      PollOperationState<FailoverGroupsForceFailoverAllowDataLossResponse>,
      FailoverGroupsForceFailoverAllowDataLossResponse
    >
  >;
  /**
   * Fails over from the current primary server to this server. This operation might result in data loss.
   *
   */
  beginForceFailoverAllowDataLossAndWait(): Promise<
    FailoverGroupsForceFailoverAllowDataLossResponse
  >;
}
