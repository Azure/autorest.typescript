/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagedInstanceLongTermRetentionBackup,
  LongTermRetentionManagedInstanceBackupsGetResponse,
  LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a LongTermRetentionManagedInstanceBackups. */
export interface LongTermRetentionManagedInstanceBackups {
  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  listByDatabase(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  listByInstance(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  listByLocation(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  listByResourceGroupDatabase(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  listByResourceGroupInstance(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  listByResourceGroupLocation(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  >;
  /**
   * Gets a long term retention backup for a managed database.
   *
   */
  get(): Promise<LongTermRetentionManagedInstanceBackupsGetResponse>;
  /**
   * Deletes a long term retention backup.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a long term retention backup.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Gets a long term retention backup for a managed database.
   *
   */
  getByResourceGroup(): Promise<
    LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse
  >;
  /**
   * Deletes a long term retention backup.
   *
   */
  beginDeleteByResourceGroup(): Promise<
    PollerLike<PollOperationState<void>, void>
  >;
  /**
   * Deletes a long term retention backup.
   *
   */
  beginDeleteByResourceGroupAndWait(): Promise<void>;
}
