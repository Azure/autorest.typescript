/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagedDatabase,
  ManagedDatabasesListByInstanceNextOptionalParams,
  ManagedDatabasesListByInstanceOptionalParams,
  ManagedDatabasesListInaccessibleByInstanceNextOptionalParams,
  ManagedDatabasesListInaccessibleByInstanceOptionalParams,
  ManagedDatabasesGetOptionalParams,
  ManagedDatabasesGetResponse,
  ManagedDatabasesCreateOrUpdateOptionalParams,
  ManagedDatabasesCreateOrUpdateResponse,
  ManagedDatabasesDeleteOptionalParams,
  ManagedDatabaseUpdate,
  ManagedDatabasesUpdateOptionalParams,
  ManagedDatabasesUpdateResponse,
  CompleteDatabaseRestoreDefinition,
  ManagedDatabasesCompleteRestoreOptionalParams
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedDatabases. */
export interface ManagedDatabases {
  /**
   * Gets a list of managed databases.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param options The options parameters.
   */
  listByInstance(
    resourceGroupName: string,
    managedInstanceName: string,
    options?: ManagedDatabasesListByInstanceOptionalParams
  ): PagedAsyncIterableIterator<ManagedDatabase>;
  /**
   * Gets a list of inaccessible managed databases in a managed instance
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param options The options parameters.
   */
  listInaccessibleByInstance(
    resourceGroupName: string,
    managedInstanceName: string,
    options?: ManagedDatabasesListInaccessibleByInstanceOptionalParams
  ): PagedAsyncIterableIterator<ManagedDatabase>;
  /**
   * Gets a managed database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    options?: ManagedDatabasesGetOptionalParams
  ): Promise<ManagedDatabasesGetResponse>;
  /**
   * Creates a new database or updates an existing database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database.
   * @param parameters The requested database resource state.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    parameters: ManagedDatabase,
    options?: ManagedDatabasesCreateOrUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ManagedDatabasesCreateOrUpdateResponse>,
      ManagedDatabasesCreateOrUpdateResponse
    >
  >;
  /**
   * Deletes a managed database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    options?: ManagedDatabasesDeleteOptionalParams
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Updates an existing database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database.
   * @param parameters The requested database resource state.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    parameters: ManagedDatabaseUpdate,
    options?: ManagedDatabasesUpdateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<ManagedDatabasesUpdateResponse>,
      ManagedDatabasesUpdateResponse
    >
  >;
  /**
   * Completes the restore operation on a managed database.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param managedInstanceName The name of the managed instance.
   * @param databaseName The name of the database.
   * @param parameters The definition for completing the restore of this managed database.
   * @param options The options parameters.
   */
  completeRestore(
    resourceGroupName: string,
    managedInstanceName: string,
    databaseName: string,
    parameters: CompleteDatabaseRestoreDefinition,
    options?: ManagedDatabasesCompleteRestoreOptionalParams
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
}
