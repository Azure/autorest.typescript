/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagedDatabase,
  ManagedDatabasesGetResponse,
  ManagedDatabasesCreateOrUpdateResponse,
  ManagedDatabasesUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ManagedDatabases. */
export interface ManagedDatabases {
  /**
   * Gets a list of managed databases.
   *
   */
  listByInstance(): PagedAsyncIterableIterator<ManagedDatabase>;
  /**
   * Gets a list of inaccessible managed databases in a managed instance
   *
   */
  listInaccessibleByInstance(): PagedAsyncIterableIterator<ManagedDatabase>;
  /**
   * Gets a managed database.
   *
   */
  get(): Promise<ManagedDatabasesGetResponse>;
  /**
   * Creates a new database or updates an existing database.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<ManagedDatabasesCreateOrUpdateResponse>,
      ManagedDatabasesCreateOrUpdateResponse
    >
  >;
  /**
   * Creates a new database or updates an existing database.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<ManagedDatabasesCreateOrUpdateResponse>;
  /**
   * Deletes a managed database.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a managed database.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Updates an existing database.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<ManagedDatabasesUpdateResponse>,
      ManagedDatabasesUpdateResponse
    >
  >;
  /**
   * Updates an existing database.
   *
   */
  beginUpdateAndWait(): Promise<ManagedDatabasesUpdateResponse>;
  /**
   * Completes the restore operation on a managed database.
   *
   */
  beginCompleteRestore(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Completes the restore operation on a managed database.
   *
   */
  beginCompleteRestoreAndWait(): Promise<void>;
}
