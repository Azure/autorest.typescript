/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  JobAgent,
  JobAgentsGetResponse,
  JobAgentsCreateOrUpdateResponse,
  JobAgentUpdate,
  JobAgentsUpdateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a JobAgents. */
export interface JobAgents {
  /**
   * Gets a list of job agents in a server.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param options The options parameters.
   */
  listByServer(
    resourceGroupName: string,
    serverName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<JobAgent>;
  /**
   * Gets a job agent.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent to be retrieved.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    options?: coreHttp.OperationOptions
  ): Promise<JobAgentsGetResponse>;
  /**
   * Creates or updates a job agent.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent to be created or updated.
   * @param parameters The requested job agent resource state.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    parameters: JobAgent,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<JobAgentsCreateOrUpdateResponse>,
      JobAgentsCreateOrUpdateResponse
    >
  >;
  /**
   * Deletes a job agent.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent to be deleted.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Updates a job agent.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param serverName The name of the server.
   * @param jobAgentName The name of the job agent to be updated.
   * @param parameters The update to the job agent.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    serverName: string,
    jobAgentName: string,
    parameters: JobAgentUpdate,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<JobAgentsUpdateResponse>,
      JobAgentsUpdateResponse
    >
  >;
}
