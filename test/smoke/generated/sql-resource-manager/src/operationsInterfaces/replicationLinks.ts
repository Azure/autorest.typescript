/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { ReplicationLink, ReplicationLinksGetResponse } from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ReplicationLinks. */
export interface ReplicationLinks {
  /**
   * Gets a list of replication links on database.
   *
   */
  listByDatabase(): PagedAsyncIterableIterator<ReplicationLink>;
  /**
   * Gets a list of replication links.
   *
   */
  listByServer(): PagedAsyncIterableIterator<ReplicationLink>;
  /**
   * Deletes a database replication link. Cannot be done during failover.
   *
   */
  delete(): Promise<void>;
  /**
   * Sets which replica database is primary by failing over from the current primary replica database.
   *
   */
  beginFailover(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Sets which replica database is primary by failing over from the current primary replica database.
   *
   */
  beginFailoverAndWait(): Promise<void>;
  /**
   * Sets which replica database is primary by failing over from the current primary replica database.
   * This operation might result in data loss.
   *
   */
  beginFailoverAllowDataLoss(): Promise<
    PollerLike<PollOperationState<void>, void>
  >;
  /**
   * Sets which replica database is primary by failing over from the current primary replica database.
   * This operation might result in data loss.
   *
   */
  beginFailoverAllowDataLossAndWait(): Promise<void>;
  /**
   * Deletes a database replication link in forced or friendly way.
   *
   */
  beginUnlink(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes a database replication link in forced or friendly way.
   *
   */
  beginUnlinkAndWait(): Promise<void>;
  /**
   * Gets a replication link.
   *
   */
  get(): Promise<ReplicationLinksGetResponse>;
}
