/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { JobStepExecutions } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  JobExecution,
  JobStepExecutionsListByJobExecutionResponse,
  JobStepExecutionsGetResponse,
  JobStepExecutionsListByJobExecutionNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing JobStepExecutions operations. */
export class JobStepExecutionsImpl implements JobStepExecutions {
  /**
   * Initialize a new instance of the class JobStepExecutions class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {}

  /**
   * Lists the step executions of a job execution.
   *
   */
  public listByJobExecution(): PagedAsyncIterableIterator<JobExecution> {
    const iter = this.listByJobExecutionPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByJobExecutionPagingPage();
      }
    };
  }

  private async *listByJobExecutionPagingPage(): AsyncIterableIterator<
    JobExecution[]
  > {
    let result = await this._listByJobExecution();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByJobExecutionNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByJobExecutionPagingAll(): AsyncIterableIterator<
    JobExecution
  > {
    for await (const page of this.listByJobExecutionPagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists the step executions of a job execution.
   *
   */
  private _listByJobExecution(): Promise<
    JobStepExecutionsListByJobExecutionResponse
  > {}

  /**
   * Gets a step execution of a job execution.
   *
   */
  get(): Promise<JobStepExecutionsGetResponse> {}

  /**
   * ListByJobExecutionNext
   *
   */
  private _listByJobExecutionNext(): Promise<
    JobStepExecutionsListByJobExecutionNextResponse
  > {}
}
// Operation Specifications
