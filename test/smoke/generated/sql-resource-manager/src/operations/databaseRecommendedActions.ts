/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { DatabaseRecommendedActions } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  DatabaseRecommendedActionsListByDatabaseAdvisorResponse,
  DatabaseRecommendedActionsGetResponse,
  DatabaseRecommendedActionsUpdateResponse
} from "../models";

/** Class containing DatabaseRecommendedActions operations. */
export class DatabaseRecommendedActionsImpl
  implements DatabaseRecommendedActions {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class DatabaseRecommendedActions class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Gets list of Database Recommended Actions.
   *
   */
  listByDatabaseAdvisor(): Promise<
    DatabaseRecommendedActionsListByDatabaseAdvisorResponse
  > {}

  /**
   * Gets a database recommended action.
   *
   */
  get(): Promise<DatabaseRecommendedActionsGetResponse> {}

  /**
   * Updates a database recommended action.
   *
   */
  update(): Promise<DatabaseRecommendedActionsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        serverName,
        databaseName,
        advisorName,
        recommendedActionName,
        options
      },
      updateOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const updateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}",
  httpMethod: "PATCH",
  responses: {
    200: {
      bodyMapper: Mappers.RecommendedAction
    },
    default: {}
  },
  requestBody: Parameters.parameters18,
  queryParameters: [Parameters.apiVersion2],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.serverName,
    Parameters.databaseName,
    Parameters.advisorName,
    Parameters.recommendedActionName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
