/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SqlAgent } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import { SqlAgentGetResponse, SqlAgentCreateOrUpdateResponse } from "../models";

/** Class containing SqlAgent operations. */
export class SqlAgentImpl implements SqlAgent {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class SqlAgent class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Gets current instance sql agent configuration.
   *
   */
  get(): Promise<SqlAgentGetResponse> {}

  /**
   * Puts new sql agent configuration to instance.
   *
   */
  createOrUpdate(): Promise<SqlAgentCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      { resourceGroupName, managedInstanceName, options },
      createOrUpdateOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createOrUpdateOperationSpec: coreClient.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/sqlAgent/current",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.SqlAgentConfiguration
    },
    default: {}
  },
  requestBody: Parameters.parameters67,
  queryParameters: [Parameters.apiVersion2],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.managedInstanceName
  ],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer
};
