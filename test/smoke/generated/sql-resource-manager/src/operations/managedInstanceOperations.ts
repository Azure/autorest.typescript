/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedInstanceOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  ManagedInstanceOperation,
  ManagedInstanceOperationsListByManagedInstanceResponse,
  ManagedInstanceOperationsGetResponse,
  ManagedInstanceOperationsListByManagedInstanceNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing ManagedInstanceOperations operations. */
export class ManagedInstanceOperationsImpl
  implements ManagedInstanceOperations {
  /**
   * Initialize a new instance of the class ManagedInstanceOperations class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {}

  /**
   * Gets a list of operations performed on the managed instance.
   *
   */
  public listByManagedInstance(): PagedAsyncIterableIterator<
    ManagedInstanceOperation
  > {
    const iter = this.listByManagedInstancePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByManagedInstancePagingPage();
      }
    };
  }

  private async *listByManagedInstancePagingPage(): AsyncIterableIterator<
    ManagedInstanceOperation[]
  > {
    let result = await this._listByManagedInstance();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByManagedInstanceNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByManagedInstancePagingAll(): AsyncIterableIterator<
    ManagedInstanceOperation
  > {
    for await (const page of this.listByManagedInstancePagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets a list of operations performed on the managed instance.
   *
   */
  private _listByManagedInstance(): Promise<
    ManagedInstanceOperationsListByManagedInstanceResponse
  > {}

  /**
   * Gets a management operation on a managed instance.
   *
   */
  get(): Promise<ManagedInstanceOperationsGetResponse> {}

  /**
   * Cancels the asynchronous operation on the managed instance.
   *
   */
  cancel(): Promise<void> {}

  /**
   * ListByManagedInstanceNext
   *
   */
  private _listByManagedInstanceNext(): Promise<
    ManagedInstanceOperationsListByManagedInstanceNextResponse
  > {}
}
// Operation Specifications
