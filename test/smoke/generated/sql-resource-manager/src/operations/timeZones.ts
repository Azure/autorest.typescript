/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TimeZones } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  TimeZone,
  TimeZonesListByLocationResponse,
  TimeZonesGetResponse,
  TimeZonesListByLocationNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing TimeZones operations. */
export class TimeZonesImpl implements TimeZones {
  /**
   * Initialize a new instance of the class TimeZones class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {}

  /**
   * Gets a list of managed instance time zones by location.
   *
   */
  public listByLocation(): PagedAsyncIterableIterator<TimeZone> {
    const iter = this.listByLocationPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByLocationPagingPage();
      }
    };
  }

  private async *listByLocationPagingPage(): AsyncIterableIterator<TimeZone[]> {
    let result = await this._listByLocation();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByLocationNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByLocationPagingAll(): AsyncIterableIterator<TimeZone> {
    for await (const page of this.listByLocationPagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets a list of managed instance time zones by location.
   *
   */
  private _listByLocation(): Promise<TimeZonesListByLocationResponse> {}

  /**
   * Gets a managed instance time zone.
   *
   */
  get(): Promise<TimeZonesGetResponse> {}

  /**
   * ListByLocationNext
   *
   */
  private _listByLocationNext(): Promise<TimeZonesListByLocationNextResponse> {}
}
// Operation Specifications
