/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { LongTermRetentionManagedInstanceBackups } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { SqlManagementClient } from "../sqlManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ManagedInstanceLongTermRetentionBackup,
  LongTermRetentionManagedInstanceBackupsGetResponse,
  LongTermRetentionManagedInstanceBackupsListByDatabaseResponse,
  LongTermRetentionManagedInstanceBackupsListByInstanceResponse,
  LongTermRetentionManagedInstanceBackupsListByLocationResponse,
  LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse,
  LongTermRetentionManagedInstanceBackupsListByDatabaseNextResponse,
  LongTermRetentionManagedInstanceBackupsListByInstanceNextResponse,
  LongTermRetentionManagedInstanceBackupsListByLocationNextResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextResponse,
  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing LongTermRetentionManagedInstanceBackups operations. */
export class LongTermRetentionManagedInstanceBackupsImpl
  implements LongTermRetentionManagedInstanceBackups {
  /**
   * Initialize a new instance of the class LongTermRetentionManagedInstanceBackups class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {}

  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  public listByDatabase(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByDatabasePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByDatabasePagingPage();
      }
    };
  }

  private async *listByDatabasePagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByDatabase();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByDatabaseNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByDatabasePagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByDatabasePagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  public listByInstance(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByInstancePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByInstancePagingPage();
      }
    };
  }

  private async *listByInstancePagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByInstance();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByInstanceNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByInstancePagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByInstancePagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  public listByLocation(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByLocationPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByLocationPagingPage();
      }
    };
  }

  private async *listByLocationPagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByLocation();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByLocationNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByLocationPagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByLocationPagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  public listByResourceGroupDatabase(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByResourceGroupDatabasePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByResourceGroupDatabasePagingPage();
      }
    };
  }

  private async *listByResourceGroupDatabasePagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByResourceGroupDatabase();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByResourceGroupDatabaseNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByResourceGroupDatabasePagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByResourceGroupDatabasePagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  public listByResourceGroupInstance(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByResourceGroupInstancePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByResourceGroupInstancePagingPage();
      }
    };
  }

  private async *listByResourceGroupInstancePagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByResourceGroupInstance();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByResourceGroupInstanceNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByResourceGroupInstancePagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByResourceGroupInstancePagingPage()) {
      yield* page;
    }
  }

  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  public listByResourceGroupLocation(): PagedAsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    const iter = this.listByResourceGroupLocationPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listByResourceGroupLocationPagingPage();
      }
    };
  }

  private async *listByResourceGroupLocationPagingPage(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup[]
  > {
    let result = await this._listByResourceGroupLocation();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listByResourceGroupLocationNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listByResourceGroupLocationPagingAll(): AsyncIterableIterator<
    ManagedInstanceLongTermRetentionBackup
  > {
    for await (const page of this.listByResourceGroupLocationPagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets a long term retention backup for a managed database.
   *
   */
  get(): Promise<LongTermRetentionManagedInstanceBackupsGetResponse> {}

  /**
   * Deletes a long term retention backup.
   *
   */
  async beginDelete(): Promise<PollerLike<PollOperationState<void>, void>> {}

  /**
   * Deletes a long term retention backup.
   *
   */
  async beginDeleteAndWait(): Promise<void> {
    const poller = await this.beginDelete();
    return poller.pollUntilDone();
  }

  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  private _listByDatabase(): Promise<
    LongTermRetentionManagedInstanceBackupsListByDatabaseResponse
  > {}

  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  private _listByInstance(): Promise<
    LongTermRetentionManagedInstanceBackupsListByInstanceResponse
  > {}

  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  private _listByLocation(): Promise<
    LongTermRetentionManagedInstanceBackupsListByLocationResponse
  > {}

  /**
   * Gets a long term retention backup for a managed database.
   *
   */
  getByResourceGroup(): Promise<
    LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse
  > {}

  /**
   * Deletes a long term retention backup.
   *
   */
  async beginDeleteByResourceGroup(): Promise<
    PollerLike<PollOperationState<void>, void>
  > {}

  /**
   * Deletes a long term retention backup.
   *
   */
  async beginDeleteByResourceGroupAndWait(): Promise<void> {
    const poller = await this.beginDeleteByResourceGroup();
    return poller.pollUntilDone();
  }

  /**
   * Lists all long term retention backups for a managed database.
   *
   */
  private _listByResourceGroupDatabase(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse
  > {}

  /**
   * Lists the long term retention backups for a given managed instance.
   *
   */
  private _listByResourceGroupInstance(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse
  > {}

  /**
   * Lists the long term retention backups for managed databases in a given location.
   *
   */
  private _listByResourceGroupLocation(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse
  > {}

  /**
   * ListByDatabaseNext
   *
   */
  private _listByDatabaseNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByDatabaseNextResponse
  > {}

  /**
   * ListByInstanceNext
   *
   */
  private _listByInstanceNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByInstanceNextResponse
  > {}

  /**
   * ListByLocationNext
   *
   */
  private _listByLocationNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByLocationNextResponse
  > {}

  /**
   * ListByResourceGroupDatabaseNext
   *
   */
  private _listByResourceGroupDatabaseNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextResponse
  > {}

  /**
   * ListByResourceGroupInstanceNext
   *
   */
  private _listByResourceGroupInstanceNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextResponse
  > {}

  /**
   * ListByResourceGroupLocationNext
   *
   */
  private _listByResourceGroupLocationNext(): Promise<
    LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextResponse
  > {}
}
// Operation Specifications
