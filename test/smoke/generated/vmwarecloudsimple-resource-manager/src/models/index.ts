/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * List of available operations
 */
export interface AvailableOperationsListResponse {
  /**
   * Link for next list of available operations
   */
  nextLink?: string;
  /**
   * Returns a list of available operations
   */
  value?: AvailableOperation[];
}

/**
 * Resource provider available operation model
 */
export interface AvailableOperation {
  /**
   * The list of operations
   */
  display?: AvailableOperationDisplay;
  /**
   * Indicating whether the operation is a data action or not
   */
  isDataAction?: boolean;
  /**
   * {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
   */
  name?: string;
  /**
   * The origin of operation
   */
  origin?: OperationOrigin;
  /**
   * The list of specification's service metrics
   */
  serviceSpecification?: AvailableOperationDisplayPropertyServiceSpecificationMetricsList;
}

/**
 * Resource provider available operation display model
 */
export interface AvailableOperationDisplay {
  /**
   * Description of the operation for display purposes
   */
  description?: string;
  /**
   * Name of the operation for display purposes
   */
  operation?: string;
  /**
   * Name of the provider for display purposes
   */
  provider?: string;
  /**
   * Name of the resource type for display purposes
   */
  resource?: string;
}

/**
 * List of available operation display property service specification metrics
 */
export interface AvailableOperationDisplayPropertyServiceSpecificationMetricsList {
  /**
   * Metric specifications of operation
   */
  metricSpecifications?: AvailableOperationDisplayPropertyServiceSpecificationMetricsItem[];
}

/**
 * Available operation display property service specification metrics item
 */
export interface AvailableOperationDisplayPropertyServiceSpecificationMetricsItem {
  /**
   * Metric's aggregation type for e.g. (Average, Total)
   */
  aggregationType: AggregationType;
  /**
   * Metric's description
   */
  displayDescription: string;
  /**
   * Human readable metric's name
   */
  displayName: string;
  /**
   * Metric's name/id
   */
  name: string;
  /**
   * Metric's unit
   */
  unit: string;
}

/**
 * General error model
 */
export interface CsrpError {
  /**
   * Error's body
   */
  error?: CsrpErrorBody;
}

/**
 * Error properties
 */
export interface CsrpErrorBody {
  /**
   * Error's code
   */
  readonly code?: string;
  /**
   * Error's details
   */
  readonly details?: CsrpErrorBody[];
  /**
   * Error's message
   */
  readonly message?: string;
  /**
   * Error's target
   */
  target?: string;
}

/**
 * List of dedicated nodes response model
 */
export interface DedicatedCloudNodeListResponse {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
  /**
   * Results of the DedicatedCloudNode list
   */
  value?: DedicatedCloudNode[];
}

/**
 * Dedicated cloud node model
 */
export interface DedicatedCloudNode {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {dedicatedCloudNodeName}
   */
  readonly name?: string;
  /**
   * Dedicated Cloud Nodes SKU
   */
  sku?: Sku;
  /**
   * Dedicated Cloud Nodes tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * Availability Zone id, e.g. "az1"
   */
  availabilityZoneId?: string;
  /**
   * Availability Zone name, e.g. "Availability Zone 1"
   */
  readonly availabilityZoneName?: string;
  /**
   * VMWare Cloud Rack Name
   */
  readonly cloudRackName?: string;
  /**
   * date time the resource was created
   */
  readonly created?: any;
  /**
   * count of nodes to create
   */
  nodesCount?: number;
  /**
   * Placement Group id, e.g. "n1"
   */
  placementGroupId?: string;
  /**
   * Placement Name, e.g. "Placement Group 1"
   */
  readonly placementGroupName?: string;
  /**
   * Private Cloud Id
   */
  readonly privateCloudId?: string;
  /**
   * Resource Pool Name
   */
  readonly privateCloudName?: string;
  /**
   * The provisioning status of the resource
   */
  readonly provisioningState?: string;
  /**
   * purchase id
   */
  purchaseId?: string;
  /**
   * Node status, indicates is private cloud set up on this node or not
   */
  readonly status?: NodeStatus;
  /**
   * VMWare Cluster Name
   */
  readonly vmwareClusterName?: string;
  /**
   * SKU's id
   */
  idPropertiesSkuDescriptionId?: string;
  /**
   * SKU's name
   */
  namePropertiesSkuDescriptionName?: string;
}

/**
 * The purchase SKU for CloudSimple paid resources
 */
export interface Sku {
  /**
   * The capacity of the SKU
   */
  capacity?: string;
  /**
   * dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...
   */
  description?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be captured here
   */
  family?: string;
  /**
   * The name of the SKU for VMWare CloudSimple Node
   */
  name: string;
  /**
   * The tier of the SKU
   */
  tier?: string;
}

/**
 * List of dedicated cloud services
 */
export interface DedicatedCloudServiceListResponse {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
  /**
   * Results of the DedicatedCloudService list
   */
  value?: DedicatedCloudService[];
}

/**
 * Dedicated cloud service model
 */
export interface DedicatedCloudService {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {dedicatedCloudServiceName}
   */
  readonly name?: string;
  /**
   * The list of tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * gateway Subnet for the account. It will collect the subnet address and always treat it as /28
   */
  gatewaySubnet?: string;
  /**
   * indicates whether account onboarded or not in a given region
   */
  readonly isAccountOnboarded?: OnboardingStatus;
  /**
   * total nodes purchased
   */
  readonly nodes?: number;
  /**
   * link to a service management web portal
   */
  readonly serviceURL?: string;
}

/**
 * List of SKU availabilities
 */
export interface SkuAvailabilityListResponse {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
  /**
   * Results of the DedicatedPlacementGroupSkuAvailability list
   */
  value?: SkuAvailability[];
}

/**
 * SKU availability model
 */
export interface SkuAvailability {
  /**
   * CloudSimple Availability Zone id
   */
  dedicatedAvailabilityZoneId?: string;
  /**
   * CloudSimple Availability Zone Name
   */
  dedicatedAvailabilityZoneName?: string;
  /**
   * CloudSimple Placement Group Id
   */
  dedicatedPlacementGroupId?: string;
  /**
   * CloudSimple Placement Group name
   */
  dedicatedPlacementGroupName?: string;
  /**
   * indicates how many resources of a given SKU is available in a AZ->PG
   */
  limit: number;
  /**
   * resource type e.g. DedicatedCloudNodes
   */
  resourceType?: string;
  /**
   * sku id
   */
  skuId?: string;
  /**
   * sku name
   */
  skuName?: string;
}

/**
 * Operation status response
 */
export interface OperationResource {
  /**
   * End time of the operation
   */
  readonly endTime?: Date;
  /**
   * Error Message if operation failed
   */
  error?: OperationError;
  /**
   * Operation Id
   */
  readonly id?: string;
  /**
   * Operation ID
   */
  readonly name?: string;
  /**
   * Start time of the operation
   */
  readonly startTime?: Date;
  /**
   * Operation status
   */
  readonly status?: string;
}

/**
 * Operation error model
 */
export interface OperationError {
  /**
   * Error's code
   */
  code?: string;
  /**
   * Error's message
   */
  message?: string;
}

/**
 * List of private clouds
 */
export interface PrivateCloudList {
  /**
   * Link for next list of Private Clouds
   */
  nextLink?: string;
  /**
   * the list of private clouds
   */
  value?: PrivateCloud[];
}

/**
 * Private cloud model
 */
export interface PrivateCloud {
  /**
   * Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
   */
  id?: string;
  /**
   * Location where private cloud created, e.g "westus"
   */
  location?: string;
  /**
   * Private cloud name
   */
  name?: string;
  /**
   * Azure Resource type
   */
  typeModel?: "Microsoft.VMwareCloudSimple/privateClouds";
  /**
   * Availability Zone id, e.g. "az1"
   */
  availabilityZoneId?: string;
  /**
   * Availability Zone name, e.g. "Availability Zone 1"
   */
  availabilityZoneName?: string;
  /**
   * Number of clusters
   */
  clustersNumber?: number;
  /**
   * User's emails who created cloud
   */
  createdBy?: string;
  /**
   * When private cloud was created
   */
  createdOn?: Date;
  /**
   * Array of DNS servers
   */
  dnsServers?: string[];
  /**
   * Expiration date of PC
   */
  expires?: string;
  /**
   * Nsx Type, e.g. "Advanced"
   */
  nsxType?: string;
  /**
   * Placement Group id, e.g. "n1"
   */
  placementGroupId?: string;
  /**
   * Placement Group name
   */
  placementGroupName?: string;
  /**
   * Id of a private cloud
   */
  privateCloudId?: string;
  /**
   * The list of Resource Pools
   */
  resourcePools?: ResourcePool[];
  /**
   * Private Cloud state, e.g. "operational"
   */
  state?: string;
  /**
   * Number of cores
   */
  totalCpuCores?: number;
  /**
   * Number of nodes
   */
  totalNodes?: number;
  /**
   * Memory size
   */
  totalRam?: number;
  /**
   * Disk space in TB
   */
  totalStorage?: number;
  /**
   * Virtualization type e.g. "vSphere"
   */
  typePropertiesType?: string;
  /**
   * e.g. "6.5u2"
   */
  vSphereVersion?: string;
  /**
   * FQDN for vcenter access
   */
  vcenterFqdn?: string;
  /**
   * Vcenter ip address
   */
  vcenterRefid?: string;
  /**
   * The list of Virtual Machine Templates
   */
  virtualMachineTemplates?: VirtualMachineTemplate[];
  /**
   * The list of Virtual Networks
   */
  virtualNetworks?: VirtualNetwork[];
  /**
   * Is Vrops enabled/disabled
   */
  vrOpsEnabled?: boolean;
}

/**
 * Resource pool model
 */
export interface ResourcePool {
  /**
   * resource pool id (privateCloudId:vsphereId)
   */
  id: string;
  /**
   * Azure region
   */
  readonly location?: string;
  /**
   * {ResourcePoolName}
   */
  readonly name?: string;
  /**
   * The Private Cloud Id
   */
  readonly privateCloudId?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * Hierarchical resource pool name
   */
  readonly fullName?: string;
}

/**
 * Virtual machine template model
 */
export interface VirtualMachineTemplate {
  /**
   * virtual machine template id (privateCloudId:vsphereId)
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location?: string;
  /**
   * {virtualMachineTemplateName}
   */
  readonly name?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * The amount of memory
   */
  amountOfRam?: number;
  /**
   * The list of Virtual Disk Controllers
   */
  controllers?: VirtualDiskController[];
  /**
   * The description of Virtual Machine Template
   */
  description?: string;
  /**
   * The list of Virtual Disks
   */
  disks?: VirtualDisk[];
  /**
   * Expose Guest OS or not
   */
  exposeToGuestVM?: boolean;
  /**
   * The Guest OS
   */
  readonly guestOS?: string;
  /**
   * The Guest OS types
   */
  readonly guestOSType?: string;
  /**
   * The list of Virtual NICs
   */
  nics?: VirtualNic[];
  /**
   * The number of CPU cores
   */
  numberOfCores?: number;
  /**
   * path to folder
   */
  path?: string;
  /**
   * The Private Cloud Id
   */
  privateCloudId?: string;
  /**
   * The list of VSphere networks
   */
  vSphereNetworks?: string[];
  /**
   * The tags from VSphere
   */
  vSphereTags?: string[];
  /**
   * The VMware tools version
   */
  readonly vmwaretools?: string;
}

/**
 * Virtual disk controller model
 */
export interface VirtualDiskController {
  /**
   * Controller's id
   */
  readonly id?: string;
  /**
   * The display name of Controller
   */
  readonly name?: string;
  /**
   * dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)
   */
  readonly subType?: string;
  /**
   * disk controller type (SCSI)
   */
  readonly typeModel?: string;
}

/**
 * Virtual disk model
 */
export interface VirtualDisk {
  /**
   * Disk's Controller id
   */
  controllerId: string;
  /**
   * Disk's independence mode type
   */
  independenceMode: DiskIndependenceMode;
  /**
   * Disk's total size
   */
  totalSize: number;
  /**
   * Disk's id
   */
  virtualDiskId?: string;
  /**
   * Disk's display name
   */
  readonly virtualDiskName?: string;
}

/**
 * Virtual NIC model
 */
export interface VirtualNic {
  /**
   * guest OS customization for nic
   */
  customization?: GuestOsnicCustomization;
  /**
   * NIC ip address
   */
  ipAddresses?: string[];
  /**
   * NIC MAC address
   */
  macAddress?: string;
  /**
   * Virtual Network
   */
  network: VirtualNetwork;
  /**
   * NIC type
   */
  nicType: NICType;
  /**
   * Is NIC powered on/off on boot
   */
  powerOnBoot?: boolean;
  /**
   * NIC id
   */
  virtualNicId?: string;
  /**
   * NIC name
   */
  readonly virtualNicName?: string;
}

/**
 * Guest OS nic customization
 */
export interface GuestOsnicCustomization {
  /**
   * IP address allocation method
   */
  allocation?: GuestOsnicCustomizationAllocation;
  /**
   * List of dns servers to use
   */
  dnsServers?: string[];
  /**
   * Gateway addresses assigned to nic
   */
  gateway?: string[];
  /**
   * Static ip address for nic
   */
  ipAddress?: string;
  /**
   * Network mask for nic
   */
  mask?: string;
  /**
   * primary WINS server for Windows
   */
  primaryWinsServer?: string;
  /**
   * secondary WINS server for Windows
   */
  secondaryWinsServer?: string;
}

/**
 * Virtual network model
 */
export interface VirtualNetwork {
  /**
   * can be used in vm creation/deletion
   */
  readonly assignable?: boolean;
  /**
   * virtual network id (privateCloudId:vsphereId)
   */
  id: string;
  /**
   * Azure region
   */
  readonly location?: string;
  /**
   * {VirtualNetworkName}
   */
  readonly name?: string;
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * The Private Cloud id
   */
  readonly privateCloudId?: string;
}

/**
 * List of customization polices response model
 */
export interface CustomizationPoliciesListResponse {
  /**
   * Link for next list of the Customization policy
   */
  nextLink?: string;
  /**
   * List of the customization policies
   */
  value?: CustomizationPolicy[];
}

/**
 * The virtual machine customization policy
 */
export interface CustomizationPolicy {
  /**
   * Customization policy azure id
   */
  id?: string;
  /**
   * Azure region
   */
  location?: string;
  /**
   * Customization policy name
   */
  readonly name?: string;
  readonly typeModel?: string;
  /**
   * Policy description
   */
  description?: string;
  /**
   * The Private cloud id
   */
  privateCloudId?: string;
  /**
   * Detailed customization policy specification
   */
  specification?: CustomizationSpecification;
  /**
   * The type of customization (Linux or Windows)
   */
  typePropertiesType?: CustomizationPolicyPropertiesType;
  /**
   * Policy version
   */
  version?: string;
}

/**
 * The specification for Customization Policy
 */
export interface CustomizationSpecification {
  /**
   * Customization Identity. It contains data about user and hostname
   */
  identity?: CustomizationIdentity;
  /**
   * Network interface settings
   */
  nicSettings?: CustomizationNicSetting[];
}

export interface CustomizationIdentity {
  /**
   * Windows Text Identity. Prepared data
   */
  data?: string;
  /**
   * Virtual machine host name settings
   */
  hostName?: CustomizationHostName;
  /**
   * Identity type
   */
  typeModel?: CustomizationIdentityType;
  /**
   * Windows Identity. User data customization
   */
  userData?: CustomizationIdentityUserData;
}

/**
 * Host name model
 */
export interface CustomizationHostName {
  /**
   * Hostname
   */
  name?: string;
  /**
   * Type of host name
   */
  typeModel?: CustomizationHostNameType;
}

/**
 * Windows Identity. User data customization
 */
export interface CustomizationIdentityUserData {
  /**
   * Is password predefined in customization policy
   */
  isPasswordPredefined?: boolean;
}

export interface CustomizationNicSetting {
  /**
   * The list of adapters' settings
   */
  adapter?: CustomizationIPSettings;
  /**
   * NIC mac address
   */
  macAddress?: string;
}

export interface CustomizationIPSettings {
  /**
   * The list of gateways
   */
  gateway?: string[];
  /**
   * Ip address customization settings
   */
  ip?: CustomizationIPAddress;
  /**
   * Adapter subnet mask
   */
  subnetMask?: string;
}

export interface CustomizationIPAddress {
  /**
   * Argument when Custom ip type is selected
   */
  argument?: string;
  /**
   * Defined Ip Address when Fixed ip type is selected
   */
  ipAddress?: string;
  /**
   * Customization Specification ip type
   */
  typeModel?: CustomizationIPAddressType;
}

/**
 * List of resource pools response model
 */
export interface ResourcePoolsListResponse {
  /**
   * Link for next list of ResourcePoolsList
   */
  nextLink?: string;
  /**
   * Results of the Resource pools list
   */
  value?: ResourcePool[];
}

/**
 * List of virtual machine templates
 */
export interface VirtualMachineTemplateListResponse {
  /**
   * Link for next list of VirtualMachineTemplate
   */
  nextLink?: string;
  /**
   * Results of the VM template list
   */
  value?: VirtualMachineTemplate[];
}

/**
 * List of virtual networks
 */
export interface VirtualNetworkListResponse {
  /**
   * Link for next list of VirtualNetwork
   */
  nextLink?: string;
  /**
   * Results of the VirtualNetwork list
   */
  value?: VirtualNetwork[];
}

/**
 * List of usages
 */
export interface UsageListResponse {
  /**
   * Link for next list of DedicatedCloudNode
   */
  nextLink?: string;
  /**
   * The list of usages
   */
  readonly value?: Usage[];
}

/**
 * Usage model
 */
export interface Usage {
  /**
   * The current usage value
   */
  currentValue: number;
  /**
   * limit of a given sku in a region for a subscription. The maximum permitted value for the usage quota. If there is no limit, this value will be -1
   */
  limit: number;
  /**
   * Usage name value and localized name
   */
  name?: UsageName;
  /**
   * The usages' unit
   */
  unit?: UsageCount;
}

/**
 * User name model
 */
export interface UsageName {
  /**
   * e.g. "Virtual Machines"
   */
  localizedValue?: string;
  /**
   * resource type or resource type sku name, e.g. virtualMachines
   */
  value?: string;
}

/**
 * List of virtual machines
 */
export interface VirtualMachineListResponse {
  /**
   * Link for next list of VirtualMachines
   */
  nextLink?: string;
  /**
   * Results of the VirtualMachine list
   */
  value?: VirtualMachine[];
}

/**
 * Virtual machine model
 */
export interface VirtualMachine {
  /**
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/virtualMachines/{virtualMachineName}
   */
  readonly id?: string;
  /**
   * Azure region
   */
  location: string;
  /**
   * {virtualMachineName}
   */
  readonly name?: string;
  /**
   * The list of tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * {resourceProviderNamespace}/{resourceType}
   */
  readonly typeModel?: string;
  /**
   * The amount of memory
   */
  amountOfRam?: number;
  /**
   * The list of Virtual Disks' Controllers
   */
  readonly controllers?: VirtualDiskController[];
  /**
   * Virtual machine properties
   */
  customization?: GuestOSCustomization;
  /**
   * The list of Virtual Disks
   */
  disks?: VirtualDisk[];
  /**
   * The DNS name of Virtual Machine in VCenter
   */
  readonly dnsname?: string;
  /**
   * Expose Guest OS or not
   */
  exposeToGuestVM?: boolean;
  /**
   * The path to virtual machine folder in VCenter
   */
  readonly folder?: string;
  /**
   * The name of Guest OS
   */
  readonly guestOS?: string;
  /**
   * The Guest OS type
   */
  readonly guestOSType?: GuestOSType;
  /**
   * The list of Virtual NICs
   */
  nics?: VirtualNic[];
  /**
   * The number of CPU cores
   */
  numberOfCores?: number;
  /**
   * Password for login. Deprecated - use customization property
   */
  password?: string;
  /**
   * Private Cloud Id
   */
  privateCloudId?: string;
  /**
   * The provisioning status of the resource
   */
  readonly provisioningState?: string;
  /**
   * The public ip of Virtual Machine
   */
  readonly publicIP?: string;
  /**
   * Virtual Machines Resource Pool
   */
  resourcePool?: ResourcePool;
  /**
   * The status of Virtual machine
   */
  readonly status?: VirtualMachineStatus;
  /**
   * Virtual Machine Template Id
   */
  templateId?: string;
  /**
   * Username for login. Deprecated - use customization property
   */
  username?: string;
  /**
   * The list of Virtual VSphere Networks
   */
  vSphereNetworks?: string[];
  /**
   * The internal id of Virtual Machine in VCenter
   */
  readonly vmId?: string;
  /**
   * VMware tools version
   */
  readonly vmwaretools?: string;
}

/**
 * Guest OS Customization properties
 */
export interface GuestOSCustomization {
  /**
   * List of dns servers to use
   */
  dnsServers?: string[];
  /**
   * Virtual Machine hostname
   */
  hostName?: string;
  /**
   * Password for login
   */
  password?: string;
  /**
   * id of customization policy
   */
  policyId?: string;
  /**
   * Username for login
   */
  username?: string;
}

/**
 * General patch payload modal
 */
export interface PatchPayload {
  /**
   * The tags key:value pairs
   */
  tags?: { [propertyName: string]: string };
}

/**
 * List of virtual machine stop modes
 */
export interface VirtualMachineStopMode {
  /**
   * mode indicates a type of stop operation - reboot, suspend, shutdown or power-off
   */
  mode?: StopMode;
}

/**
 * Defines headers for dedicatedCloudNodes_createOrUpdate operation.
 */
export interface DedicatedCloudNodesCreateOrUpdateHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for virtualMachines_createOrUpdate operation.
 */
export interface VirtualMachinesCreateOrUpdateHeaders {
  azureAsyncOperation?: string;
}

/**
 * Defines headers for virtualMachines_deleteModel operation.
 */
export interface VirtualMachinesDeleteModelHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines values for GuestOsnicCustomizationAllocation.
 */
export type GuestOsnicCustomizationAllocation = "static" | "dynamic";
/**
 * Defines values for CustomizationHostNameType.
 */
export type CustomizationHostNameType =
  | "USER_DEFINED"
  | "PREFIX_BASED"
  | "FIXED"
  | "VIRTUAL_MACHINE_NAME"
  | "CUSTOM_NAME";
/**
 * Defines values for CustomizationIdentityType.
 */
export type CustomizationIdentityType = "WINDOWS_TEXT" | "WINDOWS" | "LINUX";
/**
 * Defines values for CustomizationIPAddressType.
 */
export type CustomizationIPAddressType =
  | "CUSTOM"
  | "DHCP_IP"
  | "FIXED_IP"
  | "USER_DEFINED";
/**
 * Defines values for CustomizationPolicyPropertiesType.
 */
export type CustomizationPolicyPropertiesType = "LINUX" | "WINDOWS";
/**
 * Defines values for OperationOrigin.
 */
export type OperationOrigin = "user" | "system" | "user,system";
/**
 * Defines values for AggregationType.
 */
export type AggregationType = "Average" | "Total";
/**
 * Defines values for NodeStatus.
 */
export type NodeStatus = "unused" | "used";
/**
 * Defines values for OnboardingStatus.
 */
export type OnboardingStatus =
  | "notOnBoarded"
  | "onBoarded"
  | "onBoardingFailed"
  | "onBoarding";
/**
 * Defines values for DiskIndependenceMode.
 */
export type DiskIndependenceMode =
  | "persistent"
  | "independent_persistent"
  | "independent_nonpersistent";
/**
 * Defines values for NICType.
 */
export type NICType =
  | "E1000"
  | "E1000E"
  | "PCNET32"
  | "VMXNET"
  | "VMXNET2"
  | "VMXNET3";
/**
 * Defines values for UsageCount.
 */
export type UsageCount =
  | "Count"
  | "Bytes"
  | "Seconds"
  | "Percent"
  | "CountPerSecond"
  | "BytesPerSecond";
/**
 * Defines values for GuestOSType.
 */
export type GuestOSType = "linux" | "windows" | "other";
/**
 * Defines values for VirtualMachineStatus.
 */
export type VirtualMachineStatus =
  | "running"
  | "suspended"
  | "poweredoff"
  | "updating"
  | "deallocating"
  | "deleting";
/**
 * Defines values for StopMode.
 */
export type StopMode = "reboot" | "suspend" | "shutdown" | "poweroff";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = AvailableOperationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableOperationsListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type OperationsGetResponse = OperationResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationResource;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = AvailableOperationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableOperationsListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudNodesListBySubscriptionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscription operation.
 */
export type DedicatedCloudNodesListBySubscriptionResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNodeListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudNodesListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DedicatedCloudNodesListByResourceGroupResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNodeListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type DedicatedCloudNodesGetResponse = DedicatedCloudNode & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNode;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedCloudNodesCreateOrUpdateResponse = DedicatedCloudNodesCreateOrUpdateHeaders &
  DedicatedCloudNode & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DedicatedCloudNode;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: DedicatedCloudNodesCreateOrUpdateHeaders;
    };
  };

/**
 * Contains response data for the update operation.
 */
export type DedicatedCloudNodesUpdateResponse = DedicatedCloudNode & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNode;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudNodesListBySubscriptionNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DedicatedCloudNodesListBySubscriptionNextResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNodeListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudNodesListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DedicatedCloudNodesListByResourceGroupNextResponse = DedicatedCloudNodeListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudNodeListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudServicesListBySubscriptionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscription operation.
 */
export type DedicatedCloudServicesListBySubscriptionResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudServiceListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudServicesListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type DedicatedCloudServicesListByResourceGroupResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudServiceListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type DedicatedCloudServicesGetResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudService;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type DedicatedCloudServicesCreateOrUpdateResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudService;
  };
};

/**
 * Contains response data for the update operation.
 */
export type DedicatedCloudServicesUpdateResponse = DedicatedCloudService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudService;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudServicesListBySubscriptionNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type DedicatedCloudServicesListBySubscriptionNextResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudServiceListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface DedicatedCloudServicesListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type DedicatedCloudServicesListByResourceGroupNextResponse = DedicatedCloudServiceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DedicatedCloudServiceListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface SkusAvailabilityListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * sku id, if no sku is passed availability for all skus will be returned
   */
  skuId?: string;
}

/**
 * Contains response data for the list operation.
 */
export type SkusAvailabilityListResponse = SkuAvailabilityListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SkuAvailabilityListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface SkusAvailabilityListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * sku id, if no sku is passed availability for all skus will be returned
   */
  skuId?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type SkusAvailabilityListNextResponse = SkuAvailabilityListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SkuAvailabilityListResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type PrivateCloudsListResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateCloudList;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type PrivateCloudsGetResponse = PrivateCloud & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateCloud;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type PrivateCloudsListNextResponse = PrivateCloudList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PrivateCloudList;
  };
};

/**
 * Optional parameters.
 */
export interface CustomizationPoliciesListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx'
   */
  filter?: string;
}

/**
 * Contains response data for the list operation.
 */
export type CustomizationPoliciesListResponse = CustomizationPoliciesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomizationPoliciesListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type CustomizationPoliciesGetResponse = CustomizationPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomizationPolicy;
  };
};

/**
 * Optional parameters.
 */
export interface CustomizationPoliciesListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx'
   */
  filter?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type CustomizationPoliciesListNextResponse = CustomizationPoliciesListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomizationPoliciesListResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ResourcePoolsListResponse = ResourcePoolsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourcePoolsListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type ResourcePoolsGetResponse = ResourcePool & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourcePool;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ResourcePoolsListNextResponse = ResourcePoolsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ResourcePoolsListResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualMachineTemplatesListResponse = VirtualMachineTemplateListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineTemplateListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type VirtualMachineTemplatesGetResponse = VirtualMachineTemplate & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineTemplate;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualMachineTemplatesListNextResponse = VirtualMachineTemplateListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineTemplateListResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type VirtualNetworksListResponse = VirtualNetworkListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualNetworkListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type VirtualNetworksGetResponse = VirtualNetwork & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualNetwork;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type VirtualNetworksListNextResponse = VirtualNetworkListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualNetworkListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface UsagesListOptionalParams extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx'
   */
  filter?: string;
}

/**
 * Contains response data for the list operation.
 */
export type UsagesListResponse = UsageListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UsageListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface UsagesListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx'
   */
  filter?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type UsagesListNextResponse = UsageListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UsageListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface VirtualMachinesListBySubscriptionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscription operation.
 */
export type VirtualMachinesListBySubscriptionResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface VirtualMachinesListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type VirtualMachinesListByResourceGroupResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineListResponse;
  };
};

/**
 * Contains response data for the getModel operation.
 */
export type VirtualMachinesGetResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachine;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type VirtualMachinesCreateOrUpdateResponse = VirtualMachinesCreateOrUpdateHeaders &
  VirtualMachine & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: VirtualMachine;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: VirtualMachinesCreateOrUpdateHeaders;
    };
  };

/**
 * Contains response data for the deleteModel operation.
 */
export type VirtualMachinesDeleteResponse = VirtualMachinesDeleteModelHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: VirtualMachinesDeleteModelHeaders;
  };
};

/**
 * Contains response data for the update operation.
 */
export type VirtualMachinesUpdateResponse = VirtualMachine & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachine;
  };
};

/**
 * Optional parameters.
 */
export interface VirtualMachinesStopOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * body stop mode parameter (reboot, shutdown, etc...)
   */
  m?: VirtualMachineStopMode;
  /**
   * query stop mode parameter (reboot, shutdown, etc...)
   */
  mode?: StopMode;
}

/**
 * Optional parameters.
 */
export interface VirtualMachinesListBySubscriptionNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type VirtualMachinesListBySubscriptionNextResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface VirtualMachinesListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The maximum number of record sets to return
   */
  top?: number;
  /**
   * The filter to apply on the list operation
   */
  filter?: string;
  /**
   * to be used by nextLink implementation
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type VirtualMachinesListByResourceGroupNextResponse = VirtualMachineListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: VirtualMachineListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface VMwareCloudSimpleOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
