/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SqlManagementClient } from "../sqlManagementClient";
import {
  VulnerabilityAssessmentPolicyBaselineName,
  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse,
  DatabaseVulnerabilityAssessmentRuleBaseline,
  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse
} from "../models";

/**
 * Class representing a ManagedDatabaseVulnerabilityAssessmentRuleBaselines.
 */
export class ManagedDatabaseVulnerabilityAssessmentRuleBaselines {
  private readonly client: SqlManagementClient;

  /**
   * Initialize a new instance of the class ManagedDatabaseVulnerabilityAssessmentRuleBaselines class.
   * @param client Reference to the service client
   */
  constructor(client: SqlManagementClient) {
    this.client = client;
  }

  /**
   * Gets a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param managedInstanceName The name of the managed instance.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    databaseName: string,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    managedInstanceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        databaseName,
        ruleId,
        baselineName,
        managedInstanceName,
        options: operationOptions
      },
      getOperationSpec
    ) as Promise<
      ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse
    >;
  }

  /**
   * Creates or updates a database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param parameters The requested rule baseline resource.
   * @param managedInstanceName The name of the managed instance.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    databaseName: string,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    parameters: DatabaseVulnerabilityAssessmentRuleBaseline,
    managedInstanceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse
  > {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        databaseName,
        ruleId,
        baselineName,
        parameters,
        managedInstanceName,
        options: operationOptions
      },
      createOrUpdateOperationSpec
    ) as Promise<
      ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse
    >;
  }

  /**
   * Removes the database's vulnerability assessment rule baseline.
   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
   *                          this value from the Azure Resource Manager API or the portal.
   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is
   *                     defined.
   * @param ruleId The vulnerability assessment rule ID.
   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
   *                     baseline on a database level rule and master for server level rule).
   * @param managedInstanceName The name of the managed instance.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    databaseName: string,
    ruleId: string,
    baselineName: VulnerabilityAssessmentPolicyBaselineName,
    managedInstanceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        databaseName,
        ruleId,
        baselineName,
        managedInstanceName,
        options: operationOptions
      },
      deleteOperationSpec
    ) as Promise<coreHttp.RestResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.databaseName18,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.managedInstanceName
  ],
  serializer
};
const createOrUpdateOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline
    },
    default: {}
  },
  requestBody: Parameters.parameters31,
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.databaseName18,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.managedInstanceName
  ],
  headerParameters: [Parameters.contentType],
  serializer
};
const deleteOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
  httpMethod: "DELETE",
  responses: { 200: {}, default: {} },
  queryParameters: [Parameters.apiVersion1],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.databaseName18,
    Parameters.vulnerabilityAssessmentName,
    Parameters.ruleId,
    Parameters.baselineName,
    Parameters.managedInstanceName
  ],
  serializer
};
