/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-07-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const parameters: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.CheckNameAvailabilityParameters
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const name: coreHttp.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const history: coreHttp.OperationQueryParameter = {
  parameterPath: "history",
  mapper: {
    serializedName: "history",
    required: true,
    type: {
      name: "Number"
    }
  }
};

export const parameters1: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisCreateParameters
};

export const parameters2: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisUpdateParameters
};

export const parameters3: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisRegenerateKeyParameters
};

export const parameters4: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisRebootParameters
};

export const parameters5: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.ImportRDBParameters
};

export const parameters6: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.ExportRDBParameters
};

export const nextLink1: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const cacheName: coreHttp.OperationURLParameter = {
  parameterPath: "cacheName",
  mapper: {
    serializedName: "cacheName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters7: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisFirewallRuleCreateParameters
};

export const ruleName: coreHttp.OperationURLParameter = {
  parameterPath: "ruleName",
  mapper: {
    serializedName: "ruleName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink2: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters8: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisPatchSchedule
};

export const defaultModel: coreHttp.OperationURLParameter = {
  parameterPath: "defaultModel",
  mapper: {
    defaultValue: "default",
    serializedName: "default",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const name1: coreHttp.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters9: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RedisLinkedServerCreateParameters
};

export const linkedServerName: coreHttp.OperationURLParameter = {
  parameterPath: "linkedServerName",
  mapper: {
    serializedName: "linkedServerName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const linkedServerName1: coreHttp.OperationURLParameter = {
  parameterPath: "linkedServerName",
  mapper: {
    serializedName: "linkedServerName",
    required: true,
    type: {
      name: "String"
    }
  }
};
