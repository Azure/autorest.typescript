/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { EventGridManagementClientContext } from "./eventGridManagementClientContext";

class EventGridManagementClient extends EventGridManagementClientContext {
  /**
   * Initializes a new instance of the EventGridManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Subscription credentials that uniquely identify a Microsoft Azure
   *                       subscription. The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.EventGridManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.domains = new operations.Domains(this);
    this.domainTopics = new operations.DomainTopics(this);
    this.eventChannels = new operations.EventChannels(this);
    this.eventSubscriptions = new operations.EventSubscriptions(this);
    this.systemTopicEventSubscriptions = new operations.SystemTopicEventSubscriptions(
      this
    );
    this.partnerTopicEventSubscriptions = new operations.PartnerTopicEventSubscriptions(
      this
    );
    this.operations = new operations.Operations(this);
    this.partnerNamespaces = new operations.PartnerNamespaces(this);
    this.partnerRegistrations = new operations.PartnerRegistrations(this);
    this.partnerTopics = new operations.PartnerTopics(this);
    this.privateEndpointConnections = new operations.PrivateEndpointConnections(
      this
    );
    this.privateLinkResources = new operations.PrivateLinkResources(this);
    this.systemTopics = new operations.SystemTopics(this);
    this.topics = new operations.Topics(this);
    this.extensionTopics = new operations.ExtensionTopics(this);
    this.topicTypes = new operations.TopicTypes(this);
  }

  domains: operations.Domains;
  domainTopics: operations.DomainTopics;
  eventChannels: operations.EventChannels;
  eventSubscriptions: operations.EventSubscriptions;
  systemTopicEventSubscriptions: operations.SystemTopicEventSubscriptions;
  partnerTopicEventSubscriptions: operations.PartnerTopicEventSubscriptions;
  operations: operations.Operations;
  partnerNamespaces: operations.PartnerNamespaces;
  partnerRegistrations: operations.PartnerRegistrations;
  partnerTopics: operations.PartnerTopics;
  privateEndpointConnections: operations.PrivateEndpointConnections;
  privateLinkResources: operations.PrivateLinkResources;
  systemTopics: operations.SystemTopics;
  topics: operations.Topics;
  extensionTopics: operations.ExtensionTopics;
  topicTypes: operations.TopicTypes;
}

// Operation Specifications

export {
  EventGridManagementClient,
  EventGridManagementClientContext,
  Models as EventGridManagementModels,
  Mappers as EventGridManagementMappers
};
export * from "./operations";
