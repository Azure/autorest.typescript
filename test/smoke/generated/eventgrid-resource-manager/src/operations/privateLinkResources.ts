/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { EventGridManagementClient } from "../eventGridManagementClient";
import {
  PrivateLinkResourcesGetResponse,
  PrivateLinkResourcesListByResourceOptionalParams,
  PrivateLinkResourcesListByResourceResponse,
  PrivateLinkResourcesListByResourceNextOptionalParams,
  PrivateLinkResourcesListByResourceNextResponse
} from "../models";

/**
 * Class representing a PrivateLinkResources.
 */
export class PrivateLinkResources {
  private readonly client: EventGridManagementClient;

  /**
   * Initialize a new instance of the class PrivateLinkResources class.
   * @param client Reference to the service client
   */
  constructor(client: EventGridManagementClient) {
    this.client = client;
  }

  /**
   * Get properties of a private link resource.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
   * @param privateLinkResourceName The name of private link resource.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    parentType: string,
    parentName: string,
    privateLinkResourceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<PrivateLinkResourcesGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        parentType,
        parentName,
        privateLinkResourceName,
        options: operationOptions
      },
      getOperationSpec
    ) as Promise<PrivateLinkResourcesGetResponse>;
  }

  /**
   * List all the private link resources under a topic or domain.
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
   * @param options The options parameters.
   */
  listByResource(
    resourceGroupName: string,
    parentType: string,
    parentName: string,
    options?: PrivateLinkResourcesListByResourceOptionalParams
  ): Promise<PrivateLinkResourcesListByResourceResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { resourceGroupName, parentType, parentName, options: operationOptions },
      listByResourceOperationSpec
    ) as Promise<PrivateLinkResourcesListByResourceResponse>;
  }

  /**
   * ListByResourceNext
   * @param resourceGroupName The name of the resource group within the user's subscription.
   * @param nextLink The nextLink from the previous successful call to the ListByResource method.
   * @param parentType The type of the parent resource. This can be either \'topics\' or \'domains\'.
   * @param parentName The name of the parent resource (namely, either, the topic name or domain name).
   * @param options The options parameters.
   */
  listByResourceNext(
    resourceGroupName: string,
    nextLink: string,
    parentType: string,
    parentName: string,
    options?: PrivateLinkResourcesListByResourceNextOptionalParams
  ): Promise<PrivateLinkResourcesListByResourceNextResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        nextLink,
        parentType,
        parentName,
        options: operationOptions
      },
      listByResourceNextOperationSpec
    ) as Promise<PrivateLinkResourcesListByResourceNextResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResource
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentType,
    Parameters.parentName,
    Parameters.privateLinkResourceName
  ],
  serializer
};
const listByResourceOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourcesListResult
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.parentType,
    Parameters.parentName
  ],
  serializer
};
const listByResourceNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PrivateLinkResourcesListResult
    },
    default: {}
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter, Parameters.top],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.nextLink12,
    Parameters.parentType,
    Parameters.parentName
  ],
  serializer
};
