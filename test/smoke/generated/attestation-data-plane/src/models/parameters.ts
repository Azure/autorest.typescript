/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "text/plain",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const policyJws: coreHttp.OperationParameter = {
  parameterPath: "policyJws",
  mapper: {
    serializedName: "policyJws",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const tenantBaseUrl: coreHttp.OperationURLParameter = {
  parameterPath: "tenantBaseUrl",
  mapper: {
    serializedName: "tenantBaseUrl",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-09-01-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const tee: coreHttp.OperationQueryParameter = {
  parameterPath: "tee",
  mapper: {
    serializedName: "tee",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const newAttestationPolicy: coreHttp.OperationParameter = {
  parameterPath: "newAttestationPolicy",
  mapper: {
    serializedName: "newAttestationPolicy",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const policyJws1: coreHttp.OperationParameter = {
  parameterPath: "policyJws",
  mapper: {
    serializedName: "policyJws",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType1: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const policyCertificateToAdd: coreHttp.OperationParameter = {
  parameterPath: "policyCertificateToAdd",
  mapper: {
    serializedName: "policyCertificateToAdd",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const policyCertificateToRemove: coreHttp.OperationParameter = {
  parameterPath: "policyCertificateToRemove",
  mapper: {
    serializedName: "policyCertificateToRemove",
    required: true,
    type: {
      name: "String"
    }
  }
};
