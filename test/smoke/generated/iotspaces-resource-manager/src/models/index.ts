/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The common properties of an IoTSpaces service.
 */
export interface Resource {
  /**
   * The resource identifier.
   */
  readonly id?: string;
  /**
   * The resource name.
   */
  readonly name?: string;
  /**
   * The resource type.
   */
  readonly type?: string;
  /**
   * The resource location.
   */
  location: string;
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The description of the IoTSpaces service.
 */
export type IoTSpacesDescription = Resource & {
  /**
   * The common properties of a IoTSpaces service.
   */
  properties?: IoTSpacesProperties;
  /**
   * A valid instance SKU.
   */
  sku: IoTSpacesSkuInfo;
};

/**
 * The properties of an IoTSpaces instance.
 */
export interface IoTSpacesProperties {
  /**
   * The provisioning state.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The management Api endpoint.
   */
  readonly managementApiUrl?: string;
  /**
   * The management UI endpoint.
   */
  readonly webPortalUrl?: string;
  /**
   * The properties of the designated storage container.
   */
  storageContainer?: StorageContainerProperties;
}

/**
 * The properties of the Azure Storage Container for file archive.
 */
export interface StorageContainerProperties {
  /**
   * The connection string of the storage account.
   */
  connectionString?: string;
  /**
   * The subscription identifier of the storage account.
   */
  subscriptionId?: string;
  /**
   * The name of the resource group of the storage account.
   */
  resourceGroup?: string;
  /**
   * The name of storage container in the storage account.
   */
  containerName?: string;
}

/**
 * Information about the SKU of the IoTSpaces instance.
 */
export interface IoTSpacesSkuInfo {
  /**
   * The name of the SKU.
   */
  name: IoTSpacesSku;
}

/**
 * Error details.
 */
export interface ErrorDetails {
  /**
   * The error code.
   */
  readonly code?: string;
  /**
   * The error message.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   */
  readonly target?: string;
}

/**
 * The description of the IoTSpaces service.
 */
export interface IoTSpacesPatchDescription {
  /**
   * Instance tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * The common properties of an IoTSpaces service.
   */
  properties?: IoTSpacesProperties;
}

/**
 * A list of IoTSpaces description objects with a next link.
 */
export interface IoTSpacesDescriptionListResult {
  /**
   * The link used to get the next page of IoTSpaces description objects.
   */
  nextLink?: string;
  /**
   * A list of IoTSpaces description objects.
   */
  value?: IoTSpacesDescription[];
}

/**
 * A list of IoTSpaces service operations. It contains a list of operations and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * The link used to get the next page of IoTSpaces description objects.
   */
  nextLink?: string;
  /**
   * A list of IoT spaces operations supported by the Microsoft.IoTSpaces resource provider.
   */
  readonly value?: Operation[];
}

/**
 * IoTSpaces service REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{read | write | action | delete}
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft IoTSpaces
   */
  readonly provider?: string;
  /**
   * Resource Type: IoTSpaces
   */
  readonly resource?: string;
  /**
   * Name of the operation
   */
  readonly operation?: string;
  /**
   * Friendly description for the operation,
   */
  readonly description?: string;
}

/**
 * Input values.
 */
export interface OperationInputs {
  /**
   * The name of the IoTSpaces service instance to check.
   */
  name: string;
}

/**
 * The properties indicating whether a given IoTSpaces service name is available.
 */
export interface IoTSpacesNameAvailabilityInfo {
  /**
   * The value which indicates whether the provided name is available.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason for unavailability.
   */
  readonly reason?: IoTSpacesNameUnavailabilityReason;
  /**
   * The detailed reason message.
   */
  message?: string;
}

/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Provisioning"
  | "Deleting"
  | "Succeeded"
  | "Failed"
  | "Canceled";
/**
 * Defines values for IoTSpacesSku.
 */
export type IoTSpacesSku = "F1" | "S1" | "S2" | "S3";
/**
 * Defines values for IoTSpacesNameUnavailabilityReason.
 */
export type IoTSpacesNameUnavailabilityReason = "Invalid" | "AlreadyExists";

/**
 * Contains response data for the get operation.
 */
export type IoTSpacesGetResponse = IoTSpacesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescription;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type IoTSpacesCreateOrUpdateResponse = IoTSpacesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescription;
  };
};

/**
 * Contains response data for the update operation.
 */
export type IoTSpacesUpdateResponse = IoTSpacesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescription;
  };
};

/**
 * Contains response data for the delete operation.
 */
export type IoTSpacesDeleteResponse = IoTSpacesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescription;
  };
};

/**
 * Contains response data for the list operation.
 */
export type IoTSpacesListResponse = IoTSpacesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescriptionListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type IoTSpacesListByResourceGroupResponse = IoTSpacesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescriptionListResult;
  };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type IoTSpacesCheckNameAvailabilityResponse = IoTSpacesNameAvailabilityInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesNameAvailabilityInfo;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type IoTSpacesListNextResponse = IoTSpacesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescriptionListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type IoTSpacesListByResourceGroupNextResponse = IoTSpacesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: IoTSpacesDescriptionListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Optional parameters.
 */
export interface IoTSpacesClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
