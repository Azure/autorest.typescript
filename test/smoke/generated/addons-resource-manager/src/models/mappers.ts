/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationsDefinition: coreHttp.CompositeMapper = {
  serializedName: "OperationsDefinition",
  type: {
    name: "Composite",
    className: "OperationsDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationsDisplayDefinition"
        }
      }
    }
  }
};

export const OperationsDisplayDefinition: coreHttp.CompositeMapper = {
  serializedName: "OperationsDisplayDefinition",
  type: {
    name: "Composite",
    className: "OperationsDisplayDefinition",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDefinition: coreHttp.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      code: {
        constraints: {
          InclusiveMaximum: 600,
          InclusiveMinimum: 100
        },
        serializedName: "code",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CanonicalSupportPlanResponseEnvelope: coreHttp.CompositeMapper = {
  serializedName: "CanonicalSupportPlanResponseEnvelope",
  type: {
    name: "Composite",
    className: "CanonicalSupportPlanResponseEnvelope",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      typeModel: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CanonicalSupportPlanInfoDefinition: coreHttp.CompositeMapper = {
  serializedName: "CanonicalSupportPlanInfoDefinition",
  type: {
    name: "Composite",
    className: "CanonicalSupportPlanInfoDefinition",
    modelProperties: {
      supportPlanType: {
        serializedName: "supportPlanType",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      oneTimeCharge: {
        serializedName: "oneTimeCharge",
        type: {
          name: "String"
        }
      }
    }
  }
};
