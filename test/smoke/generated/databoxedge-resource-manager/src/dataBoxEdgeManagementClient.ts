/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { DataBoxEdgeManagementClientContext } from "./dataBoxEdgeManagementClientContext";

class DataBoxEdgeManagementClient extends DataBoxEdgeManagementClientContext {
  /**
   * Initializes a new instance of the DataBoxEdgeManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The subscription ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.DataBoxEdgeManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.devices = new operations.Devices(this);
    this.alerts = new operations.Alerts(this);
    this.bandwidthSchedules = new operations.BandwidthSchedules(this);
    this.jobs = new operations.Jobs(this);
    this.nodes = new operations.Nodes(this);
    this.operationsStatus = new operations.OperationsStatus(this);
    this.orders = new operations.Orders(this);
    this.roles = new operations.Roles(this);
    this.shares = new operations.Shares(this);
    this.storageAccountCredentials = new operations.StorageAccountCredentials(
      this
    );
    this.storageAccounts = new operations.StorageAccounts(this);
    this.containers = new operations.Containers(this);
    this.triggers = new operations.Triggers(this);
    this.users = new operations.Users(this);
    this.skus = new operations.Skus(this);
  }

  operations: operations.Operations;
  devices: operations.Devices;
  alerts: operations.Alerts;
  bandwidthSchedules: operations.BandwidthSchedules;
  jobs: operations.Jobs;
  nodes: operations.Nodes;
  operationsStatus: operations.OperationsStatus;
  orders: operations.Orders;
  roles: operations.Roles;
  shares: operations.Shares;
  storageAccountCredentials: operations.StorageAccountCredentials;
  storageAccounts: operations.StorageAccounts;
  containers: operations.Containers;
  triggers: operations.Triggers;
  users: operations.Users;
  skus: operations.Skus;
}

// Operation Specifications

export {
  DataBoxEdgeManagementClient,
  DataBoxEdgeManagementClientContext,
  Models as DataBoxEdgeManagementModels,
  Mappers as DataBoxEdgeManagementMappers
};
export * from "./operations";
