/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { DataBoxEdgeManagementClient } from "../dataBoxEdgeManagementClient";
import { NodesListByDataBoxEdgeDeviceResponse } from "../models";

/**
 * Class representing a Nodes.
 */
export class Nodes {
  private readonly client: DataBoxEdgeManagementClient;

  /**
   * Initialize a new instance of the class Nodes class.
   * @param client Reference to the service client
   */
  constructor(client: DataBoxEdgeManagementClient) {
    this.client = client;
  }

  /**
   * Gets all the nodes currently configured under this Data Box Edge device
   * @param resourceGroupName The resource group name.
   * @param deviceName The device name.
   * @param options The options parameters.
   */
  listByDataBoxEdgeDevice(
    resourceGroupName: string,
    deviceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<NodesListByDataBoxEdgeDeviceResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { resourceGroupName, deviceName, options: operationOptions },
      listByDataBoxEdgeDeviceOperationSpec
    ) as Promise<NodesListByDataBoxEdgeDeviceResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listByDataBoxEdgeDeviceOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.NodeList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.deviceName
  ],
  serializer
};
