/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-12-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const parameters: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.AvailabilitySet
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const availabilitySetName: coreHttp.OperationURLParameter = {
  parameterPath: "availabilitySetName",
  mapper: {
    serializedName: "availabilitySetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters1: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.AvailabilitySetUpdate
};

export const expand: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const nextLink1: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters2: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.ProximityPlacementGroup
};

export const proximityPlacementGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "proximityPlacementGroupName",
  mapper: {
    serializedName: "proximityPlacementGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters3: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.UpdateResource
};

export const includeColocationStatus: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "includeColocationStatus"],
  mapper: {
    serializedName: "includeColocationStatus",
    type: {
      name: "String"
    }
  }
};

export const nextLink2: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters4: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.DedicatedHostGroup
};

export const hostGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "hostGroupName",
  mapper: {
    serializedName: "hostGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters5: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.DedicatedHostGroupUpdate
};

export const parameters6: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.DedicatedHost
};

export const hostName: coreHttp.OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    serializedName: "hostName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters7: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.DedicatedHostUpdate
};

export const hostName1: coreHttp.OperationURLParameter = {
  parameterPath: "hostName",
  mapper: {
    serializedName: "hostName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    defaultValue: "instanceView",
    isConstant: true,
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const nextLink3: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters8: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.SshPublicKeyResource
};

export const sshPublicKeyName: coreHttp.OperationURLParameter = {
  parameterPath: "sshPublicKeyName",
  mapper: {
    serializedName: "sshPublicKeyName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters9: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.SshPublicKeyUpdateResource
};

export const location: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const publisherName: coreHttp.OperationURLParameter = {
  parameterPath: "publisherName",
  mapper: {
    serializedName: "publisherName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const typeParam: coreHttp.OperationURLParameter = {
  parameterPath: "typeParam",
  mapper: {
    serializedName: "type",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const version: coreHttp.OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    serializedName: "version",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const top: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const orderby: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "orderby"],
  mapper: {
    serializedName: "$orderby",
    type: {
      name: "String"
    }
  }
};

export const extensionParameters: coreHttp.OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: Mappers.VirtualMachineExtension
};

export const vmName: coreHttp.OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmExtensionName: coreHttp.OperationURLParameter = {
  parameterPath: "vmExtensionName",
  mapper: {
    serializedName: "vmExtensionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extensionParameters1: coreHttp.OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: Mappers.VirtualMachineExtensionUpdate
};

export const vmName1: coreHttp.OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmName2: coreHttp.OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmName3: coreHttp.OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand2: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const publisherName1: coreHttp.OperationURLParameter = {
  parameterPath: "publisherName",
  mapper: {
    serializedName: "publisherName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const offer: coreHttp.OperationURLParameter = {
  parameterPath: "offer",
  mapper: {
    serializedName: "offer",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const skus: coreHttp.OperationURLParameter = {
  parameterPath: "skus",
  mapper: {
    serializedName: "skus",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const version1: coreHttp.OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    serializedName: "version",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const location1: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-w._]+$")
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const location2: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-w._]+$")
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters10: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachineCaptureParameters
};

export const vmName4: coreHttp.OperationURLParameter = {
  parameterPath: "vmName",
  mapper: {
    serializedName: "vmName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters11: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachine
};

export const parameters12: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachineUpdate
};

export const statusOnly: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "statusOnly"],
  mapper: {
    serializedName: "statusOnly",
    type: {
      name: "String"
    }
  }
};

export const skipShutdown: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "skipShutdown"],
  mapper: {
    serializedName: "skipShutdown",
    type: {
      name: "Boolean"
    }
  }
};

export const parameters13: coreHttp.OperationParameter = {
  parameterPath: ["options", "parameters"],
  mapper: Mappers.VirtualMachineReimageParameters
};

export const parameters14: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RunCommandInput
};

export const nextLink4: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const nextLink5: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const location3: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-w._]+$")
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters15: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.Image
};

export const imageName: coreHttp.OperationURLParameter = {
  parameterPath: "imageName",
  mapper: {
    serializedName: "imageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters16: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.ImageUpdate
};

export const parameters17: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachineScaleSet
};

export const vmScaleSetName: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters18: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachineScaleSetUpdate
};

export const vmScaleSetName1: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmInstanceIDs: coreHttp.OperationParameter = {
  parameterPath: ["options", "vmInstanceIDs"],
  mapper: Mappers.VirtualMachineScaleSetVMInstanceIDs
};

export const vmInstanceIDs1: coreHttp.OperationParameter = {
  parameterPath: "vmInstanceIDs",
  mapper: Mappers.VirtualMachineScaleSetVMInstanceRequiredIDs
};

export const vmScaleSetReimageInput: coreHttp.OperationParameter = {
  parameterPath: ["options", "vmScaleSetReimageInput"],
  mapper: Mappers.VirtualMachineScaleSetReimageParameters
};

export const platformUpdateDomain: coreHttp.OperationQueryParameter = {
  parameterPath: "platformUpdateDomain",
  mapper: {
    serializedName: "platformUpdateDomain",
    required: true,
    type: {
      name: "Number"
    }
  }
};

export const parameters19: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VMScaleSetConvertToSinglePlacementGroupInput
};

export const vmScaleSetName2: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters20: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.OrchestrationServiceStateInput
};

export const nextLink6: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const nextLink7: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const extensionParameters2: coreHttp.OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: Mappers.VirtualMachineScaleSetExtension
};

export const vmScaleSetName3: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmssExtensionName: coreHttp.OperationURLParameter = {
  parameterPath: "vmssExtensionName",
  mapper: {
    serializedName: "vmssExtensionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extensionParameters3: coreHttp.OperationParameter = {
  parameterPath: "extensionParameters",
  mapper: Mappers.VirtualMachineScaleSetExtensionUpdate
};

export const vmScaleSetName4: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmScaleSetName5: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmScaleSetName6: coreHttp.OperationURLParameter = {
  parameterPath: "vmScaleSetName",
  mapper: {
    serializedName: "vmScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const instanceId: coreHttp.OperationURLParameter = {
  parameterPath: "instanceId",
  mapper: {
    serializedName: "instanceId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const vmScaleSetVMReimageInput: coreHttp.OperationParameter = {
  parameterPath: ["options", "vmScaleSetVMReimageInput"],
  mapper: Mappers.VirtualMachineReimageParameters
};

export const parameters21: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.VirtualMachineScaleSetVM
};

export const virtualMachineScaleSetName: coreHttp.OperationURLParameter = {
  parameterPath: "virtualMachineScaleSetName",
  mapper: {
    serializedName: "virtualMachineScaleSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const select: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "select"],
  mapper: {
    serializedName: "$select",
    type: {
      name: "String"
    }
  }
};

export const parameters22: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.RequestRateByIntervalInput
};

export const parameters23: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.LogAnalyticsInputBase
};

export const location4: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    constraints: {
      Pattern: new RegExp("^[-w._]+$")
    },
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const commandId: coreHttp.OperationURLParameter = {
  parameterPath: "commandId",
  mapper: {
    serializedName: "commandId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion1: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-04-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const disk: coreHttp.OperationParameter = {
  parameterPath: "disk",
  mapper: Mappers.Disk
};

export const diskName: coreHttp.OperationURLParameter = {
  parameterPath: "diskName",
  mapper: {
    serializedName: "diskName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion2: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-11-01",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const disk1: coreHttp.OperationParameter = {
  parameterPath: "disk",
  mapper: Mappers.DiskUpdate
};

export const grantAccessData: coreHttp.OperationParameter = {
  parameterPath: "grantAccessData",
  mapper: Mappers.GrantAccessData
};

export const snapshot: coreHttp.OperationParameter = {
  parameterPath: "snapshot",
  mapper: Mappers.Snapshot
};

export const snapshotName: coreHttp.OperationURLParameter = {
  parameterPath: "snapshotName",
  mapper: {
    serializedName: "snapshotName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const snapshot1: coreHttp.OperationParameter = {
  parameterPath: "snapshot",
  mapper: Mappers.SnapshotUpdate
};

export const grantAccessData1: coreHttp.OperationParameter = {
  parameterPath: "grantAccessData",
  mapper: Mappers.GrantAccessData
};

export const diskEncryptionSet: coreHttp.OperationParameter = {
  parameterPath: "diskEncryptionSet",
  mapper: Mappers.DiskEncryptionSet
};

export const diskEncryptionSetName: coreHttp.OperationURLParameter = {
  parameterPath: "diskEncryptionSetName",
  mapper: {
    serializedName: "diskEncryptionSetName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const diskEncryptionSet1: coreHttp.OperationParameter = {
  parameterPath: "diskEncryptionSet",
  mapper: Mappers.DiskEncryptionSetUpdate
};

export const gallery: coreHttp.OperationParameter = {
  parameterPath: "gallery",
  mapper: Mappers.Gallery
};

export const galleryName: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const gallery1: coreHttp.OperationParameter = {
  parameterPath: "gallery",
  mapper: Mappers.GalleryUpdate
};

export const galleryName1: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName2: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImage: coreHttp.OperationParameter = {
  parameterPath: "galleryImage",
  mapper: Mappers.GalleryImage
};

export const galleryName3: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImage1: coreHttp.OperationParameter = {
  parameterPath: "galleryImage",
  mapper: Mappers.GalleryImageUpdate
};

export const galleryName4: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName1: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName5: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName2: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName6: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName3: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName7: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink8: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const galleryImageVersion: coreHttp.OperationParameter = {
  parameterPath: "galleryImageVersion",
  mapper: Mappers.GalleryImageVersion
};

export const galleryName8: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName4: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageVersionName: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageVersionName",
  mapper: {
    serializedName: "galleryImageVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageVersion1: coreHttp.OperationParameter = {
  parameterPath: "galleryImageVersion",
  mapper: Mappers.GalleryImageVersionUpdate
};

export const galleryImageName5: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageVersionName1: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageVersionName",
  mapper: {
    serializedName: "galleryImageVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName6: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageVersionName2: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageVersionName",
  mapper: {
    serializedName: "galleryImageVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand3: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    defaultValue: "ReplicationStatus",
    isConstant: true,
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const galleryImageVersionName3: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageVersionName",
  mapper: {
    serializedName: "galleryImageVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryImageName7: coreHttp.OperationURLParameter = {
  parameterPath: "galleryImageName",
  mapper: {
    serializedName: "galleryImageName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink9: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const galleryApplication: coreHttp.OperationParameter = {
  parameterPath: "galleryApplication",
  mapper: Mappers.GalleryApplication
};

export const galleryName9: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplication1: coreHttp.OperationParameter = {
  parameterPath: "galleryApplication",
  mapper: Mappers.GalleryApplicationUpdate
};

export const galleryName10: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName1: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName11: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName2: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName12: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName3: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryName13: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersion: coreHttp.OperationParameter = {
  parameterPath: "galleryApplicationVersion",
  mapper: Mappers.GalleryApplicationVersion
};

export const galleryName14: coreHttp.OperationURLParameter = {
  parameterPath: "galleryName",
  mapper: {
    serializedName: "galleryName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName4: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersionName: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationVersionName",
  mapper: {
    serializedName: "galleryApplicationVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersion1: coreHttp.OperationParameter = {
  parameterPath: "galleryApplicationVersion",
  mapper: Mappers.GalleryApplicationVersionUpdate
};

export const galleryApplicationName5: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersionName1: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationVersionName",
  mapper: {
    serializedName: "galleryApplicationVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName6: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersionName2: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationVersionName",
  mapper: {
    serializedName: "galleryApplicationVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationVersionName3: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationVersionName",
  mapper: {
    serializedName: "galleryApplicationVersionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const galleryApplicationName7: coreHttp.OperationURLParameter = {
  parameterPath: "galleryApplicationName",
  mapper: {
    serializedName: "galleryApplicationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink10: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion3: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2017-01-31",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const parameters24: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.ContainerService
};

export const containerServiceName: coreHttp.OperationURLParameter = {
  parameterPath: "containerServiceName",
  mapper: {
    serializedName: "containerServiceName",
    required: true,
    type: {
      name: "String"
    }
  }
};
