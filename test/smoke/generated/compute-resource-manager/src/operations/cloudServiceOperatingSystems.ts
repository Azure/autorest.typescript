/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { CloudServiceOperatingSystems } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { ComputeManagementClient } from "../computeManagementClient";
import {
  OSVersion,
  OSFamily,
  CloudServiceOperatingSystemsGetOSVersionResponse,
  CloudServiceOperatingSystemsListOSVersionsResponse,
  CloudServiceOperatingSystemsGetOSFamilyResponse,
  CloudServiceOperatingSystemsListOSFamiliesResponse,
  CloudServiceOperatingSystemsListOSVersionsNextResponse,
  CloudServiceOperatingSystemsListOSFamiliesNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing CloudServiceOperatingSystems operations. */
export class CloudServiceOperatingSystemsImpl
  implements CloudServiceOperatingSystems {
  /**
   * Initialize a new instance of the class CloudServiceOperatingSystems class.
   * @param client Reference to the service client
   */
  constructor(client: ComputeManagementClient) {}

  /**
   * Gets a list of all guest operating system versions available to be specified in the XML service
   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next
   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.
   *
   */
  public listOSVersions(): PagedAsyncIterableIterator<OSVersion> {
    const iter = this.listOSVersionsPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listOSVersionsPagingPage();
      }
    };
  }

  private async *listOSVersionsPagingPage(): AsyncIterableIterator<
    OSVersion[]
  > {
    let result = await this._listOSVersions();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listOSVersionsNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listOSVersionsPagingAll(): AsyncIterableIterator<OSVersion> {
    for await (const page of this.listOSVersionsPagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets a list of all guest operating system families available to be specified in the XML service
   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next
   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.
   *
   */
  public listOSFamilies(): PagedAsyncIterableIterator<OSFamily> {
    const iter = this.listOSFamiliesPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listOSFamiliesPagingPage();
      }
    };
  }

  private async *listOSFamiliesPagingPage(): AsyncIterableIterator<OSFamily[]> {
    let result = await this._listOSFamilies();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listOSFamiliesNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listOSFamiliesPagingAll(): AsyncIterableIterator<OSFamily> {
    for await (const page of this.listOSFamiliesPagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets properties of a guest operating system version that can be specified in the XML service
   * configuration (.cscfg) for a cloud service.
   *
   */
  getOSVersion(): Promise<CloudServiceOperatingSystemsGetOSVersionResponse> {}

  /**
   * Gets a list of all guest operating system versions available to be specified in the XML service
   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next
   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.
   *
   */
  private _listOSVersions(): Promise<
    CloudServiceOperatingSystemsListOSVersionsResponse
  > {}

  /**
   * Gets properties of a guest operating system family that can be specified in the XML service
   * configuration (.cscfg) for a cloud service.
   *
   */
  getOSFamily(): Promise<CloudServiceOperatingSystemsGetOSFamilyResponse> {}

  /**
   * Gets a list of all guest operating system families available to be specified in the XML service
   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next
   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.
   *
   */
  private _listOSFamilies(): Promise<
    CloudServiceOperatingSystemsListOSFamiliesResponse
  > {}

  /**
   * ListOSVersionsNext
   *
   */
  private _listOSVersionsNext(): Promise<
    CloudServiceOperatingSystemsListOSVersionsNextResponse
  > {}

  /**
   * ListOSFamiliesNext
   *
   */
  private _listOSFamiliesNext(): Promise<
    CloudServiceOperatingSystemsListOSFamiliesNextResponse
  > {}
}
// Operation Specifications
