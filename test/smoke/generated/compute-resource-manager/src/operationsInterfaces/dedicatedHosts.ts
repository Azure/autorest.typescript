/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DedicatedHost,
  DedicatedHostsCreateOrUpdateResponse,
  DedicatedHostsUpdateResponse,
  DedicatedHostsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DedicatedHosts. */
export interface DedicatedHosts {
  /**
   * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink property in
   * the response to get the next page of dedicated hosts.
   *
   */
  listByHostGroup(): PagedAsyncIterableIterator<DedicatedHost>;
  /**
   * Create or update a dedicated host .
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<DedicatedHostsCreateOrUpdateResponse>,
      DedicatedHostsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a dedicated host .
   *
   */
  beginCreateOrUpdateAndWait(): Promise<DedicatedHostsCreateOrUpdateResponse>;
  /**
   * Update an dedicated host .
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<DedicatedHostsUpdateResponse>,
      DedicatedHostsUpdateResponse
    >
  >;
  /**
   * Update an dedicated host .
   *
   */
  beginUpdateAndWait(): Promise<DedicatedHostsUpdateResponse>;
  /**
   * Delete a dedicated host.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a dedicated host.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Retrieves information about a dedicated host.
   *
   */
  get(): Promise<DedicatedHostsGetResponse>;
}
