/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  GalleryApplication,
  GalleryApplicationsCreateOrUpdateResponse,
  GalleryApplicationsUpdateResponse,
  GalleryApplicationsGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a GalleryApplications. */
export interface GalleryApplications {
  /**
   * List gallery Application Definitions in a gallery.
   *
   */
  listByGallery(): PagedAsyncIterableIterator<GalleryApplication>;
  /**
   * Create or update a gallery Application Definition.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<GalleryApplicationsCreateOrUpdateResponse>,
      GalleryApplicationsCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update a gallery Application Definition.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<
    GalleryApplicationsCreateOrUpdateResponse
  >;
  /**
   * Update a gallery Application Definition.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<GalleryApplicationsUpdateResponse>,
      GalleryApplicationsUpdateResponse
    >
  >;
  /**
   * Update a gallery Application Definition.
   *
   */
  beginUpdateAndWait(): Promise<GalleryApplicationsUpdateResponse>;
  /**
   * Retrieves information about a gallery Application Definition.
   *
   */
  get(): Promise<GalleryApplicationsGetResponse>;
  /**
   * Delete a gallery Application.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Delete a gallery Application.
   *
   */
  beginDeleteAndWait(): Promise<void>;
}
