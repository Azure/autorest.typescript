/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  RunCommandDocumentBase,
  VirtualMachineRunCommand,
  VirtualMachineRunCommandsGetResponse,
  VirtualMachineRunCommandsCreateOrUpdateResponse,
  VirtualMachineRunCommandsUpdateResponse,
  VirtualMachineRunCommandsGetByVirtualMachineResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a VirtualMachineRunCommands. */
export interface VirtualMachineRunCommands {
  /**
   * Lists all available run commands for a subscription in a location.
   *
   */
  list(): PagedAsyncIterableIterator<RunCommandDocumentBase>;
  /**
   * The operation to get all run commands of a Virtual Machine.
   *
   */
  listByVirtualMachine(): PagedAsyncIterableIterator<VirtualMachineRunCommand>;
  /**
   * Gets specific run command for a subscription in a location.
   *
   */
  get(): Promise<VirtualMachineRunCommandsGetResponse>;
  /**
   * The operation to create or update the run command.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<VirtualMachineRunCommandsCreateOrUpdateResponse>,
      VirtualMachineRunCommandsCreateOrUpdateResponse
    >
  >;
  /**
   * The operation to create or update the run command.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<
    VirtualMachineRunCommandsCreateOrUpdateResponse
  >;
  /**
   * The operation to update the run command.
   *
   */
  beginUpdate(): Promise<
    PollerLike<
      PollOperationState<VirtualMachineRunCommandsUpdateResponse>,
      VirtualMachineRunCommandsUpdateResponse
    >
  >;
  /**
   * The operation to update the run command.
   *
   */
  beginUpdateAndWait(): Promise<VirtualMachineRunCommandsUpdateResponse>;
  /**
   * The operation to delete the run command.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * The operation to delete the run command.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * The operation to get the run command.
   *
   */
  getByVirtualMachine(): Promise<
    VirtualMachineRunCommandsGetByVirtualMachineResponse
  >;
}
