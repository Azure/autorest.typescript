/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  Image,
  ImagesCreateOrUpdateResponse,
  ImagesUpdateResponse,
  ImagesGetResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a Images. */
export interface Images {
  /**
   * Gets the list of images under a resource group.
   *
   */
  listByResourceGroup(): PagedAsyncIterableIterator<Image>;
  /**
   * Gets the list of Images in the subscription. Use nextLink property in the response to get the next
   * page of Images. Do this till nextLink is null to fetch all the Images.
   *
   */
  list(): PagedAsyncIterableIterator<Image>;
  /**
   * Create or update an image.
   *
   */
  beginCreateOrUpdate(): Promise<
    PollerLike<
      PollOperationState<ImagesCreateOrUpdateResponse>,
      ImagesCreateOrUpdateResponse
    >
  >;
  /**
   * Create or update an image.
   *
   */
  beginCreateOrUpdateAndWait(): Promise<ImagesCreateOrUpdateResponse>;
  /**
   * Update an image.
   *
   */
  beginUpdate(): Promise<
    PollerLike<PollOperationState<ImagesUpdateResponse>, ImagesUpdateResponse>
  >;
  /**
   * Update an image.
   *
   */
  beginUpdateAndWait(): Promise<ImagesUpdateResponse>;
  /**
   * Deletes an Image.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * Deletes an Image.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Gets an image.
   *
   */
  get(): Promise<ImagesGetResponse>;
}
