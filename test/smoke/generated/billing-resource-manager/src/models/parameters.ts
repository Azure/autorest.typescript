/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-10-01-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const expand: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const billingAccountName: coreHttp.OperationURLParameter = {
  parameterPath: "billingAccountName",
  mapper: {
    serializedName: "billingAccountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const parameters: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.BillingAccountUpdateRequest
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const billingProfileName: coreHttp.OperationURLParameter = {
  parameterPath: "billingProfileName",
  mapper: {
    serializedName: "billingProfileName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink1: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const nextLink2: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const address: coreHttp.OperationParameter = {
  parameterPath: "address",
  mapper: Mappers.AddressDetails
};

export const instructionName: coreHttp.OperationURLParameter = {
  parameterPath: "instructionName",
  mapper: {
    serializedName: "instructionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters1: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.Instruction
};

export const expand1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const parameters2: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.BillingProfileCreationRequest
};

export const parameters3: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.BillingProfile
};

export const filter: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const skiptoken: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "skiptoken"],
  mapper: {
    serializedName: "$skiptoken",
    type: {
      name: "String"
    }
  }
};

export const customerName: coreHttp.OperationURLParameter = {
  parameterPath: "customerName",
  mapper: {
    serializedName: "customerName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand2: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const invoiceSectionName: coreHttp.OperationURLParameter = {
  parameterPath: "invoiceSectionName",
  mapper: {
    serializedName: "invoiceSectionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters4: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.InvoiceSectionCreationRequest
};

export const parameters5: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.InvoiceSection
};

export const billingSubscriptionName: coreHttp.OperationURLParameter = {
  parameterPath: "billingSubscriptionName",
  mapper: {
    serializedName: "billingSubscriptionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters6: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.TransferBillingSubscriptionRequestProperties
};

export const parameters7: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.TransferBillingSubscriptionRequestProperties
};

export const nextLink3: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const filter1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const productName: coreHttp.OperationURLParameter = {
  parameterPath: "productName",
  mapper: {
    serializedName: "productName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters8: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.TransferProductRequestProperties
};

export const parameters9: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.TransferProductRequestProperties
};

export const body: coreHttp.OperationParameter = {
  parameterPath: "body",
  mapper: Mappers.UpdateAutoRenewRequest
};

export const periodStartDate: coreHttp.OperationQueryParameter = {
  parameterPath: "periodStartDate",
  mapper: {
    serializedName: "periodStartDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodEndDate: coreHttp.OperationQueryParameter = {
  parameterPath: "periodEndDate",
  mapper: {
    serializedName: "periodEndDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter2: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const periodStartDate1: coreHttp.OperationQueryParameter = {
  parameterPath: "periodStartDate",
  mapper: {
    serializedName: "periodStartDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodEndDate1: coreHttp.OperationQueryParameter = {
  parameterPath: "periodEndDate",
  mapper: {
    serializedName: "periodEndDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const filter3: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const invoiceName: coreHttp.OperationURLParameter = {
  parameterPath: "invoiceName",
  mapper: {
    serializedName: "invoiceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const transactionName: coreHttp.OperationURLParameter = {
  parameterPath: "transactionName",
  mapper: {
    serializedName: "transactionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink4: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const expand3: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const filter4: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const departmentName: coreHttp.OperationURLParameter = {
  parameterPath: "departmentName",
  mapper: {
    serializedName: "departmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const expand4: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const filter5: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const enrollmentAccountName: coreHttp.OperationURLParameter = {
  parameterPath: "enrollmentAccountName",
  mapper: {
    serializedName: "enrollmentAccountName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodStartDate2: coreHttp.OperationQueryParameter = {
  parameterPath: "periodStartDate",
  mapper: {
    serializedName: "periodStartDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodEndDate2: coreHttp.OperationQueryParameter = {
  parameterPath: "periodEndDate",
  mapper: {
    serializedName: "periodEndDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodStartDate3: coreHttp.OperationQueryParameter = {
  parameterPath: "periodStartDate",
  mapper: {
    serializedName: "periodStartDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const periodEndDate3: coreHttp.OperationQueryParameter = {
  parameterPath: "periodEndDate",
  mapper: {
    serializedName: "periodEndDate",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink5: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters10: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.Policy
};

export const parameters11: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.CustomerPolicy
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters12: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.InitiateTransferRequest
};

export const transferName: coreHttp.OperationURLParameter = {
  parameterPath: "transferName",
  mapper: {
    serializedName: "transferName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink6: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const parameters13: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.AcceptTransferRequest
};

export const parameters14: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.AcceptTransferRequest
};

export const billingRoleDefinitionName: coreHttp.OperationURLParameter = {
  parameterPath: "billingRoleDefinitionName",
  mapper: {
    serializedName: "billingRoleDefinitionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const billingRoleAssignmentName: coreHttp.OperationURLParameter = {
  parameterPath: "billingRoleAssignmentName",
  mapper: {
    serializedName: "billingRoleAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const parameters15: coreHttp.OperationParameter = {
  parameterPath: "parameters",
  mapper: Mappers.BillingRoleAssignmentPayload
};

export const expand5: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "expand"],
  mapper: {
    serializedName: "$expand",
    type: {
      name: "String"
    }
  }
};

export const agreementName: coreHttp.OperationURLParameter = {
  parameterPath: "agreementName",
  mapper: {
    serializedName: "agreementName",
    required: true,
    type: {
      name: "String"
    }
  }
};
