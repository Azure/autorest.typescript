/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The list of billing accounts.
 */
export interface BillingAccountListResult {
  /**
   * The list of billing accounts.
   */
  readonly value?: BillingAccount[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource {
  /**
   * Resource Id.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
}

/**
 * A billing account.
 */
export type BillingAccount = Resource & {
  /**
   * The billing account name.
   */
  readonly displayName?: string;
  /**
   * The address associated with the billing account.
   */
  address?: AddressDetails;
  /**
   * The type of agreement.
   */
  readonly agreementType?: AgreementType;
  /**
   * The type of customer.
   */
  readonly customerType?: CustomerType;
  /**
   * The type of customer.
   */
  readonly accountType?: AccountType;
  /**
   * The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand.
   */
  billingProfiles?: BillingProfile[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * The departments associated to the enrollment.
   */
  departments?: Department[];
  /**
   * The accounts associated to the enrollment.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * Organization id.
   */
  readonly organizationId?: string;
};

/**
 * Address details.
 */
export interface AddressDetails {
  /**
   * First name.
   */
  firstName?: string;
  /**
   * Last name.
   */
  lastName?: string;
  /**
   * Company name.
   */
  companyName?: string;
  /**
   * Address line 1.
   */
  addressLine1?: string;
  /**
   * Address line 2.
   */
  addressLine2?: string;
  /**
   * Address line 3.
   */
  addressLine3?: string;
  /**
   * Address city.
   */
  city?: string;
  /**
   * Address region.
   */
  region?: string;
  /**
   * Country code uses ISO2, 2-digit format.
   */
  country?: string;
  /**
   * Postal code.
   */
  postalCode?: string;
}

/**
 * A billing profile.
 */
export type BillingProfile = Resource & {
  /**
   * The name of the billing profile.
   */
  displayName?: string;
  /**
   * The purchase order name that will appear on the invoices generated for the billing profile.
   */
  poNumber?: string;
  /**
   * Billing address.
   */
  address?: AddressDetails;
  /**
   * Flag controlling whether the invoices for the billing profile are sent through email.
   */
  invoiceEmailOptIn?: boolean;
  /**
   * The day of the month when the invoice for the billing profile is generated.
   */
  readonly invoiceDay?: number;
  /**
   * The currency in which the charges for the billing profile are billed.
   */
  readonly currency?: string;
  /**
   * Information about the enabled azure plans.
   */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The invoice sections associated to the billing profile.
   */
  invoiceSections?: InvoiceSection[];
  /**
   * The status of the billing profile.
   */
  readonly status?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   */
  readonly statusReasonCode?: StatusReasonCode;
  /**
   * The billing profile spending limit.
   */
  readonly spendingLimit?: SpendingLimit;
};

/**
 * Details of the Azure plan.
 */
export interface AzurePlan {
  /**
   * The sku id.
   */
  skuId?: string;
  /**
   * The sku description.
   */
  readonly skuDescription?: string;
}

/**
 * An invoice section.
 */
export type InvoiceSection = Resource & {
  /**
   * The name of the invoice section.
   */
  displayName?: string;
};

/**
 * The properties of an enrollment.
 */
export interface Enrollment {
  /**
   * The start date of the enrollment.
   */
  startDate?: Date;
  /**
   * The end date of the enrollment.
   */
  endDate?: Date;
  /**
   * The billing currency for the enrollment.
   */
  readonly currency?: string;
  /**
   * The channel type of the enrollment.
   */
  readonly channel?: string;
  /**
   * The policies for Enterprise Agreement enrollments.
   */
  readonly policies?: EnrollmentPolicies;
  /**
   * The language for the enrollment.
   */
  readonly language?: string;
  /**
   * The country code of the enrollment.
   */
  readonly countryCode?: string;
  /**
   * The current status of the enrollment.
   */
  readonly status?: string;
  /**
   * The billing cycle for the enrollment.
   */
  readonly billingCycle?: string;
}

/**
 * The policies for Enterprise Agreement enrollments.
 */
export interface EnrollmentPolicies {
  /**
   * The policy that controls whether Account Owners can view charges.
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * The policy that controls whether Department Administrators can view charges.
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
   */
  readonly marketplacesEnabled?: boolean;
  /**
   * The policy that controls whether Azure reservation purchases are allowed in the enrollment.
   */
  readonly reservedInstancesEnabled?: boolean;
}

/**
 * A department.
 */
export type Department = Resource & {
  /**
   * The name of the department.
   */
  departmentName?: string;
  /**
   * The cost center associated with the department.
   */
  costCenter?: string;
  /**
   * The status of the department.
   */
  status?: string;
  /**
   * Associated enrollment accounts. By default this is not populated, unless it's specified in $expand.
   */
  enrollmentAccounts?: EnrollmentAccount[];
};

/**
 * An enrollment account.
 */
export type EnrollmentAccount = Resource & {
  /**
   * The name of the enrollment account.
   */
  accountName?: string;
  /**
   * The cost center associated with the enrollment account.
   */
  costCenter?: string;
  /**
   * The owner of the enrollment account.
   */
  accountOwner?: string;
  /**
   * The status of the enrollment account.
   */
  status?: string;
  /**
   * The start date of the enrollment account.
   */
  startDate?: Date;
  /**
   * The end date of the enrollment account.
   */
  endDate?: Date;
  /**
   * Associated department. By default this is not populated, unless it's specified in $expand.
   */
  department?: Department;
};

/**
 * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   */
  readonly target?: string;
}

/**
 * The request properties of the billing account that can be updated.
 */
export interface BillingAccountUpdateRequest {
  /**
   * The billing account name.
   */
  readonly displayName?: string;
  /**
   * The address associated with the billing account.
   */
  address?: AddressDetails;
  /**
   * The type of agreement.
   */
  readonly agreementType?: AgreementType;
  /**
   * The type of customer.
   */
  readonly customerType?: CustomerType;
  /**
   * The type of customer.
   */
  readonly accountType?: AccountType;
  /**
   * The billing profiles associated with the billing account. By default this is not populated, unless it's specified in $expand.
   */
  billingProfiles?: BillingProfile[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless it's specified in $expand.
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * The departments associated to the enrollment.
   */
  departments?: Department[];
  /**
   * The accounts associated to the enrollment.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * Organization id.
   */
  readonly organizationId?: string;
}

/**
 * The list of invoice section properties with create subscription permission.
 */
export interface InvoiceSectionListWithCreateSubPermissionResult {
  /**
   * The list of invoice section properties with create subscription permission.
   */
  value?: InvoiceSectionWithCreateSubPermission[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Invoice section properties with create subscription permission.
 */
export interface InvoiceSectionWithCreateSubPermission {
  /**
   * The ID of the invoice section.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the billing profile for the invoice section.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile for the invoice section.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The status of the billing profile.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The billing profile spending limit.
   */
  readonly billingProfileSpendingLimit?: BillingProfileSpendingLimit;
  /**
   * Enabled azure plans for the associated billing profile.
   */
  enabledAzurePlans?: AzurePlan[];
}

/**
 * The list of payment methods.
 */
export interface PaymentMethodsListResult {
  /**
   * The list of payment methods.
   */
  readonly value?: PaymentMethod[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A payment method.
 */
export type PaymentMethod = Resource & {
  /**
   * The type of payment method.
   */
  paymentMethodType?: PaymentMethodType;
  /**
   * Details about the payment method.
   */
  readonly details?: string;
  /**
   * Expiration month and year.
   */
  readonly expiration?: string;
  /**
   * The currency associated with the payment method.
   */
  readonly currency?: string;
};

/**
 * Result of the address validation
 */
export interface ValidateAddressResponse {
  /**
   * status of the address validation.
   */
  status?: AddressValidationStatus;
  /**
   * The list of suggested addresses.
   */
  suggestedAddresses?: AddressDetails[];
  /**
   * Validation error message.
   */
  validationMessage?: string;
}

/**
 * The latest Azure credit balance. This is the balance available for pay now.
 */
export type AvailableBalance = Resource & {
  /**
   * Balance amount.
   */
  readonly amount?: Amount;
};

/**
 * The amount.
 */
export interface Amount {
  /**
   * The currency for the amount value.
   */
  readonly currency?: string;
  /**
   * Amount value.
   */
  value?: number;
}

/**
 * The list of billing instructions used during invoice generation.
 */
export interface InstructionListResult {
  /**
   * The list of billing instructions used during invoice generation.
   */
  readonly value?: Instruction[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * An instruction.
 */
export type Instruction = Resource & {
  /**
   * The amount budgeted for this billing instruction.
   */
  amount?: number;
  /**
   * The date this billing instruction goes into effect.
   */
  startDate?: Date;
  /**
   * The date this billing instruction is no longer in effect.
   */
  endDate?: Date;
  /**
   * The date this billing instruction was created.
   */
  creationDate?: Date;
};

/**
 * The list of billing profiles.
 */
export interface BillingProfileListResult {
  /**
   * The list of billing profiles.
   */
  readonly value?: BillingProfile[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The request parameters for creating a new billing profile.
 */
export interface BillingProfileCreationRequest {
  /**
   * The name of the billing profile.
   */
  displayName?: string;
  /**
   * The purchase order name that will appear on the invoices generated for the billing profile.
   */
  poNumber?: string;
  /**
   * Billing address.
   */
  address?: AddressDetails;
  /**
   * Flag controlling whether the invoices for the billing profile are sent through email.
   */
  invoiceEmailOptIn?: boolean;
  /**
   * Enabled azure plans for the billing profile.
   */
  enabledAzurePlans?: AzurePlan[];
}

/**
 * The list of customers.
 */
export interface CustomerListResult {
  /**
   * The list of customers.
   */
  readonly value?: Customer[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A partner's customer.
 */
export type Customer = Resource & {
  /**
   * The name of the customer.
   */
  displayName?: string;
  /**
   * Azure plans enabled for the customer.
   */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The list of resellers for which an Azure plan is enabled for the customer.
   */
  resellers?: Reseller[];
};

/**
 * Details of the reseller.
 */
export interface Reseller {
  /**
   * The MPN ID of the reseller.
   */
  readonly resellerId?: string;
  /**
   * The name of the reseller.
   */
  readonly description?: string;
}

/**
 * The list of invoice sections.
 */
export interface InvoiceSectionListResult {
  /**
   * The list of invoice sections.
   */
  readonly value?: InvoiceSection[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The properties of the invoice section.
 */
export interface InvoiceSectionCreationRequest {
  /**
   * The name of the invoice section.
   */
  displayName?: string;
}

/**
 * Result of list billingPermissions a caller has on a billing account.
 */
export interface BillingPermissionsListResult {
  /**
   * The list of billingPermissions a caller has on a billing account.
   */
  readonly value?: BillingPermissionsProperties[];
}

/**
 * The set of allowed action and not allowed actions a caller has on a billing account
 */
export interface BillingPermissionsProperties {
  /**
   * The set of actions that the caller is allowed to perform.
   */
  readonly actions?: string[];
  /**
   * The set of actions that the caller is not allowed to perform.
   */
  readonly notActions?: string[];
}

/**
 * The list of billing subscriptions.
 */
export interface BillingSubscriptionsListResult {
  /**
   * The list of billing subscriptions.
   */
  readonly value?: BillingSubscription[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A billing subscription.
 */
export type BillingSubscription = Resource & {
  /**
   * The name of the subscription.
   */
  readonly displayName?: string;
  /**
   * The ID of the subscription.
   */
  readonly subscriptionId?: string;
  /**
   * The current billing status of the subscription.
   */
  subscriptionBillingStatus?: BillingSubscriptionStatusType;
  /**
   * The last month charges.
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges.
   */
  readonly monthToDateCharges?: Amount;
  /**
   * The ID of the billing profile to which the subscription is billed.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the subscription is billed.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerId?: string;
  /**
   * The name of the customer for whom the subscription was created. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID of the invoice section to which the subscription is billed.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the subscription is billed.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Reseller for this subscription.
   */
  readonly reseller?: Reseller;
  /**
   * The sku ID of the Azure plan for the subscription.
   */
  skuId?: string;
  /**
   * The sku description of the Azure plan for the subscription.
   */
  readonly skuDescription?: string;
};

/**
 * The list of products. It contains a list of available product summaries in reverse chronological order by purchase date.
 */
export interface ProductsListResult {
  /**
   * The list of products.
   */
  readonly value?: Product[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A product.
 */
export type Product = Resource & {
  /**
   * The display name of the product.
   */
  readonly displayName?: string;
  /**
   * The date when the product was purchased.
   */
  readonly purchaseDate?: Date;
  /**
   * The ID of the type of product.
   */
  readonly productTypeId?: string;
  /**
   * The description of the type of product.
   */
  readonly productType?: string;
  /**
   * The current status of the product.
   */
  status?: ProductStatusType;
  /**
   * The date when the product will be renewed or canceled.
   */
  readonly endDate?: Date;
  /**
   * The frequency at which the product will be billed.
   */
  billingFrequency?: BillingFrequency;
  /**
   * The last month charges.
   */
  readonly lastCharge?: Amount;
  /**
   * The date of the last charge.
   */
  readonly lastChargeDate?: Date;
  /**
   * The quantity purchased for the product.
   */
  readonly quantity?: number;
  /**
   * The sku ID of the product.
   */
  readonly skuId?: string;
  /**
   * The sku description of the product.
   */
  readonly skuDescription?: string;
  /**
   * The id of the tenant in which the product is used.
   */
  readonly tenantId?: string;
  /**
   * The availability of the product.
   */
  readonly availabilityId?: string;
  /**
   * Parent product Id.
   */
  readonly parentProductId?: string;
  /**
   * The ID of the invoice section to which the product is billed.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the product is billed.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the billing profile to which the product is billed.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the product is billed.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerId?: string;
  /**
   * The name of the customer for whom the product was purchased. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerDisplayName?: string;
  /**
   * Reseller for this product.
   */
  readonly reseller?: Reseller;
};

/**
 * The list of transactions.
 */
export interface TransactionListResult {
  /**
   * The list of transactions.
   */
  readonly value?: Transaction[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A transaction.
 */
export type Transaction = Resource & {
  /**
   * The kind of transaction. Options are all or reservation.
   */
  kind?: TransactionTypeKind;
  /**
   * The date of transaction.
   */
  readonly date?: Date;
  /**
   * Invoice on which the transaction was billed or 'pending' if the transaction is not billed.
   */
  readonly invoice?: string;
  /**
   * The order ID of the reservation. The field is only applicable for transaction of kind reservation.
   */
  readonly orderId?: string;
  /**
   * The name of the reservation order. The field is only applicable for transactions of kind reservation.
   */
  readonly orderName?: string;
  /**
   * The family of the product for which the transaction took place.
   */
  readonly productFamily?: string;
  /**
   * The ID of the product type for which the transaction took place.
   */
  readonly productTypeId?: string;
  /**
   * The type of the product for which the transaction took place.
   */
  readonly productType?: string;
  /**
   * The description of the product for which the transaction took place.
   */
  readonly productDescription?: string;
  /**
   * The type of transaction.
   */
  transactionType?: ReservationType;
  /**
   * The charge associated with the transaction.
   */
  readonly transactionAmount?: Amount;
  /**
   * The quantity purchased in the transaction.
   */
  readonly quantity?: number;
  /**
   * The ID of the invoice section which will be billed for the transaction.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section which will be billed for the transaction.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The ID of the billing profile which will be billed for the transaction.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile which will be billed for the transaction.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The ID of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerId?: string;
  /**
   * The name of the customer for which the transaction took place. The field is applicable only for Microsoft Partner Agreement billing account.
   */
  readonly customerDisplayName?: string;
  /**
   * The ID of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
   */
  readonly subscriptionId?: string;
  /**
   * The name of the subscription that was used for the transaction. The field is only applicable for transaction of kind reservation.
   */
  readonly subscriptionName?: string;
  /**
   * The amount of any Azure credits automatically applied to this transaction.
   */
  readonly azureCreditApplied?: Amount;
  /**
   * The ISO 4217 code for the currency in which this transaction is billed.
   */
  readonly billingCurrency?: string;
  /**
   * The percentage discount, if any, applied to this transaction.
   */
  readonly discount?: number;
  /**
   * The price of the product after applying any discounts.
   */
  readonly effectivePrice?: Amount;
  /**
   * The exchange rate used to convert charged amount to billing currency, if applicable.
   */
  readonly exchangeRate?: number;
  /**
   * The retail price of the product.
   */
  readonly marketPrice?: Amount;
  /**
   * The ISO 4217 code for the currency in which the product is priced.
   */
  readonly pricingCurrency?: string;
  /**
   * The date of the purchase of the product, or the start date of the month in which usage started.
   */
  readonly servicePeriodStartDate?: Date;
  /**
   * The end date of the product term, or the end date of the month in which usage ended.
   */
  readonly servicePeriodEndDate?: Date;
  /**
   * The pre-tax charged amount for the transaction.
   */
  readonly subTotal?: Amount;
  /**
   * The tax amount applied to the transaction.
   */
  readonly tax?: Amount;
  /**
   * The unit of measure used to bill for the product. For example, compute services are billed per hour.
   */
  readonly unitOfMeasure?: string;
  /**
   * The number of units used for a given product.
   */
  readonly units?: number;
  /**
   * The description for the unit of measure for a given product.
   */
  readonly unitType?: string;
};

/**
 * The list of departments.
 */
export interface DepartmentListResult {
  /**
   * The list of departments.
   */
  readonly value?: Department[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The list of enrollment accounts.
 */
export interface EnrollmentAccountListResult {
  /**
   * The list of enrollment accounts.
   */
  readonly value?: EnrollmentAccount[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The list of invoices.
 */
export interface InvoiceListResult {
  /**
   * The list of invoices.
   */
  readonly value?: Invoice[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * An invoice.
 */
export type Invoice = Resource & {
  /**
   * The due date for the invoice.
   */
  readonly dueDate?: Date;
  /**
   * The date when the invoice was generated.
   */
  readonly invoiceDate?: Date;
  /**
   * The current status of the invoice.
   */
  readonly status?: InvoiceStatus;
  /**
   * The amount due as of now.
   */
  readonly amountDue?: Amount;
  /**
   * The amount of Azure prepayment applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly azurePrepaymentApplied?: Amount;
  /**
   * The total charges for the invoice billing period.
   */
  readonly billedAmount?: Amount;
  /**
   * The total refund for returns and cancellations during the invoice billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly creditAmount?: Amount;
  /**
   * The amount of free Azure credits applied to the charges. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly freeAzureCreditApplied?: Amount;
  /**
   * The pre-tax amount due. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly subTotal?: Amount;
  /**
   * The amount of tax charged for the billing period. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly taxAmount?: Amount;
  /**
   * The amount due when the invoice was generated. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly totalAmount?: Amount;
  /**
   * The start date of the billing period for which the invoice is generated.
   */
  readonly invoicePeriodStartDate?: Date;
  /**
   * The end date of the billing period for which the invoice is generated.
   */
  readonly invoicePeriodEndDate?: Date;
  /**
   * Invoice type.
   */
  readonly invoiceType?: InvoiceType;
  /**
   * Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
   */
  readonly isMonthlyInvoice?: boolean;
  /**
   * The ID of the billing profile for which the invoice is generated.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile for which the invoice is generated.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * An optional purchase order number for the invoice.
   */
  readonly purchaseOrderNumber?: string;
  /**
   * List of documents available to download such as invoice and tax receipt.
   */
  readonly documents?: Document[];
  /**
   * List of payments.
   */
  readonly payments?: PaymentProperties[];
  /**
   * The ID of the subscription for which the invoice is generated.
   */
  readonly subscriptionId?: string;
};

/**
 * The properties of a document.
 */
export interface Document {
  /**
   * The type of the document.
   */
  readonly kind?: DocumentType;
  /**
   * Document URL.
   */
  readonly url?: string;
}

/**
 * The properties of a payment.
 */
export interface PaymentProperties {
  /**
   * The type of payment.
   */
  readonly paymentType?: string;
  /**
   * The paid amount.
   */
  readonly amount?: Amount;
  /**
   * The date when the payment was made.
   */
  readonly date?: Date;
  /**
   * The family of payment method.
   */
  paymentMethodFamily?: PaymentMethodFamily;
  /**
   * The type of payment method.
   */
  readonly paymentMethodType?: string;
}

/**
 * A secure URL that can be used to download a an entity until the URL expires.
 */
export interface DownloadUrl {
  /**
   * The time in UTC when the download URL will expire.
   */
  readonly expiryTime?: Date;
  /**
   * The URL to the PDF file.
   */
  readonly url?: string;
}

/**
 * Request parameters to transfer billing subscription.
 */
export interface TransferBillingSubscriptionRequestProperties {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * Result of the transfer billing subscription operation.
 */
export interface TransferBillingSubscriptionResult {
  /**
   * The destination billing subscription id.
   */
  billingSubscriptionName?: string;
}

/**
 * Result of the transfer eligibility validation.
 */
export interface ValidateSubscriptionTransferEligibilityResult {
  /**
   * Specifies whether the subscription is eligible to be transferred.
   */
  readonly isTransferEligible?: boolean;
  /**
   * Validation error details.
   */
  errorDetails?: ValidateSubscriptionTransferEligibilityError;
}

/**
 * Error details of the transfer eligibility validation
 */
export interface ValidateSubscriptionTransferEligibilityError {
  /**
   * Error code for the product transfer validation.
   */
  code?: SubscriptionTransferValidationErrorCode;
  /**
   * The error message.
   */
  message?: string;
  /**
   * Detailed error message explaining the error.
   */
  details?: string;
}

/**
 * The properties of the product to initiate a transfer.
 */
export interface TransferProductRequestProperties {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * Result of the product transfer eligibility validation.
 */
export interface ValidateProductTransferEligibilityResult {
  /**
   * Specifies whether the transfer is eligible or not.
   */
  readonly isTransferEligible?: boolean;
  /**
   * Validation error details.
   */
  errorDetails?: ValidateProductTransferEligibilityError;
}

/**
 * Error details of the product transfer eligibility validation.
 */
export interface ValidateProductTransferEligibilityError {
  /**
   * Error code for the product transfer validation.
   */
  code?: ProductTransferValidationErrorCode;
  /**
   * The error message.
   */
  message?: string;
  /**
   * Detailed error message explaining the error.
   */
  details?: string;
}

/**
 * A policy.
 */
export type Policy = Resource & {
  /**
   * The policy that controls whether Azure marketplace purchases are allowed for a billing profile.
   */
  marketplacePurchases?: MarketplacePurchasesPolicy;
  /**
   * The policy that controls whether Azure reservation purchases are allowed for a billing profile.
   */
  reservationPurchases?: ReservationPurchasesPolicy;
  /**
   * The policy that controls whether users with Azure RBAC access to a subscription can view its charges.
   */
  viewCharges?: ViewChargesPolicy;
};

/**
 * The customer's Policy.
 */
export type CustomerPolicy = Resource & {
  /**
   * The policy that controls whether the users in customer's organization can view charges at pay-as-you-go prices.
   */
  viewCharges?: ViewCharges;
};

/**
 * A billing property.
 */
export type BillingProperty = Resource & {
  /**
   * The Azure AD tenant ID of the billing account for the subscription.
   */
  readonly billingTenantId?: string;
  /**
   * The ID of the billing account to which the subscription is billed.
   */
  readonly billingAccountId?: string;
  /**
   * The name of the billing account to which the subscription is billed.
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The ID of the billing profile to which the subscription is billed.
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the subscription is billed.
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The status of the billing profile.
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status.
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The billing profile spending limit.
   */
  readonly billingProfileSpendingLimit?: BillingProfileSpendingLimit;
  /**
   * The cost center applied to the subscription.
   */
  readonly costCenter?: string;
  /**
   * The ID of the invoice section to which the subscription is billed.
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the subscription is billed.
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * The product ID of the Azure plan.
   */
  readonly productId?: string;
  /**
   * The product name of the Azure plan.
   */
  readonly productName?: string;
  /**
   * The sku ID of the Azure plan for the subscription.
   */
  readonly skuId?: string;
  /**
   * The sku description of the Azure plan for the subscription.
   */
  readonly skuDescription?: string;
};

/**
 * Request parameters to update auto renew settings for a product.
 */
export interface UpdateAutoRenewRequest {
  /**
   * The flag that determines the auto-renew settings for a product.
   */
  autoRenew?: UpdateAutoRenew;
}

/**
 * Result of the update auto renew operation
 */
export interface UpdateAutoRenewOperation {
  /**
   * The date at which the product will be canceled.
   */
  endDate?: Date;
}

/**
 * Request parameters to initiate transfer.
 */
export interface InitiateTransferRequest {
  /**
   * The email ID of the recipient to whom the transfer request is sent.
   */
  recipientEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   */
  resellerId?: string;
}

/**
 * Details of the transfer.
 */
export interface TransferDetails {
  /**
   * The time at which the transfer request was created.
   */
  readonly creationTime?: Date;
  /**
   * The time at which the transfer request expires.
   */
  readonly expirationTime?: Date;
  /**
   * The ID of the invoice section to which the product is billed after the transfer request is completed.
   */
  readonly invoiceSectionId?: string;
  /**
   * The ID of the billing account to which the product is billed after the transfer request is completed.
   */
  readonly billingAccountId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   */
  readonly resellerName?: string;
  /**
   * The type of customer who sent the transfer request.
   */
  readonly initiatorCustomerType?: string;
  /**
   * The ID of the billing profile to which the product will be billed after the transfer.
   */
  readonly billingProfileId?: string;
  /**
   * Overall transfer status.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   */
  readonly initiatorEmailId?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   */
  readonly canceledBy?: string;
  /**
   * The time at which the transfer request was last modified.
   */
  readonly lastModifiedTime?: Date;
  /**
   * Detailed transfer status.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/**
 * Detailed transfer status.
 */
export interface DetailedTransferStatus {
  /**
   * Type of product that is transferred.
   */
  readonly productType?: ProductType;
  /**
   * The ID of the product that is transferred.
   */
  readonly productId?: string;
  /**
   * Transfer status.
   */
  readonly transferStatus?: ProductTransferStatus;
  /**
   * Error details for transfer execution.
   */
  errorDetails?: ErrorModel;
}

/**
 * Error details for transfer execution.
 */
export interface ErrorModel {
  /**
   * Error code.
   */
  readonly errorCode?: string;
  /**
   * Error message.
   */
  readonly errorMessage?: string;
}

/**
 * The list of transfers initiated by caller.
 */
export interface TransferDetailsListResult {
  /**
   * The list of transfers initiated by caller.
   */
  readonly value?: TransferDetails[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Request parameters to accept transfer.
 */
export interface AcceptTransferRequest {
  /**
   * Request parameters to accept transfer.
   */
  productDetails?: ProductDetails[];
}

/**
 * Details of the product that is transferred.
 */
export interface ProductDetails {
  /**
   * Type of the product that is transferred.
   */
  productType?: ProductType;
  /**
   * The ID of the product that is transferred.
   */
  productId?: string;
}

/**
 * Details of the transfer.
 */
export interface RecipientTransferDetails {
  /**
   * The time at which the transfer request was created.
   */
  readonly creationTime?: Date;
  /**
   * The time at which the transfer request expires.
   */
  readonly expirationTime?: Date;
  /**
   * Type of subscriptions that can be transferred.
   */
  readonly allowedProductType?: EligibleProductType[];
  /**
   * Overall transfer status.
   */
  readonly transferStatus?: TransferStatus;
  /**
   * The email ID of the user to whom the transfer request was sent.
   */
  readonly recipientEmailId?: string;
  /**
   * The email ID of the user who sent the transfer request.
   */
  readonly initiatorEmailId?: string;
  /**
   * Optional MPN ID of the reseller for transfer requests that are sent from a Microsoft Partner Agreement billing account.
   */
  readonly resellerId?: string;
  /**
   * Optional name of the reseller for transfer requests that are sent from Microsoft Partner Agreement billing account.
   */
  readonly resellerName?: string;
  /**
   * The type of customer who sent the transfer request.
   */
  readonly initiatorCustomerType?: string;
  /**
   * The email ID of the user who canceled the transfer request.
   */
  readonly canceledBy?: string;
  /**
   * The time at which the transfer request was last modified.
   */
  readonly lastModifiedTime?: Date;
  /**
   * Detailed transfer status.
   */
  readonly detailedTransferStatus?: DetailedTransferStatus[];
}

/**
 * Result of transfer validation.
 */
export interface ValidateTransferListResponse {
  /**
   * The list of transfer validation results.
   */
  readonly value?: ValidateTransferResponse[];
}

/**
 * Transfer validation response.
 */
export interface ValidateTransferResponse {
  /**
   * The status of validation
   */
  readonly status?: string;
  /**
   * The product id for which this result applies.
   */
  readonly productId?: string;
  /**
   * The array of validation results.
   */
  results?: ValidationResultProperties[];
}

/**
 * The properties of the validation result.
 */
export interface ValidationResultProperties {
  /**
   * Result Level.
   */
  readonly level?: string;
  /**
   * Result Code.
   */
  readonly code?: string;
  /**
   * The validation message.
   */
  readonly message?: string;
}

/**
 * The list of transfers received by caller.
 */
export interface RecipientTransferDetailsListResult {
  /**
   * The list of transfers received by caller.
   */
  readonly value?: RecipientTransferDetails[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The list of billing operations and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * The list of billing operations supported by the Microsoft.Billing resource provider.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

/**
 * A Billing REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Billing.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed such as invoice and billing subscription.
   */
  readonly resource?: string;
  /**
   * Operation type such as read, write and delete.
   */
  readonly operation?: string;
}

/**
 * The properties of a role definition.
 */
export type BillingRoleDefinition = Resource & {
  /**
   * The role description
   */
  readonly description?: string;
  /**
   * The billingPermissions the role has
   */
  permissions?: BillingPermissionsProperties[];
  /**
   * The name of the role
   */
  readonly roleName?: string;
};

/**
 * The list of role definitions.
 */
export interface BillingRoleDefinitionListResult {
  /**
   * The role definitions.
   */
  readonly value?: BillingRoleDefinition[];
}

/**
 * The role assignment
 */
export type BillingRoleAssignment = Resource & {
  /**
   * The date the role assignment was created.
   */
  readonly createdOn?: string;
  /**
   * The tenant Id of the user who created the role assignment.
   */
  readonly createdByPrincipalTenantId?: string;
  /**
   * The principal Id of the user who created the role assignment.
   */
  readonly createdByPrincipalId?: string;
  /**
   * The name of the role assignment.
   */
  readonly namePropertiesName?: string;
  /**
   * The principal id of the user to whom the role was assigned.
   */
  readonly principalId?: string;
  /**
   * The ID of the role definition.
   */
  readonly roleDefinitionName?: string;
  /**
   * The scope at which the role was assigned.
   */
  readonly scope?: string;
};

/**
 * The list of role assignments.
 */
export interface BillingRoleAssignmentListResult {
  /**
   * The list of role assignments.
   */
  readonly value?: BillingRoleAssignment[];
}

/**
 * The payload use to update role assignment on a scope
 */
export interface BillingRoleAssignmentPayload {
  /**
   * The user's principal id that the role gets assigned to
   */
  principalId?: string;
  /**
   * The role definition id
   */
  billingRoleDefinitionId?: string;
}

/**
 * Result of listing agreements.
 */
export interface AgreementListResult {
  /**
   * The list of agreements.
   */
  readonly value?: Agreement[];
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * An agreement.
 */
export type Agreement = Resource & {
  /**
   * The URL to download the agreement.
   */
  readonly agreementLink?: string;
  /**
   * The category of the agreement signed by a customer.
   */
  readonly category?: Category;
  /**
   * The mode of acceptance for an agreement.
   */
  readonly acceptanceMode?: AcceptanceMode;
  /**
   * The date from which the agreement is effective.
   */
  readonly effectiveDate?: Date;
  /**
   * The date when the agreement expires.
   */
  readonly expirationDate?: Date;
  /**
   * The list of participants that participates in acceptance of an agreement.
   */
  participants?: Participants[];
  /**
   * The current status of the agreement.
   */
  readonly status?: string;
};

/**
 * The details about a participant.
 */
export interface Participants {
  /**
   * The acceptance status of the participant.
   */
  readonly status?: string;
  /**
   * The date when the status got changed.
   */
  readonly statusDate?: Date;
  /**
   * The email address of the participant.
   */
  readonly email?: string;
}

/**
 * Request parameters to transfer billing subscription.
 */
export interface TransferBillingSubscriptionRequest {
  /**
   * The destination invoice section id.
   */
  destinationInvoiceSectionId?: string;
  /**
   * The destination billing profile id.
   */
  destinationBillingProfileId?: string;
}

/**
 * The enrollment account context
 */
export interface EnrollmentAccountContext {
  /**
   * The cost center associated with the enrollment account.
   */
  costCenter?: string;
  /**
   * The start date of the enrollment account.
   */
  startDate?: Date;
  /**
   * The end date of the enrollment account.
   */
  endDate?: Date;
  /**
   * The ID of the enrollment account.
   */
  enrollmentAccountName?: string;
}

/**
 * Defines values for AgreementType.
 */
export type AgreementType =
  | "MicrosoftCustomerAgreement"
  | "EnterpriseAgreement"
  | "MicrosoftOnlineServicesProgram"
  | "MicrosoftPartnerAgreement";
/**
 * Defines values for CustomerType.
 */
export type CustomerType = "Enterprise" | "Individual" | "Partner";
/**
 * Defines values for AccountType.
 */
export type AccountType = "Enterprise" | "Individual" | "Partner";
/**
 * Defines values for BillingProfileStatus.
 */
export type BillingProfileStatus = "Active" | "Disabled" | "Warned";
/**
 * Defines values for StatusReasonCode.
 */
export type StatusReasonCode =
  | "PastDue"
  | "SpendingLimitReached"
  | "SpendingLimitExpired";
/**
 * Defines values for SpendingLimit.
 */
export type SpendingLimit = "Off" | "On";
/**
 * Defines values for BillingProfileStatusReasonCode.
 */
export type BillingProfileStatusReasonCode =
  | "PastDue"
  | "SpendingLimitReached"
  | "SpendingLimitExpired";
/**
 * Defines values for BillingProfileSpendingLimit.
 */
export type BillingProfileSpendingLimit = "Off" | "On";
/**
 * Defines values for PaymentMethodType.
 */
export type PaymentMethodType = "Credits" | "ChequeWire";
/**
 * Defines values for AddressValidationStatus.
 */
export type AddressValidationStatus = "Valid" | "Invalid";
/**
 * Defines values for BillingSubscriptionStatusType.
 */
export type BillingSubscriptionStatusType =
  | "Active"
  | "Inactive"
  | "Abandoned"
  | "Deleted"
  | "Warning";
/**
 * Defines values for ProductStatusType.
 */
export type ProductStatusType =
  | "Active"
  | "Inactive"
  | "PastDue"
  | "Expiring"
  | "Expired"
  | "Disabled"
  | "Cancelled"
  | "AutoRenew";
/**
 * Defines values for BillingFrequency.
 */
export type BillingFrequency = "OneTime" | "Monthly" | "UsageBased";
/**
 * Defines values for TransactionTypeKind.
 */
export type TransactionTypeKind = "all" | "reservation";
/**
 * Defines values for ReservationType.
 */
export type ReservationType = "Purchase" | "Usage Charge";
/**
 * Defines values for InvoiceStatus.
 */
export type InvoiceStatus = "Due" | "OverDue" | "Paid";
/**
 * Defines values for InvoiceType.
 */
export type InvoiceType = "AzureService" | "AzureMarketplace" | "AzureSupport";
/**
 * Defines values for DocumentType.
 */
export type DocumentType = "Invoice" | "VoidNote" | "TaxReceipt" | "CreditNote";
/**
 * Defines values for PaymentMethodFamily.
 */
export type PaymentMethodFamily =
  | "Credits"
  | "CheckWire"
  | "CreditCard"
  | "None";
/**
 * Defines values for SubscriptionTransferValidationErrorCode.
 */
export type SubscriptionTransferValidationErrorCode =
  | "InvalidSource"
  | "SubscriptionNotActive"
  | "InsufficientPermissionOnSource"
  | "InsufficientPermissionOnDestination"
  | "DestinationBillingProfilePastDue"
  | "SubscriptionTypeNotSupported"
  | "CrossBillingAccountNotAllowed"
  | "NotAvailableForDestinationMarket";
/**
 * Defines values for ProductTransferValidationErrorCode.
 */
export type ProductTransferValidationErrorCode =
  | "InvalidSource"
  | "ProductNotActive"
  | "InsufficientPermissionOnSource"
  | "InsufficientPermissionOnDestination"
  | "DestinationBillingProfilePastDue"
  | "ProductTypeNotSupported"
  | "CrossBillingAccountNotAllowed"
  | "NotAvailableForDestinationMarket"
  | "OneTimePurchaseProductTransferNotAllowed";
/**
 * Defines values for MarketplacePurchasesPolicy.
 */
export type MarketplacePurchasesPolicy =
  | "AllAllowed"
  | "OnlyFreeAllowed"
  | "NotAllowed";
/**
 * Defines values for ReservationPurchasesPolicy.
 */
export type ReservationPurchasesPolicy = "Allowed" | "NotAllowed";
/**
 * Defines values for ViewChargesPolicy.
 */
export type ViewChargesPolicy = "Allowed" | "NotAllowed";
/**
 * Defines values for ViewCharges.
 */
export type ViewCharges = "Allowed" | "NotAllowed";
/**
 * Defines values for UpdateAutoRenew.
 */
export type UpdateAutoRenew = "true" | "false";
/**
 * Defines values for TransferStatus.
 */
export type TransferStatus =
  | "Pending"
  | "InProgress"
  | "Completed"
  | "CompletedWithErrors"
  | "Failed"
  | "Canceled"
  | "Declined";
/**
 * Defines values for ProductType.
 */
export type ProductType = "AzureSubscription" | "AzureReservation";
/**
 * Defines values for ProductTransferStatus.
 */
export type ProductTransferStatus =
  | "NotStarted"
  | "InProgress"
  | "Completed"
  | "Failed";
/**
 * Defines values for EligibleProductType.
 */
export type EligibleProductType =
  | "DevTestAzureSubscription"
  | "StandardAzureSubscription"
  | "AzureReservation";
/**
 * Defines values for Category.
 */
export type Category =
  | "MicrosoftCustomerAgreement"
  | "AffiliatePurchaseTerms"
  | "Other";
/**
 * Defines values for AcceptanceMode.
 */
export type AcceptanceMode = "ClickToAccept" | "ESignEmbedded" | "ESignOffline";

/**
 * Optional parameters.
 */
export interface BillingAccountsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the address, invoice sections and billing profiles.
   */
  expand?: string;
}

/**
 * Contains response data for the list operation.
 */
export type BillingAccountsListResponse = BillingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingAccountListResult;
  };
};

/**
 * Optional parameters.
 */
export interface BillingAccountsGetOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the address, invoice sections and billing profiles.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type BillingAccountsGetResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingAccount;
  };
};

/**
 * Contains response data for the update operation.
 */
export type BillingAccountsUpdateResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingAccount;
  };
};

/**
 * Contains response data for the listInvoiceSectionsByCreateSubscriptionPermission operation.
 */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionResponse = InvoiceSectionListWithCreateSubPermissionResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSectionListWithCreateSubPermissionResult;
  };
};

/**
 * Contains response data for the listInvoiceSectionsByCreateSubscriptionPermissionNext operation.
 */
export type BillingAccountsListInvoiceSectionsByCreateSubscriptionPermissionNextResponse = InvoiceSectionListWithCreateSubPermissionResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSectionListWithCreateSubPermissionResult;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type PaymentMethodsListByBillingAccountResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaymentMethodsListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type PaymentMethodsListByBillingProfileResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaymentMethodsListResult;
  };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type PaymentMethodsListByBillingAccountNextResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaymentMethodsListResult;
  };
};

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type PaymentMethodsListByBillingProfileNextResponse = PaymentMethodsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaymentMethodsListResult;
  };
};

/**
 * Contains response data for the validate operation.
 */
export type AddressValidateResponse = ValidateAddressResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidateAddressResponse;
  };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type AvailableBalancesGetByBillingProfileResponse = AvailableBalance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableBalance;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InstructionsListByBillingProfileResponse = InstructionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InstructionListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type InstructionsGetResponse = Instruction & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Instruction;
  };
};

/**
 * Contains response data for the put operation.
 */
export type InstructionsPutResponse = Instruction & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Instruction;
  };
};

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type InstructionsListByBillingProfileNextResponse = InstructionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InstructionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface BillingProfilesListByBillingAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the invoice sections.
   */
  expand?: string;
}

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingProfilesListByBillingAccountResponse = BillingProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingProfileListResult;
  };
};

/**
 * Optional parameters.
 */
export interface BillingProfilesGetOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the invoice sections.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type BillingProfilesGetResponse = BillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingProfile;
  };
};

/**
 * Contains response data for the create operation.
 */
export type BillingProfilesCreateResponse = BillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingProfile;
  };
};

/**
 * Contains response data for the update operation.
 */
export type BillingProfilesUpdateResponse = BillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingProfile;
  };
};

/**
 * Optional parameters.
 */
export interface CustomersListByBillingProfileOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type CustomersListByBillingProfileResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerListResult;
  };
};

/**
 * Optional parameters.
 */
export interface CustomersListByBillingAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type CustomersListByBillingAccountResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerListResult;
  };
};

/**
 * Optional parameters.
 */
export interface CustomersGetOptionalParams extends coreHttp.OperationOptions {
  /**
   * May be used to expand enabledAzurePlans and resellers
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type CustomersGetResponse = Customer & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Customer;
  };
};

/**
 * Optional parameters.
 */
export interface CustomersListByBillingProfileNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByBillingProfileNext operation.
 */
export type CustomersListByBillingProfileNextResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerListResult;
  };
};

/**
 * Optional parameters.
 */
export interface CustomersListByBillingAccountNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter the list of customers.
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type CustomersListByBillingAccountNextResponse = CustomerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InvoiceSectionsListByBillingProfileResponse = InvoiceSectionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSectionListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type InvoiceSectionsGetResponse = InvoiceSection & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSection;
  };
};

/**
 * Contains response data for the create operation.
 */
export type InvoiceSectionsCreateResponse = InvoiceSection & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSection;
  };
};

/**
 * Contains response data for the update operation.
 */
export type InvoiceSectionsUpdateResponse = InvoiceSection & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceSection;
  };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type BillingPermissionsListByCustomerResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingPermissionsListResult;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingPermissionsListByBillingAccountResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingPermissionsListResult;
  };
};

/**
 * Contains response data for the listByInvoiceSections operation.
 */
export type BillingPermissionsListByInvoiceSectionsResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingPermissionsListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingPermissionsListByBillingProfileResponse = BillingPermissionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingPermissionsListResult;
  };
};

/**
 * Contains response data for the listByCustomer operation.
 */
export type BillingSubscriptionsListByCustomerResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type BillingSubscriptionsGetByCustomerResponse = BillingSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscription;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingSubscriptionsListByBillingAccountResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingSubscriptionsListByBillingProfileResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingSubscriptionsListByInvoiceSectionResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type BillingSubscriptionsGetResponse = BillingSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscription;
  };
};

/**
 * Contains response data for the transfer operation.
 */
export type BillingSubscriptionsTransferResponse = TransferBillingSubscriptionResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferBillingSubscriptionResult;
  };
};

/**
 * Contains response data for the validateTransfer operation.
 */
export type BillingSubscriptionsValidateTransferResponse = ValidateSubscriptionTransferEligibilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidateSubscriptionTransferEligibilityResult;
  };
};

/**
 * Contains response data for the listByCustomerNext operation.
 */
export type BillingSubscriptionsListByCustomerNextResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type BillingSubscriptionsListByBillingAccountNextResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingSubscriptionsListResult;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsListByCustomerOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByCustomer operation.
 */
export type ProductsListByCustomerResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductsListResult;
  };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type ProductsGetByCustomerResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsListByBillingAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type ProductsListByBillingAccountResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductsListResult;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsListByInvoiceSectionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type ProductsListByInvoiceSectionResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProductsGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the transfer operation.
 */
export type ProductsTransferResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the validateTransfer operation.
 */
export type ProductsValidateTransferResponse = ValidateProductTransferEligibilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidateProductTransferEligibilityResult;
  };
};

/**
 * Contains response data for the updateAutoRenewByInvoiceSection operation.
 */
export type ProductsUpdateAutoRenewByInvoiceSectionResponse = UpdateAutoRenewOperation & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UpdateAutoRenewOperation;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsListByBillingAccountNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by product type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type ProductsListByBillingAccountNextResponse = ProductsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductsListResult;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByCustomerOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByCustomer operation.
 */
export type TransactionsListByCustomerResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByBillingAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type TransactionsListByBillingAccountResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByBillingProfileOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type TransactionsListByBillingProfileResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByInvoiceSectionOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type TransactionsListByInvoiceSectionResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Contains response data for the listByInvoice operation.
 */
export type TransactionsListByInvoiceResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type TransactionsGetResponse = Transaction & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Transaction;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByCustomerNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByCustomerNext operation.
 */
export type TransactionsListByCustomerNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface TransactionsListByBillingAccountNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to filter by transaction type. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type TransactionsListByBillingAccountNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Contains response data for the listByInvoiceNext operation.
 */
export type TransactionsListByInvoiceNextResponse = TransactionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransactionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface DepartmentsListByBillingAccountNameOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the enrollment accounts.
   */
  expand?: string;
  /**
   * May be used to filter by department name. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccountName operation.
 */
export type DepartmentsListByBillingAccountNameResponse = DepartmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DepartmentListResult;
  };
};

/**
 * Optional parameters.
 */
export interface DepartmentsGetOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the enrollment accounts.
   */
  expand?: string;
  /**
   * May be used to filter by department name. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the get operation.
 */
export type DepartmentsGetResponse = Department & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Department;
  };
};

/**
 * Optional parameters.
 */
export interface EnrollmentAccountsListByBillingAccountNameOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the department.
   */
  expand?: string;
  /**
   * May be used to filter by account name. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the listByBillingAccountName operation.
 */
export type EnrollmentAccountsListByBillingAccountNameResponse = EnrollmentAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnrollmentAccountListResult;
  };
};

/**
 * Optional parameters.
 */
export interface EnrollmentAccountsGetByEnrollmentAccountIdOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the department.
   */
  expand?: string;
  /**
   * May be used to filter by account name. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value are separated by a colon (:).
   */
  filter?: string;
}

/**
 * Contains response data for the getByEnrollmentAccountId operation.
 */
export type EnrollmentAccountsGetByEnrollmentAccountIdResponse = EnrollmentAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnrollmentAccount;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type InvoicesListByBillingAccountResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type InvoicesListByBillingProfileResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type InvoicesGetResponse = Invoice & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Invoice;
  };
};

/**
 * Contains response data for the listByBillingSubscription operation.
 */
export type InvoicesListByBillingSubscriptionResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceListResult;
  };
};

/**
 * Contains response data for the getById operation.
 */
export type InvoicesGetByIdResponse = Invoice & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Invoice;
  };
};

/**
 * Contains response data for the listByBillingSubscriptionNext operation.
 */
export type InvoicesListByBillingSubscriptionNextResponse = InvoiceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: InvoiceListResult;
  };
};

/**
 * Contains response data for the download operation.
 */
export type PriceSheetDownloadResponse = DownloadUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadUrl;
  };
};

/**
 * Contains response data for the downloadByBillingProfile operation.
 */
export type PriceSheetDownloadByBillingProfileResponse = DownloadUrl & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DownloadUrl;
  };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type PoliciesGetByBillingProfileResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Policy;
  };
};

/**
 * Contains response data for the update operation.
 */
export type PoliciesUpdateResponse = Policy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Policy;
  };
};

/**
 * Contains response data for the getByCustomer operation.
 */
export type PoliciesGetByCustomerResponse = CustomerPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerPolicy;
  };
};

/**
 * Contains response data for the updateCustomer operation.
 */
export type PoliciesUpdateCustomerResponse = CustomerPolicy & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerPolicy;
  };
};

/**
 * Contains response data for the get operation.
 */
export type BillingPropertyGetResponse = BillingProperty & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingProperty;
  };
};

/**
 * Contains response data for the initiate operation.
 */
export type TransfersInitiateResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the get operation.
 */
export type TransfersGetResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the cancel operation.
 */
export type TransfersCancelResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the list operation.
 */
export type TransfersListResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetailsListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type TransfersListNextResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetailsListResult;
  };
};

/**
 * Contains response data for the initiate operation.
 */
export type PartnerTransfersInitiateResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the get operation.
 */
export type PartnerTransfersGetResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the cancel operation.
 */
export type PartnerTransfersCancelResponse = TransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetails;
  };
};

/**
 * Contains response data for the list operation.
 */
export type PartnerTransfersListResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetailsListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type PartnerTransfersListNextResponse = TransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: TransferDetailsListResult;
  };
};

/**
 * Contains response data for the accept operation.
 */
export type RecipientTransfersAcceptResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RecipientTransferDetails;
  };
};

/**
 * Contains response data for the validate operation.
 */
export type RecipientTransfersValidateResponse = ValidateTransferListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidateTransferListResponse;
  };
};

/**
 * Contains response data for the decline operation.
 */
export type RecipientTransfersDeclineResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RecipientTransferDetails;
  };
};

/**
 * Contains response data for the get operation.
 */
export type RecipientTransfersGetResponse = RecipientTransferDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RecipientTransferDetails;
  };
};

/**
 * Contains response data for the list operation.
 */
export type RecipientTransfersListResponse = RecipientTransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RecipientTransferDetailsListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type RecipientTransfersListNextResponse = RecipientTransferDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RecipientTransferDetailsListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the getByBillingAccount operation.
 */
export type BillingRoleDefinitionsGetByBillingAccountResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinition;
  };
};

/**
 * Contains response data for the getByInvoiceSection operation.
 */
export type BillingRoleDefinitionsGetByInvoiceSectionResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinition;
  };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type BillingRoleDefinitionsGetByBillingProfileResponse = BillingRoleDefinition & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinition;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingRoleDefinitionsListByBillingAccountResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinitionListResult;
  };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingRoleDefinitionsListByInvoiceSectionResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinitionListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingRoleDefinitionsListByBillingProfileResponse = BillingRoleDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleDefinitionListResult;
  };
};

/**
 * Contains response data for the getByBillingAccount operation.
 */
export type BillingRoleAssignmentsGetByBillingAccountResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the deleteByBillingAccount operation.
 */
export type BillingRoleAssignmentsDeleteByBillingAccountResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the getByInvoiceSection operation.
 */
export type BillingRoleAssignmentsGetByInvoiceSectionResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the deleteByInvoiceSection operation.
 */
export type BillingRoleAssignmentsDeleteByInvoiceSectionResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the getByBillingProfile operation.
 */
export type BillingRoleAssignmentsGetByBillingProfileResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the deleteByBillingProfile operation.
 */
export type BillingRoleAssignmentsDeleteByBillingProfileResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignment;
  };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingRoleAssignmentsListByBillingAccountResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Contains response data for the addByBillingAccount operation.
 */
export type BillingRoleAssignmentsAddByBillingAccountResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Contains response data for the listByInvoiceSection operation.
 */
export type BillingRoleAssignmentsListByInvoiceSectionResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Contains response data for the addByInvoiceSection operation.
 */
export type BillingRoleAssignmentsAddByInvoiceSectionResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Contains response data for the listByBillingProfile operation.
 */
export type BillingRoleAssignmentsListByBillingProfileResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Contains response data for the addByBillingProfile operation.
 */
export type BillingRoleAssignmentsAddByBillingProfileResponse = BillingRoleAssignmentListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: BillingRoleAssignmentListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AgreementsListByBillingAccountOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * May be used to expand the participants.
   */
  expand?: string;
}

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type AgreementsListByBillingAccountResponse = AgreementListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AgreementListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AgreementsGetOptionalParams extends coreHttp.OperationOptions {
  /**
   * May be used to expand the participants.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type AgreementsGetResponse = Agreement & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Agreement;
  };
};

/**
 * Optional parameters.
 */
export interface BillingManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
