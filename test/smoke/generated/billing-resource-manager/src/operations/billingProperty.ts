/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClient } from "../billingManagementClient";
import { BillingPropertyGetResponse } from "../models";

/**
 * Class representing a BillingProperty.
 */
export class BillingProperty {
  private readonly client: BillingManagementClient;

  /**
   * Initialize a new instance of the class BillingProperty class.
   * @param client Reference to the service client
   */
  constructor(client: BillingManagementClient) {
    this.client = client;
  }

  /**
   * Get the billing properties for a subscription. This operation is not supported for billing accounts
   * with agreement type Enterprise Agreement.
   * @param options The options parameters.
   */
  get(
    options?: coreHttp.OperationOptions
  ): Promise<BillingPropertyGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { options: operationOptions },
      getOperationSpec
    ) as Promise<BillingPropertyGetResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingProperty/default",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.BillingProperty
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.subscriptionId],
  serializer
};
