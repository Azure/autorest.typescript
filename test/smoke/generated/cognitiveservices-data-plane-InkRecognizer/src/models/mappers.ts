/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const AnalysisRequest: coreHttp.CompositeMapper = {
  serializedName: "AnalysisRequest",
  type: {
    name: "Composite",
    className: "AnalysisRequest",
    modelProperties: {
      applicationType: {
        serializedName: "applicationType",
        type: {
          name: "String"
        }
      },
      inputDeviceKind: {
        serializedName: "inputDeviceKind",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      unitMultiple: {
        serializedName: "unitMultiple",
        type: {
          name: "Number"
        }
      },
      language: {
        serializedName: "language",
        required: true,
        type: {
          name: "String"
        }
      },
      inkPointValueAttributes: {
        serializedName: "inkPointValueAttributes",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "InkPointValueAttribute" }
          }
        }
      },
      strokes: {
        serializedName: "strokes",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Stroke" } }
        }
      }
    }
  }
};

export const InkPointValueAttribute: coreHttp.CompositeMapper = {
  serializedName: "InkPointValueAttribute",
  type: {
    name: "Composite",
    className: "InkPointValueAttribute",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      logicalMinimum: {
        serializedName: "logicalMinimum",
        type: {
          name: "Number"
        }
      },
      logicalMaximum: {
        serializedName: "logicalMaximum",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Stroke: coreHttp.CompositeMapper = {
  serializedName: "Stroke",
  type: {
    name: "Composite",
    className: "Stroke",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      points: {
        serializedName: "points",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "InkPoint" } }
        }
      },
      drawingAttributes: {
        serializedName: "drawingAttributes",
        type: {
          name: "Composite",
          className: "DrawingAttributesPattern"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InkPoint: coreHttp.CompositeMapper = {
  serializedName: "InkPoint",
  type: {
    name: "Composite",
    className: "InkPoint",
    modelProperties: {
      x: {
        serializedName: "x",
        required: true,
        type: {
          name: "Number"
        }
      },
      y: {
        serializedName: "y",
        required: true,
        type: {
          name: "Number"
        }
      },
      z: {
        serializedName: "z",
        type: {
          name: "Number"
        }
      },
      tipPressure: {
        serializedName: "tipPressure",
        type: {
          name: "Number"
        }
      },
      barrelPressure: {
        serializedName: "barrelPressure",
        type: {
          name: "Number"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "Number"
        }
      },
      xTilt: {
        serializedName: "xTilt",
        type: {
          name: "Number"
        }
      },
      yTilt: {
        serializedName: "yTilt",
        type: {
          name: "Number"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      tipSwitch: {
        serializedName: "tipSwitch",
        type: {
          name: "Boolean"
        }
      },
      inverted: {
        serializedName: "inverted",
        type: {
          name: "Boolean"
        }
      },
      barrelSwitch: {
        serializedName: "barrelSwitch",
        type: {
          name: "Boolean"
        }
      },
      eraser: {
        serializedName: "eraser",
        type: {
          name: "Boolean"
        }
      },
      secondaryTip: {
        serializedName: "secondaryTip",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DrawingAttributesPattern: coreHttp.CompositeMapper = {
  serializedName: "DrawingAttributesPattern",
  type: {
    name: "Composite",
    className: "DrawingAttributesPattern",
    modelProperties: {
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      color: {
        serializedName: "color",
        type: {
          name: "Composite",
          className: "DrawingAttributesPatternColor"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      },
      fitToCurve: {
        serializedName: "fitToCurve",
        type: {
          name: "Boolean"
        }
      },
      rasterOp: {
        serializedName: "rasterOp",
        type: {
          name: "String"
        }
      },
      ignorePressure: {
        serializedName: "ignorePressure",
        type: {
          name: "Boolean"
        }
      },
      tip: {
        serializedName: "tip",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DrawingAttributesPatternColor: coreHttp.CompositeMapper = {
  serializedName: "DrawingAttributesPatternColor",
  type: {
    name: "Composite",
    className: "DrawingAttributesPatternColor",
    modelProperties: {
      r: {
        serializedName: "r",
        type: {
          name: "Number"
        }
      },
      g: {
        serializedName: "g",
        type: {
          name: "Number"
        }
      },
      b: {
        serializedName: "b",
        type: {
          name: "Number"
        }
      },
      a: {
        serializedName: "a",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AnalysisResponse: coreHttp.CompositeMapper = {
  serializedName: "AnalysisResponse",
  type: {
    name: "Composite",
    className: "AnalysisResponse",
    modelProperties: {
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      unitMultiple: {
        serializedName: "unitMultiple",
        type: {
          name: "Number"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      recognitionUnits: {
        serializedName: "recognitionUnits",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RecognitionUnitItem" }
          }
        }
      }
    }
  }
};

export const RecognitionUnitItem: coreHttp.CompositeMapper = {
  serializedName: "RecognitionUnitItem",
  type: {
    name: "Composite",
    className: "RecognitionUnitItem",
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "Number"
        }
      },
      category: {
        serializedName: "category",
        required: true,
        type: {
          name: "String"
        }
      },
      alternates: {
        serializedName: "alternates",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AlternatePatternItem" }
          }
        }
      },
      center: {
        serializedName: "center",
        type: {
          name: "Composite",
          className: "PointDetailsPattern"
        }
      },
      points: {
        serializedName: "points",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PointDetailsPattern" }
          }
        }
      },
      childIds: {
        serializedName: "childIds",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Number" },
            serializedName: "ArrayItemschema"
          }
        }
      },
      class: {
        serializedName: "class",
        required: true,
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "parentId",
        required: true,
        type: {
          name: "Number"
        }
      },
      boundingRectangle: {
        serializedName: "boundingRectangle",
        type: {
          name: "Composite",
          className: "RecognitionUnitItemBoundingRectangle"
        }
      },
      rotatedBoundingRectangle: {
        serializedName: "rotatedBoundingRectangle",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PointDetailsPattern" }
          }
        }
      },
      strokeIds: {
        serializedName: "strokeIds",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Number" },
            serializedName: "ArrayItemschema"
          }
        }
      },
      recognizedText: {
        serializedName: "recognizedText",
        type: {
          name: "String"
        }
      },
      confidence: {
        serializedName: "confidence",
        type: {
          name: "Number"
        }
      },
      rotationAngle: {
        serializedName: "rotationAngle",
        type: {
          name: "Number"
        }
      },
      recognizedObject: {
        serializedName: "recognizedObject",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlternatePatternItem: coreHttp.CompositeMapper = {
  serializedName: "AlternatePatternItem",
  type: {
    name: "Composite",
    className: "AlternatePatternItem",
    modelProperties: {
      category: {
        serializedName: "category",
        required: true,
        type: {
          name: "String"
        }
      },
      points: {
        serializedName: "points",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PointDetailsPattern" }
          }
        }
      },
      rotationAngle: {
        serializedName: "rotationAngle",
        type: {
          name: "Number"
        }
      },
      confidence: {
        serializedName: "confidence",
        type: {
          name: "Number"
        }
      },
      recognizedString: {
        serializedName: "recognizedString",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PointDetailsPattern: coreHttp.CompositeMapper = {
  serializedName: "PointDetailsPattern",
  type: {
    name: "Composite",
    className: "PointDetailsPattern",
    modelProperties: {
      x: {
        serializedName: "x",
        required: true,
        type: {
          name: "Number"
        }
      },
      y: {
        serializedName: "y",
        required: true,
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RecognitionUnitItemBoundingRectangle: coreHttp.CompositeMapper = {
  serializedName: "RecognitionUnitItemBoundingRectangle",
  type: {
    name: "Composite",
    className: "RecognitionUnitItemBoundingRectangle",
    modelProperties: {
      topX: {
        serializedName: "topX",
        type: {
          name: "Number"
        }
      },
      topY: {
        serializedName: "topY",
        type: {
          name: "Number"
        }
      },
      width: {
        serializedName: "width",
        type: {
          name: "Number"
        }
      },
      height: {
        serializedName: "height",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ErrorModel: coreHttp.CompositeMapper = {
  serializedName: "ErrorModel",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ErrorModelDetailsItem" }
          }
        }
      }
    }
  }
};

export const ErrorModelDetailsItem: coreHttp.CompositeMapper = {
  serializedName: "ErrorModelDetailsItem",
  type: {
    name: "Composite",
    className: "ErrorModelDetailsItem",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};
