/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  ResourceGroup,
  ResourceGroupsCreateOrUpdateResponse,
  ResourceGroupsGetResponse,
  ResourceGroupsUpdateResponse,
  ResourceGroupsExportTemplateResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a ResourceGroups. */
export interface ResourceGroups {
  /**
   * Gets all the resource groups for a subscription.
   *
   */
  list(): PagedAsyncIterableIterator<ResourceGroup>;
  /**
   * Checks whether a resource group exists.
   *
   */
  checkExistence(): Promise<void>;
  /**
   * Creates or updates a resource group.
   *
   */
  createOrUpdate(): Promise<ResourceGroupsCreateOrUpdateResponse>;
  /**
   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group
   * deletes all of its template deployments and currently stored operations.
   *
   */
  beginDelete(): Promise<PollerLike<PollOperationState<void>, void>>;
  /**
   * When you delete a resource group, all of its resources are also deleted. Deleting a resource group
   * deletes all of its template deployments and currently stored operations.
   *
   */
  beginDeleteAndWait(): Promise<void>;
  /**
   * Gets a resource group.
   *
   */
  get(): Promise<ResourceGroupsGetResponse>;
  /**
   * Resource groups can be updated through a simple PATCH operation to a group address. The format of
   * the request is the same as that for creating a resource group. If a field is unspecified, the
   * current value is retained.
   *
   */
  update(): Promise<ResourceGroupsUpdateResponse>;
  /**
   * Captures the specified resource group as a template.
   *
   */
  beginExportTemplate(): Promise<
    PollerLike<
      PollOperationState<ResourceGroupsExportTemplateResponse>,
      ResourceGroupsExportTemplateResponse
    >
  >;
  /**
   * Captures the specified resource group as a template.
   *
   */
  beginExportTemplateAndWait(): Promise<ResourceGroupsExportTemplateResponse>;
}
