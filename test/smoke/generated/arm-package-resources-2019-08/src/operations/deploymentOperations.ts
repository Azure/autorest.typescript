/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DeploymentOperations } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { ResourceManagementClient } from "../resourceManagementClient";
import {
  DeploymentOperation,
  DeploymentOperationsGetAtScopeResponse,
  DeploymentOperationsListAtScopeResponse,
  DeploymentOperationsGetAtTenantScopeResponse,
  DeploymentOperationsListAtTenantScopeResponse,
  DeploymentOperationsGetAtManagementGroupScopeResponse,
  DeploymentOperationsListAtManagementGroupScopeResponse,
  DeploymentOperationsGetAtSubscriptionScopeResponse,
  DeploymentOperationsListAtSubscriptionScopeResponse,
  DeploymentOperationsGetResponse,
  DeploymentOperationsListResponse,
  DeploymentOperationsListAtScopeNextResponse,
  DeploymentOperationsListAtTenantScopeNextResponse,
  DeploymentOperationsListAtManagementGroupScopeNextResponse,
  DeploymentOperationsListAtSubscriptionScopeNextResponse,
  DeploymentOperationsListNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing DeploymentOperations operations. */
export class DeploymentOperationsImpl implements DeploymentOperations {
  /**
   * Initialize a new instance of the class DeploymentOperations class.
   * @param client Reference to the service client
   */
  constructor(client: ResourceManagementClient) {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  public listAtScope(): PagedAsyncIterableIterator<DeploymentOperation> {
    const iter = this.listAtScopePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listAtScopePagingPage();
      }
    };
  }

  private async *listAtScopePagingPage(): AsyncIterableIterator<
    DeploymentOperation[]
  > {
    let result = await this._listAtScope();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listAtScopeNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listAtScopePagingAll(): AsyncIterableIterator<
    DeploymentOperation
  > {
    for await (const page of this.listAtScopePagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  public listAtTenantScope(): PagedAsyncIterableIterator<DeploymentOperation> {
    const iter = this.listAtTenantScopePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listAtTenantScopePagingPage();
      }
    };
  }

  private async *listAtTenantScopePagingPage(): AsyncIterableIterator<
    DeploymentOperation[]
  > {
    let result = await this._listAtTenantScope();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listAtTenantScopeNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listAtTenantScopePagingAll(): AsyncIterableIterator<
    DeploymentOperation
  > {
    for await (const page of this.listAtTenantScopePagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  public listAtManagementGroupScope(): PagedAsyncIterableIterator<
    DeploymentOperation
  > {
    const iter = this.listAtManagementGroupScopePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listAtManagementGroupScopePagingPage();
      }
    };
  }

  private async *listAtManagementGroupScopePagingPage(): AsyncIterableIterator<
    DeploymentOperation[]
  > {
    let result = await this._listAtManagementGroupScope();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listAtManagementGroupScopeNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listAtManagementGroupScopePagingAll(): AsyncIterableIterator<
    DeploymentOperation
  > {
    for await (const page of this.listAtManagementGroupScopePagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  public listAtSubscriptionScope(): PagedAsyncIterableIterator<
    DeploymentOperation
  > {
    const iter = this.listAtSubscriptionScopePagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listAtSubscriptionScopePagingPage();
      }
    };
  }

  private async *listAtSubscriptionScopePagingPage(): AsyncIterableIterator<
    DeploymentOperation[]
  > {
    let result = await this._listAtSubscriptionScope();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listAtSubscriptionScopeNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listAtSubscriptionScopePagingAll(): AsyncIterableIterator<
    DeploymentOperation
  > {
    for await (const page of this.listAtSubscriptionScopePagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  public list(): PagedAsyncIterableIterator<DeploymentOperation> {
    const iter = this.listPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listPagingPage();
      }
    };
  }

  private async *listPagingPage(): AsyncIterableIterator<
    DeploymentOperation[]
  > {
    let result = await this._list();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listPagingAll(): AsyncIterableIterator<DeploymentOperation> {
    for await (const page of this.listPagingPage()) {
      yield* page;
    }
  }

  /**
   * Gets a deployments operation.
   *
   */
  getAtScope(): Promise<DeploymentOperationsGetAtScopeResponse> {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  private _listAtScope(): Promise<DeploymentOperationsListAtScopeResponse> {}

  /**
   * Gets a deployments operation.
   *
   */
  getAtTenantScope(): Promise<DeploymentOperationsGetAtTenantScopeResponse> {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  private _listAtTenantScope(): Promise<
    DeploymentOperationsListAtTenantScopeResponse
  > {}

  /**
   * Gets a deployments operation.
   *
   */
  getAtManagementGroupScope(): Promise<
    DeploymentOperationsGetAtManagementGroupScopeResponse
  > {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  private _listAtManagementGroupScope(): Promise<
    DeploymentOperationsListAtManagementGroupScopeResponse
  > {}

  /**
   * Gets a deployments operation.
   *
   */
  getAtSubscriptionScope(): Promise<
    DeploymentOperationsGetAtSubscriptionScopeResponse
  > {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  private _listAtSubscriptionScope(): Promise<
    DeploymentOperationsListAtSubscriptionScopeResponse
  > {}

  /**
   * Gets a deployments operation.
   *
   */
  get(): Promise<DeploymentOperationsGetResponse> {}

  /**
   * Gets all deployments operations for a deployment.
   *
   */
  private _list(): Promise<DeploymentOperationsListResponse> {}

  /**
   * ListAtScopeNext
   *
   */
  private _listAtScopeNext(): Promise<
    DeploymentOperationsListAtScopeNextResponse
  > {}

  /**
   * ListAtTenantScopeNext
   *
   */
  private _listAtTenantScopeNext(): Promise<
    DeploymentOperationsListAtTenantScopeNextResponse
  > {}

  /**
   * ListAtManagementGroupScopeNext
   *
   */
  private _listAtManagementGroupScopeNext(): Promise<
    DeploymentOperationsListAtManagementGroupScopeNextResponse
  > {}

  /**
   * ListAtSubscriptionScopeNext
   *
   */
  private _listAtSubscriptionScopeNext(): Promise<
    DeploymentOperationsListAtSubscriptionScopeNextResponse
  > {}

  /**
   * ListNext
   *
   */
  private _listNext(): Promise<DeploymentOperationsListNextResponse> {}
}
// Operation Specifications
