/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Tags } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import { ResourceManagementClient } from "../resourceManagementClient";
import {
  TagDetails,
  TagsCreateOrUpdateValueResponse,
  TagsCreateOrUpdateResponse,
  TagsListResponse,
  TagsListNextResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Class containing Tags operations. */
export class TagsImpl implements Tags {
  /**
   * Initialize a new instance of the class Tags class.
   * @param client Reference to the service client
   */
  constructor(client: ResourceManagementClient) {}

  /**
   * Gets the names and values of all resource tags that are defined in a subscription.
   *
   */
  public list(): PagedAsyncIterableIterator<TagDetails> {
    const iter = this.listPagingAll();
    return {
      next() {
        return iter.next();
      },
      [Symbol.asyncIterator]() {
        return this;
      },
      byPage: () => {
        return this.listPagingPage();
      }
    };
  }

  private async *listPagingPage(): AsyncIterableIterator<TagDetails[]> {
    let result = await this._list();
    yield result.value || [];
    let continuationToken = result.nextLink;
    while (continuationToken) {
      result = await this._listNext();
      continuationToken = result.nextLink;
      yield result.value || [];
    }
  }

  private async *listPagingAll(): AsyncIterableIterator<TagDetails> {
    for await (const page of this.listPagingPage()) {
      yield* page;
    }
  }

  /**
   * Deletes a tag value.
   *
   */
  deleteValue(): Promise<void> {}

  /**
   * Creates a tag value. The name of the tag must already exist.
   *
   */
  createOrUpdateValue(): Promise<TagsCreateOrUpdateValueResponse> {}

  /**
   * The tag name can have a maximum of 512 characters and is case insensitive. Tag names created by
   * Azure have prefixes of microsoft, azure, or windows. You cannot create tags with one of these
   * prefixes.
   *
   */
  createOrUpdate(): Promise<TagsCreateOrUpdateResponse> {}

  /**
   * You must remove all values from a resource tag before you can delete it.
   *
   */
  delete(): Promise<void> {}

  /**
   * Gets the names and values of all resource tags that are defined in a subscription.
   *
   */
  private _list(): Promise<TagsListResponse> {}

  /**
   * ListNext
   *
   */
  private _listNext(): Promise<TagsListNextResponse> {}
}
// Operation Specifications
