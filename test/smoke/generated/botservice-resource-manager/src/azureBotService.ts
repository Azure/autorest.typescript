/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { AzureBotServiceContext } from "./azureBotServiceContext";

class AzureBotService extends AzureBotServiceContext {
  /**
   * Initializes a new instance of the AzureBotService class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Azure Subscription ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.AzureBotServiceOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.bots = new operations.Bots(this);
    this.channels = new operations.Channels(this);
    this.operations = new operations.Operations(this);
    this.botConnection = new operations.BotConnection(this);
    this.enterpriseChannels = new operations.EnterpriseChannels(this);
  }

  bots: operations.Bots;
  channels: operations.Channels;
  operations: operations.Operations;
  botConnection: operations.BotConnection;
  enterpriseChannels: operations.EnterpriseChannels;
}

// Operation Specifications

export {
  AzureBotService,
  AzureBotServiceContext,
  Models as AzureBotServiceModels,
  Mappers as AzureBotServiceMappers
};
export * from "./operations";
