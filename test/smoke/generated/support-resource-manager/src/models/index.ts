/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The list of operations supported by Microsoft Support resource provider.
 */
export interface OperationsListResult {
  /**
   * The list of operations supported by Microsoft Support resource provider.
   */
  value?: Operation[];
}

/**
 * The operation supported by Microsoft Support resource provider.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  readonly name?: string;
  /**
   * The object that describes the operation.
   */
  display?: OperationDisplay;
}

/**
 * The object that describes the operation.
 */
export interface OperationDisplay {
  /**
   * The description of the operation.
   */
  readonly description?: string;
  /**
   * The action that users can perform, based on their permission level.
   */
  readonly operation?: string;
  /**
   * Service provider: Microsoft Support.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  readonly resource?: string;
}

/**
 * The API error.
 */
export interface ExceptionResponse {
  /**
   * The API error details.
   */
  error?: ServiceError;
}

/**
 * The API error details.
 */
export interface ServiceError {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
  /**
   * The target of the error.
   */
  target?: string;
  /**
   * The list of error details.
   */
  readonly details?: ServiceErrorDetail[];
}

/**
 * The error details.
 */
export interface ServiceErrorDetail {
  /**
   * The error code.
   */
  readonly code?: string;
  /**
   * The error message.
   */
  readonly message?: string;
  /**
   * The target of the error.
   */
  target?: string;
}

/**
 * Collection of Service resources.
 */
export interface ServicesListResult {
  /**
   * List of Service resources.
   */
  value?: Service[];
}

/**
 * Object that represents a Service resource.
 */
export interface Service {
  /**
   * Id of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of the resource 'Microsoft.Support/services'.
   */
  readonly type?: string;
  /**
   * Localized name of the Azure service.
   */
  displayName?: string;
  /**
   * ARM Resource types.
   */
  resourceTypes?: string[];
}

/**
 * Collection of ProblemClassification resources.
 */
export interface ProblemClassificationsListResult {
  /**
   * List of ProblemClassification resources.
   */
  value?: ProblemClassification[];
}

/**
 * ProblemClassification resource object.
 */
export interface ProblemClassification {
  /**
   * Id of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of the resource 'Microsoft.Support/problemClassification'.
   */
  readonly type?: string;
  /**
   * Localized name of problem classification.
   */
  displayName?: string;
}

/**
 * Input of CheckNameAvailability API.
 */
export interface CheckNameAvailabilityInput {
  /**
   * The resource name to validate.
   */
  name: string;
  /**
   * The type of resource.
   */
  type: Type;
}

/**
 * Output of check name availability API.
 */
export interface CheckNameAvailabilityOutput {
  /**
   * Indicates whether the name is available.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason why the name is not available.
   */
  readonly reason?: string;
  /**
   * The detailed error message describing why the name is not available.
   */
  readonly message?: string;
}

/**
 * Object that represents a collection of SupportTicket resources.
 */
export interface SupportTicketsListResult {
  /**
   * List of SupportTicket resources.
   */
  value?: SupportTicketDetails[];
  /**
   * The URI to fetch the next page of SupportTicket resources.
   */
  nextLink?: string;
}

/**
 * Object that represents SupportTicketDetails resource.
 */
export interface SupportTicketDetails {
  /**
   * Id of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of the resource 'Microsoft.Support/supportTickets'.
   */
  readonly type?: string;
  /**
   * System generated support ticket Id that is unique.
   */
  supportTicketId?: string;
  /**
   * Detailed description of the question or issue.
   */
  description?: string;
  /**
   * Each Azure service has its own set of issue categories, also known as problem classification. This parameter is the unique Id for the type of problem you are experiencing.
   */
  problemClassificationId?: string;
  /**
   * Localized name of problem classification.
   */
  readonly problemClassificationDisplayName?: string;
  /**
   * A value that indicates the urgency of the case, which in turn determines the response time according to the service level agreement of the technical support plan you have with Azure. Note: 'Highest critical impact' severity is reserved only for our Premium customers.
   */
  severity?: SeverityLevel;
  /**
   * Enrollment Id associated with the support ticket.
   */
  readonly enrollmentId?: string;
  /**
   * Indicates if this requires a 24x7 response from Azure.
   */
  require24X7Response?: boolean;
  /**
   * Contact information of the user requesting to create a support ticket.
   */
  contactDetails?: ContactProfile;
  /**
   * Service Level Agreement information for this support ticket.
   */
  serviceLevelAgreement?: ServiceLevelAgreement;
  /**
   * Information about the support engineer working on this support ticket.
   */
  supportEngineer?: SupportEngineer;
  /**
   * Support plan type associated with the support ticket.
   */
  readonly supportPlanType?: string;
  /**
   * Title of the support ticket.
   */
  title?: string;
  /**
   * Time in UTC (ISO 8601 format) when the problem started.
   */
  problemStartTime?: Date;
  /**
   * This is the resource Id of the Azure service resource associated with the support ticket.
   */
  serviceId?: string;
  /**
   * Localized name of the Azure service.
   */
  readonly serviceDisplayName?: string;
  /**
   * Status of the support ticket.
   */
  readonly status?: string;
  /**
   * Time in UTC (ISO 8601 format) when the support ticket was created.
   */
  readonly createdDate?: Date;
  /**
   * Time in UTC (ISO 8601 format) when the support ticket was last modified.
   */
  readonly modifiedDate?: Date;
  /**
   * Additional ticket details associated with a technical support ticket request.
   */
  technicalTicketDetails?: TechnicalTicketDetails;
  /**
   * Additional ticket details associated with a quota support ticket request.
   */
  quotaTicketDetails?: QuotaTicketDetails;
}

/**
 * Contact information associated with the support ticket.
 */
export interface ContactProfile {
  /**
   * First name.
   */
  firstName: string;
  /**
   * Last name.
   */
  lastName: string;
  /**
   * Preferred contact method.
   */
  preferredContactMethod: PreferredContactMethod;
  /**
   * Primary email address.
   */
  primaryEmailAddress: string;
  /**
   * Additional email addresses listed will be copied on any correspondence about the support ticket.
   */
  additionalEmailAddresses?: string[];
  /**
   * Phone number. This is required if preferred contact method is phone.
   */
  phoneNumber?: string;
  /**
   * Time zone of the user. This is the name of the time zone from [Microsoft Time Zone Index Values](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values).
   */
  preferredTimeZone: string;
  /**
   * Country of the user. This is the ISO 3166-1 alpha-3 code.
   */
  country: string;
  /**
   * Preferred language of support from Azure. Support languages vary based on the severity you choose for your support ticket. Learn more at [Azure Severity and responsiveness](https://azure.microsoft.com/support/plans/response). Use the standard language-country code. Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for Chinese and 'de-de' for German.
   */
  preferredSupportLanguage: string;
}

/**
 * Service Level Agreement details for a support ticket.
 */
export interface ServiceLevelAgreement {
  /**
   * Time in UTC (ISO 8601 format) when the service level agreement starts.
   */
  readonly startTime?: Date;
  /**
   * Time in UTC (ISO 8601 format) when the service level agreement expires.
   */
  readonly expirationTime?: Date;
  /**
   * Service Level Agreement in minutes.
   */
  readonly slaMinutes?: number;
}

/**
 * Support engineer information.
 */
export interface SupportEngineer {
  /**
   * Email address of the Azure Support engineer assigned to the support ticket.
   */
  readonly emailAddress?: string;
}

/**
 * Additional information for technical support ticket.
 */
export interface TechnicalTicketDetails {
  /**
   * This is the resource Id of the Azure service resource (For example: A virtual machine resource or an HDInsight resource) for which the support ticket is created.
   */
  resourceId?: string;
}

/**
 * Additional set of information required for quota increase support ticket for certain quota types, e.g.: Virtual machine cores. Get complete details about Quota payload support request along with examples at [Support quota request](https://aka.ms/supportrpquotarequestpayload).
 */
export interface QuotaTicketDetails {
  /**
   * Required for certain quota types when there is a sub type, such as Batch, for which you are requesting a quota increase.
   */
  quotaChangeRequestSubType?: string;
  /**
   * Quota change request version.
   */
  quotaChangeRequestVersion?: string;
  /**
   * This property is required for providing the region and new quota limits.
   */
  quotaChangeRequests?: QuotaChangeRequest[];
}

/**
 * This property is required for providing the region and new quota limits.
 */
export interface QuotaChangeRequest {
  /**
   * Region for which the quota increase request is being made.
   */
  region?: string;
  /**
   * Payload of the quota increase request.
   */
  payload?: string;
}

/**
 * Updates severity, ticket status, and contact details in the support ticket.
 */
export interface UpdateSupportTicket {
  /**
   * Severity level.
   */
  severity?: SeverityLevel;
  /**
   * Status to be updated on the ticket.
   */
  status?: Status;
  /**
   * Contact details to be updated on the support ticket.
   */
  contactDetails?: UpdateContactProfile;
}

/**
 * Contact information associated with the support ticket.
 */
export interface UpdateContactProfile {
  /**
   * First name.
   */
  firstName?: string;
  /**
   * Last name.
   */
  lastName?: string;
  /**
   * Preferred contact method.
   */
  preferredContactMethod?: PreferredContactMethod;
  /**
   * Primary email address.
   */
  primaryEmailAddress?: string;
  /**
   * Email addresses listed will be copied on any correspondence about the support ticket.
   */
  additionalEmailAddresses?: string[];
  /**
   * Phone number. This is required if preferred contact method is phone.
   */
  phoneNumber?: string;
  /**
   * Time zone of the user. This is the name of the time zone from [Microsoft Time Zone Index Values](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values).
   */
  preferredTimeZone?: string;
  /**
   * Country of the user. This is the ISO 3166-1 alpha-3 code.
   */
  country?: string;
  /**
   * Preferred language of support from Azure. Support languages vary based on the severity you choose for your support ticket. Learn more at [Azure Severity and responsiveness](https://azure.microsoft.com/support/plans/response/). Use the standard language-country code. Valid values are 'en-us' for English, 'zh-hans' for Chinese, 'es-es' for Spanish, 'fr-fr' for French, 'ja-jp' for Japanese, 'ko-kr' for Korean, 'ru-ru' for Russian, 'pt-br' for Portuguese, 'it-it' for Italian, 'zh-tw' for Chinese and 'de-de' for German.
   */
  preferredSupportLanguage?: string;
}

/**
 * Collection of Communication resources.
 */
export interface CommunicationsListResult {
  /**
   * List of Communication resources.
   */
  value?: CommunicationDetails[];
  /**
   * The URI to fetch the next page of Communication resources.
   */
  nextLink?: string;
}

/**
 * Object that represents a Communication resource.
 */
export interface CommunicationDetails {
  /**
   * Id of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of the resource 'Microsoft.Support/communications'.
   */
  readonly type?: string;
  /**
   * Communication type.
   */
  readonly communicationType?: CommunicationType;
  /**
   * Direction of communication.
   */
  readonly communicationDirection?: CommunicationDirection;
  /**
   * Email address of the sender. This property is required if called by a service principal.
   */
  sender?: string;
  /**
   * Subject of the communication.
   */
  subject?: string;
  /**
   * Body of the communication.
   */
  body?: string;
  /**
   * Time in UTC (ISO 8601 format) when the communication was created.
   */
  readonly createdDate?: Date;
}

/**
 * Defines values for SeverityLevel.
 */
export type SeverityLevel =
  | "minimal"
  | "moderate"
  | "critical"
  | "highestcriticalimpact";
/**
 * Defines values for PreferredContactMethod.
 */
export type PreferredContactMethod = "email" | "phone";
/**
 * Defines values for Status.
 */
export type Status = "open" | "closed";
/**
 * Defines values for CommunicationType.
 */
export type CommunicationType = "web" | "phone";
/**
 * Defines values for CommunicationDirection.
 */
export type CommunicationDirection = "inbound" | "outbound";
/**
 * Defines values for Type.
 */
export type Type =
  | "Microsoft.Support/supportTickets"
  | "Microsoft.Support/communications";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationsListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ServicesListResponse = ServicesListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ServicesGetResponse = Service & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Service;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ProblemClassificationsListResponse = ProblemClassificationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProblemClassificationsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProblemClassificationsGetResponse = ProblemClassification & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProblemClassification;
  };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type SupportTicketsCheckNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CheckNameAvailabilityOutput;
  };
};

/**
 * Optional parameters.
 */
export interface SupportTicketsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of values to return in the collection. Default is 25 and max is 100.
   */
  top?: number;
  /**
   * The filter to apply on the operation. We support 'odata v4.0' filter semantics. [Learn more](https://docs.microsoft.com/odata/concepts/queryoptions-overview). _Status_ filter can only be used with Equals ('eq') operator. For _CreatedDate_ filter, the supported operators are Greater Than ('gt') and Greater Than or Equals ('ge'). When using both filters, combine them using the logical 'AND'.
   */
  filter?: string;
}

/**
 * Contains response data for the list operation.
 */
export type SupportTicketsListResponse = SupportTicketsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SupportTicketsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type SupportTicketsGetResponse = SupportTicketDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SupportTicketDetails;
  };
};

/**
 * Contains response data for the update operation.
 */
export type SupportTicketsUpdateResponse = SupportTicketDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SupportTicketDetails;
  };
};

/**
 * Contains response data for the create operation.
 */
export type SupportTicketsCreateResponse = SupportTicketDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SupportTicketDetails;
  };
};

/**
 * Optional parameters.
 */
export interface SupportTicketsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of values to return in the collection. Default is 25 and max is 100.
   */
  top?: number;
  /**
   * The filter to apply on the operation. We support 'odata v4.0' filter semantics. [Learn more](https://docs.microsoft.com/odata/concepts/queryoptions-overview). _Status_ filter can only be used with Equals ('eq') operator. For _CreatedDate_ filter, the supported operators are Greater Than ('gt') and Greater Than or Equals ('ge'). When using both filters, combine them using the logical 'AND'.
   */
  filter?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type SupportTicketsListNextResponse = SupportTicketsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SupportTicketsListResult;
  };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type CommunicationsCheckNameAvailabilityResponse = CheckNameAvailabilityOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CheckNameAvailabilityOutput;
  };
};

/**
 * Optional parameters.
 */
export interface CommunicationsListOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of values to return in the collection. Default is 10 and max is 10.
   */
  top?: number;
  /**
   * The filter to apply on the operation. You can filter by communicationType and createdDate properties. CommunicationType supports Equals ('eq') operator and createdDate supports Greater Than ('gt') and Greater Than or Equals ('ge') operators. You may combine the CommunicationType and CreatedDate filters by Logical And ('and') operator.
   */
  filter?: string;
}

/**
 * Contains response data for the list operation.
 */
export type CommunicationsListResponse = CommunicationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationsListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type CommunicationsGetResponse = CommunicationDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationDetails;
  };
};

/**
 * Contains response data for the create operation.
 */
export type CommunicationsCreateResponse = CommunicationDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationDetails;
  };
};

/**
 * Optional parameters.
 */
export interface CommunicationsListNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The number of values to return in the collection. Default is 10 and max is 10.
   */
  top?: number;
  /**
   * The filter to apply on the operation. You can filter by communicationType and createdDate properties. CommunicationType supports Equals ('eq') operator and createdDate supports Greater Than ('gt') and Greater Than or Equals ('ge') operators. You may combine the CommunicationType and CreatedDate filters by Logical And ('and') operator.
   */
  filter?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type CommunicationsListNextResponse = CommunicationsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CommunicationsListResult;
  };
};

/**
 * Optional parameters.
 */
export interface MicrosoftSupportOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
