/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { StorageImportExportContext } from "./storageImportExportContext";

class StorageImportExport extends StorageImportExportContext {
  /**
   * Initializes a new instance of the StorageImportExport class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId The subscription ID for the Azure user.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.StorageImportExportOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.locations = new operations.Locations(this);
    this.jobs = new operations.Jobs(this);
    this.bitLockerKeys = new operations.BitLockerKeys(this);
    this.operations = new operations.Operations(this);
  }

  locations: operations.Locations;
  jobs: operations.Jobs;
  bitLockerKeys: operations.BitLockerKeys;
  operations: operations.Operations;
}

// Operation Specifications

export {
  StorageImportExport,
  StorageImportExportContext,
  Models as StorageImportExportModels,
  Mappers as StorageImportExportMappers
};
export * from "./operations";
