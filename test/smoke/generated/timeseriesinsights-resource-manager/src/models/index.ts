/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export type EnvironmentCreateOrUpdateParametersUnion =
  | EnvironmentCreateOrUpdateParameters
  | StandardEnvironmentCreateOrUpdateParameters
  | LongTermEnvironmentCreateOrUpdateParameters;
export type EnvironmentResourceUnion =
  | EnvironmentResource
  | StandardEnvironmentResource
  | LongTermEnvironmentResource;
export type EventSourceCreateOrUpdateParametersUnion =
  | EventSourceCreateOrUpdateParameters
  | EventHubEventSourceCreateOrUpdateParameters
  | IoTHubEventSourceCreateOrUpdateParameters;
export type EventSourceResourceUnion =
  | EventSourceResource
  | EventHubEventSourceResource
  | IoTHubEventSourceResource;

/**
 * Result of the request to list Time Series Insights operations. It contains a list of operations and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * List of Time Series Insights operations supported by the Microsoft.TimeSeriesInsights resource provider.
   */
  readonly value?: Operation[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

/**
 * A Time Series Insights REST API operation
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   */
  readonly display?: OperationDisplay;
}

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   */
  readonly description?: string;
}

/**
 * Properties required to create any resource tracked by Azure Resource Manager.
 */
export interface CreateOrUpdateTrackedResourceProperties {
  /**
   * The location of the resource.
   */
  location: string;
  /**
   * Key-value pairs of additional properties for the resource.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters supplied to the CreateOrUpdate Environment operation.
 */
export type EnvironmentCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /**
   * The kind of the environment.
   */
  kind: Kind;
  /**
   * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
   */
  sku: Sku;
};

/**
 * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
 */
export interface Sku {
  /**
   * The name of this SKU.
   */
  name: SkuName;
  /**
   * The capacity of the sku. For standard environments, this value can be changed to support scale out of environments after they have been created.
   */
  capacity: number;
}

/**
 * Time Series Insights resource
 */
export interface Resource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource name
   */
  readonly name?: string;
  /**
   * Resource type
   */
  readonly type?: string;
}

/**
 * Time Series Insights resource that is tracked by Azure Resource Manager.
 */
export type TrackedResource = Resource & {
  /**
   * Resource location
   */
  location: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
};

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
 */
export type EnvironmentResource = TrackedResource & {
  /**
   * The sku determines the type of environment, either standard (S1 or S2) or long-term (L1). For standard environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
   */
  sku: Sku;
  /**
   * The kind of the environment.
   */
  kind: EnvironmentResourceKind;
};

/**
 * Contains information about an API error.
 */
export interface CloudError {
  /**
   * Describes a particular API error with an error code and a message.
   */
  error?: CloudErrorBody;
}

/**
 * Describes a particular API error with an error code and a message.
 */
export interface CloudErrorBody {
  /**
   * An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases.
   */
  code?: string;
  /**
   * A message that describes the error in detail and provides debugging information.
   */
  message?: string;
  /**
   * The target of the particular error (for example, the name of the property in error).
   */
  target?: string;
  /**
   * Contains nested errors that are related to this error.
   */
  details?: CloudErrorBody[];
}

/**
 * Parameters supplied to the Update Environment operation.
 */
export interface EnvironmentUpdateParameters {
  /**
   * Key-value pairs of additional properties for the environment.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Parameters supplied to the Update Environment operation to update a standard environment.
 */
export type StandardEnvironmentUpdateParameters = EnvironmentUpdateParameters & {
  /**
   * The sku of the environment.
   */
  sku?: Sku;
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
   */
  dataRetentionTime?: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of event properties which will be used to partition data in the environment.
   */
  partitionKeyProperties?: TimeSeriesIdProperty[];
};

/**
 * The structure of the property that a time series id can have. An environment can have multiple such properties.
 */
export interface TimeSeriesIdProperty {
  /**
   * The name of the property.
   */
  name?: string;
  /**
   * The type of the property.
   */
  type?: "String";
}

/**
 * The response of the List Environments operation.
 */
export interface EnvironmentListResponse {
  /**
   * Result of the List Environments operation.
   */
  value?: EnvironmentResourceUnion[];
}

/**
 * Parameters supplied to the Create or Update Event Source operation.
 */
export type EventSourceCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /**
   * The kind of the event source.
   */
  kind: Kind;
};

/**
 * An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
 */
export type EventSourceResource = TrackedResource & {
  /**
   * The kind of the event source.
   */
  kind: EventSourceResourceKind;
};

/**
 * Parameters supplied to the Update Event Source operation.
 */
export interface EventSourceUpdateParameters {
  /**
   * Key-value pairs of additional properties for the event source.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The response of the List EventSources operation.
 */
export interface EventSourceListResponse {
  /**
   * Result of the List EventSources operation.
   */
  value?: EventSourceResourceUnion[];
}

export type ReferenceDataSetCreateOrUpdateParameters = CreateOrUpdateTrackedResourceProperties & {
  /**
   * The list of key properties for the reference data set.
   */
  keyProperties: ReferenceDataSetKeyProperty[];
  /**
   * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
   */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
};

/**
 * Properties used to create a reference data set.
 */
export interface ReferenceDataSetCreationProperties {
  /**
   * The list of key properties for the reference data set.
   */
  keyProperties: ReferenceDataSetKeyProperty[];
  /**
   * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
   */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
}

/**
 * A key property for the reference data set. A reference data set can have multiple key properties.
 */
export interface ReferenceDataSetKeyProperty {
  /**
   * The name of the key property.
   */
  name?: string;
  /**
   * The type of the key property.
   */
  type?: ReferenceDataKeyPropertyType;
}

/**
 * A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
 */
export type ReferenceDataSetResource = TrackedResource & {
  /**
   * The list of key properties for the reference data set.
   */
  keyProperties?: ReferenceDataSetKeyProperty[];
  /**
   * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
   */
  dataStringComparisonBehavior?: DataStringComparisonBehavior;
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
};

/**
 * Properties that are common to all tracked resources.
 */
export interface ResourceProperties {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
}

/**
 * Properties of the reference data set.
 */
export type ReferenceDataSetResourceProperties = ReferenceDataSetCreationProperties &
  ResourceProperties & {};

/**
 * Parameters supplied to the Update Reference Data Set operation.
 */
export interface ReferenceDataSetUpdateParameters {
  /**
   * Key-value pairs of additional properties for the reference data set.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The response of the List Reference Data Sets operation.
 */
export interface ReferenceDataSetListResponse {
  /**
   * Result of the List Reference Data Sets operation.
   */
  value?: ReferenceDataSetResource[];
}

export interface AccessPolicyCreateOrUpdateParameters {
  /**
   * The objectId of the principal in Azure Active Directory.
   */
  principalObjectId?: string;
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
}

/**
 * An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
 */
export type AccessPolicyResource = Resource & {
  /**
   * The objectId of the principal in Azure Active Directory.
   */
  principalObjectId?: string;
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
};

export interface AccessPolicyUpdateParameters {
  /**
   * An description of the access policy.
   */
  description?: string;
  /**
   * The list of roles the principal is assigned on the environment.
   */
  roles?: AccessPolicyRole[];
}

/**
 * The response of the List access policies operation.
 */
export interface AccessPolicyListResponse {
  /**
   * Result of the List access policies operation.
   */
  value?: AccessPolicyResource[];
}

/**
 * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
 */
export interface LongTermStorageConfigurationInput {
  /**
   * The name of the storage account that will hold the environment's long term data.
   */
  accountName: string;
  /**
   * The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
   */
  managementKey: string;
}

/**
 * The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
 */
export interface LongTermStorageConfigurationOutput {
  /**
   * The name of the storage account that will hold the environment's long term data.
   */
  accountName: string;
}

/**
 * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
 */
export interface LongTermStorageConfigurationMutableProperties {
  /**
   * The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
   */
  managementKey: string;
}

/**
 * Parameters supplied to the Create or Update Environment operation for a standard environment.
 */
export type StandardEnvironmentCreateOrUpdateParameters = EnvironmentCreateOrUpdateParameters & {
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
   */
  dataRetentionTime: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of event properties which will be used to partition data in the environment.
   */
  partitionKeyProperties?: TimeSeriesIdProperty[];
};

/**
 * Properties used to create a standard environment.
 */
export interface StandardEnvironmentCreationProperties {
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
   */
  dataRetentionTime: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of event properties which will be used to partition data in the environment.
   */
  partitionKeyProperties?: TimeSeriesIdProperty[];
}

/**
 * Parameters supplied to the Create or Update Environment operation for a long-term environment.
 */
export type LongTermEnvironmentCreateOrUpdateParameters = EnvironmentCreateOrUpdateParameters & {
  /**
   * The list of event properties which will be used to define the environment's time series id.
   */
  timeSeriesIdProperties: TimeSeriesIdProperty[];
  /**
   * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
   */
  storageConfiguration: LongTermStorageConfigurationInput;
  /**
   * ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
   */
  dataRetention?: string;
};

/**
 * Parameters supplied to the Update Environment operation to update a long-term environment.
 */
export type LongTermEnvironmentUpdateParameters = EnvironmentUpdateParameters & {
  /**
   * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
   */
  storageConfiguration?: LongTermStorageConfigurationMutableProperties;
  /**
   * ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
   */
  dataRetention?: string;
};

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Standard environments have data retention limits.
 */
export type StandardEnvironmentResource = EnvironmentResource & {
  /**
   * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
   */
  dataRetentionTime: string;
  /**
   * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
   */
  storageLimitExceededBehavior?: StorageLimitExceededBehavior;
  /**
   * The list of event properties which will be used to partition data in the environment.
   */
  partitionKeyProperties?: TimeSeriesIdProperty[];
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningStatePropertiesProvisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTimePropertiesCreationTime?: Date;
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   */
  readonly status?: EnvironmentStatus;
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
};

/**
 * Properties of the environment.
 */
export type EnvironmentResourceProperties = ResourceProperties & {
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   */
  readonly status?: EnvironmentStatus;
};

/**
 * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
 */
export interface EnvironmentStatus {
  /**
   * An object that represents the status of ingress on an environment.
   */
  readonly ingress?: IngressEnvironmentStatus;
  /**
   * An object that represents the status of warm storage on an environment.
   */
  readonly warmStorage?: WarmStorageEnvironmentStatus;
}

/**
 * An object that represents the status of ingress on an environment.
 */
export interface IngressEnvironmentStatus {
  /**
   * This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
   */
  state?: IngressState;
  /**
   * An object that contains the details about an environment's state.
   */
  readonly stateDetails?: EnvironmentStateDetails;
}

/**
 * An object that contains the details about an environment's state.
 */
export interface EnvironmentStateDetails {
  /**
   * Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
   */
  code?: string;
  /**
   * A message that describes the state in detail.
   */
  message?: string;
}

/**
 * An object that represents the status of warm storage on an environment.
 */
export interface WarmStorageEnvironmentStatus {
  /**
   * This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
   */
  state?: WarmStoragePropertiesState;
  /**
   * A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
   */
  currentCount?: number;
  /**
   * A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
   */
  maxCount?: number;
}

/**
 * Properties of the standard environment.
 */
export type StandardEnvironmentResourceProperties = StandardEnvironmentCreationProperties &
  EnvironmentResourceProperties &
  ResourceProperties & {};

/**
 * An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. LongTerm environments do not have set data retention limits.
 */
export type LongTermEnvironmentResource = EnvironmentResource & {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningStatePropertiesProvisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTimePropertiesCreationTime?: Date;
  /**
   * An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessId?: string;
  /**
   * The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
   */
  readonly dataAccessFqdn?: string;
  /**
   * An object that represents the status of the environment, and its internal state in the Time Series Insights service.
   */
  readonly status?: EnvironmentStatus;
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
  /**
   * The list of event properties which will be used to define the environment's time series id.
   */
  timeSeriesIdProperties: TimeSeriesIdProperty[];
  /**
   * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
   */
  storageConfiguration: LongTermStorageConfigurationOutput;
  /**
   * ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
   */
  dataRetention?: string;
};

/**
 * Properties of the long-term environment.
 */
export type LongTermEnvironmentResourceProperties = EnvironmentResourceProperties &
  ResourceProperties & {
    /**
     * The list of event properties which will be used to define the environment's time series id.
     */
    timeSeriesIdProperties: TimeSeriesIdProperty[];
    /**
     * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
     */
    storageConfiguration: LongTermStorageConfigurationOutput;
    /**
     * ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
     */
    dataRetention?: string;
  };

/**
 * Parameters supplied to the Create or Update Event Source operation for an EventHub event source.
 */
export type EventHubEventSourceCreateOrUpdateParameters = EventSourceCreateOrUpdateParameters & {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
};

/**
 * Properties of the event source.
 */
export type EventSourceCommonProperties = ResourceProperties & {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
};

/**
 * Properties of an event source that reads events from an event broker in Azure.
 */
export type AzureEventSourceProperties = EventSourceCommonProperties & {
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
};

/**
 * Properties of the EventHub event source.
 */
export type EventHubEventSourceCommonProperties = AzureEventSourceProperties & {
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
};

/**
 * Properties of the EventHub event source that are required on create or update requests.
 */
export type EventHubEventSourceCreationProperties = EventHubEventSourceCommonProperties & {
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
};

/**
 * Parameters supplied to the Create or Update Event Source operation for an IoTHub event source.
 */
export type IoTHubEventSourceCreateOrUpdateParameters = EventSourceCreateOrUpdateParameters & {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
   */
  keyName: string;
  /**
   * The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
};

/**
 * Properties of the IoTHub event source.
 */
export type IoTHubEventSourceCommonProperties = AzureEventSourceProperties & {
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
   */
  keyName: string;
};

/**
 * Properties of the IoTHub event source that are required on create or update requests.
 */
export type IoTHubEventSourceCreationProperties = IoTHubEventSourceCommonProperties & {
  /**
   * The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey: string;
};

/**
 * Parameters supplied to the Update Event Source operation to update an EventHub event source.
 */
export type EventHubEventSourceUpdateParameters = EventSourceUpdateParameters & {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
   */
  localTimestamp?: LocalTimestamp;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
};

/**
 * An object that represents a set of mutable event source resource properties.
 */
export interface EventSourceMutableProperties {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
   */
  localTimestamp?: LocalTimestamp;
}

/**
 * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
 */
export interface LocalTimestamp {
  /**
   * An enum that represents the format of the local timestamp property that needs to be set.
   */
  format?: LocalTimestampFormat;
  /**
   * An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
   */
  timeZoneOffset?: LocalTimestampTimeZoneOffset;
}

/**
 * An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
 */
export interface LocalTimestampTimeZoneOffset {
  /**
   * The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)
   */
  propertyName?: string;
}

/**
 * An object that represents a set of mutable EventHub event source resource properties.
 */
export type EventHubEventSourceMutableProperties = EventSourceMutableProperties & {
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
};

/**
 * Parameters supplied to the Update Event Source operation to update an IoTHub event source.
 */
export type IoTHubEventSourceUpdateParameters = EventSourceUpdateParameters & {
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
   */
  localTimestamp?: LocalTimestamp;
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
};

/**
 * An object that represents a set of mutable IoTHub event source resource properties.
 */
export type IoTHubEventSourceMutableProperties = EventSourceMutableProperties & {
  /**
   * The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
   */
  sharedAccessKey?: string;
};

/**
 * An event source that receives its data from an Azure EventHub.
 */
export type EventHubEventSourceResource = EventSourceResource & {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the service bus that contains the event hub.
   */
  serviceBusNamespace: string;
  /**
   * The name of the event hub.
   */
  eventHubName: string;
  /**
   * The name of the event hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
   */
  keyName: string;
};

/**
 * Properties of the EventHub event source resource.
 */
export type EventHubEventSourceResourceProperties = EventHubEventSourceCommonProperties & {};

/**
 * An event source that receives its data from an Azure IoTHub.
 */
export type IoTHubEventSourceResource = EventSourceResource & {
  /**
   * Provisioning state of the resource.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The time the resource was created.
   */
  readonly creationTime?: Date;
  /**
   * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
   */
  timestampPropertyName?: string;
  /**
   * The resource id of the event source in Azure Resource Manager.
   */
  eventSourceResourceId: string;
  /**
   * The name of the iot hub.
   */
  iotHubName: string;
  /**
   * The name of the iot hub's consumer group that holds the partitions from which events will be read.
   */
  consumerGroupName: string;
  /**
   * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
   */
  keyName: string;
};

/**
 * Properties of the IoTHub event source resource.
 */
export type IoTHubEventSourceResourceProperties = IoTHubEventSourceCommonProperties & {};
/**
 * Defines values for Kind.
 */
export type Kind =
  | "Standard"
  | "LongTerm"
  | "Microsoft.EventHub"
  | "Microsoft.IoTHub";
/**
 * Defines values for SkuName.
 */
export type SkuName = "S1" | "S2" | "P1" | "L1";
/**
 * Defines values for EnvironmentResourceKind.
 */
export type EnvironmentResourceKind = "Standard" | "LongTerm";
/**
 * Defines values for StorageLimitExceededBehavior.
 */
export type StorageLimitExceededBehavior = "PurgeOldData" | "PauseIngress";
/**
 * Defines values for EventSourceResourceKind.
 */
export type EventSourceResourceKind = "Microsoft.EventHub" | "Microsoft.IoTHub";
/**
 * Defines values for ReferenceDataKeyPropertyType.
 */
export type ReferenceDataKeyPropertyType =
  | "String"
  | "Double"
  | "Bool"
  | "DateTime";
/**
 * Defines values for DataStringComparisonBehavior.
 */
export type DataStringComparisonBehavior = "Ordinal" | "OrdinalIgnoreCase";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Accepted"
  | "Creating"
  | "Updating"
  | "Succeeded"
  | "Failed"
  | "Deleting";
/**
 * Defines values for AccessPolicyRole.
 */
export type AccessPolicyRole = "Reader" | "Contributor";
/**
 * Defines values for IngressState.
 */
export type IngressState =
  | "Disabled"
  | "Ready"
  | "Running"
  | "Paused"
  | "Unknown";
/**
 * Defines values for WarmStoragePropertiesState.
 */
export type WarmStoragePropertiesState = "Ok" | "Error" | "Unknown";
/**
 * Defines values for LocalTimestampFormat.
 */
export type LocalTimestampFormat = "Embedded" | "Iana" | "TimeSpan";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EnvironmentsCreateOrUpdateResponse = EnvironmentResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnvironmentResourceUnion;
  };
};

/**
 * Optional parameters.
 */
export interface EnvironmentsGetOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type EnvironmentsGetResponse = EnvironmentResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnvironmentResourceUnion;
  };
};

/**
 * Contains response data for the update operation.
 */
export type EnvironmentsUpdateResponse = EnvironmentResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnvironmentResourceUnion;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type EnvironmentsListByResourceGroupResponse = EnvironmentListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnvironmentListResponse;
  };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type EnvironmentsListBySubscriptionResponse = EnvironmentListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EnvironmentListResponse;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type EventSourcesCreateOrUpdateResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EventSourceResourceUnion;
  };
};

/**
 * Contains response data for the get operation.
 */
export type EventSourcesGetResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EventSourceResourceUnion;
  };
};

/**
 * Contains response data for the update operation.
 */
export type EventSourcesUpdateResponse = EventSourceResourceUnion & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EventSourceResourceUnion;
  };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type EventSourcesListByEnvironmentResponse = EventSourceListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: EventSourceListResponse;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ReferenceDataSetsCreateOrUpdateResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ReferenceDataSetResource;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ReferenceDataSetsGetResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ReferenceDataSetResource;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ReferenceDataSetsUpdateResponse = ReferenceDataSetResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ReferenceDataSetResource;
  };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type ReferenceDataSetsListByEnvironmentResponse = ReferenceDataSetListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ReferenceDataSetListResponse;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type AccessPoliciesCreateOrUpdateResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccessPolicyResource;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AccessPoliciesGetResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccessPolicyResource;
  };
};

/**
 * Contains response data for the update operation.
 */
export type AccessPoliciesUpdateResponse = AccessPolicyResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccessPolicyResource;
  };
};

/**
 * Contains response data for the listByEnvironment operation.
 */
export type AccessPoliciesListByEnvironmentResponse = AccessPolicyListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AccessPolicyListResponse;
  };
};

/**
 * Optional parameters.
 */
export interface TimeSeriesInsightsClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
