/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2015-08-19",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const searchServiceName: coreHttp.OperationURLParameter = {
  parameterPath: "searchServiceName",
  mapper: {
    serializedName: "searchServiceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const clientRequestId: coreHttp.OperationParameter = {
  parameterPath: ["searchManagementRequestOptions", "clientRequestId"],
  mapper: {
    serializedName: "x-ms-client-request-id",
    type: {
      name: "Uuid"
    }
  }
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const keyKind: coreHttp.OperationURLParameter = {
  parameterPath: "keyKind",
  mapper: {
    serializedName: "keyKind",
    required: true,
    type: {
      name: "Enum",
      allowedValues: ["primary", "secondary"]
    }
  }
};

export const name: coreHttp.OperationURLParameter = {
  parameterPath: "name",
  mapper: {
    serializedName: "name",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const key: coreHttp.OperationURLParameter = {
  parameterPath: "key",
  mapper: {
    serializedName: "key",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const service: coreHttp.OperationParameter = {
  parameterPath: "service",
  mapper: Mappers.SearchService
};

export const searchServiceName1: coreHttp.OperationURLParameter = {
  parameterPath: "searchServiceName",
  mapper: {
    serializedName: "searchServiceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const service1: coreHttp.OperationParameter = {
  parameterPath: "service",
  mapper: Mappers.SearchService
};

export const searchServiceName2: coreHttp.OperationURLParameter = {
  parameterPath: "searchServiceName",
  mapper: {
    serializedName: "searchServiceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const checkNameAvailabilityInput: coreHttp.OperationParameter = {
  parameterPath: "checkNameAvailabilityInput",
  mapper: Mappers.CheckNameAvailabilityInput
};
