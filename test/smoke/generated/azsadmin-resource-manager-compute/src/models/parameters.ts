/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2015-12-01-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const location: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const publisher: coreHttp.OperationURLParameter = {
  parameterPath: "publisher",
  mapper: {
    serializedName: "publisher",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const offer: coreHttp.OperationURLParameter = {
  parameterPath: "offer",
  mapper: {
    serializedName: "offer",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const sku: coreHttp.OperationURLParameter = {
  parameterPath: "sku",
  mapper: {
    serializedName: "sku",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const version: coreHttp.OperationURLParameter = {
  parameterPath: "version",
  mapper: {
    serializedName: "version",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const newImage: coreHttp.OperationParameter = {
  parameterPath: "newImage",
  mapper: Mappers.PlatformImageParameters
};

export const quotaName: coreHttp.OperationURLParameter = {
  parameterPath: "quotaName",
  mapper: {
    serializedName: "quotaName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion1: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-02-09",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const newQuota: coreHttp.OperationParameter = {
  parameterPath: "newQuota",
  mapper: Mappers.Quota
};

export const type: coreHttp.OperationURLParameter = {
  parameterPath: "type",
  mapper: {
    serializedName: "type",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const extension: coreHttp.OperationParameter = {
  parameterPath: "extension",
  mapper: Mappers.VMExtensionParameters
};

export const userSubscriptionId: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "userSubscriptionId"],
  mapper: {
    serializedName: "userSubscriptionId",
    type: {
      name: "String"
    }
  }
};

export const status: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "status"],
  mapper: {
    serializedName: "status",
    type: {
      name: "String"
    }
  }
};

export const sharePath: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "sharePath"],
  mapper: {
    serializedName: "sharePath",
    type: {
      name: "String"
    }
  }
};

export const scaleUnit: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "scaleUnit"],
  mapper: {
    serializedName: "scaleUnit",
    type: {
      name: "String"
    }
  }
};

export const volumeLabel: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "volumeLabel"],
  mapper: {
    serializedName: "volumeLabel",
    type: {
      name: "String"
    }
  }
};

export const count: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "count"],
  mapper: {
    serializedName: "count",
    type: {
      name: "Number"
    }
  }
};

export const start: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "start"],
  mapper: {
    serializedName: "start",
    type: {
      name: "Number"
    }
  }
};

export const apiVersion2: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-07-30-preview",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const diskId: coreHttp.OperationURLParameter = {
  parameterPath: "diskId",
  mapper: {
    serializedName: "DiskId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const status1: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "status"],
  mapper: {
    serializedName: "status",
    type: {
      name: "String"
    }
  }
};

export const migrationId: coreHttp.OperationURLParameter = {
  parameterPath: "migrationId",
  mapper: {
    serializedName: "migrationId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const disks: coreHttp.OperationParameter = {
  parameterPath: "disks",
  mapper: {
    serializedName: "disks",
    required: true,
    type: {
      name: "Sequence",
      element: { type: { name: "Composite", className: "Disk" } }
    }
  }
};

export const targetShare: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "targetShare"],
  mapper: {
    serializedName: "targetShare",
    type: {
      name: "String"
    }
  }
};

export const targetScaleUnit: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "targetScaleUnit"],
  mapper: {
    serializedName: "targetScaleUnit",
    type: {
      name: "String"
    }
  }
};

export const targetVolumeLabel: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "targetVolumeLabel"],
  mapper: {
    serializedName: "targetVolumeLabel",
    type: {
      name: "String"
    }
  }
};
