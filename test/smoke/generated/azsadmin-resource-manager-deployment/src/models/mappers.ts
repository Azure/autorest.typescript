/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationList: coreHttp.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "Display"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Display: coreHttp.CompositeMapper = {
  serializedName: "Display",
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionPlanList: coreHttp.CompositeMapper = {
  serializedName: "ActionPlanList",
  type: {
    name: "Composite",
    className: "ActionPlanList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ActionPlanResourceEntity" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionPlanResourceEntity: coreHttp.CompositeMapper = {
  serializedName: "ActionPlanResourceEntity",
  type: {
    name: "Composite",
    className: "ActionPlanResourceEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      actionPlanUri: {
        serializedName: "properties.actionPlanUri",
        type: {
          name: "String"
        }
      },
      resourceGroupName: {
        serializedName: "properties.resourceGroupName",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Composite",
          className: "JTokenString"
        }
      },
      startTime: {
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "properties.endTime",
        type: {
          name: "DateTime"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      actionPlanInstanceId: {
        serializedName: "properties.actionPlanInstanceId",
        type: {
          name: "String"
        }
      },
      blobContainerName: {
        serializedName: "properties.blobContainerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JTokenString: coreHttp.CompositeMapper = {
  serializedName: "JTokenString",
  type: {
    name: "Composite",
    className: "JTokenString",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtendedErrorInfo: coreHttp.CompositeMapper = {
  serializedName: "ExtendedErrorInfo",
  type: {
    name: "Composite",
    className: "ExtendedErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      }
    }
  }
};

export const ActionPlanOperationsList: coreHttp.CompositeMapper = {
  serializedName: "ActionPlanOperationsList",
  type: {
    name: "Composite",
    className: "ActionPlanOperationsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionPlanOperationResourceEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionPlanOperationResourceEntity: coreHttp.CompositeMapper = {
  serializedName: "ActionPlanOperationResourceEntity",
  type: {
    name: "Composite",
    className: "ActionPlanOperationResourceEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "properties.title",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      typePropertiesType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "properties.parameters",
        type: {
          name: "any"
        }
      },
      startTime: {
        serializedName: "properties.startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "properties.endTime",
        type: {
          name: "DateTime"
        }
      },
      outputs: {
        serializedName: "properties.outputs",
        type: {
          name: "any"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      actionPlanInstanceId: {
        serializedName: "properties.actionPlanInstanceId",
        type: {
          name: "String"
        }
      },
      actionPlanOperationId: {
        serializedName: "properties.actionPlanOperationId",
        type: {
          name: "String"
        }
      },
      blobContainerName: {
        serializedName: "properties.blobContainerName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileContainersList: coreHttp.CompositeMapper = {
  serializedName: "FileContainersList",
  type: {
    name: "Composite",
    className: "FileContainersList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "FileContainer" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileContainer: coreHttp.CompositeMapper = {
  serializedName: "FileContainer",
  type: {
    name: "Composite",
    className: "FileContainer",
    modelProperties: {
      ...Resource.type.modelProperties,
      fileContainerId: {
        serializedName: "properties.fileContainerId",
        type: {
          name: "String"
        }
      },
      sourceUri: {
        serializedName: "properties.sourceUri",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "properties.uri",
        type: {
          name: "String"
        }
      },
      postCopyAction: {
        serializedName: "properties.postCopyAction",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorInfo"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorInfo: coreHttp.CompositeMapper = {
  serializedName: "ErrorInfo",
  type: {
    name: "Composite",
    className: "ErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ErrorInfo" } }
        }
      }
    }
  }
};

export const FileContainerParameters: coreHttp.CompositeMapper = {
  serializedName: "FileContainerParameters",
  type: {
    name: "Composite",
    className: "FileContainerParameters",
    modelProperties: {
      postCopyAction: {
        serializedName: "postCopyAction",
        type: {
          name: "String"
        }
      },
      sourceUri: {
        serializedName: "sourceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductDeploymentsList: coreHttp.CompositeMapper = {
  serializedName: "ProductDeploymentsList",
  type: {
    name: "Composite",
    className: "ProductDeploymentsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProductDeploymentResourceEntity"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductDeploymentResourceEntity: coreHttp.CompositeMapper = {
  serializedName: "ProductDeploymentResourceEntity",
  type: {
    name: "Composite",
    className: "ProductDeploymentResourceEntity",
    modelProperties: {
      ...Resource.type.modelProperties,
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "properties.status",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      },
      deployment: {
        serializedName: "deployment",
        type: {
          name: "Composite",
          className: "DeploymentInfo"
        }
      },
      lastSuccessfulDeployment: {
        serializedName: "lastSuccessfulDeployment",
        type: {
          name: "Composite",
          className: "DeploymentInfo"
        }
      },
      secretRotation: {
        serializedName: "secretRotation",
        type: {
          name: "Composite",
          className: "SecretRotationInfo"
        }
      },
      internalState: {
        serializedName: "internalState",
        type: {
          name: "Composite",
          className: "ProductDeploymentsInternalState"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      },
      externalAccess: {
        serializedName: "externalAccess",
        type: {
          name: "Composite",
          className: "ExternalAccessInfo"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      productId: {
        serializedName: "properties.productId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentInfo: coreHttp.CompositeMapper = {
  serializedName: "DeploymentInfo",
  type: {
    name: "Composite",
    className: "DeploymentInfo",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "String"
        }
      },
      actionPlanInstanceResourceId: {
        serializedName: "actionPlanInstanceResourceId",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretRotationInfo: coreHttp.CompositeMapper = {
  serializedName: "SecretRotationInfo",
  type: {
    name: "Composite",
    className: "SecretRotationInfo",
    modelProperties: {
      secretRotationPlanInstanceResourceId: {
        serializedName: "secretRotationPlanInstanceResourceId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductDeploymentsInternalState: coreHttp.CompositeMapper = {
  serializedName: "ProductDeploymentsInternalState",
  type: {
    name: "Composite",
    className: "ProductDeploymentsInternalState",
    modelProperties: {
      jobId: {
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      intermediateVaultId: {
        serializedName: "intermediateVaultId",
        type: {
          name: "String"
        }
      },
      intermediateVaultUri: {
        serializedName: "intermediateVaultUri",
        type: {
          name: "String"
        }
      },
      externalAccessRoleAssignmentId: {
        serializedName: "externalAccessRoleAssignmentId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExternalAccessInfo: coreHttp.CompositeMapper = {
  serializedName: "ExternalAccessInfo",
  type: {
    name: "Composite",
    className: "ExternalAccessInfo",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      expirationTime: {
        serializedName: "expirationTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const BootStrapActionParameters: coreHttp.CompositeMapper = {
  serializedName: "BootStrapActionParameters",
  type: {
    name: "Composite",
    className: "BootStrapActionParameters",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeployActionParameters: coreHttp.CompositeMapper = {
  serializedName: "DeployActionParameters",
  type: {
    name: "Composite",
    className: "DeployActionParameters",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UnlockActionParameters: coreHttp.CompositeMapper = {
  serializedName: "UnlockActionParameters",
  type: {
    name: "Composite",
    className: "UnlockActionParameters",
    modelProperties: {
      duration: {
        serializedName: "duration",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPackagesList: coreHttp.CompositeMapper = {
  serializedName: "ProductPackagesList",
  type: {
    name: "Composite",
    className: "ProductPackagesList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ProductPackage" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductPackage: coreHttp.CompositeMapper = {
  serializedName: "ProductPackage",
  type: {
    name: "Composite",
    className: "ProductPackage",
    modelProperties: {
      ...Resource.type.modelProperties,
      fileContainerId: {
        serializedName: "properties.fileContainerId",
        type: {
          name: "String"
        }
      },
      isDeployable: {
        serializedName: "properties.isDeployable",
        type: {
          name: "Boolean"
        }
      },
      isUpdatable: {
        serializedName: "properties.isUpdatable",
        type: {
          name: "Boolean"
        }
      },
      productDeploymentId: {
        serializedName: "properties.productDeploymentId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductSecretsList: coreHttp.CompositeMapper = {
  serializedName: "ProductSecretsList",
  type: {
    name: "Composite",
    className: "ProductSecretsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ProductSecret" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductSecret: coreHttp.CompositeMapper = {
  serializedName: "ProductSecret",
  type: {
    name: "Composite",
    className: "ProductSecret",
    modelProperties: {
      ...Resource.type.modelProperties,
      secretState: {
        serializedName: "secretState",
        type: {
          name: "Composite",
          className: "SecretState"
        }
      },
      secretDescriptor: {
        serializedName: "secretDescriptor",
        type: {
          name: "Composite",
          className: "SecretDescriptor"
        }
      },
      expiresAfter: {
        serializedName: "properties.expiresAfter",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      secretKind: {
        serializedName: "properties.secretKind",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SecretState: coreHttp.CompositeMapper = {
  serializedName: "SecretState",
  type: {
    name: "Composite",
    className: "SecretState",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      rotationStatus: {
        serializedName: "rotationStatus",
        type: {
          name: "String"
        }
      },
      expirationDate: {
        serializedName: "expirationDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const SecretDescriptor: coreHttp.CompositeMapper = {
  serializedName: "SecretDescriptor",
  type: {
    name: "Composite",
    className: "SecretDescriptor",
    modelProperties: {
      keyLength: {
        serializedName: "keyLength",
        type: {
          name: "Number"
        }
      },
      alternativeDnsNames: {
        serializedName: "alternativeDnsNames",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "AlternativeDnsNames"
          }
        }
      },
      secondaryKeyIsActive: {
        serializedName: "secondaryKeyIsActive",
        type: {
          name: "Boolean"
        }
      },
      rotationStatus: {
        serializedName: "rotationStatus",
        type: {
          name: "String"
        }
      },
      passwordLength: {
        serializedName: "passwordLength",
        type: {
          name: "Number"
        }
      },
      allowedCharacters: {
        serializedName: "allowedCharacters",
        type: {
          name: "String"
        }
      },
      passwordValidationRegex: {
        serializedName: "passwordValidationRegex",
        type: {
          name: "String"
        }
      },
      subject: {
        serializedName: "subject",
        type: {
          name: "String"
        }
      },
      alternativeIpAddresses: {
        serializedName: "alternativeIpAddresses",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "AlternativeIpAddresses"
          }
        }
      }
    }
  }
};

export const SecretParameters: coreHttp.CompositeMapper = {
  serializedName: "SecretParameters",
  type: {
    name: "Composite",
    className: "SecretParameters",
    modelProperties: {
      secretValue: {
        serializedName: "secretValue",
        type: {
          name: "String"
        }
      },
      pfxFileName: {
        serializedName: "pfxFileName",
        type: {
          name: "String"
        }
      },
      pfxPassword: {
        serializedName: "pfxPassword",
        type: {
          name: "String"
        }
      },
      symmetricKey: {
        serializedName: "symmetricKey",
        type: {
          name: "String"
        }
      },
      password: {
        serializedName: "password",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductProperties: coreHttp.CompositeMapper = {
  serializedName: "ProductProperties",
  type: {
    name: "Composite",
    className: "ProductProperties",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductLink: coreHttp.CompositeMapper = {
  serializedName: "ProductLink",
  type: {
    name: "Composite",
    className: "ProductLink",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      }
    }
  }
};
