/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { StorageCacheManagementClientContext } from "./storageCacheManagementClientContext";

class StorageCacheManagementClient extends StorageCacheManagementClientContext {
  /**
   * Initializes a new instance of the StorageCacheManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.
   *                       The subscription ID forms part of the URI for every service call.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.StorageCacheManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.operations = new operations.Operations(this);
    this.skus = new operations.Skus(this);
    this.usageModels = new operations.UsageModels(this);
    this.caches = new operations.Caches(this);
    this.storageTargets = new operations.StorageTargets(this);
  }

  operations: operations.Operations;
  skus: operations.Skus;
  usageModels: operations.UsageModels;
  caches: operations.Caches;
  storageTargets: operations.StorageTargets;
}

// Operation Specifications

export {
  StorageCacheManagementClient,
  StorageCacheManagementClientContext,
  Models as StorageCacheManagementModels,
  Mappers as StorageCacheManagementMappers
};
export * from "./operations";
