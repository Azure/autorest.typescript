/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export type JobDetailsUnion =
  | JobDetails
  | DataBoxDiskJobDetails
  | DataBoxHeavyJobDetails
  | DataBoxJobDetails;
export type DestinationAccountDetailsUnion =
  | DestinationAccountDetails
  | DestinationManagedDiskDetails
  | DestinationStorageAccountDetails;
export type CopyLogDetailsUnion =
  | CopyLogDetails
  | DataBoxAccountCopyLogDetails
  | DataBoxDiskCopyLogDetails
  | DataBoxHeavyAccountCopyLogDetails;
export type ValidationInputRequestUnion =
  | ValidationInputRequest
  | ValidateAddress
  | CreateOrderLimitForSubscriptionValidationRequest
  | DataDestinationDetailsValidationRequest
  | PreferencesValidationRequest
  | SkuAvailabilityValidationRequest
  | SubscriptionIsAllowedToCreateJobValidationRequest;
export type ValidationInputResponseUnion =
  | ValidationInputResponse
  | AddressValidationProperties
  | CreateOrderLimitForSubscriptionValidationResponseProperties
  | DataDestinationDetailsValidationResponseProperties
  | PreferencesValidationResponseProperties
  | SkuAvailabilityValidationResponseProperties
  | SubscriptionIsAllowedToCreateJobValidationResponseProperties;
export type ValidationRequestUnion = ValidationRequest | CreateJobValidations;
export type JobSecretsUnion =
  | JobSecrets
  | DataBoxDiskJobSecrets
  | DataBoxHeavyJobSecrets
  | DataboxJobSecrets;
export type ScheduleAvailabilityRequestUnion =
  | ScheduleAvailabilityRequest
  | DataBoxScheduleAvailabilityRequest
  | DiskScheduleAvailabilityRequest
  | HeavyScheduleAvailabilityRequest;

/**
 * Operation Collection.
 */
export interface OperationList {
  /**
   * List of operations.
   */
  readonly value?: Operation[];
  /**
   * Link for the next set of operations.
   */
  nextLink?: string;
}

/**
 * Operation entity.
 */
export interface Operation {
  /**
   * Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}
   */
  readonly name?: string;
  /**
   * Operation display values.
   */
  readonly display?: OperationDisplay;
  /**
   * Operation properties.
   */
  readonly properties?: any;
  /**
   * Origin of the operation. Can be : user|system|user,system
   */
  readonly origin?: string;
}

/**
 * Operation display
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * Resource name.
   */
  resource?: string;
  /**
   * Localized name of the operation for display purpose.
   */
  operation?: string;
  /**
   * Localized description of the operation for display purpose.
   */
  description?: string;
}

/**
 * The error information object.
 */
export interface CloudError {
  /**
   * Error code string.
   */
  readonly code?: string;
  /**
   * Descriptive error information.
   */
  readonly message?: string;
  /**
   * Error target
   */
  target?: string;
  /**
   * More detailed error information.
   */
  details?: CloudError[];
}

/**
 * Job Resource Collection
 */
export interface JobResourceList {
  /**
   * List of job resources.
   */
  value?: JobResource[];
  /**
   * Link for the next set of job resources.
   */
  nextLink?: string;
}

/**
 * Model of the Resource.
 */
export interface Resource {
  /**
   * The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.
   */
  location: string;
  /**
   * The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * The sku type.
   */
  sku: Sku;
}

/**
 * The Sku.
 */
export interface Sku {
  /**
   * The sku name.
   */
  name: SkuName;
  /**
   * The display name of the sku.
   */
  displayName?: string;
  /**
   * The sku family.
   */
  family?: string;
}

/**
 * Job Resource.
 */
export type JobResource = Resource & {
  /**
   * Name of the object.
   */
  readonly name?: string;
  /**
   * Id of the object.
   */
  readonly id?: string;
  /**
   * Type of the object.
   */
  readonly type?: string;
  /**
   * Describes whether the job is cancellable or not.
   */
  readonly isCancellable?: boolean;
  /**
   * Describes whether the job is deletable or not.
   */
  readonly isDeletable?: boolean;
  /**
   * Describes whether the shipping address is editable or not.
   */
  readonly isShippingAddressEditable?: boolean;
  /**
   * Name of the stage which is in progress.
   */
  readonly status?: StageName;
  /**
   * Time at which the job was started in UTC ISO 8601 format.
   */
  readonly startTime?: Date;
  /**
   * Top level error for the job.
   */
  readonly error?: ErrorModel;
  /**
   * Details of a job run. This field will only be sent for expand details filter.
   */
  details?: JobDetailsUnion;
  /**
   * Reason for cancellation.
   */
  readonly cancellationReason?: string;
  /**
   * Delivery type of Job.
   */
  deliveryType?: JobDeliveryType;
  /**
   * Delivery Info of Job.
   */
  deliveryInfo?: JobDeliveryInfo;
  /**
   * Flag to indicate cancellation of scheduled job.
   */
  readonly isCancellableWithoutFee?: boolean;
};

/**
 * Top level error for the job.
 */
export interface ErrorModel {
  /**
   * Error code that can be used to programmatically identify the error.
   */
  readonly code?: string;
  /**
   * Describes the error in detail and provides debugging information.
   */
  readonly message?: string;
}

/**
 * Job details.
 */
export interface JobDetails {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  jobDetailsType: "DataBoxDisk" | "DataBoxHeavy" | "DataBox";
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes?: number;
  /**
   * List of stages that run in the job.
   */
  readonly jobStages?: JobStages[];
  /**
   * Contact details for notification and shipping.
   */
  contactDetails: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * Delivery package shipping details.
   */
  readonly deliveryPackage?: PackageShippingDetails;
  /**
   * Return package shipping details.
   */
  readonly returnPackage?: PackageShippingDetails;
  /**
   * Destination account details.
   */
  destinationAccountDetails: DestinationAccountDetailsUnion[];
  /**
   * Error details for failure. This is optional.
   */
  readonly errorDetails?: JobErrorDetails[];
  /**
   * Preferences for the order.
   */
  preferences?: Preferences;
  /**
   * List of copy log details.
   */
  readonly copyLogDetails?: CopyLogDetailsUnion[];
  /**
   * Shared access key to download the return shipment label
   */
  readonly reverseShipmentLabelSasKey?: string;
  /**
   * Shared access key to download the chain of custody logs
   */
  readonly chainOfCustodySasKey?: string;
}

/**
 * Job stages.
 */
export interface JobStages {
  /**
   * Name of the job stage.
   */
  readonly stageName?: StageName;
  /**
   * Display name of the job stage.
   */
  readonly displayName?: string;
  /**
   * Status of the job stage.
   */
  readonly stageStatus?: StageStatus;
  /**
   * Time for the job stage in UTC ISO 8601 format.
   */
  readonly stageTime?: Date;
  /**
   * Job Stage Details
   */
  readonly jobStageDetails?: any;
  /**
   * Error details for the stage.
   */
  readonly errorDetails?: JobErrorDetails[];
}

/**
 * Job Error Details for providing the information and recommended action.
 */
export interface JobErrorDetails {
  /**
   * Message for the error.
   */
  readonly errorMessage?: string;
  /**
   * Code for the error.
   */
  readonly errorCode?: number;
  /**
   * Recommended action for the error.
   */
  readonly recommendedAction?: string;
  /**
   * Contains the non localized exception message
   */
  readonly exceptionMessage?: string;
}

/**
 * Contact Details.
 */
export interface ContactDetails {
  /**
   * Contact name of the person.
   */
  contactName: string;
  /**
   * Phone number of the contact person.
   */
  phone: string;
  /**
   * Phone extension number of the contact person.
   */
  phoneExtension?: string;
  /**
   * Mobile number of the contact person.
   */
  mobile?: string;
  /**
   * List of Email-ids to be notified about job progress.
   */
  emailList: string[];
  /**
   * Notification preference for a job stage.
   */
  notificationPreference?: NotificationPreference[];
}

/**
 * Notification preference for a job stage.
 */
export interface NotificationPreference {
  /**
   * Name of the stage.
   */
  stageName: NotificationStageName;
  /**
   * Notification is required or not.
   */
  sendNotification: boolean;
}

/**
 * Shipping address where customer wishes to receive the device.
 */
export interface ShippingAddress {
  /**
   * Street Address line 1.
   */
  streetAddress1: string;
  /**
   * Street Address line 2.
   */
  streetAddress2?: string;
  /**
   * Street Address line 3.
   */
  streetAddress3?: string;
  /**
   * Name of the City.
   */
  city?: string;
  /**
   * Name of the State or Province.
   */
  stateOrProvince?: string;
  /**
   * Name of the Country.
   */
  country: string;
  /**
   * Postal code.
   */
  postalCode: string;
  /**
   * Extended Zip Code.
   */
  zipExtendedCode?: string;
  /**
   * Name of the company.
   */
  companyName?: string;
  /**
   * Type of address.
   */
  addressType?: AddressType;
}

/**
 * Shipping details.
 */
export interface PackageShippingDetails {
  /**
   * Name of the carrier.
   */
  readonly carrierName?: string;
  /**
   * Tracking Id of shipment.
   */
  readonly trackingId?: string;
  /**
   * Url where shipment can be tracked.
   */
  readonly trackingUrl?: string;
}

/**
 * Details of the destination storage accounts.
 */
export interface DestinationAccountDetails {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  dataDestinationType: "ManagedDisk" | "StorageAccount";
  /**
   * Arm Id of the destination where the data has to be moved.
   */
  accountId?: string;
  /**
   * Share password to be shared by all shares in SA.
   */
  sharePassword?: string;
}

/**
 * Preferences related to the order
 */
export interface Preferences {
  /**
   * Preferred Data Center Region.
   */
  preferredDataCenterRegion?: string[];
  /**
   * Preferences related to the shipment logistics of the sku.
   */
  transportPreferences?: TransportPreferences;
}

/**
 * Preferences related to the shipment logistics of the sku
 */
export interface TransportPreferences {
  /**
   * Indicates Shipment Logistics type that the customer preferred.
   */
  preferredShipmentType: TransportShipmentTypes;
}

/**
 * Details for log generated during copy.
 */
export interface CopyLogDetails {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  copyLogDetailsType: "DataBox" | "DataBoxDisk" | "DataBoxHeavy";
}

/**
 * Additional delivery info.
 */
export interface JobDeliveryInfo {
  /**
   * Scheduled date time.
   */
  scheduledDateTime?: Date;
}

/**
 * The filters for showing the available skus.
 */
export interface AvailableSkuRequest {
  /**
   * Type of the transfer.
   */
  transferType: "ImportToAzure";
  /**
   * ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
   */
  country: string;
  /**
   * Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  location: string;
  /**
   * Sku Names to filter for available skus
   */
  skuNames?: SkuName[];
}

/**
 * The available skus operation response.
 */
export interface AvailableSkusResult {
  /**
   * List of available skus.
   */
  readonly value?: SkuInformation[];
  /**
   * Link for the next set of skus.
   */
  nextLink?: string;
}

/**
 * Information of the sku.
 */
export interface SkuInformation {
  /**
   * The Sku.
   */
  readonly sku?: Sku;
  /**
   * The sku is enabled or not.
   */
  readonly enabled?: boolean;
  /**
   * The map of destination location to service location.
   */
  readonly destinationToServiceLocationMap?: DestinationToServiceLocationMap[];
  /**
   * Capacity of the Sku.
   */
  readonly capacity?: SkuCapacity;
  /**
   * Cost of the Sku.
   */
  readonly costs?: SkuCost[];
  /**
   * Api versions that support this Sku.
   */
  readonly apiVersions?: string[];
  /**
   * Reason why the Sku is disabled.
   */
  readonly disabledReason?: SkuDisabledReason;
  /**
   * Message for why the Sku is disabled.
   */
  readonly disabledReasonMessage?: string;
  /**
   * Required feature to access the sku.
   */
  readonly requiredFeature?: string;
}

/**
 * Map of destination location to service location.
 */
export interface DestinationToServiceLocationMap {
  /**
   * Location of the destination.
   */
  readonly destinationLocation?: string;
  /**
   * Location of the service.
   */
  readonly serviceLocation?: string;
}

/**
 * Capacity of the sku.
 */
export interface SkuCapacity {
  /**
   * Usable capacity in TB.
   */
  readonly usable?: string;
  /**
   * Maximum capacity in TB.
   */
  readonly maximum?: string;
}

/**
 * Describes metadata for retrieving price info.
 */
export interface SkuCost {
  /**
   * Meter id of the Sku.
   */
  readonly meterId?: string;
  /**
   * The type of the meter.
   */
  readonly meterType?: string;
}

/**
 * Minimum fields that must be present in any type of validation request.
 */
export interface ValidationInputRequest {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  validationType:
    | "ValidateAddress"
    | "ValidateCreateOrderLimit"
    | "ValidateDataDestinationDetails"
    | "ValidatePreferences"
    | "ValidateSkuAvailability"
    | "ValidateSubscriptionIsAllowedToCreateJob";
}

/**
 * The requirements to validate customer address where the device needs to be shipped.
 */
export type ValidateAddress = ValidationInputRequest & {
  /**
   * Shipping address of the customer.
   */
  shippingAddress: ShippingAddress;
  /**
   * Device type to be used for the job.
   */
  deviceType: SkuName;
  /**
   * Preferences related to the shipment logistics of the sku.
   */
  transportPreferences?: TransportPreferences;
};

/**
 * Output of the address validation api.
 */
export interface AddressValidationOutput {
  /**
   * Identifies the type of validation response.
   */
  validationType?: ValidationInputDiscriminator;
  /**
   * Error code and message of validation response.
   */
  readonly error?: ErrorModel;
  /**
   * The address validation status.
   */
  readonly validationStatus?: AddressValidationStatus;
  /**
   * List of alternate addresses.
   */
  readonly alternateAddresses?: ShippingAddress[];
}

/**
 * Minimum properties that should be present in each individual validation response.
 */
export interface ValidationInputResponse {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  validationType:
    | "ValidateAddress"
    | "ValidateCreateOrderLimit"
    | "ValidateDataDestinationDetails"
    | "ValidatePreferences"
    | "ValidateSkuAvailability"
    | "ValidateSubscriptionIsAllowedToCreateJob";
  /**
   * Error code and message of validation response.
   */
  readonly error?: ErrorModel;
}

/**
 * The address validation output.
 */
export type AddressValidationProperties = ValidationInputResponse & {
  /**
   * The address validation status.
   */
  readonly validationStatus?: AddressValidationStatus;
  /**
   * List of alternate addresses.
   */
  readonly alternateAddresses?: ShippingAddress[];
};

/**
 * Input request for all pre job creation validation.
 */
export interface ValidationRequest {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  validationCategory: "JobCreationValidation";
  /**
   * List of request details contain validationType and its request as key and value respectively.
   */
  individualRequestDetails: ValidationInputRequestUnion[];
}

/**
 * Response of pre job creation validations.
 */
export interface ValidationResponse {
  /**
   * Overall validation status.
   */
  readonly status?: OverallValidationStatus;
  /**
   * List of response details contain validationType and its response as key and value respectively.
   */
  readonly individualResponseDetails?: ValidationInputResponseUnion[];
}

/**
 * The JobResourceUpdateParameter.
 */
export interface JobResourceUpdateParameter {
  /**
   * The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
   */
  tags?: { [propertyName: string]: string };
  /**
   * Details of a job to be updated.
   */
  details?: UpdateJobDetails;
  /**
   * Destination account details.
   */
  destinationAccountDetails?: DestinationAccountDetailsUnion[];
}

/**
 * Job details for update.
 */
export interface UpdateJobDetails {
  /**
   * Contact details for notification and shipping.
   */
  contactDetails?: ContactDetails;
  /**
   * Shipping address of the customer.
   */
  shippingAddress?: ShippingAddress;
}

/**
 * Shipment pick up request details.
 */
export interface ShipmentPickUpRequest {
  /**
   * Minimum date after which the pick up should commence, this must be in local time of pick up area.
   */
  startTime: Date;
  /**
   * Maximum date before which the pick up should commence, this must be in local time of pick up area.
   */
  endTime: Date;
  /**
   * Shipment Location in the pickup place. Eg.front desk
   */
  shipmentLocation: string;
}

/**
 * Shipment pick up response.
 */
export interface ShipmentPickUpResponse {
  /**
   * Confirmation number for the pick up request.
   */
  readonly confirmationNumber?: string;
  /**
   * Time by which shipment should be ready for pick up, this is in local time of pick up area.
   */
  readonly readyByTime?: Date;
}

/**
 * Reason for cancellation.
 */
export interface CancellationReason {
  /**
   * Reason for cancellation.
   */
  reason: string;
}

/**
 * List of unencrypted credentials for accessing device.
 */
export interface UnencryptedCredentialsList {
  /**
   * List of unencrypted credentials.
   */
  value?: UnencryptedCredentials[];
  /**
   * Link for the next set of unencrypted credentials.
   */
  nextLink?: string;
}

/**
 * Unencrypted credentials for accessing device.
 */
export interface UnencryptedCredentials {
  /**
   * Name of the job.
   */
  readonly jobName?: string;
  /**
   * Secrets related to this job.
   */
  readonly jobSecrets?: JobSecretsUnion;
}

/**
 * The base class for the secrets
 */
export interface JobSecrets {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  jobSecretsType: "DataBoxDisk" | "DataBoxHeavy" | "DataBox";
  /**
   * Dc Access Security Code for Customer Managed Shipping
   */
  dcAccessSecurityCode?: DcAccessSecurityCode;
}

/**
 * Dc Access Security code for device.
 */
export interface DcAccessSecurityCode {
  /**
   * Dc Access Code for dispatching from DC.
   */
  forwardDcAccessCode?: string;
  /**
   * Dc Access code for dropping off at DC.
   */
  reverseDcAccessCode?: string;
}

/**
 * Request body to get the configuration for the region.
 */
export interface RegionConfigurationRequest {
  /**
   * Request body to get the availability for scheduling orders.
   */
  scheduleAvailabilityRequest?: ScheduleAvailabilityRequestUnion;
  /**
   * Request body to get the transport availability for given sku.
   */
  transportAvailabilityRequest?: TransportAvailabilityRequest;
}

/**
 * Request body to get the availability for scheduling orders.
 */
export interface ScheduleAvailabilityRequest {
  /**
   * Polymorphic discriminator, which specifies the different types this object can be
   */
  skuName: "DataBox" | "DataBoxDisk" | "DataBoxHeavy";
  /**
   * Location for data transfer.
   * For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  storageLocation: string;
}

/**
 * Request body to get the transport availability for given sku.
 */
export interface TransportAvailabilityRequest {
  /**
   * Type of the device.
   */
  skuName?: SkuName;
}

/**
 * Configuration response specific to a region.
 */
export interface RegionConfigurationResponse {
  /**
   * Schedule availability for given sku in a region.
   */
  readonly scheduleAvailabilityResponse?: ScheduleAvailabilityResponse;
  /**
   * Transport options available for given sku in a region.
   */
  readonly transportAvailabilityResponse?: TransportAvailabilityResponse;
}

/**
 * Schedule availability response for given sku in a region.
 */
export interface ScheduleAvailabilityResponse {
  /**
   * List of dates available to schedule
   */
  readonly availableDates?: Date[];
}

/**
 * Transport options available for given sku in a region.
 */
export interface TransportAvailabilityResponse {
  /**
   * List of transport availability details for given region
   */
  readonly transportAvailabilityDetails?: TransportAvailabilityDetails[];
}

/**
 * Transport options availability details for given region.
 */
export interface TransportAvailabilityDetails {
  /**
   * Transport Shipment Type supported for given region.
   */
  readonly shipmentType?: TransportShipmentTypes;
}

/**
 * Credential details of the account.
 */
export interface AccountCredentialDetails {
  /**
   * Name of the account.
   */
  readonly accountName?: string;
  /**
   * Data Destination Type.
   */
  readonly dataDestinationType?: DataDestinationType;
  /**
   * Connection string of the account endpoint to use the account as a storage endpoint on the device.
   */
  readonly accountConnectionString?: string;
  /**
   * Per share level unencrypted access credentials.
   */
  readonly shareCredentialDetails?: ShareCredentialDetails[];
}

/**
 * Credential details of the shares in account.
 */
export interface ShareCredentialDetails {
  /**
   * Name of the share.
   */
  readonly shareName?: string;
  /**
   * Type of the share.
   */
  readonly shareType?: ShareDestinationFormatType;
  /**
   * User name for the share.
   */
  readonly userName?: string;
  /**
   * Password for the share.
   */
  readonly password?: string;
  /**
   * Access protocols supported on the device.
   */
  readonly supportedAccessProtocols?: AccessProtocol[];
}

/**
 * The Network Adapter configuration of a DataBox.
 */
export interface ApplianceNetworkConfiguration {
  /**
   * Name of the network.
   */
  readonly name?: string;
  /**
   * Mac Address.
   */
  readonly macAddress?: string;
}

/**
 * Base class for all objects under resource.
 */
export interface ArmBaseObject {
  /**
   * Name of the object.
   */
  readonly name?: string;
  /**
   * Id of the object.
   */
  readonly id?: string;
  /**
   * Type of the object.
   */
  readonly type?: string;
}

/**
 * Copy progress.
 */
export interface CopyProgress {
  /**
   * Name of the storage account where the data needs to be uploaded.
   */
  readonly storageAccountName?: string;
  /**
   * Data Destination Type.
   */
  readonly dataDestinationType?: DataDestinationType;
  /**
   * Id of the account where the data needs to be uploaded.
   */
  readonly accountId?: string;
  /**
   * Amount of data uploaded by the job as of now.
   */
  readonly bytesSentToCloud?: number;
  /**
   * Total amount of data to be processed by the job.
   */
  readonly totalBytesToProcess?: number;
  /**
   * Number of files processed by the job as of now.
   */
  readonly filesProcessed?: number;
  /**
   * Total number of files to be processed by the job.
   */
  readonly totalFilesToProcess?: number;
  /**
   * Number of files not adhering to azure naming conventions which were processed by automatic renaming
   */
  readonly invalidFilesProcessed?: number;
  /**
   * Total amount of data not adhering to azure naming conventions which were processed by automatic renaming
   */
  readonly invalidFileBytesUploaded?: number;
  /**
   * Number of folders not adhering to azure naming conventions which were processed by automatic renaming
   */
  readonly renamedContainerCount?: number;
  /**
   * Number of files which could not be copied
   */
  readonly filesErroredOut?: number;
}

/**
 * Request to validate create order limit for current subscription.
 */
export type CreateOrderLimitForSubscriptionValidationRequest = ValidationInputRequest & {
  /**
   * Device type to be used for the job.
   */
  deviceType: SkuName;
};

/**
 * Properties of create order limit for subscription validation response.
 */
export type CreateOrderLimitForSubscriptionValidationResponseProperties = ValidationInputResponse & {
  /**
   * Create order limit validation status.
   */
  readonly status?: ValidationStatus;
};

/**
 * Copy log details for a storage account of a DataBox job
 */
export type DataBoxAccountCopyLogDetails = CopyLogDetails & {
  /**
   * Destination account name.
   */
  readonly accountName?: string;
  /**
   * Link for copy logs.
   */
  readonly copyLogLink?: string;
};

/**
 * Copy Log Details for a disk
 */
export type DataBoxDiskCopyLogDetails = CopyLogDetails & {
  /**
   * Disk Serial Number.
   */
  readonly diskSerialNumber?: string;
  /**
   * Link for copy error logs.
   */
  readonly errorLogLink?: string;
  /**
   * Link for copy verbose logs.
   */
  readonly verboseLogLink?: string;
};

/**
 * DataBox Disk Copy Progress
 */
export interface DataBoxDiskCopyProgress {
  /**
   * The serial number of the disk
   */
  readonly serialNumber?: string;
  /**
   * Bytes copied during the copy of disk.
   */
  readonly bytesCopied?: number;
  /**
   * Indicates the percentage completed for the copy of the disk.
   */
  readonly percentComplete?: number;
  /**
   * The Status of the copy
   */
  readonly status?: CopyStatus;
}

/**
 * DataBox Disk Job Details.
 */
export type DataBoxDiskJobDetails = JobDetails & {
  /**
   * User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.
   */
  preferredDisks?: { [propertyName: string]: number };
  /**
   * Copy progress per disk.
   */
  readonly copyProgress?: DataBoxDiskCopyProgress[];
  /**
   * Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.
   */
  readonly disksAndSizeDetails?: { [propertyName: string]: number };
  /**
   * User entered passkey for DataBox Disk job.
   */
  passkey?: string;
};

/**
 * The secrets related to disk job.
 */
export type DataBoxDiskJobSecrets = JobSecrets & {
  /**
   * Contains the list of secrets object for that device.
   */
  readonly diskSecrets?: DiskSecret[];
  /**
   * PassKey for the disk Job.
   */
  readonly passKey?: string;
  /**
   * Whether passkey was provided by user.
   */
  readonly isPasskeyUserDefined?: boolean;
};

/**
 * Contains all the secrets of a Disk.
 */
export interface DiskSecret {
  /**
   * Serial number of the assigned disk.
   */
  readonly diskSerialNumber?: string;
  /**
   * Bit Locker key of the disk which can be used to unlock the disk to copy data.
   */
  readonly bitLockerKey?: string;
}

/**
 * Copy log details for a storage account for Databox heavy
 */
export type DataBoxHeavyAccountCopyLogDetails = CopyLogDetails & {
  /**
   * Destination account name.
   */
  readonly accountName?: string;
  /**
   * Link for copy logs.
   */
  readonly copyLogLink?: string[];
};

/**
 * Databox Heavy Device Job Details
 */
export type DataBoxHeavyJobDetails = JobDetails & {
  /**
   * Copy progress per account.
   */
  readonly copyProgress?: CopyProgress[];
  /**
   * Set Device password for unlocking Databox Heavy
   */
  devicePassword?: string;
};

/**
 * The secrets related to a databox heavy job.
 */
export type DataBoxHeavyJobSecrets = JobSecrets & {
  /**
   * Contains the list of secret objects for a databox heavy job.
   */
  readonly cabinetPodSecrets?: DataBoxHeavySecret[];
};

/**
 * The secrets related to a databox heavy.
 */
export interface DataBoxHeavySecret {
  /**
   * Serial number of the assigned device.
   */
  readonly deviceSerialNumber?: string;
  /**
   * Password for out of the box experience on device.
   */
  readonly devicePassword?: string;
  /**
   * Network configuration of the appliance.
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * The base 64 encoded public key to authenticate with the device
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * Per account level access credentials.
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * Databox Job Details
 */
export type DataBoxJobDetails = JobDetails & {
  /**
   * Copy progress per storage account.
   */
  readonly copyProgress?: CopyProgress[];
  /**
   * Set Device password for unlocking Databox
   */
  devicePassword?: string;
};

/**
 * The secrets related to a databox job.
 */
export type DataboxJobSecrets = JobSecrets & {
  /**
   * Contains the list of secret objects for a job.
   */
  podSecrets?: DataBoxSecret[];
};

/**
 * The secrets related to a DataBox.
 */
export interface DataBoxSecret {
  /**
   * Serial number of the assigned device.
   */
  readonly deviceSerialNumber?: string;
  /**
   * Password for out of the box experience on device.
   */
  readonly devicePassword?: string;
  /**
   * Network configuration of the appliance.
   */
  readonly networkConfigurations?: ApplianceNetworkConfiguration[];
  /**
   * The base 64 encoded public key to authenticate with the device
   */
  readonly encodedValidationCertPubKey?: string;
  /**
   * Per account level access credentials.
   */
  readonly accountCredentialDetails?: AccountCredentialDetails[];
}

/**
 * Request body to get the availability for scheduling data box orders orders.
 */
export type DataBoxScheduleAvailabilityRequest = ScheduleAvailabilityRequest & {};

/**
 * Request to validate data destination details.
 */
export type DataDestinationDetailsValidationRequest = ValidationInputRequest & {
  /**
   * Destination account details list.
   */
  destinationAccountDetails: DestinationAccountDetailsUnion[];
  /**
   * Location of stamp or geo.
   */
  location: string;
};

/**
 * Properties of data destination details validation response.
 */
export type DataDestinationDetailsValidationResponseProperties = ValidationInputResponse & {
  /**
   * Data destination details validation status.
   */
  readonly status?: ValidationStatus;
};

/**
 * Details for the destination compute disks.
 */
export type DestinationManagedDiskDetails = DestinationAccountDetails & {
  /**
   * Destination Resource Group Id where the Compute disks should be created.
   */
  resourceGroupId: string;
  /**
   * Arm Id of the storage account that can be used to copy the vhd for staging.
   */
  stagingStorageAccountId: string;
};

/**
 * Details for the destination storage account.
 */
export type DestinationStorageAccountDetails = DestinationAccountDetails & {
  /**
   * Destination Storage Account Arm Id.
   */
  storageAccountId: string;
};

/**
 * Request body to get the availability for scheduling disk orders.
 */
export type DiskScheduleAvailabilityRequest = ScheduleAvailabilityRequest & {
  /**
   * The expected size of the data, which needs to be transferred in this job, in terabytes.
   */
  expectedDataSizeInTerabytes: number;
};

/**
 * Request body to get the availability for scheduling heavy orders.
 */
export type HeavyScheduleAvailabilityRequest = ScheduleAvailabilityRequest & {};

/**
 * Request to validate preference of transport and data center.
 */
export type PreferencesValidationRequest = ValidationInputRequest & {
  /**
   * Preference requested with respect to transport type and data center
   */
  preference?: Preferences;
  /**
   * Device type to be used for the job.
   */
  deviceType: SkuName;
};

/**
 * Properties of data center and transport preference validation response.
 */
export type PreferencesValidationResponseProperties = ValidationInputResponse & {
  /**
   * Validation status of requested data center and transport.
   */
  readonly status?: ValidationStatus;
};

/**
 * Request to validate sku availability.
 */
export type SkuAvailabilityValidationRequest = ValidationInputRequest & {
  /**
   * Device type to be used for the job.
   */
  deviceType: SkuName;
  /**
   * Type of the transfer.
   */
  transferType: "ImportToAzure";
  /**
   * ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
   */
  country: string;
  /**
   * Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
   */
  location: string;
};

/**
 * Properties of sku availability validation response.
 */
export type SkuAvailabilityValidationResponseProperties = ValidationInputResponse & {
  /**
   * Sku availability validation status.
   */
  readonly status?: ValidationStatus;
};

/**
 * Request to validate subscription permission to create jobs.
 */
export type SubscriptionIsAllowedToCreateJobValidationRequest = ValidationInputRequest & {};

/**
 * Properties of subscription permission to create job validation response.
 */
export type SubscriptionIsAllowedToCreateJobValidationResponseProperties = ValidationInputResponse & {
  /**
   * Validation status of subscription permission to create job.
   */
  readonly status?: ValidationStatus;
};

/**
 * It does all pre-job creation validations.
 */
export type CreateJobValidations = ValidationRequest & {};
/**
 * Defines values for SkuName.
 */
export type SkuName = "DataBox" | "DataBoxDisk" | "DataBoxHeavy";
/**
 * Defines values for StageName.
 */
export type StageName =
  | "DeviceOrdered"
  | "DevicePrepared"
  | "Dispatched"
  | "Delivered"
  | "PickedUp"
  | "AtAzureDC"
  | "DataCopy"
  | "Completed"
  | "CompletedWithErrors"
  | "Cancelled"
  | "Failed_IssueReportedAtCustomer"
  | "Failed_IssueDetectedAtAzureDC"
  | "Aborted"
  | "CompletedWithWarnings"
  | "ReadyToDispatchFromAzureDC"
  | "ReadyToReceiveAtAzureDC";
/**
 * Defines values for StageStatus.
 */
export type StageStatus =
  | "None"
  | "InProgress"
  | "Succeeded"
  | "Failed"
  | "Cancelled"
  | "Cancelling"
  | "SucceededWithErrors";
/**
 * Defines values for NotificationStageName.
 */
export type NotificationStageName =
  | "DevicePrepared"
  | "Dispatched"
  | "Delivered"
  | "PickedUp"
  | "AtAzureDC"
  | "DataCopy";
/**
 * Defines values for AddressType.
 */
export type AddressType = "None" | "Residential" | "Commercial";
/**
 * Defines values for DataDestinationType.
 */
export type DataDestinationType = "StorageAccount" | "ManagedDisk";
/**
 * Defines values for ClassDiscriminator.
 */
export type ClassDiscriminator = "DataBox" | "DataBoxDisk" | "DataBoxHeavy";
/**
 * Defines values for TransportShipmentTypes.
 */
export type TransportShipmentTypes = "CustomerManaged" | "MicrosoftManaged";
/**
 * Defines values for JobDeliveryType.
 */
export type JobDeliveryType = "NonScheduled" | "Scheduled";
/**
 * Defines values for SkuDisabledReason.
 */
export type SkuDisabledReason =
  | "None"
  | "Country"
  | "Region"
  | "Feature"
  | "OfferType"
  | "NoSubscriptionInfo";
/**
 * Defines values for ValidationInputDiscriminator.
 */
export type ValidationInputDiscriminator =
  | "ValidateAddress"
  | "ValidateDataDestinationDetails"
  | "ValidateSubscriptionIsAllowedToCreateJob"
  | "ValidatePreferences"
  | "ValidateCreateOrderLimit"
  | "ValidateSkuAvailability";
/**
 * Defines values for AddressValidationStatus.
 */
export type AddressValidationStatus = "Valid" | "Invalid" | "Ambiguous";
/**
 * Defines values for OverallValidationStatus.
 */
export type OverallValidationStatus =
  | "AllValidToProceed"
  | "InputsRevisitRequired"
  | "CertainInputValidationsSkipped";
/**
 * Defines values for ShareDestinationFormatType.
 */
export type ShareDestinationFormatType =
  | "UnknownType"
  | "HCS"
  | "BlockBlob"
  | "PageBlob"
  | "AzureFile"
  | "ManagedDisk";
/**
 * Defines values for AccessProtocol.
 */
export type AccessProtocol = "SMB" | "NFS";
/**
 * Defines values for ValidationStatus.
 */
export type ValidationStatus = "Valid" | "Invalid" | "Skipped";
/**
 * Defines values for CopyStatus.
 */
export type CopyStatus =
  | "NotStarted"
  | "InProgress"
  | "Completed"
  | "CompletedWithErrors"
  | "Failed"
  | "NotReturned"
  | "HardwareError"
  | "DeviceFormatted"
  | "DeviceMetadataModified"
  | "StorageAccountNotAccessible"
  | "UnsupportedData";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Optional parameters.
 */
export interface JobsListOptionalParams extends coreHttp.OperationOptions {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Contains response data for the list operation.
 */
export type JobsListResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResourceList;
  };
};

/**
 * Optional parameters.
 */
export interface JobsListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type JobsListByResourceGroupResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResourceList;
  };
};

/**
 * Optional parameters.
 */
export interface JobsGetOptionalParams extends coreHttp.OperationOptions {
  /**
   * $expand is supported on details parameter for job, which provides details on the job stages.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type JobsGetResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResource;
  };
};

/**
 * Contains response data for the create operation.
 */
export type JobsCreateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResource;
  };
};

/**
 * Optional parameters.
 */
export interface JobsUpdateOptionalParams extends coreHttp.OperationOptions {
  /**
   * Defines the If-Match condition. The patch will be performed only if the ETag of the job on the server matches this value.
   */
  ifMatch?: string;
}

/**
 * Contains response data for the update operation.
 */
export type JobsUpdateResponse = JobResource & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResource;
  };
};

/**
 * Contains response data for the bookShipmentPickUp operation.
 */
export type JobsBookShipmentPickUpResponse = ShipmentPickUpResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ShipmentPickUpResponse;
  };
};

/**
 * Contains response data for the listCredentials operation.
 */
export type JobsListCredentialsResponse = UnencryptedCredentialsList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UnencryptedCredentialsList;
  };
};

/**
 * Optional parameters.
 */
export interface JobsListNextOptionalParams extends coreHttp.OperationOptions {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Contains response data for the listNext operation.
 */
export type JobsListNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResourceList;
  };
};

/**
 * Optional parameters.
 */
export interface JobsListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * $skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.
   */
  skipToken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type JobsListByResourceGroupNextResponse = JobResourceList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: JobResourceList;
  };
};

/**
 * Contains response data for the listAvailableSkus operation.
 */
export type ServiceListAvailableSkusResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableSkusResult;
  };
};

/**
 * Contains response data for the listAvailableSkusByResourceGroup operation.
 */
export type ServiceListAvailableSkusByResourceGroupResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableSkusResult;
  };
};

/**
 * Contains response data for the validateAddress operation.
 */
export type ServiceValidateAddressResponse = AddressValidationOutput & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AddressValidationOutput;
  };
};

/**
 * Contains response data for the validateInputsByResourceGroup operation.
 */
export type ServiceValidateInputsByResourceGroupResponse = ValidationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidationResponse;
  };
};

/**
 * Contains response data for the validateInputs operation.
 */
export type ServiceValidateInputsResponse = ValidationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ValidationResponse;
  };
};

/**
 * Contains response data for the regionConfiguration operation.
 */
export type ServiceRegionConfigurationResponse = RegionConfigurationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RegionConfigurationResponse;
  };
};

/**
 * Contains response data for the listAvailableSkusNext operation.
 */
export type ServiceListAvailableSkusNextResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableSkusResult;
  };
};

/**
 * Contains response data for the listAvailableSkusByResourceGroupNext operation.
 */
export type ServiceListAvailableSkusByResourceGroupNextResponse = AvailableSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableSkusResult;
  };
};

/**
 * Optional parameters.
 */
export interface DataBoxManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
