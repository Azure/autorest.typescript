/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { ConsumptionManagementClientContext } from "./consumptionManagementClientContext";

class ConsumptionManagementClient extends ConsumptionManagementClientContext {
  /**
   * Initializes a new instance of the ConsumptionManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param subscriptionId Azure Subscription ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    subscriptionId: string,
    options?: Models.ConsumptionManagementClientOptionalParams
  ) {
    super(credentials, subscriptionId, options);
    this.usageDetails = new operations.UsageDetails(this);
    this.marketplaces = new operations.Marketplaces(this);
    this.budgets = new operations.Budgets(this);
    this.tags = new operations.Tags(this);
    this.charges = new operations.Charges(this);
    this.balances = new operations.Balances(this);
    this.reservationsSummaries = new operations.ReservationsSummaries(this);
    this.reservationsDetails = new operations.ReservationsDetails(this);
    this.reservationRecommendations = new operations.ReservationRecommendations(
      this
    );
    this.reservationTransactions = new operations.ReservationTransactions(this);
    this.priceSheet = new operations.PriceSheet(this);
    this.forecasts = new operations.Forecasts(this);
    this.operations = new operations.Operations(this);
    this.aggregatedCost = new operations.AggregatedCost(this);
    this.events = new operations.Events(this);
    this.lots = new operations.Lots(this);
    this.credits = new operations.Credits(this);
  }

  usageDetails: operations.UsageDetails;
  marketplaces: operations.Marketplaces;
  budgets: operations.Budgets;
  tags: operations.Tags;
  charges: operations.Charges;
  balances: operations.Balances;
  reservationsSummaries: operations.ReservationsSummaries;
  reservationsDetails: operations.ReservationsDetails;
  reservationRecommendations: operations.ReservationRecommendations;
  reservationTransactions: operations.ReservationTransactions;
  priceSheet: operations.PriceSheet;
  forecasts: operations.Forecasts;
  operations: operations.Operations;
  aggregatedCost: operations.AggregatedCost;
  events: operations.Events;
  lots: operations.Lots;
  credits: operations.Credits;
}

// Operation Specifications

export {
  ConsumptionManagementClient,
  ConsumptionManagementClientContext,
  Models as ConsumptionManagementModels,
  Mappers as ConsumptionManagementMappers
};
export * from "./operations";
