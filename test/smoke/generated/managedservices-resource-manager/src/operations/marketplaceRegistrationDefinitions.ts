/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ManagedServicesClient } from "../managedServicesClient";
import {
  MarketplaceRegistrationDefinitionsListOptionalParams,
  MarketplaceRegistrationDefinitionsListResponse,
  MarketplaceRegistrationDefinitionsGetResponse,
  MarketplaceRegistrationDefinitionsListNextOptionalParams,
  MarketplaceRegistrationDefinitionsListNextResponse
} from "../models";

/**
 * Class representing a MarketplaceRegistrationDefinitions.
 */
export class MarketplaceRegistrationDefinitions {
  private readonly client: ManagedServicesClient;

  /**
   * Initialize a new instance of the class MarketplaceRegistrationDefinitions class.
   * @param client Reference to the service client
   */
  constructor(client: ManagedServicesClient) {
    this.client = client;
  }

  /**
   * Gets a list of the marketplace registration definitions for the marketplace identifier.
   * @param scope Scope of the resource.
   * @param options The options parameters.
   */
  list(
    scope: string,
    options?: MarketplaceRegistrationDefinitionsListOptionalParams
  ): Promise<MarketplaceRegistrationDefinitionsListResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { scope, options: operationOptions },
      listOperationSpec
    ) as Promise<MarketplaceRegistrationDefinitionsListResponse>;
  }

  /**
   * Get the marketplace registration definition for the marketplace identifier.
   * @param scope Scope of the resource.
   * @param marketplaceIdentifier Market place identifer. Expected Formats -
   *                              {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName}
   *                              or {publisher}.{product[-preview]} or {publisher}).
   * @param options The options parameters.
   */
  get(
    scope: string,
    marketplaceIdentifier: string,
    options?: coreHttp.OperationOptions
  ): Promise<MarketplaceRegistrationDefinitionsGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { scope, marketplaceIdentifier, options: operationOptions },
      getOperationSpec
    ) as Promise<MarketplaceRegistrationDefinitionsGetResponse>;
  }

  /**
   * ListNext
   * @param scope Scope of the resource.
   * @param nextLink The nextLink from the previous successful call to the List method.
   * @param options The options parameters.
   */
  listNext(
    scope: string,
    nextLink: string,
    options?: MarketplaceRegistrationDefinitionsListNextOptionalParams
  ): Promise<MarketplaceRegistrationDefinitionsListNextResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { scope, nextLink, options: operationOptions },
      listNextOperationSpec
    ) as Promise<MarketplaceRegistrationDefinitionsListNextResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listOperationSpec: coreHttp.OperationSpec = {
  path:
    "/{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MarketplaceRegistrationDefinitionList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter],
  urlParameters: [Parameters.$host, Parameters.scope],
  serializer
};
const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/{scope}/providers/Microsoft.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.RegistrationDefinition
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.scope,
    Parameters.marketplaceIdentifier
  ],
  serializer
};
const listNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MarketplaceRegistrationDefinitionList
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter],
  urlParameters: [Parameters.$host, Parameters.scope, Parameters.nextLink],
  serializer
};
