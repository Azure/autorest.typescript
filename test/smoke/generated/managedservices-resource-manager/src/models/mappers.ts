/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const RegistrationDefinition: coreHttp.CompositeMapper = {
  serializedName: "RegistrationDefinition",
  type: {
    name: "Composite",
    className: "RegistrationDefinition",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RegistrationDefinitionProperties"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationDefinitionProperties: coreHttp.CompositeMapper = {
  serializedName: "RegistrationDefinitionProperties",
  type: {
    name: "Composite",
    className: "RegistrationDefinitionProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      authorizations: {
        serializedName: "authorizations",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Authorization" } }
        }
      },
      registrationDefinitionName: {
        serializedName: "registrationDefinitionName",
        type: {
          name: "String"
        }
      },
      managedByTenantId: {
        serializedName: "managedByTenantId",
        required: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      managedByTenantName: {
        serializedName: "managedByTenantName",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Authorization: coreHttp.CompositeMapper = {
  serializedName: "Authorization",
  type: {
    name: "Composite",
    className: "Authorization",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        required: true,
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Plan: coreHttp.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      publisher: {
        serializedName: "publisher",
        required: true,
        type: {
          name: "String"
        }
      },
      product: {
        serializedName: "product",
        required: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorResponseError"
        }
      }
    }
  }
};

export const ErrorResponseError: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponseError",
  type: {
    name: "Composite",
    className: "ErrorResponseError",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationAssignment: coreHttp.CompositeMapper = {
  serializedName: "RegistrationAssignment",
  type: {
    name: "Composite",
    className: "RegistrationAssignment",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "RegistrationAssignmentProperties"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationAssignmentProperties: coreHttp.CompositeMapper = {
  serializedName: "RegistrationAssignmentProperties",
  type: {
    name: "Composite",
    className: "RegistrationAssignmentProperties",
    modelProperties: {
      registrationDefinitionId: {
        serializedName: "registrationDefinitionId",
        required: true,
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      registrationDefinition: {
        serializedName: "registrationDefinition",
        type: {
          name: "Composite",
          className: "RegistrationAssignmentPropertiesRegistrationDefinition"
        }
      }
    }
  }
};

export const RegistrationAssignmentPropertiesRegistrationDefinition: coreHttp.CompositeMapper = {
  serializedName: "RegistrationAssignmentPropertiesRegistrationDefinition",
  type: {
    name: "Composite",
    className: "RegistrationAssignmentPropertiesRegistrationDefinition",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className:
            "RegistrationAssignmentPropertiesRegistrationDefinitionProperties"
        }
      },
      plan: {
        serializedName: "plan",
        type: {
          name: "Composite",
          className: "Plan"
        }
      },
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationAssignmentPropertiesRegistrationDefinitionProperties: coreHttp.CompositeMapper = {
  serializedName:
    "RegistrationAssignmentPropertiesRegistrationDefinitionProperties",
  type: {
    name: "Composite",
    className:
      "RegistrationAssignmentPropertiesRegistrationDefinitionProperties",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      authorizations: {
        serializedName: "authorizations",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Authorization" } }
        }
      },
      registrationDefinitionName: {
        serializedName: "registrationDefinitionName",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      manageeTenantId: {
        serializedName: "manageeTenantId",
        type: {
          name: "String"
        }
      },
      manageeTenantName: {
        serializedName: "manageeTenantName",
        type: {
          name: "String"
        }
      },
      managedByTenantId: {
        serializedName: "managedByTenantId",
        type: {
          name: "String"
        }
      },
      managedByTenantName: {
        serializedName: "managedByTenantName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationDefinitionList: coreHttp.CompositeMapper = {
  serializedName: "RegistrationDefinitionList",
  type: {
    name: "Composite",
    className: "RegistrationDefinitionList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RegistrationDefinition" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RegistrationAssignmentList: coreHttp.CompositeMapper = {
  serializedName: "RegistrationAssignmentList",
  type: {
    name: "Composite",
    className: "RegistrationAssignmentList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RegistrationAssignment" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MarketplaceRegistrationDefinitionList: coreHttp.CompositeMapper = {
  serializedName: "MarketplaceRegistrationDefinitionList",
  type: {
    name: "Composite",
    className: "MarketplaceRegistrationDefinitionList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RegistrationDefinition" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: coreHttp.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreHttp.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};
