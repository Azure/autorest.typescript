/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import {
  MigrationRecoveryPointsListByReplicationMigrationItemsResponse,
  MigrationRecoveryPointsGetResponse,
  MigrationRecoveryPointsListByReplicationMigrationItemsNextResponse
} from "../models";

/**
 * Class representing a MigrationRecoveryPoints.
 */
export class MigrationRecoveryPoints {
  private readonly client: SiteRecoveryManagementClient;

  /**
   * Initialize a new instance of the class MigrationRecoveryPoints class.
   * @param client Reference to the service client
   */
  constructor(client: SiteRecoveryManagementClient) {
    this.client = client;
  }

  /**
   * Gets the recovery points for a migration item.
   * @param protectionContainerName Protection container name.
   * @param fabricName Fabric unique name.
   * @param migrationItemName Migration item name.
   * @param options The options parameters.
   */
  listByReplicationMigrationItems(
    protectionContainerName: string,
    fabricName: string,
    migrationItemName: string,
    options?: coreHttp.OperationOptions
  ): Promise<MigrationRecoveryPointsListByReplicationMigrationItemsResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        protectionContainerName,
        fabricName,
        migrationItemName,
        options: operationOptions
      },
      listByReplicationMigrationItemsOperationSpec
    ) as Promise<
      MigrationRecoveryPointsListByReplicationMigrationItemsResponse
    >;
  }

  /**
   * Gets a recovery point for a migration item.
   * @param protectionContainerName Protection container name.
   * @param fabricName Fabric unique name.
   * @param migrationItemName Migration item name.
   * @param migrationRecoveryPointName The migration recovery point name.
   * @param options The options parameters.
   */
  get(
    protectionContainerName: string,
    fabricName: string,
    migrationItemName: string,
    migrationRecoveryPointName: string,
    options?: coreHttp.OperationOptions
  ): Promise<MigrationRecoveryPointsGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        protectionContainerName,
        fabricName,
        migrationItemName,
        migrationRecoveryPointName,
        options: operationOptions
      },
      getOperationSpec
    ) as Promise<MigrationRecoveryPointsGetResponse>;
  }

  /**
   * ListByReplicationMigrationItemsNext
   * @param protectionContainerName Protection container name.
   * @param fabricName Fabric unique name.
   * @param migrationItemName Migration item name.
   * @param nextLink The nextLink from the previous successful call to the
   *                 ListByReplicationMigrationItems method.
   * @param options The options parameters.
   */
  listByReplicationMigrationItemsNext(
    protectionContainerName: string,
    fabricName: string,
    migrationItemName: string,
    nextLink: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    MigrationRecoveryPointsListByReplicationMigrationItemsNextResponse
  > {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        protectionContainerName,
        fabricName,
        migrationItemName,
        nextLink,
        options: operationOptions
      },
      listByReplicationMigrationItemsNextOperationSpec
    ) as Promise<
      MigrationRecoveryPointsListByReplicationMigrationItemsNextResponse
    >;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listByReplicationMigrationItemsOperationSpec: coreHttp.OperationSpec = {
  path:
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MigrationRecoveryPointCollection
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.protectionContainerName,
    Parameters.fabricName13,
    Parameters.migrationItemName
  ],
  serializer
};
const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints/{migrationRecoveryPointName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MigrationRecoveryPoint
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.protectionContainerName,
    Parameters.fabricName13,
    Parameters.migrationItemName,
    Parameters.migrationRecoveryPointName
  ],
  serializer
};
const listByReplicationMigrationItemsNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MigrationRecoveryPointCollection
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.protectionContainerName,
    Parameters.fabricName13,
    Parameters.migrationItemName,
    Parameters.nextLink4
  ],
  serializer
};
