/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { SiteRecoveryManagementClient } from "../siteRecoveryManagementClient";
import {
  ReplicationProtectableItemsListByReplicationProtectionContainersOptionalParams,
  ReplicationProtectableItemsListByReplicationProtectionContainersResponse,
  ReplicationProtectableItemsGetResponse,
  ReplicationProtectableItemsListByReplicationProtectionContainersNextOptionalParams,
  ReplicationProtectableItemsListByReplicationProtectionContainersNextResponse
} from "../models";

/**
 * Class representing a ReplicationProtectableItems.
 */
export class ReplicationProtectableItems {
  private readonly client: SiteRecoveryManagementClient;

  /**
   * Initialize a new instance of the class ReplicationProtectableItems class.
   * @param client Reference to the service client
   */
  constructor(client: SiteRecoveryManagementClient) {
    this.client = client;
  }

  /**
   * Lists the protectable items in a protection container.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param options The options parameters.
   */
  listByReplicationProtectionContainers(
    fabricName: string,
    protectionContainerName: string,
    options?: ReplicationProtectableItemsListByReplicationProtectionContainersOptionalParams
  ): Promise<
    ReplicationProtectableItemsListByReplicationProtectionContainersResponse
  > {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { fabricName, protectionContainerName, options: operationOptions },
      listByReplicationProtectionContainersOperationSpec
    ) as Promise<
      ReplicationProtectableItemsListByReplicationProtectionContainersResponse
    >;
  }

  /**
   * The operation to get the details of a protectable item.
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param protectableItemName Protectable item name.
   * @param options The options parameters.
   */
  get(
    fabricName: string,
    protectionContainerName: string,
    protectableItemName: string,
    options?: coreHttp.OperationOptions
  ): Promise<ReplicationProtectableItemsGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        protectableItemName,
        options: operationOptions
      },
      getOperationSpec
    ) as Promise<ReplicationProtectableItemsGetResponse>;
  }

  /**
   * ListByReplicationProtectionContainersNext
   * @param fabricName Fabric name.
   * @param protectionContainerName Protection container name.
   * @param nextLink The nextLink from the previous successful call to the
   *                 ListByReplicationProtectionContainers method.
   * @param options The options parameters.
   */
  listByReplicationProtectionContainersNext(
    fabricName: string,
    protectionContainerName: string,
    nextLink: string,
    options?: ReplicationProtectableItemsListByReplicationProtectionContainersNextOptionalParams
  ): Promise<
    ReplicationProtectableItemsListByReplicationProtectionContainersNextResponse
  > {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        fabricName,
        protectionContainerName,
        nextLink,
        options: operationOptions
      },
      listByReplicationProtectionContainersNextOperationSpec
    ) as Promise<
      ReplicationProtectableItemsListByReplicationProtectionContainersNextResponse
    >;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listByReplicationProtectionContainersOperationSpec: coreHttp.OperationSpec = {
  path:
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProtectableItemCollection
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName
  ],
  serializer
};
const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems/{protectableItemName}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProtectableItem
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.protectableItemName
  ],
  serializer
};
const listByReplicationProtectionContainersNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProtectableItemCollection
    }
  },
  queryParameters: [Parameters.apiVersion, Parameters.filter],
  urlParameters: [
    Parameters.$host,
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceName,
    Parameters.fabricName,
    Parameters.protectionContainerName,
    Parameters.nextLink3
  ],
  serializer
};
