/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const location: coreHttp.OperationURLParameter = {
  parameterPath: "location",
  mapper: {
    serializedName: "location",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const operation: coreHttp.OperationURLParameter = {
  parameterPath: "operation",
  mapper: {
    serializedName: "operation",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2016-05-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const filter: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const nextLink1: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const edgeGateway: coreHttp.OperationURLParameter = {
  parameterPath: "edgeGateway",
  mapper: {
    serializedName: "edgeGateway",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const edgeGatewayPool: coreHttp.OperationURLParameter = {
  parameterPath: "edgeGatewayPool",
  mapper: {
    serializedName: "edgeGatewayPool",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const fabricLocation: coreHttp.OperationURLParameter = {
  parameterPath: "fabricLocation",
  mapper: {
    serializedName: "fabricLocation",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const fileShare: coreHttp.OperationURLParameter = {
  parameterPath: "fileShare",
  mapper: {
    serializedName: "fileShare",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const infraRole: coreHttp.OperationURLParameter = {
  parameterPath: "infraRole",
  mapper: {
    serializedName: "infraRole",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const infraRoleInstance: coreHttp.OperationURLParameter = {
  parameterPath: "infraRoleInstance",
  mapper: {
    serializedName: "infraRoleInstance",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const ipPool: coreHttp.OperationURLParameter = {
  parameterPath: "ipPool",
  mapper: {
    serializedName: "ipPool",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const pool: coreHttp.OperationParameter = {
  parameterPath: "pool",
  mapper: Mappers.IpPool
};

export const logicalNetwork: coreHttp.OperationURLParameter = {
  parameterPath: "logicalNetwork",
  mapper: {
    serializedName: "logicalNetwork",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const logicalSubnet: coreHttp.OperationURLParameter = {
  parameterPath: "logicalSubnet",
  mapper: {
    serializedName: "logicalSubnet",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const macAddressPool: coreHttp.OperationURLParameter = {
  parameterPath: "macAddressPool",
  mapper: {
    serializedName: "macAddressPool",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const scaleUnitNodeParameters: coreHttp.OperationParameter = {
  parameterPath: "scaleUnitNodeParameters",
  mapper: Mappers.ScaleOutScaleUnitParametersList
};

export const scaleUnit: coreHttp.OperationURLParameter = {
  parameterPath: "scaleUnit",
  mapper: {
    serializedName: "scaleUnit",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const creationData: coreHttp.OperationParameter = {
  parameterPath: "creationData",
  mapper: Mappers.CreateFromJsonScaleUnitParametersList
};

export const scaleUnitNode: coreHttp.OperationURLParameter = {
  parameterPath: "scaleUnitNode",
  mapper: {
    serializedName: "scaleUnitNode",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const bareMetalNode: coreHttp.OperationParameter = {
  parameterPath: "bareMetalNode",
  mapper: Mappers.BareMetalNodeDescription
};

export const slbMuxInstance: coreHttp.OperationURLParameter = {
  parameterPath: "slbMuxInstance",
  mapper: {
    serializedName: "slbMuxInstance",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const storageSubSystem: coreHttp.OperationURLParameter = {
  parameterPath: "storageSubSystem",
  mapper: {
    serializedName: "storageSubSystem",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion1: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2018-10-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const drive: coreHttp.OperationURLParameter = {
  parameterPath: "drive",
  mapper: {
    serializedName: "drive",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion2: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2019-05-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const volume: coreHttp.OperationURLParameter = {
  parameterPath: "volume",
  mapper: {
    serializedName: "volume",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const nasCluster: coreHttp.OperationURLParameter = {
  parameterPath: "nasCluster",
  mapper: {
    serializedName: "nasCluster",
    required: true,
    type: {
      name: "String"
    }
  }
};
