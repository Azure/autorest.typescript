/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Result of a request to list all operations supported by Microsoft.DevOps resource provider.
 */
export interface OperationListResult {
  /**
   * List of operations supported by Microsoft.DevOps resource provider.
   */
  readonly value?: Operation[];
  /**
   * The URL to get the next set of operations, if there are any.
   */
  nextLink?: string;
}

/**
 * Properties of an Operation.
 */
export interface Operation {
  /**
   * Name of the operation.
   */
  readonly name?: string;
  /**
   * Indicates whether the operation applies to data-plane.
   */
  isDataAction?: string;
  /**
   * Friendly name of the operation.
   */
  readonly operation?: string;
  /**
   * Friendly name of the resource type the operation applies to.
   */
  readonly resource?: string;
  /**
   * Friendly description of the operation.
   */
  readonly description?: string;
  /**
   * Friendly name of the resource provider.
   */
  readonly provider?: string;
}

/**
 * An error response from the Pipelines Resource Provider.
 */
export interface CloudError {
  /**
   * Details of the error from the Pipelines Resource Provider.
   */
  error?: CloudErrorBody;
}

/**
 * An error response from the Pipelines Resource Provider.
 */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error or the method where the error occurred.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: CloudErrorBody[];
}

/**
 * Result of a request to list all pipeline template definitions.
 */
export interface PipelineTemplateDefinitionListResult {
  /**
   * List of pipeline template definitions.
   */
  value?: PipelineTemplateDefinition[];
  /**
   * The URL to get the next set of pipeline template definitions, if there are any.
   */
  nextLink?: string;
}

/**
 * Definition of a pipeline template.
 */
export interface PipelineTemplateDefinition {
  /**
   * Unique identifier of the pipeline template.
   */
  id: string;
  /**
   * Description of the pipeline enabled by the template.
   */
  description?: string;
  /**
   * List of input parameters required by the template to create a pipeline.
   */
  inputs?: InputDescriptor[];
}

/**
 * Representation of a pipeline template input parameter.
 */
export interface InputDescriptor {
  /**
   * Identifier of the input parameter.
   */
  id: string;
  /**
   * Description of the input parameter.
   */
  description?: string;
  /**
   * Data type of the value of the input parameter.
   */
  type: InputDataType;
  /**
   * List of possible values for the input parameter.
   */
  possibleValues?: InputValue[];
}

/**
 * Representation of a pipeline template input parameter value.
 */
export interface InputValue {
  /**
   * Value of an input parameter.
   */
  value?: string;
  /**
   * Description of the input parameter value.
   */
  displayValue?: string;
}

/**
 * An Azure Resource Manager (ARM) resource.
 */
export interface Resource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource Type
   */
  readonly type?: string;
  /**
   * Resource Tags
   */
  tags?: { [propertyName: string]: string };
  /**
   * Resource Location
   */
  location?: string;
  /**
   * Resource Name
   */
  readonly name?: string;
}

/**
 * Azure DevOps Pipeline used to configure Continuous Integration (CI) & Continuous Delivery (CD) for Azure resources.
 */
export type Pipeline = Resource & {
  /**
   * Unique identifier of the Azure Pipeline within the Azure DevOps Project.
   */
  readonly pipelineId?: number;
  /**
   * Reference to the Azure DevOps Organization containing the Pipeline.
   */
  organization: OrganizationReference;
  /**
   * Reference to the Azure DevOps Project containing the Pipeline.
   */
  project: ProjectReference;
  /**
   * Configuration used to bootstrap the Pipeline.
   */
  bootstrapConfiguration: BootstrapConfiguration;
};

/**
 * Reference to an Azure DevOps Organization.
 */
export interface OrganizationReference {
  /**
   * Unique immutable identifier for the Azure DevOps Organization.
   */
  readonly id?: string;
  /**
   * Name of the Azure DevOps Organization.
   */
  name: string;
}

/**
 * Reference to an Azure DevOps Project.
 */
export interface ProjectReference {
  /**
   * Unique immutable identifier of the Azure DevOps Project.
   */
  readonly id?: string;
  /**
   * Name of the Azure DevOps Project.
   */
  name: string;
}

/**
 * Configuration used to bootstrap a Pipeline.
 */
export interface BootstrapConfiguration {
  /**
   * Repository containing the source code for the pipeline.
   */
  repository?: CodeRepository;
  /**
   * Template used to bootstrap the pipeline.
   */
  template: PipelineTemplate;
}

/**
 * Repository containing the source code for a pipeline.
 */
export interface CodeRepository {
  /**
   * Type of code repository.
   */
  repositoryType: CodeRepositoryType;
  /**
   * Unique immutable identifier of the code repository.
   */
  id: string;
  /**
   * Default branch used to configure Continuous Integration (CI) in the pipeline.
   */
  defaultBranch: string;
  /**
   * Authorization info to access the code repository.
   */
  authorization?: Authorization;
  /**
   * Repository-specific properties.
   */
  properties?: { [propertyName: string]: string };
}

/**
 * Authorization info used to access a resource (like code repository).
 */
export interface Authorization {
  /**
   * Type of authorization.
   */
  authorizationType: "personalAccessToken";
  /**
   * Authorization parameters corresponding to the authorization type.
   */
  parameters?: { [propertyName: string]: string };
}

/**
 * Template used to bootstrap the pipeline.
 */
export interface PipelineTemplate {
  /**
   * Unique identifier of the pipeline template.
   */
  id: string;
  /**
   * Dictionary of input parameters used in the pipeline template.
   */
  parameters?: { [propertyName: string]: string };
}

/**
 * Request payload used to update an existing Azure Pipeline.
 */
export interface PipelineUpdateParameters {
  /**
   * Dictionary of key-value pairs to be set as tags on the Azure Pipeline. This will overwrite any existing tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Result of a request to list all Azure Pipelines under a given scope.
 */
export interface PipelineListResult {
  /**
   * List of pipelines.
   */
  value?: Pipeline[];
  /**
   * URL to get the next set of Pipelines, if there are any.
   */
  nextLink?: string;
}

/**
 * Defines values for InputDataType.
 */
export type InputDataType =
  | "String"
  | "SecureString"
  | "Int"
  | "Bool"
  | "Authorization";
/**
 * Defines values for CodeRepositoryType.
 */
export type CodeRepositoryType = "gitHub" | "vstsGit";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type PipelineTemplateDefinitionsListResponse = PipelineTemplateDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineTemplateDefinitionListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type PipelineTemplateDefinitionsListNextResponse = PipelineTemplateDefinitionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineTemplateDefinitionListResult;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type PipelinesCreateOrUpdateResponse = Pipeline & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Pipeline;
  };
};

/**
 * Contains response data for the get operation.
 */
export type PipelinesGetResponse = Pipeline & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Pipeline;
  };
};

/**
 * Contains response data for the update operation.
 */
export type PipelinesUpdateResponse = Pipeline & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Pipeline;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type PipelinesListByResourceGroupResponse = PipelineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineListResult;
  };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type PipelinesListBySubscriptionResponse = PipelineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type PipelinesListByResourceGroupNextResponse = PipelineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineListResult;
  };
};

/**
 * Contains response data for the listBySubscriptionNext operation.
 */
export type PipelinesListBySubscriptionNextResponse = PipelineListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PipelineListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AzureDevOpsOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
