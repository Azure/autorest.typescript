/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * List of Operations
 */
export interface OperationList {
  /**
   * Array of operations
   */
  value?: Operation[];
  /**
   * URI to the next page of operations.
   */
  nextLink?: string;
}

/**
 * Describes the supported REST operation.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  name?: string;
  /**
   * Contains the localized display information for this particular operation or action.
   */
  display?: Display;
  /**
   * The intended executor of the operation.
   */
  origin?: string;
}

/**
 * Contains the localized display information for this particular operation or action.
 */
export interface Display {
  /**
   * The localized, friendly version of the resource provider name.
   */
  provider?: string;
  /**
   * The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.
   */
  resource?: string;
  /**
   * The localized, friendly name for the operation. Use the name as it will displayed to the user.
   */
  operation?: string;
  /**
   * The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.
   */
  description?: string;
}

/**
 * Base resource object.
 */
export interface Resource {
  /**
   * ID of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of Resource.
   */
  readonly type?: string;
  /**
   * The entity tag used for optimistic concurrency when modifying the resource.
   */
  etag?: string;
}

/**
 * Cloud specific manifest GET response.
 */
export type CloudManifestFileResponse = Resource & {
  /**
   * Cloud specific manifest data.
   */
  properties?: CloudManifestFileProperties;
};

/**
 * Cloud specific manifest JSON properties.
 */
export interface CloudManifestFileProperties {
  /**
   * Cloud specific manifest data.
   */
  deploymentData?: CloudManifestFileDeploymentData;
  /**
   * Signature of the cloud specific manifest data.
   */
  signature?: string;
}

/**
 * Cloud specific manifest data for AzureStack deployment.
 */
export interface CloudManifestFileDeploymentData {
  /**
   * Dsms external certificates.
   */
  externalDsmsCertificates?: string;
  /**
   * Signing verification public key.
   */
  customCloudVerificationKey?: string;
  /**
   * ARM endpoint.
   */
  customCloudArmEndpoint?: string;
  /**
   * Dsms endpoint.
   */
  externalDsmsEndpoint?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   */
  readonly target?: string;
}

/**
 * Pageable list of products.
 */
export interface ProductList {
  /**
   * URI to the next page.
   */
  nextLink?: string;
  /**
   * List of products.
   */
  value?: Product[];
}

/**
 * Product information.
 */
export type Product = Resource & {
  /**
   * The display name of the product.
   */
  displayName?: string;
  /**
   * The description of the product.
   */
  description?: string;
  /**
   * The user-friendly name of the product publisher.
   */
  publisherDisplayName?: string;
  /**
   * Publisher identifier.
   */
  publisherIdentifier?: string;
  /**
   * The offer representing the product.
   */
  offer?: string;
  /**
   * The version of the product offer.
   */
  offerVersion?: string;
  /**
   * The product SKU.
   */
  sku?: string;
  /**
   * The part number used for billing purposes.
   */
  billingPartNumber?: string;
  /**
   * The type of the Virtual Machine Extension.
   */
  vmExtensionType?: string;
  /**
   * The identifier of the gallery item corresponding to the product.
   */
  galleryItemIdentity?: string;
  /**
   * Additional links available for this product.
   */
  iconUris?: IconUris;
  /**
   * Additional links available for this product.
   */
  links?: ProductLink[];
  /**
   * The legal terms.
   */
  legalTerms?: string;
  /**
   * The privacy policy.
   */
  privacyPolicy?: string;
  /**
   * The length of product content.
   */
  payloadLength?: number;
  /**
   * The kind of the product (virtualMachine or virtualMachineExtension)
   */
  productKind?: string;
  /**
   * Additional properties for the product.
   */
  productProperties?: ProductProperties;
  /**
   * Product compatibility with current device.
   */
  compatibility?: Compatibility;
};

/**
 * Links to product icons.
 */
export interface IconUris {
  /**
   * URI to large icon.
   */
  large?: string;
  /**
   * URI to wide icon.
   */
  wide?: string;
  /**
   * URI to medium icon.
   */
  medium?: string;
  /**
   * URI to small icon.
   */
  small?: string;
  /**
   * URI to hero icon.
   */
  hero?: string;
}

/**
 * Link with additional information about a product.
 */
export interface ProductLink {
  /**
   * The description of the link.
   */
  displayName?: string;
  /**
   * The URI corresponding to the link.
   */
  uri?: string;
}

/**
 * Additional properties of the product
 */
export interface ProductProperties {
  /**
   * The version.
   */
  version?: string;
}

/**
 * Product compatibility
 */
export interface Compatibility {
  /**
   * Tells if product is compatible with current device
   */
  isCompatible?: boolean;
  /**
   * Short error message if any compatibility issues are found
   */
  message?: string;
  /**
   * Full error message if any compatibility issues are found
   */
  description?: string;
  /**
   * List of all issues found
   */
  issues?: CompatibilityIssue[];
}

/**
 * Extended description about the product required for installing it into Azure Stack.
 */
export interface ExtendedProduct {
  /**
   * The URI to the .azpkg file that provides information required for showing product in the gallery.
   */
  readonly galleryPackageBlobSasUri?: string;
  /**
   * Specifies the kind of the product (virtualMachine or virtualMachineExtension).
   */
  readonly productKind?: string;
  /**
   * Specifies kind of compute role included in the package.
   */
  readonly computeRole?: ComputeRole;
  /**
   * Specifies if product is a Virtual Machine Extension.
   */
  readonly isSystemExtension?: boolean;
  /**
   * Indicates if specified product supports multiple extensions.
   */
  readonly supportMultipleExtensions?: boolean;
  /**
   * Specifies product version.
   */
  readonly versionPropertiesVersion?: string;
  /**
   * Specifies operating system used by the product.
   */
  readonly vmOsType?: OperatingSystem;
  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   */
  readonly vmScaleSetEnabled?: boolean;
  /**
   * The URI.
   */
  readonly uri?: string;
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * OS disk image used by product.
   */
  readonly osDiskImage?: OsDiskImage;
  /**
   * List of attached data disks.
   */
  readonly dataDiskImages?: DataDiskImage[];
}

/**
 * Product information.
 */
export interface VirtualMachineExtensionProductProperties {
  /**
   * Specifies kind of compute role included in the package.
   */
  readonly computeRole?: ComputeRole;
  /**
   * Specifies if product is a Virtual Machine Extension.
   */
  readonly isSystemExtension?: boolean;
  /**
   * Indicates if specified product supports multiple extensions.
   */
  readonly supportMultipleExtensions?: boolean;
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * Specifies operating system used by the product.
   */
  readonly vmOsType?: OperatingSystem;
  /**
   * Indicates if virtual machine Scale Set is enabled in the specified product.
   */
  readonly vmScaleSetEnabled?: boolean;
  /**
   * The URI.
   */
  readonly uri?: string;
}

/**
 * Product information.
 */
export interface VirtualMachineProductProperties {
  /**
   * Specifies product version.
   */
  readonly version?: string;
  /**
   * OS disk image used by product.
   */
  readonly osDiskImage?: OsDiskImage;
  /**
   * List of attached data disks.
   */
  readonly dataDiskImages?: DataDiskImage[];
}

/**
 * OS disk image.
 */
export interface OsDiskImage {
  /**
   * OS operating system type.
   */
  readonly operatingSystem?: OperatingSystem;
  /**
   * SAS key for source blob.
   */
  readonly sourceBlobSasUri?: string;
}

/**
 * Data disk image.
 */
export interface DataDiskImage {
  /**
   * The LUN.
   */
  readonly lun?: number;
  /**
   * SAS key for source blob.
   */
  readonly sourceBlobSasUri?: string;
}

/**
 * Product information.
 */
export type ExtendedProductProperties = VirtualMachineExtensionProductProperties &
  VirtualMachineProductProperties & {};

/**
 * Device Configuration.
 */
export interface DeviceConfiguration {
  /**
   * Version of the device.
   */
  readonly deviceVersion?: string;
  /**
   * Identity system of the device.
   */
  readonly identitySystem?: Category;
}

/**
 * Update details for product log.
 */
export interface MarketplaceProductLogUpdate {
  /**
   * Operation to log.
   */
  readonly operation?: string;
  /**
   * Operation status to log.
   */
  readonly status?: string;
  /**
   * Error related to the operation.
   */
  readonly error?: string;
  /**
   * Error details related to operation.
   */
  readonly details?: string;
}

/**
 * Product action log.
 */
export interface ProductLog {
  /**
   * Log ID.
   */
  readonly id?: string;
  /**
   * Logged product ID.
   */
  readonly productId?: string;
  /**
   * Logged subscription ID.
   */
  readonly subscriptionId?: string;
  /**
   * Logged registration name.
   */
  readonly registrationName?: string;
  /**
   * Logged resource group name.
   */
  readonly resourceGroupName?: string;
  /**
   * Logged operation.
   */
  readonly operation?: string;
  /**
   * Operation start datetime.
   */
  readonly startDate?: string;
  /**
   * Operation end datetime.
   */
  readonly endDate?: string;
  /**
   * Operation status.
   */
  readonly status?: string;
  /**
   * Operation error data.
   */
  readonly error?: string;
  /**
   * Operation error details.
   */
  readonly details?: string;
}

/**
 * Pageable list of registrations.
 */
export interface RegistrationList {
  /**
   * URI to the next page.
   */
  nextLink?: string;
  /**
   * List of Registrations
   */
  value?: Registration[];
}

/**
 * Base resource object.
 */
export interface TrackedResource {
  /**
   * ID of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of Resource.
   */
  readonly type?: string;
  /**
   * Location of the resource.
   */
  location: "global";
  /**
   * Custom tags for the resource.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The entity tag used for optimistic concurrency when modifying the resource.
   */
  etag?: string;
}

/**
 * Registration information.
 */
export type Registration = TrackedResource & {
  /**
   * The object identifier associated with the Azure Stack connecting to Azure.
   */
  objectId?: string;
  /**
   * The identifier of the registered Azure Stack.
   */
  cloudId?: string;
  /**
   * Specifies the billing mode for the Azure Stack registration.
   */
  billingModel?: string;
};

/**
 * Registration resource
 */
export interface RegistrationParameter {
  /**
   * Location of the resource.
   */
  location?: "global";
  /**
   * The token identifying registered Azure Stack
   */
  registrationToken?: string;
}

/**
 * The resource containing the Azure Stack activation key.
 */
export interface ActivationKeyResult {
  /**
   * Azure Stack activation key.
   */
  activationKey?: string;
}

/**
 * Pageable list of customer subscriptions.
 */
export interface CustomerSubscriptionList {
  /**
   * URI to the next page.
   */
  nextLink?: string;
  /**
   * List of customer subscriptions.
   */
  value?: CustomerSubscription[];
}

/**
 * Customer subscription.
 */
export type CustomerSubscription = Resource & {
  /**
   * Tenant Id.
   */
  tenantId?: string;
};
/**
 * Defines values for CompatibilityIssue.
 */
export type CompatibilityIssue =
  | "HigherDeviceVersionRequired"
  | "LowerDeviceVersionRequired"
  | "CapacityBillingModelRequired"
  | "PayAsYouGoBillingModelRequired"
  | "DevelopmentBillingModelRequired"
  | "AzureADIdentitySystemRequired"
  | "ADFSIdentitySystemRequired"
  | "ConnectionToInternetRequired"
  | "ConnectionToAzureRequired"
  | "DisconnectedEnvironmentRequired";
/**
 * Defines values for ComputeRole.
 */
export type ComputeRole = "None" | "IaaS" | "PaaS";
/**
 * Defines values for OperatingSystem.
 */
export type OperatingSystem = "None" | "Windows" | "Linux";
/**
 * Defines values for Category.
 */
export type Category = "AzureAD" | "ADFS";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Creating"
  | "Failed"
  | "Succeeded"
  | "Canceled";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type CloudManifestFileListResponse = CloudManifestFileResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CloudManifestFileResponse;
  };
};

/**
 * Optional parameters.
 */
export interface CloudManifestFileGetOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Signing verification key version creation date.
   */
  versionCreationDate?: string;
}

/**
 * Contains response data for the get operation.
 */
export type CloudManifestFileGetResponse = CloudManifestFileResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CloudManifestFileResponse;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ProductsListResponse = ProductList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ProductsGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the listDetails operation.
 */
export type ProductsListDetailsResponse = ExtendedProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ExtendedProduct;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsGetProductsOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Device configuration.
   */
  deviceConfiguration?: DeviceConfiguration;
}

/**
 * Contains response data for the getProducts operation.
 */
export type ProductsGetProductsResponse = ProductList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductList;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsGetProductOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Device configuration.
   */
  deviceConfiguration?: DeviceConfiguration;
}

/**
 * Contains response data for the getProduct operation.
 */
export type ProductsGetProductResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface ProductsUploadLogOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Update details for product log.
   */
  marketplaceProductLogUpdate?: MarketplaceProductLogUpdate;
}

/**
 * Contains response data for the uploadLog operation.
 */
export type ProductsUploadLogResponse = ProductLog & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductLog;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ProductsListNextResponse = ProductList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ProductList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type RegistrationsListResponse = RegistrationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RegistrationList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type RegistrationsGetResponse = Registration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Registration;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type RegistrationsCreateOrUpdateResponse = Registration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Registration;
  };
};

/**
 * Contains response data for the update operation.
 */
export type RegistrationsUpdateResponse = Registration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Registration;
  };
};

/**
 * Contains response data for the getActivationKey operation.
 */
export type RegistrationsGetActivationKeyResponse = ActivationKeyResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ActivationKeyResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type RegistrationsListNextResponse = RegistrationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: RegistrationList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type CustomerSubscriptionsListResponse = CustomerSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerSubscriptionList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type CustomerSubscriptionsGetResponse = CustomerSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerSubscription;
  };
};

/**
 * Contains response data for the create operation.
 */
export type CustomerSubscriptionsCreateResponse = CustomerSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerSubscription;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type CustomerSubscriptionsListNextResponse = CustomerSubscriptionList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CustomerSubscriptionList;
  };
};

/**
 * Optional parameters.
 */
export interface AzureStackManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
