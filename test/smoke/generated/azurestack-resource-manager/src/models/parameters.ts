/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2017-06-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const nextLink: coreHttp.OperationURLParameter = {
  parameterPath: "nextLink",
  mapper: {
    serializedName: "nextLink",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const verificationVersion: coreHttp.OperationURLParameter = {
  parameterPath: "verificationVersion",
  mapper: {
    serializedName: "verificationVersion",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const versionCreationDate: coreHttp.OperationQueryParameter = {
  parameterPath: ["options", "versionCreationDate"],
  mapper: {
    serializedName: "versionCreationDate",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroup: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroup",
  mapper: {
    serializedName: "resourceGroup",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const registrationName: coreHttp.OperationURLParameter = {
  parameterPath: "registrationName",
  mapper: {
    serializedName: "registrationName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const productName: coreHttp.OperationURLParameter = {
  parameterPath: "productName",
  mapper: {
    serializedName: "productName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const deviceConfiguration: coreHttp.OperationParameter = {
  parameterPath: ["options", "deviceConfiguration"],
  mapper: Mappers.DeviceConfiguration
};

export const marketplaceProductLogUpdate: coreHttp.OperationParameter = {
  parameterPath: ["options", "marketplaceProductLogUpdate"],
  mapper: Mappers.MarketplaceProductLogUpdate
};

export const token: coreHttp.OperationParameter = {
  parameterPath: "token",
  mapper: Mappers.RegistrationParameter
};

export const customerSubscriptionName: coreHttp.OperationURLParameter = {
  parameterPath: "customerSubscriptionName",
  mapper: {
    serializedName: "customerSubscriptionName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const customerCreationParameters: coreHttp.OperationParameter = {
  parameterPath: "customerCreationParameters",
  mapper: Mappers.CustomerSubscription
};
