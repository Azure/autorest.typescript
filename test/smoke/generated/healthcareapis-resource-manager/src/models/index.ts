/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The common properties of a service.
 */
export interface Resource {
  /**
   * The resource identifier.
   */
  readonly id?: string;
  /**
   * The resource name.
   */
  readonly name?: string;
  /**
   * The resource type.
   */
  readonly type?: string;
  /**
   * The kind of the service.
   */
  kind: Kind;
  /**
   * The resource location.
   */
  location: string;
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * An etag associated with the resource, used for optimistic concurrency when editing it.
   */
  etag?: string;
  /**
   * Setting indicating whether the service has a managed identity associated with it.
   */
  identity?: ResourceIdentity;
}

/**
 * Setting indicating whether the service has a managed identity associated with it.
 */
export interface ResourceIdentity {
  /**
   * Type of identity being specified, currently SystemAssigned and None are allowed.
   */
  type?: ManagedServiceIdentityType;
}

/**
 * The description of the service.
 */
export type ServicesDescription = Resource & {
  /**
   * The common properties of a service.
   */
  properties?: ServicesProperties;
};

/**
 * The properties of a service instance.
 */
export interface ServicesProperties {
  /**
   * The provisioning state.
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * The access policies of the service instance.
   */
  accessPolicies: ServiceAccessPolicyEntry[];
  /**
   * The settings for the Cosmos DB database backing the service.
   */
  cosmosDbConfiguration?: ServiceCosmosDbConfigurationInfo;
  /**
   * The authentication configuration for the service instance.
   */
  authenticationConfiguration?: ServiceAuthenticationConfigurationInfo;
  /**
   * The settings for the CORS configuration of the service instance.
   */
  corsConfiguration?: ServiceCorsConfigurationInfo;
}

/**
 * An access policy entry.
 */
export interface ServiceAccessPolicyEntry {
  /**
   * An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.
   */
  objectId: string;
}

/**
 * The settings for the Cosmos DB database backing the service.
 */
export interface ServiceCosmosDbConfigurationInfo {
  /**
   * The provisioned throughput for the backing database.
   */
  offerThroughput?: number;
}

/**
 * Authentication configuration information
 */
export interface ServiceAuthenticationConfigurationInfo {
  /**
   * The authority url for the service
   */
  authority?: string;
  /**
   * The audience url for the service
   */
  audience?: string;
  /**
   * If the SMART on FHIR proxy is enabled
   */
  smartProxyEnabled?: boolean;
}

/**
 * The settings for the CORS configuration of the service instance.
 */
export interface ServiceCorsConfigurationInfo {
  /**
   * The origins to be allowed via CORS.
   */
  origins?: string[];
  /**
   * The headers to be allowed via CORS.
   */
  headers?: string[];
  /**
   * The methods to be allowed via CORS.
   */
  methods?: string[];
  /**
   * The max age to be allowed via CORS.
   */
  maxAge?: number;
  /**
   * If credentials are allowed via CORS.
   */
  allowCredentials?: boolean;
}

/**
 * Error details.
 */
export interface ErrorDetails {
  /**
   * Object containing error details.
   */
  error?: ErrorDetailsInternal;
}

/**
 * Error details.
 */
export interface ErrorDetailsInternal {
  /**
   * The error code.
   */
  readonly code?: string;
  /**
   * The error message.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   */
  readonly target?: string;
}

/**
 * The description of the service.
 */
export interface ServicesPatchDescription {
  /**
   * Instance tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A list of service description objects with a next link.
 */
export interface ServicesDescriptionListResult {
  /**
   * The link used to get the next page of service description objects.
   */
  nextLink?: string;
  /**
   * A list of service description objects.
   */
  value?: ServicesDescription[];
}

/**
 * A list of service operations. It contains a list of operations and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * The link used to get the next page of service description objects.
   */
  nextLink?: string;
  /**
   * A list of service operations supported by the Microsoft.HealthcareApis resource provider.
   */
  readonly value?: Operation[];
}

/**
 * Service REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{read | write | action | delete}
   */
  readonly name?: string;
  /**
   * Default value is 'user,system'.
   */
  readonly origin?: string;
  /**
   * The information displayed about the operation.
   */
  display?: OperationDisplay;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.HealthcareApis
   */
  readonly provider?: string;
  /**
   * Resource Type: Services
   */
  readonly resource?: string;
  /**
   * Name of the operation
   */
  readonly operation?: string;
  /**
   * Friendly description for the operation,
   */
  readonly description?: string;
}

/**
 * Input values.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The name of the service instance to check.
   */
  name: string;
  /**
   * The fully qualified resource type which includes provider namespace.
   */
  type: string;
}

/**
 * The properties indicating whether a given service name is available.
 */
export interface ServicesNameAvailabilityInfo {
  /**
   * The value which indicates whether the provided name is available.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason for unavailability.
   */
  readonly reason?: ServiceNameUnavailabilityReason;
  /**
   * The detailed reason message.
   */
  message?: string;
}

/**
 * The properties indicating the operation result of an operation on a service.
 */
export interface OperationResultsDescription {
  /**
   * The ID of the operation returned.
   */
  readonly id?: string;
  /**
   * The name of the operation result.
   */
  readonly name?: string;
  /**
   * The status of the operation being performed.
   */
  readonly status?: OperationResultStatus;
  /**
   * The time that the operation was started.
   */
  readonly startTime?: string;
  /**
   * Additional properties of the operation result.
   */
  properties?: any;
}

/**
 * Defines values for ManagedServiceIdentityType.
 */
export type ManagedServiceIdentityType = "SystemAssigned" | "None";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Deleting"
  | "Succeeded"
  | "Creating"
  | "Accepted"
  | "Verifying"
  | "Updating"
  | "Failed"
  | "Canceled"
  | "Deprovisioned";
/**
 * Defines values for OperationResultStatus.
 */
export type OperationResultStatus =
  | "Canceled"
  | "Succeeded"
  | "Failed"
  | "Requested"
  | "Running";
/**
 * Defines values for Kind.
 */
export type Kind = "fhir" | "fhir-Stu3" | "fhir-R4";
/**
 * Defines values for ServiceNameUnavailabilityReason.
 */
export type ServiceNameUnavailabilityReason = "Invalid" | "AlreadyExists";

/**
 * Contains response data for the get operation.
 */
export type ServicesGetResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescription;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServicesCreateOrUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescription;
  };
};

/**
 * Contains response data for the update operation.
 */
export type ServicesUpdateResponse = ServicesDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescription;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ServicesListResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescriptionListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServicesListByResourceGroupResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescriptionListResult;
  };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type ServicesCheckNameAvailabilityResponse = ServicesNameAvailabilityInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesNameAvailabilityInfo;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServicesListNextResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescriptionListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServicesListByResourceGroupNextResponse = ServicesDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: ServicesDescriptionListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type OperationResultsGetResponse = OperationResultsDescription & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationResultsDescription;
  };
};

/**
 * Optional parameters.
 */
export interface HealthcareApisManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
