/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Azure resource
 */
export interface Resource {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   */
  readonly name?: string;
  /**
   * Specifies the location of the resource.
   */
  location: string;
  /**
   * Specifies the type of the resource.
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Instance of an Azure ML Operationalization Cluster resource.
 */
export type OperationalizationCluster = Resource & {
  /**
   * The description of the cluster.
   */
  description?: string;
  /**
   * The date and time when the cluster was created.
   */
  readonly createdOn?: Date;
  /**
   * The date and time when the cluster was last modified.
   */
  readonly modifiedOn?: Date;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
   */
  readonly provisioningState?: OperationStatus;
  /**
   * List of provisioning errors reported by the resource provider.
   */
  readonly provisioningErrors?: ErrorResponseWrapper[];
  /**
   * The cluster type.
   */
  clusterType?: ClusterType;
  /**
   * Storage Account properties.
   */
  storageAccount?: StorageAccountProperties;
  /**
   * Container Registry properties.
   */
  containerRegistry?: ContainerRegistryProperties;
  /**
   * Parameters for the Azure Container Service cluster.
   */
  containerService?: AcsClusterProperties;
  /**
   * AppInsights configuration.
   */
  appInsights?: AppInsightsProperties;
  /**
   * Contains global configuration for the web services in the cluster.
   */
  globalServiceConfiguration?: GlobalServiceConfiguration;
};

/**
 * Wrapper for error response to follow ARM guidelines.
 */
export interface ErrorResponseWrapper {
  /**
   * The error response.
   */
  error?: ErrorResponse;
}

/**
 * Error response information.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
  /**
   * An array of error detail objects.
   */
  details?: ErrorDetail[];
}

/**
 * Error detail information.
 */
export interface ErrorDetail {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
}

/**
 * Properties of Storage Account.
 */
export interface StorageAccountProperties {
  /**
   * ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created.
   */
  resourceId?: string;
}

/**
 * Properties of Azure Container Registry.
 */
export interface ContainerRegistryProperties {
  /**
   * ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created.
   */
  resourceId?: string;
}

/**
 * Information about the container service backing the cluster
 */
export interface AcsClusterProperties {
  /**
   * The FQDN of the cluster.
   */
  readonly clusterFqdn?: string;
  /**
   * Type of orchestrator. It cannot be changed once the cluster is created.
   */
  orchestratorType: OrchestratorType;
  /**
   * Orchestrator specific properties
   */
  orchestratorProperties?: KubernetesClusterProperties;
  /**
   * The system services deployed to the cluster
   */
  systemServices?: SystemService[];
  /**
   * The number of master nodes in the container service.
   */
  masterCount?: number;
  /**
   * The number of agent nodes in the Container Service. This can be changed to scale the cluster.
   */
  agentCount?: number;
  /**
   * The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. This list is non exhaustive; refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes.
   */
  agentVmSize?: AgentVMSizeTypes;
}

/**
 * Kubernetes cluster specific properties
 */
export interface KubernetesClusterProperties {
  /**
   * The Azure Service Principal used by Kubernetes
   */
  servicePrincipal?: ServicePrincipalProperties;
}

/**
 * The Azure service principal used by Kubernetes for configuring load balancers
 */
export interface ServicePrincipalProperties {
  /**
   * The service principal client ID
   */
  clientId: string;
  /**
   * The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys.
   */
  secret: string;
}

/**
 * Information about a system service deployed in the cluster
 */
export interface SystemService {
  /**
   * The system service type
   */
  systemServiceType: SystemServiceType;
  /**
   * The public IP address of the system service
   */
  readonly publicIpAddress?: string;
  /**
   * The state of the system service
   */
  readonly version?: string;
}

/**
 * Properties of App Insights.
 */
export interface AppInsightsProperties {
  /**
   * ARM resource ID of the App Insights.
   */
  resourceId?: string;
}

/**
 * Global configuration for services in the cluster.
 */
export interface GlobalServiceConfiguration {
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [property: string]: any;
  /**
   * The configuration ETag for updates.
   */
  etag?: string;
  /**
   * The SSL configuration properties
   */
  ssl?: SslConfiguration;
  /**
   * Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
   */
  serviceAuth?: ServiceAuthConfiguration;
  /**
   * The auto-scale configuration
   */
  autoScale?: AutoScaleConfiguration;
}

/**
 * SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.
 */
export interface SslConfiguration {
  /**
   * SSL status. Allowed values are Enabled and Disabled.
   */
  status?: Status;
  /**
   * The SSL cert data in PEM format.
   */
  cert?: string;
  /**
   * The SSL key data in PEM format. This is not returned in response of GET/PUT on the resource. To see this please call listKeys API.
   */
  key?: string;
  /**
   * The CName of the certificate.
   */
  cname?: string;
}

/**
 * Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.
 */
export interface ServiceAuthConfiguration {
  /**
   * The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
   */
  primaryAuthKeyHash: string;
  /**
   * The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API.
   */
  secondaryAuthKeyHash: string;
}

/**
 * AutoScale configuration properties.
 */
export interface AutoScaleConfiguration {
  /**
   * If auto-scale is enabled for all services. Each service can turn it off individually.
   */
  status?: Status;
  /**
   * The minimum number of replicas for each service.
   */
  minReplicas?: number;
  /**
   * The maximum number of replicas for each service.
   */
  maxReplicas?: number;
  /**
   * The target utilization.
   */
  targetUtilization?: number;
  /**
   * Refresh period in seconds.
   */
  refreshPeriodInSeconds?: number;
}

/**
 * Parameters for PATCH operation on an operationalization cluster
 */
export interface OperationalizationClusterUpdateParameters {
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Credentials to resources in the cluster.
 */
export interface OperationalizationClusterCredentials {
  /**
   * Credentials for the Storage Account.
   */
  storageAccount?: StorageAccountCredentials;
  /**
   * Credentials for Azure Container Registry.
   */
  containerRegistry?: ContainerRegistryCredentials;
  /**
   * Credentials for Azure Container Service.
   */
  containerService?: ContainerServiceCredentials;
  /**
   * Credentials for Azure AppInsights.
   */
  appInsights?: AppInsightsCredentials;
  /**
   * Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
   */
  serviceAuthConfiguration?: ServiceAuthConfiguration;
  /**
   * The SSL configuration for the services.
   */
  sslConfiguration?: SslConfiguration;
}

/**
 * Access information for the storage account.
 */
export interface StorageAccountCredentials {
  /**
   * The ARM resource ID of the storage account.
   */
  readonly resourceId?: string;
  /**
   * The primary key of the storage account.
   */
  readonly primaryKey?: string;
  /**
   * The secondary key of the storage account.
   */
  readonly secondaryKey?: string;
}

/**
 * Information about the Azure Container Registry which contains the images deployed to the cluster.
 */
export interface ContainerRegistryCredentials {
  /**
   * The ACR login server name. User name is the first part of the FQDN.
   */
  readonly loginServer?: string;
  /**
   * The ACR primary password.
   */
  readonly password?: string;
  /**
   * The ACR secondary password.
   */
  readonly password2?: string;
  /**
   * The ACR login username.
   */
  readonly username?: string;
}

/**
 * Information about the Azure Container Registry which contains the images deployed to the cluster.
 */
export interface ContainerServiceCredentials {
  /**
   * The ACS kube config file.
   */
  readonly acsKubeConfig?: string;
  /**
   * Service principal configuration used by Kubernetes.
   */
  readonly servicePrincipalConfiguration?: ServicePrincipalProperties;
  /**
   * The ACR image pull secret name which was created in Kubernetes.
   */
  readonly imagePullSecretName?: string;
}

/**
 * AppInsights credentials.
 */
export interface AppInsightsCredentials {
  /**
   * The AppInsights application ID.
   */
  appId?: string;
  /**
   * The AppInsights instrumentation key. This is not returned in response of GET/PUT on the resource. To see this please call listKeys API.
   */
  instrumentationKey?: string;
}

/**
 * Information about updates available for system services in a cluster.
 */
export interface CheckSystemServicesUpdatesAvailableResponse {
  /**
   * Yes if updates are available for the system services, No if not.
   */
  readonly updatesAvailable?: UpdatesAvailable;
}

/**
 * Response of the update system services API
 */
export interface UpdateSystemServicesResponse {
  /**
   * Update status
   */
  readonly updateStatus?: OperationStatus;
  /**
   * The date and time when the last system services update was started.
   */
  readonly updateStartedOn?: Date;
  /**
   * The date and time when the last system services update completed.
   */
  readonly updateCompletedOn?: Date;
}

/**
 * Paginated list of operationalization clusters.
 */
export interface PaginatedOperationalizationClustersList {
  /**
   * An array of cluster objects.
   */
  value?: OperationalizationCluster[];
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   */
  nextLink?: string;
}

/**
 * Available operation list.
 */
export interface AvailableOperations {
  /**
   * An array of available operations.
   */
  value?: ResourceOperation[];
}

/**
 * Resource operation.
 */
export interface ResourceOperation {
  /**
   * Name of this operation.
   */
  name?: string;
  /**
   * Display of the operation.
   */
  display?: ResourceOperationDisplay;
  /**
   * The operation origin.
   */
  origin?: string;
}

/**
 * Display of the operation.
 */
export interface ResourceOperationDisplay {
  /**
   * The resource provider name.
   */
  provider?: string;
  /**
   * The resource name.
   */
  resource?: string;
  /**
   * The operation.
   */
  operation?: string;
  /**
   * The description of the operation.
   */
  description?: string;
}

/**
 * Defines headers for operationalizationClusters_delete operation.
 */
export interface OperationalizationClustersDeleteHeaders {
  location?: string;
}

/**
 * Defines values for OperationStatus.
 */
export type OperationStatus =
  | "Unknown"
  | "Updating"
  | "Creating"
  | "Deleting"
  | "Succeeded"
  | "Failed"
  | "Canceled";
/**
 * Defines values for ClusterType.
 */
export type ClusterType = "ACS" | "Local";
/**
 * Defines values for OrchestratorType.
 */
export type OrchestratorType = "Kubernetes" | "None";
/**
 * Defines values for SystemServiceType.
 */
export type SystemServiceType = "None" | "ScoringFrontEnd" | "BatchFrontEnd";
/**
 * Defines values for AgentVMSizeTypes.
 */
export type AgentVMSizeTypes =
  | "Standard_A0"
  | "Standard_A1"
  | "Standard_A2"
  | "Standard_A3"
  | "Standard_A4"
  | "Standard_A5"
  | "Standard_A6"
  | "Standard_A7"
  | "Standard_A8"
  | "Standard_A9"
  | "Standard_A10"
  | "Standard_A11"
  | "Standard_D1"
  | "Standard_D2"
  | "Standard_D3"
  | "Standard_D4"
  | "Standard_D11"
  | "Standard_D12"
  | "Standard_D13"
  | "Standard_D14"
  | "Standard_D1_v2"
  | "Standard_D2_v2"
  | "Standard_D3_v2"
  | "Standard_D4_v2"
  | "Standard_D5_v2"
  | "Standard_D11_v2"
  | "Standard_D12_v2"
  | "Standard_D13_v2"
  | "Standard_D14_v2"
  | "Standard_G1"
  | "Standard_G2"
  | "Standard_G3"
  | "Standard_G4"
  | "Standard_G5"
  | "Standard_DS1"
  | "Standard_DS2"
  | "Standard_DS3"
  | "Standard_DS4"
  | "Standard_DS11"
  | "Standard_DS12"
  | "Standard_DS13"
  | "Standard_DS14"
  | "Standard_GS1"
  | "Standard_GS2"
  | "Standard_GS3"
  | "Standard_GS4"
  | "Standard_GS5";
/**
 * Defines values for Status.
 */
export type Status = "Enabled" | "Disabled";
/**
 * Defines values for UpdatesAvailable.
 */
export type UpdatesAvailable = "Yes" | "No";

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OperationalizationClustersCreateOrUpdateResponse = OperationalizationCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationalizationCluster;
  };
};

/**
 * Contains response data for the get operation.
 */
export type OperationalizationClustersGetResponse = OperationalizationCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationalizationCluster;
  };
};

/**
 * Contains response data for the update operation.
 */
export type OperationalizationClustersUpdateResponse = OperationalizationCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationalizationCluster;
  };
};

/**
 * Optional parameters.
 */
export interface OperationalizationClustersDeleteOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * If true, deletes all resources associated with this cluster.
   */
  deleteAll?: boolean;
}

/**
 * Contains response data for the delete operation.
 */
export type OperationalizationClustersDeleteResponse = OperationalizationClustersDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: OperationalizationClustersDeleteHeaders;
  };
};

/**
 * Contains response data for the listKeys operation.
 */
export type OperationalizationClustersListKeysResponse = OperationalizationClusterCredentials & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationalizationClusterCredentials;
  };
};

/**
 * Contains response data for the checkSystemServicesUpdatesAvailable operation.
 */
export type OperationalizationClustersCheckSystemServicesUpdatesAvailableResponse = CheckSystemServicesUpdatesAvailableResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CheckSystemServicesUpdatesAvailableResponse;
  };
};

/**
 * Contains response data for the updateSystemServices operation.
 */
export type OperationalizationClustersUpdateSystemServicesResponse = UpdateSystemServicesResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: UpdateSystemServicesResponse;
  };
};

/**
 * Optional parameters.
 */
export interface OperationalizationClustersListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type OperationalizationClustersListByResourceGroupResponse = PaginatedOperationalizationClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedOperationalizationClustersList;
  };
};

/**
 * Optional parameters.
 */
export interface OperationalizationClustersListBySubscriptionIdOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listBySubscriptionId operation.
 */
export type OperationalizationClustersListBySubscriptionIdResponse = PaginatedOperationalizationClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedOperationalizationClustersList;
  };
};

/**
 * Optional parameters.
 */
export interface OperationalizationClustersListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type OperationalizationClustersListByResourceGroupNextResponse = PaginatedOperationalizationClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedOperationalizationClustersList;
  };
};

/**
 * Optional parameters.
 */
export interface OperationalizationClustersListBySubscriptionIdNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Continuation token for pagination.
   */
  skiptoken?: string;
}

/**
 * Contains response data for the listBySubscriptionIdNext operation.
 */
export type OperationalizationClustersListBySubscriptionIdNextResponse = PaginatedOperationalizationClustersList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PaginatedOperationalizationClustersList;
  };
};

/**
 * Contains response data for the listAvailableOperations operation.
 */
export type MachineLearningComputeListAvailableOperationsResponse = AvailableOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AvailableOperations;
  };
};

/**
 * Optional parameters.
 */
export interface MachineLearningComputeManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
