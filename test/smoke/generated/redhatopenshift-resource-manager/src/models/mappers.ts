/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationList: coreHttp.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "Display"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Display: coreHttp.CompositeMapper = {
  serializedName: "Display",
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CloudError: coreHttp.CompositeMapper = {
  serializedName: "CloudError",
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "CloudErrorBody"
        }
      }
    }
  }
};

export const CloudErrorBody: coreHttp.CompositeMapper = {
  serializedName: "CloudErrorBody",
  type: {
    name: "Composite",
    className: "CloudErrorBody",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "CloudErrorBody" } }
        }
      }
    }
  }
};

export const OpenShiftClusterList: coreHttp.CompositeMapper = {
  serializedName: "OpenShiftClusterList",
  type: {
    name: "Composite",
    className: "OpenShiftClusterList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OpenShiftCluster" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreHttp.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenShiftCluster: coreHttp.CompositeMapper = {
  serializedName: "OpenShiftCluster",
  type: {
    name: "Composite",
    className: "OpenShiftCluster",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      clusterProfile: {
        serializedName: "clusterProfile",
        type: {
          name: "Composite",
          className: "ClusterProfile"
        }
      },
      consoleProfile: {
        serializedName: "consoleProfile",
        type: {
          name: "Composite",
          className: "ConsoleProfile"
        }
      },
      servicePrincipalProfile: {
        serializedName: "servicePrincipalProfile",
        type: {
          name: "Composite",
          className: "ServicePrincipalProfile"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      masterProfile: {
        serializedName: "masterProfile",
        type: {
          name: "Composite",
          className: "MasterProfile"
        }
      },
      workerProfiles: {
        serializedName: "properties.workerProfiles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "WorkerProfile" } }
        }
      },
      apiserverProfile: {
        serializedName: "apiserverProfile",
        type: {
          name: "Composite",
          className: "APIServerProfile"
        }
      },
      ingressProfiles: {
        serializedName: "properties.ingressProfiles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "IngressProfile" } }
        }
      }
    }
  }
};

export const ClusterProfile: coreHttp.CompositeMapper = {
  serializedName: "ClusterProfile",
  type: {
    name: "Composite",
    className: "ClusterProfile",
    modelProperties: {
      pullSecret: {
        serializedName: "pullSecret",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      resourceGroupId: {
        serializedName: "resourceGroupId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConsoleProfile: coreHttp.CompositeMapper = {
  serializedName: "ConsoleProfile",
  type: {
    name: "Composite",
    className: "ConsoleProfile",
    modelProperties: {
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalProfile: coreHttp.CompositeMapper = {
  serializedName: "ServicePrincipalProfile",
  type: {
    name: "Composite",
    className: "ServicePrincipalProfile",
    modelProperties: {
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NetworkProfile: coreHttp.CompositeMapper = {
  serializedName: "NetworkProfile",
  type: {
    name: "Composite",
    className: "NetworkProfile",
    modelProperties: {
      podCidr: {
        serializedName: "podCidr",
        type: {
          name: "String"
        }
      },
      serviceCidr: {
        serializedName: "serviceCidr",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MasterProfile: coreHttp.CompositeMapper = {
  serializedName: "MasterProfile",
  type: {
    name: "Composite",
    className: "MasterProfile",
    modelProperties: {
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkerProfile: coreHttp.CompositeMapper = {
  serializedName: "WorkerProfile",
  type: {
    name: "Composite",
    className: "WorkerProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      vmSize: {
        serializedName: "vmSize",
        type: {
          name: "String"
        }
      },
      diskSizeGB: {
        serializedName: "diskSizeGB",
        type: {
          name: "Number"
        }
      },
      subnetId: {
        serializedName: "subnetId",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const APIServerProfile: coreHttp.CompositeMapper = {
  serializedName: "APIServerProfile",
  type: {
    name: "Composite",
    className: "APIServerProfile",
    modelProperties: {
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      },
      ip: {
        serializedName: "ip",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IngressProfile: coreHttp.CompositeMapper = {
  serializedName: "IngressProfile",
  type: {
    name: "Composite",
    className: "IngressProfile",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      },
      ip: {
        serializedName: "ip",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OpenShiftClusterUpdate: coreHttp.CompositeMapper = {
  serializedName: "OpenShiftClusterUpdate",
  type: {
    name: "Composite",
    className: "OpenShiftClusterUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      clusterProfile: {
        serializedName: "clusterProfile",
        type: {
          name: "Composite",
          className: "ClusterProfile"
        }
      },
      consoleProfile: {
        serializedName: "consoleProfile",
        type: {
          name: "Composite",
          className: "ConsoleProfile"
        }
      },
      servicePrincipalProfile: {
        serializedName: "servicePrincipalProfile",
        type: {
          name: "Composite",
          className: "ServicePrincipalProfile"
        }
      },
      networkProfile: {
        serializedName: "networkProfile",
        type: {
          name: "Composite",
          className: "NetworkProfile"
        }
      },
      masterProfile: {
        serializedName: "masterProfile",
        type: {
          name: "Composite",
          className: "MasterProfile"
        }
      },
      workerProfiles: {
        serializedName: "properties.workerProfiles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "WorkerProfile" } }
        }
      },
      apiserverProfile: {
        serializedName: "apiserverProfile",
        type: {
          name: "Composite",
          className: "APIServerProfile"
        }
      },
      ingressProfiles: {
        serializedName: "properties.ingressProfiles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "IngressProfile" } }
        }
      }
    }
  }
};

export const OpenShiftClusterCredentials: coreHttp.CompositeMapper = {
  serializedName: "OpenShiftClusterCredentials",
  type: {
    name: "Composite",
    className: "OpenShiftClusterCredentials",
    modelProperties: {
      kubeadminUsername: {
        serializedName: "kubeadminUsername",
        type: {
          name: "String"
        }
      },
      kubeadminPassword: {
        serializedName: "kubeadminPassword",
        type: {
          name: "String"
        }
      }
    }
  }
};
