/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * OperationList represents an RP operation list.
 */
export interface OperationList {
  /**
   * List of operations supported by the resource provider.
   */
  value?: Operation[];
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

/**
 * Operation represents an RP operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * The object that describes the operation.
   */
  display?: Display;
  /**
   * Sources of requests to this operation.  Comma separated list with valid values user or system, e.g. "user,system".
   */
  origin?: string;
}

/**
 * Display represents the display details of an operation.
 */
export interface Display {
  /**
   * Friendly name of the resource provider.
   */
  provider?: string;
  /**
   * Resource type on which the operation is performed.
   */
  resource?: string;
  /**
   * Operation type: read, write, delete, listKeys/action, etc.
   */
  operation?: string;
  /**
   * Friendly name of the operation.
   */
  description?: string;
}

/**
 * CloudError represents a cloud error.
 */
export interface CloudError {
  /**
   * An error response from the service.
   */
  error?: CloudErrorBody;
}

/**
 * CloudErrorBody represents the body of a cloud error.
 */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: CloudErrorBody[];
}

/**
 * OpenShiftClusterList represents a list of OpenShift clusters.
 */
export interface OpenShiftClusterList {
  /**
   * The list of OpenShift clusters.
   */
  value?: OpenShiftCluster[];
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
}

export interface Resource {
  /**
   * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   */
  readonly id?: string;
  /**
   * The name of the resource
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export type TrackedResource = Resource & {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
};

/**
 * OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
 */
export type OpenShiftCluster = TrackedResource & {
  /**
   * The cluster provisioning state (immutable).
   */
  provisioningState?: ProvisioningState;
  /**
   * The cluster profile.
   */
  clusterProfile?: ClusterProfile;
  /**
   * The console profile.
   */
  consoleProfile?: ConsoleProfile;
  /**
   * The cluster service principal profile.
   */
  servicePrincipalProfile?: ServicePrincipalProfile;
  /**
   * The cluster network profile.
   */
  networkProfile?: NetworkProfile;
  /**
   * The cluster master profile.
   */
  masterProfile?: MasterProfile;
  /**
   * The cluster worker profiles.
   */
  workerProfiles?: WorkerProfile[];
  /**
   * The cluster API server profile.
   */
  apiserverProfile?: APIServerProfile;
  /**
   * The cluster ingress profiles.
   */
  ingressProfiles?: IngressProfile[];
};

/**
 * ClusterProfile represents a cluster profile.
 */
export interface ClusterProfile {
  /**
   * The pull secret for the cluster (immutable).
   */
  pullSecret?: string;
  /**
   * The domain for the cluster (immutable).
   */
  domain?: string;
  /**
   * The version of the cluster (immutable).
   */
  version?: string;
  /**
   * The ID of the cluster resource group (immutable).
   */
  resourceGroupId?: string;
}

/**
 * ConsoleProfile represents a console profile.
 */
export interface ConsoleProfile {
  /**
   * The URL to access the cluster console (immutable).
   */
  url?: string;
}

/**
 * ServicePrincipalProfile represents a service principal profile.
 */
export interface ServicePrincipalProfile {
  /**
   * The client ID used for the cluster (immutable).
   */
  clientId?: string;
  /**
   * The client secret used for the cluster (immutable).
   */
  clientSecret?: string;
}

/**
 * NetworkProfile represents a network profile.
 */
export interface NetworkProfile {
  /**
   * The CIDR used for OpenShift/Kubernetes Pods (immutable).
   */
  podCidr?: string;
  /**
   * The CIDR used for OpenShift/Kubernetes Services (immutable).
   */
  serviceCidr?: string;
}

/**
 * MasterProfile represents a master profile.
 */
export interface MasterProfile {
  /**
   * The size of the master VMs (immutable).
   */
  vmSize?: VMSize;
  /**
   * The Azure resource ID of the master subnet (immutable).
   */
  subnetId?: string;
}

/**
 * WorkerProfile represents a worker profile.
 */
export interface WorkerProfile {
  /**
   * The worker profile name.  Must be "worker" (immutable).
   */
  name?: string;
  /**
   * The size of the worker VMs (immutable).
   */
  vmSize?: VMSize;
  /**
   * The disk size of the worker VMs.  Must be 128 or greater (immutable).
   */
  diskSizeGB?: number;
  /**
   * The Azure resource ID of the worker subnet (immutable).
   */
  subnetId?: string;
  /**
   * The number of worker VMs.  Must be between 3 and 20 (immutable).
   */
  count?: number;
}

/**
 * APIServerProfile represents an API server profile.
 */
export interface APIServerProfile {
  /**
   * API server visibility (immutable).
   */
  visibility?: Visibility;
  /**
   * The URL to access the cluster API server (immutable).
   */
  url?: string;
  /**
   * The IP of the cluster API server (immutable).
   */
  ip?: string;
}

/**
 * IngressProfile represents an ingress profile.
 */
export interface IngressProfile {
  /**
   * The ingress profile name.  Must be "default" (immutable).
   */
  name?: string;
  /**
   * Ingress visibility (immutable).
   */
  visibility?: Visibility;
  /**
   * The IP of the ingress (immutable).
   */
  ip?: string;
}

/**
 * OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
 */
export interface OpenShiftClusterUpdate {
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The cluster provisioning state (immutable).
   */
  provisioningState?: ProvisioningState;
  /**
   * The cluster profile.
   */
  clusterProfile?: ClusterProfile;
  /**
   * The console profile.
   */
  consoleProfile?: ConsoleProfile;
  /**
   * The cluster service principal profile.
   */
  servicePrincipalProfile?: ServicePrincipalProfile;
  /**
   * The cluster network profile.
   */
  networkProfile?: NetworkProfile;
  /**
   * The cluster master profile.
   */
  masterProfile?: MasterProfile;
  /**
   * The cluster worker profiles.
   */
  workerProfiles?: WorkerProfile[];
  /**
   * The cluster API server profile.
   */
  apiserverProfile?: APIServerProfile;
  /**
   * The cluster ingress profiles.
   */
  ingressProfiles?: IngressProfile[];
}

/**
 * OpenShiftClusterCredentials represents an OpenShift cluster's credentials
 */
export interface OpenShiftClusterCredentials {
  /**
   * The username for the kubeadmin user
   */
  kubeadminUsername?: string;
  /**
   * The password for the kubeadmin user
   */
  kubeadminPassword?: string;
}

/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "AdminUpdating"
  | "Creating"
  | "Deleting"
  | "Failed"
  | "Succeeded"
  | "Updating";
/**
 * Defines values for VMSize.
 */
export type VMSize = "Standard_D2s_v3" | "Standard_D4s_v3" | "Standard_D8s_v3";
/**
 * Defines values for Visibility.
 */
export type Visibility = "Private" | "Public";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type OpenShiftClustersListResponse = OpenShiftClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftClusterList;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type OpenShiftClustersListByResourceGroupResponse = OpenShiftClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftClusterList;
  };
};

/**
 * Contains response data for the get operation.
 */
export type OpenShiftClustersGetResponse = OpenShiftCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftCluster;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type OpenShiftClustersCreateOrUpdateResponse = OpenShiftCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftCluster;
  };
};

/**
 * Contains response data for the update operation.
 */
export type OpenShiftClustersUpdateResponse = OpenShiftCluster & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftCluster;
  };
};

/**
 * Contains response data for the listCredentials operation.
 */
export type OpenShiftClustersListCredentialsResponse = OpenShiftClusterCredentials & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftClusterCredentials;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OpenShiftClustersListNextResponse = OpenShiftClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftClusterList;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type OpenShiftClustersListByResourceGroupNextResponse = OpenShiftClusterList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OpenShiftClusterList;
  };
};

/**
 * Optional parameters.
 */
export interface AzureRedHatOpenShiftClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
