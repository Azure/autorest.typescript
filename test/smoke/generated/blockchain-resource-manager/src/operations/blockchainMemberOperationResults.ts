/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { BlockchainManagementClient } from "../blockchainManagementClient";
import { BlockchainMemberOperationResultsGetResponse } from "../models";

/**
 * Class representing a BlockchainMemberOperationResults.
 */
export class BlockchainMemberOperationResults {
  private readonly client: BlockchainManagementClient;

  /**
   * Initialize a new instance of the class BlockchainMemberOperationResults class.
   * @param client Reference to the service client
   */
  constructor(client: BlockchainManagementClient) {
    this.client = client;
  }

  /**
   * Get Async operation result.
   * @param locationName Location name.
   * @param operationId Operation Id.
   * @param options The options parameters.
   */
  get(
    locationName: string,
    operationId: string,
    options?: coreHttp.OperationOptions
  ): Promise<BlockchainMemberOperationResultsGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { locationName, operationId, options: operationOptions },
      getOperationSpec
    ) as Promise<BlockchainMemberOperationResultsGetResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/providers/Microsoft.Blockchain/locations/{locationName}/blockchainMemberOperationResults/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.OperationResult
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.locationName,
    Parameters.operationId
  ],
  serializer
};
