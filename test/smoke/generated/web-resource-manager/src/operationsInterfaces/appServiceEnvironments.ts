/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AppServiceEnvironmentResource,
  StampCapacity,
  Site,
  VirtualNetworkProfile,
  InboundEnvironmentEndpoint,
  WorkerPoolResource,
  ResourceMetricDefinition,
  SkuInfo,
  Usage,
  OutboundEnvironmentEndpoint,
  AppServicePlan,
  AppServiceEnvironmentsListWebAppsNextOptionalParams,
  AppServiceEnvironmentsListWebAppsOptionalParams,
  CsmUsageQuota,
  AppServiceEnvironmentsListUsagesNextOptionalParams,
  AppServiceEnvironmentsListUsagesOptionalParams,
  AppServiceEnvironmentsGetResponse,
  AppServiceEnvironmentsCreateOrUpdateResponse,
  AppServiceEnvironmentsDeleteOptionalParams,
  AppServiceEnvironmentPatchResource,
  AppServiceEnvironmentsUpdateResponse,
  AppServiceEnvironmentsGetVipInfoResponse,
  AppServiceEnvironmentsListDiagnosticsResponse,
  AppServiceEnvironmentsGetDiagnosticsItemResponse,
  AppServiceEnvironmentsGetMultiRolePoolResponse,
  AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse,
  AppServiceEnvironmentsUpdateMultiRolePoolResponse,
  AppServiceEnvironmentsListOperationsResponse,
  AppServiceEnvironmentsGetWorkerPoolResponse,
  AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse,
  AppServiceEnvironmentsUpdateWorkerPoolResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AppServiceEnvironments. */
export interface AppServiceEnvironments {
  /**
   * Description for Get all App Service Environments for a subscription.
   * @param options The options parameters.
   */
  list(
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServiceEnvironmentResource>;
  /**
   * Description for Get all App Service Environments in a resource group.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServiceEnvironmentResource>;
  /**
   * Description for Get the used, available, and total worker capacity an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listCapacities(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<StampCapacity>;
  /**
   * Description for Move an App Service Environment to a different VNET.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param vnetInfo Details for the new virtual network.
   * @param options The options parameters.
   */
  listChangeVnet(
    resourceGroupName: string,
    name: string,
    vnetInfo: VirtualNetworkProfile,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<Site>;
  /**
   * Description for Get the network endpoints of all inbound dependencies of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listInboundNetworkDependenciesEndpoints(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<InboundEnvironmentEndpoint>;
  /**
   * Description for Get all multi-role pools.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listMultiRolePools(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<WorkerPoolResource>;
  /**
   * Description for Get metric definitions for a specific instance of a multi-role pool of an App
   * Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param instance Name of the instance in the multi-role pool.
   * @param options The options parameters.
   */
  listMultiRolePoolInstanceMetricDefinitions(
    resourceGroupName: string,
    name: string,
    instance: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<ResourceMetricDefinition>;
  /**
   * Description for Get metric definitions for a multi-role pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listMultiRoleMetricDefinitions(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<ResourceMetricDefinition>;
  /**
   * Description for Get available SKUs for scaling a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listMultiRolePoolSkus(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<SkuInfo>;
  /**
   * Description for Get usage metrics for a multi-role pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listMultiRoleUsages(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<Usage>;
  /**
   * Description for Get the network endpoints of all outbound dependencies of an App Service
   * Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listOutboundNetworkDependenciesEndpoints(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<OutboundEnvironmentEndpoint>;
  /**
   * Description for Resume an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listResume(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<Site>;
  /**
   * Description for Get all App Service plans in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listAppServicePlans(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServicePlan>;
  /**
   * Description for Get all apps in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listWebApps(
    resourceGroupName: string,
    name: string,
    options?: AppServiceEnvironmentsListWebAppsOptionalParams
  ): PagedAsyncIterableIterator<Site>;
  /**
   * Description for Suspend an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listSuspend(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<Site>;
  /**
   * Description for Get global usage metrics of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listUsages(
    resourceGroupName: string,
    name: string,
    options?: AppServiceEnvironmentsListUsagesOptionalParams
  ): PagedAsyncIterableIterator<CsmUsageQuota>;
  /**
   * Description for Get all worker pools of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listWorkerPools(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<WorkerPoolResource>;
  /**
   * Description for Get metric definitions for a specific instance of a worker pool of an App Service
   * Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param instance Name of the instance in the worker pool.
   * @param options The options parameters.
   */
  listWorkerPoolInstanceMetricDefinitions(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    instance: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<ResourceMetricDefinition>;
  /**
   * Description for Get metric definitions for a worker pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The options parameters.
   */
  listWebWorkerMetricDefinitions(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<ResourceMetricDefinition>;
  /**
   * Description for Get available SKUs for scaling a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The options parameters.
   */
  listWorkerPoolSkus(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<SkuInfo>;
  /**
   * Description for Get usage metrics for a worker pool of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The options parameters.
   */
  listWebWorkerUsages(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<Usage>;
  /**
   * Description for Get the properties of an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsGetResponse>;
  /**
   * Description for Create or update an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    name: string,
    hostingEnvironmentEnvelope: AppServiceEnvironmentResource,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<AppServiceEnvironmentsCreateOrUpdateResponse>,
      AppServiceEnvironmentsCreateOrUpdateResponse
    >
  >;
  /**
   * Description for Delete an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    name: string,
    options?: AppServiceEnvironmentsDeleteOptionalParams
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Description for Create or update an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param hostingEnvironmentEnvelope Configuration details of the App Service Environment.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    name: string,
    hostingEnvironmentEnvelope: AppServiceEnvironmentPatchResource,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsUpdateResponse>;
  /**
   * Description for Get IP addresses assigned to an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  getVipInfo(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsGetVipInfoResponse>;
  /**
   * Description for Get diagnostic information for an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listDiagnostics(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsListDiagnosticsResponse>;
  /**
   * Description for Get a diagnostics item for an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param diagnosticsName Name of the diagnostics item.
   * @param options The options parameters.
   */
  getDiagnosticsItem(
    resourceGroupName: string,
    name: string,
    diagnosticsName: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsGetDiagnosticsItemResponse>;
  /**
   * Description for Get properties of a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  getMultiRolePool(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsGetMultiRolePoolResponse>;
  /**
   * Description for Create or update a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param options The options parameters.
   */
  createOrUpdateMultiRolePool(
    resourceGroupName: string,
    name: string,
    multiRolePoolEnvelope: WorkerPoolResource,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<
        AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse
      >,
      AppServiceEnvironmentsCreateOrUpdateMultiRolePoolResponse
    >
  >;
  /**
   * Description for Create or update a multi-role pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param multiRolePoolEnvelope Properties of the multi-role pool.
   * @param options The options parameters.
   */
  updateMultiRolePool(
    resourceGroupName: string,
    name: string,
    multiRolePoolEnvelope: WorkerPoolResource,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsUpdateMultiRolePoolResponse>;
  /**
   * Description for List all currently running operations on the App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  listOperations(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsListOperationsResponse>;
  /**
   * Description for Reboot all machines in an App Service Environment.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param options The options parameters.
   */
  reboot(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Get properties of a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param options The options parameters.
   */
  getWorkerPool(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsGetWorkerPoolResponse>;
  /**
   * Description for Create or update a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param options The options parameters.
   */
  createOrUpdateWorkerPool(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    workerPoolEnvelope: WorkerPoolResource,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<
        AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse
      >,
      AppServiceEnvironmentsCreateOrUpdateWorkerPoolResponse
    >
  >;
  /**
   * Description for Create or update a worker pool.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the App Service Environment.
   * @param workerPoolName Name of the worker pool.
   * @param workerPoolEnvelope Properties of the worker pool.
   * @param options The options parameters.
   */
  updateWorkerPool(
    resourceGroupName: string,
    name: string,
    workerPoolName: string,
    workerPoolEnvelope: WorkerPoolResource,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceEnvironmentsUpdateWorkerPoolResponse>;
}
