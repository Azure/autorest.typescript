/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import "@azure/core-paging";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  AppServiceCertificateOrder,
  AppServiceCertificateResource,
  AppServiceCertificateOrdersGetResponse,
  AppServiceCertificateOrdersCreateOrUpdateResponse,
  AppServiceCertificateOrderPatchResource,
  AppServiceCertificateOrdersUpdateResponse,
  AppServiceCertificateOrdersGetCertificateResponse,
  AppServiceCertificateOrdersCreateOrUpdateCertificateResponse,
  AppServiceCertificatePatchResource,
  AppServiceCertificateOrdersUpdateCertificateResponse,
  ReissueCertificateOrderRequest,
  RenewCertificateOrderRequest,
  NameIdentifier,
  SiteSealRequest,
  AppServiceCertificateOrdersRetrieveSiteSealResponse,
  AppServiceCertificateOrdersRetrieveCertificateActionsResponse,
  AppServiceCertificateOrdersRetrieveCertificateEmailHistoryResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a AppServiceCertificateOrders. */
export interface AppServiceCertificateOrders {
  /**
   * Description for List all certificate orders in a subscription.
   * @param options The options parameters.
   */
  list(
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServiceCertificateOrder>;
  /**
   * Description for Get certificate orders in a resource group.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param options The options parameters.
   */
  listByResourceGroup(
    resourceGroupName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServiceCertificateOrder>;
  /**
   * Description for List all certificates associated with a certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param options The options parameters.
   */
  listCertificates(
    resourceGroupName: string,
    certificateOrderName: string,
    options?: coreHttp.OperationOptions
  ): PagedAsyncIterableIterator<AppServiceCertificateResource>;
  /**
   * Description for Validate information for a certificate order.
   * @param appServiceCertificateOrder Information for a certificate order.
   * @param options The options parameters.
   */
  validatePurchaseInformation(
    appServiceCertificateOrder: AppServiceCertificateOrder,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Get a certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order..
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    certificateOrderName: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersGetResponse>;
  /**
   * Description for Create or update a certificate purchase order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param certificateDistinguishedName Distinguished name to use for the certificate order.
   * @param options The options parameters.
   */
  createOrUpdate(
    resourceGroupName: string,
    certificateOrderName: string,
    certificateDistinguishedName: AppServiceCertificateOrder,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<AppServiceCertificateOrdersCreateOrUpdateResponse>,
      AppServiceCertificateOrdersCreateOrUpdateResponse
    >
  >;
  /**
   * Description for Delete an existing certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    certificateOrderName: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Create or update a certificate purchase order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param certificateDistinguishedName Distinguished name to use for the certificate order.
   * @param options The options parameters.
   */
  update(
    resourceGroupName: string,
    certificateOrderName: string,
    certificateDistinguishedName: AppServiceCertificateOrderPatchResource,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersUpdateResponse>;
  /**
   * Description for Get the certificate associated with a certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param name Name of the certificate.
   * @param options The options parameters.
   */
  getCertificate(
    resourceGroupName: string,
    certificateOrderName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersGetCertificateResponse>;
  /**
   * Description for Creates or updates a certificate and associates with key vault secret.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param name Name of the certificate.
   * @param keyVaultCertificate Key vault certificate resource Id.
   * @param options The options parameters.
   */
  createOrUpdateCertificate(
    resourceGroupName: string,
    certificateOrderName: string,
    name: string,
    keyVaultCertificate: AppServiceCertificateResource,
    options?: coreHttp.OperationOptions
  ): Promise<
    PollerLike<
      PollOperationState<
        AppServiceCertificateOrdersCreateOrUpdateCertificateResponse
      >,
      AppServiceCertificateOrdersCreateOrUpdateCertificateResponse
    >
  >;
  /**
   * Description for Delete the certificate associated with a certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param name Name of the certificate.
   * @param options The options parameters.
   */
  deleteCertificate(
    resourceGroupName: string,
    certificateOrderName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Creates or updates a certificate and associates with key vault secret.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param name Name of the certificate.
   * @param keyVaultCertificate Key vault certificate resource Id.
   * @param options The options parameters.
   */
  updateCertificate(
    resourceGroupName: string,
    certificateOrderName: string,
    name: string,
    keyVaultCertificate: AppServiceCertificatePatchResource,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersUpdateCertificateResponse>;
  /**
   * Description for Reissue an existing certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param reissueCertificateOrderRequest Parameters for the reissue.
   * @param options The options parameters.
   */
  reissue(
    resourceGroupName: string,
    certificateOrderName: string,
    reissueCertificateOrderRequest: ReissueCertificateOrderRequest,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Renew an existing certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param renewCertificateOrderRequest Renew parameters
   * @param options The options parameters.
   */
  renew(
    resourceGroupName: string,
    certificateOrderName: string,
    renewCertificateOrderRequest: RenewCertificateOrderRequest,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Resend certificate email.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param options The options parameters.
   */
  resendEmail(
    resourceGroupName: string,
    certificateOrderName: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Verify domain ownership for this certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param nameIdentifier Email address
   * @param options The options parameters.
   */
  resendRequestEmails(
    resourceGroupName: string,
    certificateOrderName: string,
    nameIdentifier: NameIdentifier,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Verify domain ownership for this certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param siteSealRequest Site seal request.
   * @param options The options parameters.
   */
  retrieveSiteSeal(
    resourceGroupName: string,
    certificateOrderName: string,
    siteSealRequest: SiteSealRequest,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersRetrieveSiteSealResponse>;
  /**
   * Description for Verify domain ownership for this certificate order.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param certificateOrderName Name of the certificate order.
   * @param options The options parameters.
   */
  verifyDomainOwnership(
    resourceGroupName: string,
    certificateOrderName: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse>;
  /**
   * Description for Retrieve the list of certificate actions.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the certificate order.
   * @param options The options parameters.
   */
  retrieveCertificateActions(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<AppServiceCertificateOrdersRetrieveCertificateActionsResponse>;
  /**
   * Description for Retrieve email history.
   * @param resourceGroupName Name of the resource group to which the resource belongs.
   * @param name Name of the certificate order.
   * @param options The options parameters.
   */
  retrieveCertificateEmailHistory(
    resourceGroupName: string,
    name: string,
    options?: coreHttp.OperationOptions
  ): Promise<
    AppServiceCertificateOrdersRetrieveCertificateEmailHistoryResponse
  >;
}
