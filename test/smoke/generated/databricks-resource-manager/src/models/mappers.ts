/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TrackedResource: coreHttp.CompositeMapper = {
  serializedName: "TrackedResource",
  type: {
    name: "Composite",
    className: "TrackedResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Workspace: coreHttp.CompositeMapper = {
  serializedName: "Workspace",
  type: {
    name: "Composite",
    className: "Workspace",
    modelProperties: {
      ...TrackedResource.type.modelProperties,
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "Sku"
        }
      },
      managedResourceGroupId: {
        serializedName: "properties.managedResourceGroupId",
        required: true,
        type: {
          name: "String"
        }
      },
      parameters: {
        serializedName: "parameters",
        type: {
          name: "Composite",
          className: "WorkspaceCustomParameters"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      uiDefinitionUri: {
        serializedName: "properties.uiDefinitionUri",
        type: {
          name: "String"
        }
      },
      authorizations: {
        serializedName: "properties.authorizations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WorkspaceProviderAuthorization"
            }
          }
        }
      }
    }
  }
};

export const WorkspaceCustomParameters: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceCustomParameters",
  type: {
    name: "Composite",
    className: "WorkspaceCustomParameters",
    modelProperties: {
      amlWorkspaceId: {
        serializedName: "amlWorkspaceId",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customVirtualNetworkId: {
        serializedName: "customVirtualNetworkId",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customPublicSubnetName: {
        serializedName: "customPublicSubnetName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      customPrivateSubnetName: {
        serializedName: "customPrivateSubnetName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      enableNoPublicIp: {
        serializedName: "enableNoPublicIp",
        type: {
          name: "Composite",
          className: "WorkspaceCustomBooleanParameter"
        }
      },
      loadBalancerBackendPoolName: {
        serializedName: "loadBalancerBackendPoolName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      loadBalancerId: {
        serializedName: "loadBalancerId",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      relayNamespaceName: {
        serializedName: "relayNamespaceName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      storageAccountName: {
        serializedName: "storageAccountName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      storageAccountSkuName: {
        serializedName: "storageAccountSkuName",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      },
      resourceTags: {
        serializedName: "resourceTags",
        type: {
          name: "Composite",
          className: "WorkspaceCustomObjectParameter"
        }
      },
      vnetAddressPrefix: {
        serializedName: "vnetAddressPrefix",
        type: {
          name: "Composite",
          className: "WorkspaceCustomStringParameter"
        }
      }
    }
  }
};

export const WorkspaceCustomStringParameter: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceCustomStringParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomStringParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceCustomBooleanParameter: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceCustomBooleanParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomBooleanParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const WorkspaceCustomObjectParameter: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceCustomObjectParameter",
  type: {
    name: "Composite",
    className: "WorkspaceCustomObjectParameter",
    modelProperties: {
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "any"
        }
      }
    }
  }
};

export const WorkspaceProviderAuthorization: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceProviderAuthorization",
  type: {
    name: "Composite",
    className: "WorkspaceProviderAuthorization",
    modelProperties: {
      principalId: {
        serializedName: "principalId",
        required: true,
        type: {
          name: "Uuid"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        required: true,
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const Sku: coreHttp.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      },
      tier: {
        serializedName: "tier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorInfo"
        }
      }
    }
  }
};

export const ErrorInfo: coreHttp.CompositeMapper = {
  serializedName: "ErrorInfo",
  type: {
    name: "Composite",
    className: "ErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ErrorDetail" } }
        }
      },
      innererror: {
        serializedName: "innererror",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetail: coreHttp.CompositeMapper = {
  serializedName: "ErrorDetail",
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      code: {
        serializedName: "code",
        required: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        required: true,
        type: {
          name: "String"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WorkspaceUpdate: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceUpdate",
  type: {
    name: "Composite",
    className: "WorkspaceUpdate",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      }
    }
  }
};

export const WorkspaceListResult: coreHttp.CompositeMapper = {
  serializedName: "WorkspaceListResult",
  type: {
    name: "Composite",
    className: "WorkspaceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Workspace" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationListResult: coreHttp.CompositeMapper = {
  serializedName: "OperationListResult",
  type: {
    name: "Composite",
    className: "OperationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      }
    }
  }
};

export const OperationDisplay: coreHttp.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      }
    }
  }
};
