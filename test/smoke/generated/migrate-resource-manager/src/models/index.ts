/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Parameters for a check name availability request.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The name to check for availability
   */
  name: string;
  /**
   * The resource type. Must be set to Microsoft.Migrate/projects
   */
  type: "Microsoft.Migrate/projects";
}

/**
 * The CheckNameAvailability operation response.
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that a project name could not be used. The Reason element is only returned if NameAvailable is false.
   */
  readonly reason?: NameAvailabilityReason;
  /**
   * Gets an error message explaining the Reason value in more detail.
   */
  readonly message?: string;
}

/**
 * An error response from the Azure Migrate service.
 */
export interface CloudError {
  /**
   * An error response from the Azure Migrate service.
   */
  error?: CloudErrorBody;
}

/**
 * An error response from the Azure Migrate service.
 */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: CloudErrorBody[];
}

/**
 * List of assessment options.
 */
export interface AssessmentOptionsResultList {
  /**
   * Dictionary of VM families grouped by vm family name describing the targeted azure locations of VM family and the category of the family.
   */
  readonly vmFamilies?: VmFamily[];
  /**
   * List of supported VM Families.
   */
  readonly reservedInstanceVmFamilies?: string[];
}

/**
 * VM family name, the list of targeted azure locations and the category of the family.
 */
export interface VmFamily {
  /**
   * Name of the VM family.
   */
  readonly familyName?: string;
  /**
   * List of Azure regions.
   */
  readonly targetLocations?: string[];
  /**
   * Category of the VM family.
   */
  readonly category?: string[];
}

/**
 * List of projects.
 */
export interface ProjectResultList {
  /**
   * List of projects.
   */
  value?: Project[];
}

/**
 * Azure Migrate Project.
 */
export interface Project {
  /**
   * Path reference to this project /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}
   */
  readonly id?: string;
  /**
   * Name of the project.
   */
  readonly name?: string;
  /**
   * Type of the object = [Microsoft.Migrate/projects].
   */
  readonly type?: string;
  /**
   * For optimistic concurrency control.
   */
  eTag?: string;
  /**
   * Azure location in which project is created.
   */
  location?: string;
  /**
   * Tags provided by Azure Tagging service.
   */
  tags?: any;
  /**
   * Time when this project was created. Date-Time represented in ISO-8601 format.
   */
  readonly createdTimestamp?: Date;
  /**
   * Time when this project was last updated. Date-Time represented in ISO-8601 format.
   */
  readonly updatedTimestamp?: Date;
  /**
   * Reports whether project is under discovery.
   */
  readonly discoveryStatus?: DiscoveryStatus;
  /**
   * ARM ID of the Service Map workspace created by user.
   */
  customerWorkspaceId?: string;
  /**
   * Location of the Service Map workspace created by user.
   */
  customerWorkspaceLocation?: string;
  /**
   * Time when this project was created. Date-Time represented in ISO-8601 format. This value will be null until discovery is complete.
   */
  readonly lastDiscoveryTimestamp?: Date;
  /**
   * Session id of the last discovery.
   */
  readonly lastDiscoverySessionId?: string;
  /**
   * Number of groups created in the project.
   */
  readonly numberOfGroups?: number;
  /**
   * Number of machines in the project.
   */
  readonly numberOfMachines?: number;
  /**
   * Number of assessments created in the project.
   */
  readonly numberOfAssessments?: number;
  /**
   * Time when last assessment was created. Date-Time represented in ISO-8601 format. This value will be null until assessment is created.
   */
  readonly lastAssessmentTimestamp?: Date;
  /**
   * Provisioning state of the project.
   */
  provisioningState?: ProvisioningState;
}

/**
 * ID and Key for Migration Project.
 */
export interface ProjectKey {
  /**
   * ID of Migration Project.
   */
  readonly workspaceId?: string;
  /**
   * Key of Migration Project.
   */
  readonly workspaceKey?: string;
}

/**
 * List of machines.
 */
export interface MachineResultList {
  /**
   * List of machines.
   */
  value?: Machine[];
}

/**
 * A machine in a migration project.
 */
export interface Machine {
  /**
   * Path reference to this machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/machines/{machineName}
   */
  readonly id?: string;
  /**
   * Name of the machine. It is a GUID which is unique identifier of machine in private data center. For user-readable name, we have a displayName property on this machine.
   */
  readonly name?: string;
  /**
   * For optimistic concurrency control.
   */
  eTag?: string;
  /**
   * Type of the object = [Microsoft.Migrate/projects/machines].
   */
  readonly type?: string;
  /**
   * Boot type of the machine.
   */
  readonly bootType?: MachineBootType;
  /**
   * Container defined in the management solution that this machine is part of in the datacenter.
   */
  readonly datacenterContainer?: string;
  /**
   * Name of the server hosting the datacenter management solution.
   */
  readonly datacenterManagementServer?: string;
  /**
   * ID of the machine as tracked by the datacenter management solution.
   */
  readonly datacenterMachineId?: string;
  /**
   * ID of the server hosting the datacenter management solution.
   */
  readonly datacenterManagementServerId?: string;
  /**
   * Description of the machine
   */
  readonly description?: string;
  /**
   * User readable name of the machine as defined by the user in their private datacenter.
   */
  readonly displayName?: string;
  /**
   * Memory in Megabytes.
   */
  readonly megabytesOfMemory?: number;
  /**
   * Processor count.
   */
  readonly numberOfCores?: number;
  /**
   * Operating System of the machine.
   */
  readonly operatingSystem?: string;
  /**
   * List of references to the groups that the machine is member of.
   */
  readonly groups?: string[];
  /**
   * Time when this machine was created. Date-Time represented in ISO-8601 format.
   */
  readonly createdTimestamp?: Date;
  /**
   * Time when this machine was last updated. Date-Time represented in ISO-8601 format.
   */
  readonly updatedTimestamp?: Date;
  /**
   * Time when this machine was discovered by Azure Migrate agent. Date-Time represented in ISO-8601 format.
   */
  readonly discoveredTimestamp?: Date;
  /**
   * Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object
   */
  readonly disks?: { [propertyName: string]: Disk };
  /**
   * Dictionary of network adapters attached to the machine. Key is ID of network adapter. Value is a network adapter object
   */
  readonly networkAdapters?: { [propertyName: string]: NetworkAdapter };
}

/**
 * A disk discovered on a machine.
 */
export interface Disk {
  /**
   * Gigabytes of storage provisioned for this disk.
   */
  readonly gigabytesAllocated?: number;
  /**
   * Gigabytes of storage consumed by this disk.
   */
  readonly gigabytesConsumed?: number;
}

/**
 * A network adapter discovered on a machine.
 */
export interface NetworkAdapter {
  /**
   * MAC Address of the network adapter.
   */
  readonly macAddress?: string;
  /**
   * List of IP Addresses on the network adapter.
   */
  readonly ipAddresses?: string[];
}

/**
 * List of groups.
 */
export interface GroupResultList {
  /**
   * List of groups.
   */
  value?: Group[];
}

/**
 * A group created in a Migration project.
 */
export interface Group {
  /**
   * Path reference to this group. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/groups/{groupName}
   */
  readonly id?: string;
  /**
   * Name of the group.
   */
  readonly name?: string;
  /**
   * For optimistic concurrency control.
   */
  eTag?: string;
  /**
   * Type of the object = [Microsoft.Migrate/projects/groups].
   */
  readonly type?: string;
  /**
   * List of machine names that are part of this group.
   */
  machines: string[];
  /**
   * List of References to Assessments created on this group.
   */
  readonly assessments?: string[];
  /**
   * Time when this project was created. Date-Time represented in ISO-8601 format.
   */
  readonly createdTimestamp?: Date;
  /**
   * Time when this project was last updated. Date-Time represented in ISO-8601 format.
   */
  readonly updatedTimestamp?: Date;
}

/**
 * List of assessments.
 */
export interface AssessmentResultList {
  /**
   * List of assessments.
   */
  value?: Assessment[];
}

/**
 * An assessment created for a group in the Migration project.
 */
export interface Assessment {
  /**
   * Path reference to this assessment. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/groups/{groupName}/assessment/{assessmentName}
   */
  readonly id?: string;
  /**
   * Unique name of an assessment.
   */
  readonly name?: string;
  /**
   * For optimistic concurrency control.
   */
  eTag?: string;
  /**
   * Type of the object = [Microsoft.Migrate/projects/groups/assessments].
   */
  readonly type?: string;
  /**
   * Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
   */
  azureLocation: AzureLocation;
  /**
   * Offer code according to which cost estimation is done.
   */
  azureOfferCode: AzureOfferCode;
  /**
   * Pricing tier for Size evaluation.
   */
  azurePricingTier: AzurePricingTier;
  /**
   * Storage Redundancy type offered by Azure.
   */
  azureStorageRedundancy: AzureStorageRedundancy;
  /**
   * Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
   */
  scalingFactor: number;
  /**
   * Percentile of performance data used to recommend Azure size.
   */
  percentile: Percentile;
  /**
   * Time range of performance data used to recommend a size.
   */
  timeRange: TimeRange;
  /**
   * User configurable setting that describes the status of the assessment.
   */
  stage: AssessmentStage;
  /**
   * Currency to report prices in.
   */
  currency: Currency;
  /**
   * AHUB discount on windows virtual machines.
   */
  azureHybridUseBenefit: AzureHybridUseBenefit;
  /**
   * Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
   */
  discountPercentage: number;
  /**
   * Confidence rating percentage for assessment. Can be in the range [0, 100].
   */
  readonly confidenceRatingInPercentage?: number;
  /**
   * Assessment sizing criterion.
   */
  sizingCriterion: AssessmentSizingCriterion;
  /**
   * Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
   */
  readonly pricesTimestamp?: Date;
  /**
   * Time when this project was created. Date-Time represented in ISO-8601 format.
   */
  readonly createdTimestamp?: Date;
  /**
   * Time when this project was last updated. Date-Time represented in ISO-8601 format.
   */
  readonly updatedTimestamp?: Date;
  /**
   * Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
   */
  readonly monthlyComputeCost?: number;
  /**
   * Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
   */
  readonly monthlyBandwidthCost?: number;
  /**
   * Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
   */
  readonly monthlyStorageCost?: number;
  /**
   * Whether the assessment has been created and is valid.
   */
  readonly status?: AssessmentStatus;
  /**
   * Number of assessed machines part of this assessment.
   */
  readonly numberOfMachines?: number;
}

/**
 * Download URL for assessment report.
 */
export interface DownloadUrl {
  /**
   * Hyperlink to download report.
   */
  readonly assessmentReportUrl?: string;
  /**
   * Expiry date of download url.
   */
  readonly expirationTime?: Date;
}

/**
 * List of assessed machines.
 */
export interface AssessedMachineResultList {
  /**
   * List of assessed machines.
   */
  value?: AssessedMachine[];
}

/**
 * A machine evaluated as part of an assessment.
 */
export interface AssessedMachine {
  /**
   * Path reference to this assessed machine. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/projects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}
   */
  readonly id?: string;
  /**
   * Name of the machine.
   */
  readonly name?: string;
  /**
   * For optimistic concurrency control.
   */
  eTag?: string;
  /**
   * Type of the object = [Microsoft.Migrate/projects/groups/assessments/assessedMachines].
   */
  readonly type?: string;
  /**
   * List of references to the groups that the machine is member of.
   */
  readonly groups?: string[];
  /**
   * Time when this machine was discovered by Azure Migrate agent. Date-Time represented in ISO-8601 format.
   */
  readonly discoveredTimestamp?: Date;
  /**
   * Boot type of the machine.
   */
  readonly bootType?: MachineBootType;
  /**
   * Container defined in the management solution that this machine is part of in the datacenter.
   */
  readonly datacenterContainer?: string;
  /**
   * Name of the server hosting the datacenter management solution.
   */
  readonly datacenterManagementServer?: string;
  /**
   * ID of the machine as tracked by the datacenter management solution.
   */
  readonly datacenterMachineId?: string;
  /**
   * ID of the server hosting the datacenter management solution.
   */
  readonly datacenterManagementServerId?: string;
  /**
   * Description of the machine
   */
  readonly description?: string;
  /**
   * User readable name of the machine as defined by the user in their private datacenter.
   */
  readonly displayName?: string;
  /**
   * Memory in Megabytes.
   */
  readonly megabytesOfMemory?: number;
  /**
   * Processor count.
   */
  readonly numberOfCores?: number;
  /**
   * Operating System of the machine.
   */
  readonly operatingSystem?: string;
  /**
   * Monthly network cost estimate for the network adapters that are attached to this machine as a group, for a 31-day month.
   */
  readonly monthlyBandwidthCost?: number;
  /**
   * Monthly storage cost estimate for the disks that are attached to this machine as a group, for a 31-day month.
   */
  readonly monthlyStorageCost?: number;
  /**
   * Dictionary of disks attached to the machine. Key is ID of disk. Value is a disk object.
   */
  readonly disks?: { [propertyName: string]: AssessedDisk };
  /**
   * Dictionary of network adapters attached to the machine. Key is name of the adapter. Value is a network adapter object.
   */
  readonly networkAdapters?: { [propertyName: string]: AssessedNetworkAdapter };
  /**
   * Recommended Azure size for this machine.
   */
  readonly recommendedSize?: AzureVmSize;
  /**
   * Number of CPU cores in the Recommended Azure VM Size.
   */
  readonly numberOfCoresForRecommendedSize?: number;
  /**
   * Megabytes of memory in the Recommended Azure VM Size.
   */
  readonly megabytesOfMemoryForRecommendedSize?: number;
  /**
   * Compute Cost for a 31-day month, if the machine is migrated to Azure with the Recommended Size.
   */
  readonly monthlyComputeCostForRecommendedSize?: number;
  /**
   * Utilization percentage of the processor core as observed in the private data center, in the Time Range selected on Assessment, reported as the Percentile value based on the percentile number selected in assessment.
   */
  readonly percentageCoresUtilization?: number;
  /**
   * Utilization percentage of the memory as observed in the private data center, in the Time Range selected on Assessment, reported as the Percentile value based on the percentile number selected in assessment.
   */
  readonly percentageMemoryUtilization?: number;
  /**
   * Expected data points for percentage of cores utilization.
   */
  readonly percentageCoresUtilizationDataPointsExpected?: number;
  /**
   * Received data points for percentage of cores utilization.
   */
  readonly percentageCoresUtilizationDataPointsReceived?: number;
  /**
   * Expected data points for percentage of memory utilization.
   */
  readonly percentageMemoryUtilizationDataPointsExpected?: number;
  /**
   * Received data points for percentage of memory utilization.
   */
  readonly percentageMemoryUtilizationDataPointsReceived?: number;
  /**
   * Whether machine is suitable for migration to Azure.
   */
  readonly suitability?: CloudSuitability;
  /**
   * If machine is not ready to be migrated, this explains the reasons and mitigation steps.
   */
  readonly suitabilityExplanation?: AzureVmSuitabilityExplanation;
  /**
   * Time when this machine was created. Date-Time represented in ISO-8601 format.
   */
  readonly createdTimestamp?: Date;
  /**
   * Time when this machine was last updated. Date-Time represented in ISO-8601 format.
   */
  readonly updatedTimestamp?: Date;
}

/**
 * A disk assessed for an assessment.
 */
export interface AssessedDisk {
  /**
   * Name of the assessed disk.
   */
  readonly name?: string;
  /**
   * Gigabytes of storage provisioned for this disk.
   */
  readonly gigabytesProvisioned?: number;
  /**
   * Gigabytes of storage consumed by this disk.
   */
  readonly gigabytesConsumed?: number;
  /**
   * Disk throughput in MegaBytes per second.
   */
  readonly megabytesPerSecondOfRead?: number;
  /**
   * Expected data points for MegaBytes per second of read.
   */
  readonly megabytesPerSecondOfReadDataPointsExpected?: number;
  /**
   * Received data points for MegaBytes per second of read.
   */
  readonly megabytesPerSecondOfReadDataPointsReceived?: number;
  /**
   * Disk throughput in MegaBytes per second.
   */
  readonly megabytesPerSecondOfWrite?: number;
  /**
   * Expected data points for MegaBytes per second of write.
   */
  readonly megabytesPerSecondOfWriteDataPointsExpected?: number;
  /**
   * Received data points for MegaBytes per second of write.
   */
  readonly megabytesPerSecondOfWriteDataPointsReceived?: number;
  /**
   * Number of read operations per second for the disk.
   */
  readonly numberOfReadOperationsPerSecond?: number;
  /**
   * Expected number of data points for read operations per second.
   */
  readonly numberOfReadOperationsPerSecondDataPointsExpected?: number;
  /**
   * Received number of data points for read operations per second.
   */
  readonly numberOfReadOperationsPerSecondDataPointsReceived?: number;
  /**
   * Number of read and write operations per second for the disk.
   */
  readonly numberOfWriteOperationsPerSecond?: number;
  /**
   * Expected number of data points for write operations per second.
   */
  readonly numberOfWriteOperationsPerSecondDataPointsExpected?: number;
  /**
   * Received number of data points for write operations per second.
   */
  readonly numberOfWriteOperationsPerSecondDataPointsReceived?: number;
  /**
   * Estimated aggregate storage cost for a 31-day month for this disk.
   */
  readonly monthlyStorageCost?: number;
  /**
   * Storage type selected for this disk.
   */
  readonly recommendedDiskType?: AzureDiskType;
  /**
   * Recommended Azure size for the disk, given utilization data and preferences set on Assessment.
   */
  readonly recommendedDiskSize?: AzureDiskSize;
  /**
   * Gigabytes of storage provided by the recommended Azure disk size.
   */
  readonly gigabytesForRecommendedDiskSize?: number;
  /**
   * Whether this disk is suitable for Azure.
   */
  readonly suitability?: CloudSuitability;
  /**
   * If disk is suitable, this explains the reasons and mitigation steps.
   */
  readonly suitabilityExplanation?: AzureDiskSuitabilityExplanation;
}

/**
 * A network adapter assessed for an assessment.
 */
export interface AssessedNetworkAdapter {
  /**
   * MAC Address of the network adapter.
   */
  readonly macAddress?: string;
  /**
   * List of IP Addresses on the network adapter.
   */
  readonly ipAddresses?: string[];
  /**
   * Monthly cost estimate for network bandwidth used by this network adapter.
   */
  readonly monthlyBandwidthCosts?: number;
  /**
   * Adapter throughput for incoming traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondReceived?: number;
  /**
   * Expected data points for incoming traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondReceivedDataPointsExpected?: number;
  /**
   * Received data points for incoming traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondOfReadDataPointsReceived?: number;
  /**
   * Adapter throughput for outgoing traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondTransmitted?: number;
  /**
   * Expected data points for outgoing traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondTransmittedDataPointsExpected?: number;
  /**
   * Received data points for outgoing traffic in MegaBytes per second.
   */
  readonly megabytesPerSecondTransmittedDataPointsReceived?: number;
  /**
   * Gigabytes transmitted through this adapter each month.
   */
  netGigabytesTransmittedPerMonth?: number;
  /**
   * Whether this adapter is suitable for Azure.
   */
  readonly suitability?: CloudSuitability;
  /**
   * If network adapter is suitable, this explains the reasons and mitigation steps.
   */
  readonly suitabilityExplanation?: AzureNetworkAdapterSuitabilityExplanation;
}

/**
 * List of API operations.
 */
export interface OperationResultList {
  /**
   * List of operations.
   */
  value?: Operation[];
}

/**
 * A REST API operation supported by the provider.
 */
export interface Operation {
  /**
   * Name of the operation.
   */
  readonly name?: string;
  /**
   * Displayable properties of the operation.
   */
  readonly display?: OperationDisplay;
  /**
   * Origin of the operation.
   */
  readonly origin?: string;
}

/**
 * Displayable properties of the operation.
 */
export interface OperationDisplay {
  /**
   * Provider of the operation.
   */
  readonly provider?: string;
  /**
   * Resource operated on by the operation.
   */
  readonly resource?: string;
  /**
   * Operation Type.
   */
  readonly operation?: string;
  /**
   * Description of the operation.
   */
  readonly description?: string;
}

/**
 * Defines headers for projects_listBySubscription operation.
 */
export interface ProjectsListBySubscriptionHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_listByResourceGroup operation.
 */
export interface ProjectsListByResourceGroupHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_get operation.
 */
export interface ProjectsGetHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_create operation.
 */
export interface ProjectsCreateHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_update operation.
 */
export interface ProjectsUpdateHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_delete operation.
 */
export interface ProjectsDeleteHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for projects_getKeys operation.
 */
export interface ProjectsGetKeysHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for machines_listByProject operation.
 */
export interface MachinesListByProjectHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for machines_get operation.
 */
export interface MachinesGetHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for groups_listByProject operation.
 */
export interface GroupsListByProjectHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for groups_get operation.
 */
export interface GroupsGetHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for groups_create operation.
 */
export interface GroupsCreateHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for groups_delete operation.
 */
export interface GroupsDeleteHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_listByGroup operation.
 */
export interface AssessmentsListByGroupHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_listByProject operation.
 */
export interface AssessmentsListByProjectHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_get operation.
 */
export interface AssessmentsGetHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_create operation.
 */
export interface AssessmentsCreateHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_delete operation.
 */
export interface AssessmentsDeleteHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessments_getReportDownloadUrl operation.
 */
export interface AssessmentsGetReportDownloadUrlHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessedMachines_listByAssessment operation.
 */
export interface AssessedMachinesListByAssessmentHeaders {
  xMsRequestId?: string;
}

/**
 * Defines headers for assessedMachines_get operation.
 */
export interface AssessedMachinesGetHeaders {
  xMsRequestId?: string;
}

/**
 * Defines values for DiscoveryStatus.
 */
export type DiscoveryStatus =
  | "Unknown"
  | "NotStarted"
  | "InProgress"
  | "Completed";
/**
 * Defines values for ProvisioningState.
 */
export type ProvisioningState =
  | "Accepted"
  | "Creating"
  | "Deleting"
  | "Failed"
  | "Moving"
  | "Succeeded";
/**
 * Defines values for MachineBootType.
 */
export type MachineBootType = "Unknown" | "EFI" | "BIOS";
/**
 * Defines values for AzureLocation.
 */
export type AzureLocation =
  | "Unknown"
  | "EastAsia"
  | "SoutheastAsia"
  | "AustraliaEast"
  | "AustraliaSoutheast"
  | "BrazilSouth"
  | "CanadaCentral"
  | "CanadaEast"
  | "WestEurope"
  | "NorthEurope"
  | "CentralIndia"
  | "SouthIndia"
  | "WestIndia"
  | "JapanEast"
  | "JapanWest"
  | "KoreaCentral"
  | "KoreaSouth"
  | "UkWest"
  | "UkSouth"
  | "NorthCentralUs"
  | "EastUs"
  | "WestUs2"
  | "SouthCentralUs"
  | "CentralUs"
  | "EastUs2"
  | "WestUs"
  | "WestCentralUs"
  | "GermanyCentral"
  | "GermanyNortheast"
  | "ChinaNorth"
  | "ChinaEast";
/**
 * Defines values for AzureOfferCode.
 */
export type AzureOfferCode =
  | "Unknown"
  | "MSAZR0003P"
  | "MSAZR0044P"
  | "MSAZR0059P"
  | "MSAZR0060P"
  | "MSAZR0062P"
  | "MSAZR0063P"
  | "MSAZR0064P"
  | "MSAZR0029P"
  | "MSAZR0022P"
  | "MSAZR0023P"
  | "MSAZR0148P"
  | "MSAZR0025P"
  | "MSAZR0036P"
  | "MSAZR0120P"
  | "MSAZR0121P"
  | "MSAZR0122P"
  | "MSAZR0123P"
  | "MSAZR0124P"
  | "MSAZR0125P"
  | "MSAZR0126P"
  | "MSAZR0127P"
  | "MSAZR0128P"
  | "MSAZR0129P"
  | "MSAZR0130P"
  | "MSAZR0111P"
  | "MSAZR0144P"
  | "MSAZR0149P"
  | "MSMCAZR0044P"
  | "MSMCAZR0059P"
  | "MSMCAZR0060P"
  | "MSMCAZR0063P"
  | "MSMCAZR0120P"
  | "MSMCAZR0121P"
  | "MSMCAZR0125P"
  | "MSMCAZR0128P"
  | "MSAZRDE0003P"
  | "MSAZRDE0044P";
/**
 * Defines values for AzurePricingTier.
 */
export type AzurePricingTier = "Standard" | "Basic";
/**
 * Defines values for AzureStorageRedundancy.
 */
export type AzureStorageRedundancy =
  | "Unknown"
  | "LocallyRedundant"
  | "ZoneRedundant"
  | "GeoRedundant"
  | "ReadAccessGeoRedundant";
/**
 * Defines values for Percentile.
 */
export type Percentile =
  | "Percentile50"
  | "Percentile90"
  | "Percentile95"
  | "Percentile99";
/**
 * Defines values for TimeRange.
 */
export type TimeRange = "Day" | "Week" | "Month";
/**
 * Defines values for AssessmentStage.
 */
export type AssessmentStage = "InProgress" | "UnderReview" | "Approved";
/**
 * Defines values for Currency.
 */
export type Currency =
  | "Unknown"
  | "USD"
  | "DKK"
  | "CAD"
  | "IDR"
  | "JPY"
  | "KRW"
  | "NZD"
  | "NOK"
  | "RUB"
  | "SAR"
  | "ZAR"
  | "SEK"
  | "TRY"
  | "GBP"
  | "MXN"
  | "MYR"
  | "INR"
  | "HKD"
  | "BRL"
  | "TWD"
  | "EUR"
  | "CHF"
  | "ARS"
  | "AUD"
  | "CNY";
/**
 * Defines values for AzureHybridUseBenefit.
 */
export type AzureHybridUseBenefit = "Unknown" | "Yes" | "No";
/**
 * Defines values for AssessmentSizingCriterion.
 */
export type AssessmentSizingCriterion = "PerformanceBased" | "AsOnPremises";
/**
 * Defines values for AssessmentStatus.
 */
export type AssessmentStatus =
  | "Created"
  | "Updated"
  | "Running"
  | "Completed"
  | "Invalid";
/**
 * Defines values for AzureDiskType.
 */
export type AzureDiskType = "Unknown" | "Standard" | "Premium";
/**
 * Defines values for AzureDiskSize.
 */
export type AzureDiskSize =
  | "Unknown"
  | "Standard_S4"
  | "Standard_S6"
  | "Standard_S10"
  | "Standard_S20"
  | "Standard_S30"
  | "Standard_S40"
  | "Standard_S50"
  | "Premium_P4"
  | "Premium_P6"
  | "Premium_P10"
  | "Premium_P20"
  | "Premium_P30"
  | "Premium_P40"
  | "Premium_P50";
/**
 * Defines values for CloudSuitability.
 */
export type CloudSuitability =
  | "Unknown"
  | "NotSuitable"
  | "Suitable"
  | "ConditionallySuitable"
  | "ReadinessUnknown";
/**
 * Defines values for AzureDiskSuitabilityExplanation.
 */
export type AzureDiskSuitabilityExplanation =
  | "Unknown"
  | "NotApplicable"
  | "DiskSizeGreaterThanSupported"
  | "NoSuitableDiskSizeForIops"
  | "NoSuitableDiskSizeForThroughput"
  | "NoDiskSizeFoundInSelectedLocation"
  | "NoDiskSizeFoundForSelectedRedundancy"
  | "InternalErrorOccurredForDiskEvaluation";
/**
 * Defines values for AzureNetworkAdapterSuitabilityExplanation.
 */
export type AzureNetworkAdapterSuitabilityExplanation =
  | "Unknown"
  | "NotApplicable"
  | "InternalErrorOccured";
/**
 * Defines values for AzureVmSize.
 */
export type AzureVmSize =
  | "Unknown"
  | "Basic_A0"
  | "Basic_A1"
  | "Basic_A2"
  | "Basic_A3"
  | "Basic_A4"
  | "Standard_A0"
  | "Standard_A1"
  | "Standard_A2"
  | "Standard_A3"
  | "Standard_A4"
  | "Standard_A5"
  | "Standard_A6"
  | "Standard_A7"
  | "Standard_A8"
  | "Standard_A9"
  | "Standard_A10"
  | "Standard_A11"
  | "Standard_A1_v2"
  | "Standard_A2_v2"
  | "Standard_A4_v2"
  | "Standard_A8_v2"
  | "Standard_A2m_v2"
  | "Standard_A4m_v2"
  | "Standard_A8m_v2"
  | "Standard_D1"
  | "Standard_D2"
  | "Standard_D3"
  | "Standard_D4"
  | "Standard_D11"
  | "Standard_D12"
  | "Standard_D13"
  | "Standard_D14"
  | "Standard_D1_v2"
  | "Standard_D2_v2"
  | "Standard_D3_v2"
  | "Standard_D4_v2"
  | "Standard_D5_v2"
  | "Standard_D11_v2"
  | "Standard_D12_v2"
  | "Standard_D13_v2"
  | "Standard_D14_v2"
  | "Standard_D15_v2"
  | "Standard_DS1"
  | "Standard_DS2"
  | "Standard_DS3"
  | "Standard_DS4"
  | "Standard_DS11"
  | "Standard_DS12"
  | "Standard_DS13"
  | "Standard_DS14"
  | "Standard_DS1_v2"
  | "Standard_DS2_v2"
  | "Standard_DS3_v2"
  | "Standard_DS4_v2"
  | "Standard_DS5_v2"
  | "Standard_DS11_v2"
  | "Standard_DS12_v2"
  | "Standard_DS13_v2"
  | "Standard_DS14_v2"
  | "Standard_DS15_v2"
  | "Standard_F1"
  | "Standard_F2"
  | "Standard_F4"
  | "Standard_F8"
  | "Standard_F16"
  | "Standard_F1s"
  | "Standard_F2s"
  | "Standard_F4s"
  | "Standard_F8s"
  | "Standard_F16s"
  | "Standard_G1"
  | "Standard_G2"
  | "Standard_G3"
  | "Standard_G4"
  | "Standard_G5"
  | "Standard_GS1"
  | "Standard_GS2"
  | "Standard_GS3"
  | "Standard_GS4"
  | "Standard_GS5"
  | "Standard_H8"
  | "Standard_H16"
  | "Standard_H8m"
  | "Standard_H16m"
  | "Standard_H16r"
  | "Standard_H16mr"
  | "Standard_L4s"
  | "Standard_L8s"
  | "Standard_L16s"
  | "Standard_L32s";
/**
 * Defines values for AzureVmSuitabilityExplanation.
 */
export type AzureVmSuitabilityExplanation =
  | "Unknown"
  | "NotApplicable"
  | "GuestOperatingSystemArchitectureNotSupported"
  | "GuestOperatingSystemNotSupported"
  | "BootTypeNotSupported"
  | "MoreDisksThanSupported"
  | "NoSuitableVmSizeFound"
  | "OneOrMoreDisksNotSuitable"
  | "OneOrMoreAdaptersNotSuitable"
  | "InternalErrorOccuredDuringComputeEvaluation"
  | "InternalErrorOccuredDuringStorageEvaluation"
  | "InternalErrorOccuredDuringNetworkEvaluation"
  | "NoVmSizeSupportsStoragePerformance"
  | "NoVmSizeSupportsNetworkPerformance"
  | "NoVmSizeForSelectedPricingTier"
  | "NoVmSizeForSelectedAzureLocation"
  | "CheckRedHatLinuxVersion"
  | "CheckOpenSuseLinuxVersion"
  | "CheckWindowsServer2008R2Version"
  | "CheckCentOsVersion"
  | "CheckDebianLinuxVersion"
  | "CheckSuseLinuxVersion"
  | "CheckOracleLinuxVersion"
  | "CheckUbuntuLinuxVersion"
  | "CheckCoreOsLinuxVersion"
  | "WindowsServerVersionConditionallySupported"
  | "NoGuestOperatingSystemConditionallySupported"
  | "WindowsClientVersionsConditionallySupported"
  | "BootTypeUnknown"
  | "GuestOperatingSystemUnknown"
  | "WindowsServerVersionsSupportedWithCaveat"
  | "WindowsOSNoLongerUnderMSSupport"
  | "EndorsedWithConditionsLinuxDistributions"
  | "UnendorsedLinuxDistributions"
  | "NoVmSizeForStandardPricingTier"
  | "NoVmSizeForBasicPricingTier";
/**
 * Defines values for NameAvailabilityReason.
 */
export type NameAvailabilityReason = "Available" | "Invalid" | "AlreadyExists";

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type LocationCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CheckNameAvailabilityResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type AssessmentOptionsGetResponse = AssessmentOptionsResultList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: AssessmentOptionsResultList;
  };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type ProjectsListBySubscriptionResponse = ProjectsListBySubscriptionHeaders &
  ProjectResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsListBySubscriptionHeaders;
    };
  };

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ProjectsListByResourceGroupResponse = ProjectsListByResourceGroupHeaders &
  ProjectResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsListByResourceGroupHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type ProjectsGetResponse = ProjectsGetHeaders &
  Project & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Project;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsGetHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface ProjectsCreateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * New or Updated project object.
   */
  project?: Project;
}

/**
 * Contains response data for the create operation.
 */
export type ProjectsCreateResponse = ProjectsCreateHeaders &
  Project & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Project;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsCreateHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface ProjectsUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Updated project object.
   */
  project?: Project;
}

/**
 * Contains response data for the update operation.
 */
export type ProjectsUpdateResponse = ProjectsUpdateHeaders &
  Project & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Project;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsUpdateHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type ProjectsDeleteResponse = ProjectsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: ProjectsDeleteHeaders;
  };
};

/**
 * Contains response data for the getKeys operation.
 */
export type ProjectsGetKeysResponse = ProjectsGetKeysHeaders &
  ProjectKey & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ProjectKey;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ProjectsGetKeysHeaders;
    };
  };

/**
 * Contains response data for the listByProject operation.
 */
export type MachinesListByProjectResponse = MachinesListByProjectHeaders &
  MachineResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: MachineResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachinesListByProjectHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type MachinesGetResponse = MachinesGetHeaders &
  Machine & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Machine;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: MachinesGetHeaders;
    };
  };

/**
 * Contains response data for the listByProject operation.
 */
export type GroupsListByProjectResponse = GroupsListByProjectHeaders &
  GroupResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GroupResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupsListByProjectHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type GroupsGetResponse = GroupsGetHeaders &
  Group & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Group;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupsGetHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface GroupsCreateOptionalParams extends coreHttp.OperationOptions {
  /**
   * New or Updated Group object.
   */
  group?: Group;
}

/**
 * Contains response data for the create operation.
 */
export type GroupsCreateResponse = GroupsCreateHeaders &
  Group & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Group;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: GroupsCreateHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type GroupsDeleteResponse = GroupsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: GroupsDeleteHeaders;
  };
};

/**
 * Contains response data for the listByGroup operation.
 */
export type AssessmentsListByGroupResponse = AssessmentsListByGroupHeaders &
  AssessmentResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssessmentResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessmentsListByGroupHeaders;
    };
  };

/**
 * Contains response data for the listByProject operation.
 */
export type AssessmentsListByProjectResponse = AssessmentsListByProjectHeaders &
  AssessmentResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssessmentResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessmentsListByProjectHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type AssessmentsGetResponse = AssessmentsGetHeaders &
  Assessment & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Assessment;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessmentsGetHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface AssessmentsCreateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * New or Updated Assessment object.
   */
  assessment?: Assessment;
}

/**
 * Contains response data for the create operation.
 */
export type AssessmentsCreateResponse = AssessmentsCreateHeaders &
  Assessment & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Assessment;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessmentsCreateHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type AssessmentsDeleteResponse = AssessmentsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: AssessmentsDeleteHeaders;
  };
};

/**
 * Contains response data for the getReportDownloadUrl operation.
 */
export type AssessmentsGetReportDownloadUrlResponse = AssessmentsGetReportDownloadUrlHeaders &
  DownloadUrl & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DownloadUrl;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessmentsGetReportDownloadUrlHeaders;
    };
  };

/**
 * Contains response data for the listByAssessment operation.
 */
export type AssessedMachinesListByAssessmentResponse = AssessedMachinesListByAssessmentHeaders &
  AssessedMachineResultList & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssessedMachineResultList;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessedMachinesListByAssessmentHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type AssessedMachinesGetResponse = AssessedMachinesGetHeaders &
  AssessedMachine & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AssessedMachine;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: AssessedMachinesGetHeaders;
    };
  };

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationResultList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationResultList;
  };
};

/**
 * Optional parameters.
 */
export interface AzureMigrateOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Standard request header. Used by service to respond to client in appropriate language.
   */
  acceptLanguage?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
