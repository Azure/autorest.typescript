/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  DeploymentScriptUnion,
  DeploymentScriptsCreateResponse,
  DeploymentScriptsUpdateResponse,
  DeploymentScriptsGetResponse,
  DeploymentScriptsGetLogsResponse,
  DeploymentScriptsGetLogsDefaultResponse
} from "../models";

/// <reference lib="esnext.asynciterable" />
/** Interface representing a DeploymentScripts. */
export interface DeploymentScripts {
  /**
   * Lists all deployment scripts for a given subscription.
   *
   */
  listBySubscription(): PagedAsyncIterableIterator<DeploymentScriptUnion>;
  /**
   * Lists deployments scripts.
   *
   */
  listByResourceGroup(): PagedAsyncIterableIterator<DeploymentScriptUnion>;
  /**
   * Creates a deployment script.
   *
   */
  beginCreate(): Promise<
    PollerLike<
      PollOperationState<DeploymentScriptsCreateResponse>,
      DeploymentScriptsCreateResponse
    >
  >;
  /**
   * Creates a deployment script.
   *
   */
  beginCreateAndWait(): Promise<DeploymentScriptsCreateResponse>;
  /**
   * Updates deployment script tags with specified values.
   *
   */
  update(): Promise<DeploymentScriptsUpdateResponse>;
  /**
   * Gets a deployment script with a given name.
   *
   */
  get(): Promise<DeploymentScriptsGetResponse>;
  /**
   * Deletes a deployment script. When operation completes, status code 200 returned without content.
   *
   */
  delete(): Promise<void>;
  /**
   * Gets deployment script logs for a given deployment script name.
   *
   */
  getLogs(): Promise<DeploymentScriptsGetLogsResponse>;
  /**
   * Gets deployment script logs for a given deployment script name.
   *
   */
  getLogsDefault(): Promise<DeploymentScriptsGetLogsDefaultResponse>;
}
