/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as operations from "./operations";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import { TimeSeriesInsightsClientContext } from "./timeSeriesInsightsClientContext";

class TimeSeriesInsightsClient extends TimeSeriesInsightsClientContext {
  /**
   * Initializes a new instance of the TimeSeriesInsightsClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param environmentFqdn Per environment FQDN, for example
   *                        10000000-0000-0000-0000-100000000109.env.timeseries.azure.com. You can obtain this domain name from
   *                        the response of the Get Environments API, Azure portal, or Azure Resource Manager.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    environmentFqdn: string,
    options?: Models.TimeSeriesInsightsClientOptionalParams
  ) {
    super(credentials, environmentFqdn, options);
    this.query = new operations.Query(this);
    this.modelSettings = new operations.ModelSettings(this);
    this.timeSeriesInstances = new operations.TimeSeriesInstances(this);
    this.timeSeriesTypes = new operations.TimeSeriesTypes(this);
    this.timeSeriesHierarchies = new operations.TimeSeriesHierarchies(this);
  }

  query: operations.Query;
  modelSettings: operations.ModelSettings;
  timeSeriesInstances: operations.TimeSeriesInstances;
  timeSeriesTypes: operations.TimeSeriesTypes;
  timeSeriesHierarchies: operations.TimeSeriesHierarchies;
}

// Operation Specifications

export {
  TimeSeriesInsightsClient,
  TimeSeriesInsightsClientContext,
  Models as TimeSeriesInsightsModels,
  Mappers as TimeSeriesInsightsMappers
};
export * from "./operations";
