/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { MaintenanceManagementClient } from "../maintenanceManagementClient";
import { UpdatesListParentResponse, UpdatesListResponse } from "../models";

/**
 * Class representing a Updates.
 */
export class Updates {
  private readonly client: MaintenanceManagementClient;

  /**
   * Initialize a new instance of the class Updates class.
   * @param client Reference to the service client
   */
  constructor(client: MaintenanceManagementClient) {
    this.client = client;
  }

  /**
   * Get updates to resources.
   * @param resourceGroupName Resource group name
   * @param resourceParentType Resource parent type
   * @param resourceParentName Resource parent identifier
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param options The options parameters.
   */
  listParent(
    resourceGroupName: string,
    resourceParentType: string,
    resourceParentName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<UpdatesListParentResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceParentType,
        resourceParentName,
        providerName,
        resourceType,
        resourceName,
        options: operationOptions
      },
      listParentOperationSpec
    ) as Promise<UpdatesListParentResponse>;
  }

  /**
   * Get updates to resources.
   * @param resourceGroupName Resource group name
   * @param providerName Resource provider name
   * @param resourceType Resource type
   * @param resourceName Resource identifier
   * @param options The options parameters.
   */
  list(
    resourceGroupName: string,
    providerName: string,
    resourceType: string,
    resourceName: string,
    options?: coreHttp.OperationOptions
  ): Promise<UpdatesListResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        providerName,
        resourceType,
        resourceName,
        options: operationOptions
      },
      listOperationSpec
    ) as Promise<UpdatesListResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listParentOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/updates",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ListUpdatesResult
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.resourceParentType,
    Parameters.resourceParentName,
    Parameters.providerName,
    Parameters.resourceType,
    Parameters.resourceName
  ],
  serializer
};
const listOperationSpec: coreHttp.OperationSpec = {
  path:
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/updates",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ListUpdatesResult
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.$host,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.providerName,
    Parameters.resourceType,
    Parameters.resourceName
  ],
  serializer
};
