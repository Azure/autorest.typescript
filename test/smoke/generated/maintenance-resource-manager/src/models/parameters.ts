/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";

export const $host: coreHttp.OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const subscriptionId: coreHttp.OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceParentType: coreHttp.OperationURLParameter = {
  parameterPath: "resourceParentType",
  mapper: {
    serializedName: "resourceParentType",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceParentName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceParentName",
  mapper: {
    serializedName: "resourceParentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const providerName: coreHttp.OperationURLParameter = {
  parameterPath: "providerName",
  mapper: {
    serializedName: "providerName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceType: coreHttp.OperationURLParameter = {
  parameterPath: "resourceType",
  mapper: {
    serializedName: "resourceType",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceName: coreHttp.OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const applyUpdateName: coreHttp.OperationURLParameter = {
  parameterPath: "applyUpdateName",
  mapper: {
    serializedName: "applyUpdateName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: coreHttp.OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2020-04-01",
    serializedName: "api-version",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const contentType: coreHttp.OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    serializedName: "Content-Type",
    isConstant: true,
    type: {
      name: "String"
    }
  }
};

export const configurationAssignment: coreHttp.OperationParameter = {
  parameterPath: "configurationAssignment",
  mapper: Mappers.ConfigurationAssignment
};

export const configurationAssignmentName: coreHttp.OperationURLParameter = {
  parameterPath: "configurationAssignmentName",
  mapper: {
    serializedName: "configurationAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const configurationAssignmentName1: coreHttp.OperationURLParameter = {
  parameterPath: "configurationAssignmentName",
  mapper: {
    serializedName: "configurationAssignmentName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceGroupName1: coreHttp.OperationURLParameter = {
  parameterPath: "resourceGroupName",
  mapper: {
    serializedName: "resourceGroupName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const resourceName1: coreHttp.OperationURLParameter = {
  parameterPath: "resourceName",
  mapper: {
    serializedName: "resourceName",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const configuration: coreHttp.OperationParameter = {
  parameterPath: "configuration",
  mapper: Mappers.MaintenanceConfiguration
};
