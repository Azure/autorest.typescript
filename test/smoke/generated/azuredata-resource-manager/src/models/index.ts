/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Result of the request to list SQL operations.
 */
export interface OperationListResult {
  /**
   * Array of results.
   */
  readonly value?: Operation[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * SQL REST API operation definition.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  readonly name?: string;
  /**
   * The localized display information for this particular operation / action.
   */
  readonly display?: OperationDisplay;
  /**
   * The intended executor of the operation.
   */
  readonly origin?: OperationOrigin;
  /**
   * Additional descriptions for the operation.
   */
  readonly properties?: { [propertyName: string]: any };
}

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   */
  readonly description?: string;
}

/**
 * An error response from the Azure Data service.
 */
export interface CloudError {
  /**
   * null
   */
  error?: CloudErrorBody;
}

/**
 * An error response from the Batch service.
 */
export interface CloudErrorBody {
  /**
   * An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
   */
  code?: string;
  /**
   * A message describing the error, intended to be suitable for display in a user interface.
   */
  message?: string;
  /**
   * The target of the particular error. For example, the name of the property in error.
   */
  target?: string;
  /**
   * A list of additional details about the error.
   */
  details?: CloudErrorBody[];
}

export interface Resource {
  /**
   * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   */
  readonly id?: string;
  /**
   * The name of the resource
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export type TrackedResource = Resource & {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
};

/**
 * A SQL server registration.
 */
export type SqlServerRegistration = TrackedResource & {
  /**
   * Subscription Id
   */
  subscriptionId?: string;
  /**
   * Resource Group Name
   */
  resourceGroup?: string;
  /**
   * Optional Properties as JSON string
   */
  propertyBag?: string;
};

/**
 * An update to a SQL Server Registration.
 */
export interface SqlServerRegistrationUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Server
 */
export interface SqlServerRegistrationListResult {
  /**
   * Array of results.
   */
  readonly value?: SqlServerRegistration[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
 */
export type ProxyResource = Resource & {};

/**
 * A SQL server.
 */
export type SqlServer = ProxyResource & {
  /**
   * Cores of the Sql Server.
   */
  cores?: number;
  /**
   * Version of the Sql Server.
   */
  version?: string;
  /**
   * Sql Server Edition.
   */
  edition?: string;
  /**
   * ID for Parent Sql Server Registration.
   */
  registrationID?: string;
  /**
   * Sql Server Json Property Bag.
   */
  propertyBag?: string;
};

/**
 * A list of SQL servers.
 */
export interface SqlServerListResult {
  /**
   * Array of results.
   */
  readonly value?: SqlServer[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A list of SqlInstance.
 */
export interface SqlInstanceListResult {
  /**
   * Array of results.
   */
  readonly value?: SqlInstance[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A SqlInstance.
 */
export type SqlInstance = TrackedResource & {
  /**
   * null
   */
  hybridDataManagerId?: string;
};

/**
 * An update to a SQL Instance.
 */
export interface SqlInstanceUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A list of PostgresInstance.
 */
export interface PostgresInstanceListResult {
  /**
   * Array of results.
   */
  readonly value?: PostgresInstance[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * A Postgres Instance.
 */
export type PostgresInstance = TrackedResource & {
  /**
   * null
   */
  hybridDataManagerId?: string;
};

/**
 * An update to a Postgres Instance.
 */
export interface PostgresInstanceUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * null
   */
  hybridDataManagerId?: string;
}

/**
 * A list of HybridDataManager.
 */
export interface HybridDataManagerListResult {
  /**
   * Array of results.
   */
  readonly value?: HybridDataManager[];
  /**
   * Link to retrieve next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Hybrid data manager resource
 */
export type HybridDataManager = TrackedResource & {
  /**
   * null
   */
  properties?: any;
};

/**
 * An update to a HybridDataManager.
 */
export interface HybridDataManagerUpdate {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
 */
export interface ResourceModelWithAllowedPropertySet {
  /**
   * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   */
  readonly id?: string;
  /**
   * The name of the resource
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts..
   */
  readonly type?: string;
  /**
   * The geo-location where the resource lives
   */
  location?: string;
  /**
   * The  fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
   */
  managedBy?: string;
  /**
   * Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
   */
  kind?: string;
  /**
   * The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
   */
  readonly etag?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  identity?: ResourceModelWithAllowedPropertySetIdentity;
  sku?: ResourceModelWithAllowedPropertySetSku;
  plan?: ResourceModelWithAllowedPropertySetPlan;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   */
  readonly tenantId?: string;
  /**
   * The identity type.
   */
  type?: "SystemAssigned";
}

export type ResourceModelWithAllowedPropertySetIdentity = Identity & {};

/**
 * The resource model definition representing SKU
 */
export interface Sku {
  /**
   * The name of the SKU. Ex - P3. It is typically a letter+number code
   */
  name: string;
  /**
   * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
   */
  tier?: SkuTier;
  /**
   * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
   */
  size?: string;
  /**
   * If the service has different generations of hardware, for the same SKU, then that can be captured here.
   */
  family?: string;
  /**
   * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
   */
  capacity?: number;
}

export type ResourceModelWithAllowedPropertySetSku = Sku & {};

/**
 * Plan for the resource.
 */
export interface Plan {
  /**
   * A user defined name of the 3rd Party Artifact that is being procured.
   */
  name: string;
  /**
   * The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
   */
  publisher: string;
  /**
   * The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding.
   */
  product: string;
  /**
   * A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
   */
  promotionCode?: string;
  /**
   * The version of the desired product/artifact.
   */
  version?: string;
}

export type ResourceModelWithAllowedPropertySetPlan = Plan & {};

/**
 * Information about an error.
 */
export interface ODataError {
  /**
   * A language-independent error name.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
  /**
   * The target of the error (for example, the name of the property in error).
   */
  target?: string;
  /**
   * The error details.
   */
  details?: ODataError[];
}

/**
 * Defines values for OperationOrigin.
 */
export type OperationOrigin = "user" | "system";
/**
 * Defines values for SkuTier.
 */
export type SkuTier = "Free" | "Basic" | "Standard" | "Premium";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type SqlServerRegistrationsGetResponse = SqlServerRegistration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistration;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlServerRegistrationsCreateOrUpdateResponse = SqlServerRegistration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistration;
  };
};

/**
 * Contains response data for the update operation.
 */
export type SqlServerRegistrationsUpdateResponse = SqlServerRegistration & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistration;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SqlServerRegistrationsListByResourceGroupResponse = SqlServerRegistrationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistrationListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type SqlServerRegistrationsListResponse = SqlServerRegistrationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistrationListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SqlServerRegistrationsListByResourceGroupNextResponse = SqlServerRegistrationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistrationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlServerRegistrationsListNextResponse = SqlServerRegistrationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerRegistrationListResult;
  };
};

/**
 * Optional parameters.
 */
export interface SqlServersGetOptionalParams extends coreHttp.OperationOptions {
  /**
   * The child resources to include in the response.
   */
  expand?: string;
}

/**
 * Contains response data for the get operation.
 */
export type SqlServersGetResponse = SqlServer & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServer;
  };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type SqlServersCreateOrUpdateResponse = SqlServer & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServer;
  };
};

/**
 * Optional parameters.
 */
export interface SqlServersListByResourceGroupOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The child resources to include in the response.
   */
  expand?: string;
}

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SqlServersListByResourceGroupResponse = SqlServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerListResult;
  };
};

/**
 * Optional parameters.
 */
export interface SqlServersListByResourceGroupNextOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * The child resources to include in the response.
   */
  expand?: string;
}

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SqlServersListByResourceGroupNextResponse = SqlServerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlServerListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type SqlInstancesListResponse = SqlInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstanceListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type SqlInstancesListByResourceGroupResponse = SqlInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstanceListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type SqlInstancesGetResponse = SqlInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstance;
  };
};

/**
 * Contains response data for the create operation.
 */
export type SqlInstancesCreateResponse = SqlInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstance;
  };
};

/**
 * Contains response data for the update operation.
 */
export type SqlInstancesUpdateResponse = SqlInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstance;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type SqlInstancesListNextResponse = SqlInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstanceListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type SqlInstancesListByResourceGroupNextResponse = SqlInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SqlInstanceListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type PostgresInstancesListResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstanceListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type PostgresInstancesListByResourceGroupResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstanceListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type PostgresInstancesGetResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstance;
  };
};

/**
 * Contains response data for the create operation.
 */
export type PostgresInstancesCreateResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstance;
  };
};

/**
 * Contains response data for the update operation.
 */
export type PostgresInstancesUpdateResponse = PostgresInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstance;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type PostgresInstancesListNextResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstanceListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type PostgresInstancesListByResourceGroupNextResponse = PostgresInstanceListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: PostgresInstanceListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type HybridDataManagersListResponse = HybridDataManagerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManagerListResult;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type HybridDataManagersListByResourceGroupResponse = HybridDataManagerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManagerListResult;
  };
};

/**
 * Contains response data for the create operation.
 */
export type HybridDataManagersCreateResponse = HybridDataManager & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManager;
  };
};

/**
 * Contains response data for the get operation.
 */
export type HybridDataManagersGetResponse = HybridDataManager & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManager;
  };
};

/**
 * Contains response data for the update operation.
 */
export type HybridDataManagersUpdateResponse = HybridDataManager & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManager;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type HybridDataManagersListNextResponse = HybridDataManagerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManagerListResult;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type HybridDataManagersListByResourceGroupNextResponse = HybridDataManagerListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: HybridDataManagerListResult;
  };
};

/**
 * Optional parameters.
 */
export interface AzureDataManagementClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
