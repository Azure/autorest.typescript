/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import {
  SignedInUser,
  Applications,
  DeletedApplications,
  Groups,
  ServicePrincipals,
  Users,
  Objects,
  Domains,
  OAuth2PermissionGrant
} from "./operations";
import { GraphRbacManagementClientContext } from "./graphRbacManagementClientContext";
import { GraphRbacManagementClientOptionalParams } from "./models";

export class GraphRbacManagementClient extends GraphRbacManagementClientContext {
  /**
   * Initializes a new instance of the GraphRbacManagementClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param tenantID The tenant ID.
   * @param options The parameter options
   */
  constructor(
    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,
    tenantID: string,
    options?: GraphRbacManagementClientOptionalParams
  ) {
    super(credentials, tenantID, options);
    this.signedInUser = new SignedInUser(this);
    this.applications = new Applications(this);
    this.deletedApplications = new DeletedApplications(this);
    this.groups = new Groups(this);
    this.servicePrincipals = new ServicePrincipals(this);
    this.users = new Users(this);
    this.objects = new Objects(this);
    this.domains = new Domains(this);
    this.oAuth2PermissionGrant = new OAuth2PermissionGrant(this);
  }

  signedInUser: SignedInUser;
  applications: Applications;
  deletedApplications: DeletedApplications;
  groups: Groups;
  servicePrincipals: ServicePrincipals;
  users: Users;
  objects: Objects;
  domains: Domains;
  oAuth2PermissionGrant: OAuth2PermissionGrant;
}
