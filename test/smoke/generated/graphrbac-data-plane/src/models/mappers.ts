/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const SignInName: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SignInName",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DirectoryObject: coreHttp.CompositeMapper = {
  serializedName: "DirectoryObject",
  type: {
    name: "Composite",
    className: "DirectoryObject",
    uberParent: "DirectoryObject",
    additionalProperties: { type: { name: "Object" } },
    polymorphicDiscriminator: {
      serializedName: "objectType",
      clientName: "objectType"
    },
    modelProperties: {
      objectId: {
        serializedName: "objectId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        required: true,
        type: {
          name: "String"
        }
      },
      deletionTimestamp: {
        serializedName: "deletionTimestamp",
        readOnly: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const GraphError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GraphError",
    modelProperties: {
      code: {
        serializedName: "odata\\.error.code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "odata\\.error.message.value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DirectoryObjectListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DirectoryObjectListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "DirectoryObject" } }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationBase: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationBase",
    modelProperties: {
      allowGuestsSignIn: {
        serializedName: "allowGuestsSignIn",
        type: {
          name: "Boolean"
        }
      },
      allowPassthroughUsers: {
        serializedName: "allowPassthroughUsers",
        type: {
          name: "Boolean"
        }
      },
      appLogoUrl: {
        serializedName: "appLogoUrl",
        type: {
          name: "String"
        }
      },
      appRoles: {
        serializedName: "appRoles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AppRole" } }
        }
      },
      appPermissions: {
        serializedName: "appPermissions",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      availableToOtherTenants: {
        serializedName: "availableToOtherTenants",
        type: {
          name: "Boolean"
        }
      },
      errorUrl: {
        serializedName: "errorUrl",
        type: {
          name: "String"
        }
      },
      groupMembershipClaims: {
        serializedName: "groupMembershipClaims",
        type: {
          name: "String"
        }
      },
      homepage: {
        serializedName: "homepage",
        type: {
          name: "String"
        }
      },
      informationalUrls: {
        serializedName: "informationalUrls",
        type: {
          name: "Composite",
          className: "InformationalUrl"
        }
      },
      isDeviceOnlyAuthSupported: {
        serializedName: "isDeviceOnlyAuthSupported",
        type: {
          name: "Boolean"
        }
      },
      keyCredentials: {
        serializedName: "keyCredentials",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      },
      knownClientApplications: {
        serializedName: "knownClientApplications",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      logoutUrl: {
        serializedName: "logoutUrl",
        type: {
          name: "String"
        }
      },
      oauth2AllowImplicitFlow: {
        serializedName: "oauth2AllowImplicitFlow",
        type: {
          name: "Boolean"
        }
      },
      oauth2AllowUrlPathMatching: {
        serializedName: "oauth2AllowUrlPathMatching",
        type: {
          name: "Boolean"
        }
      },
      oauth2Permissions: {
        serializedName: "oauth2Permissions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OAuth2Permission" }
          }
        }
      },
      oauth2RequirePostResponse: {
        serializedName: "oauth2RequirePostResponse",
        type: {
          name: "Boolean"
        }
      },
      orgRestrictions: {
        serializedName: "orgRestrictions",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      optionalClaims: {
        serializedName: "optionalClaims",
        type: {
          name: "Composite",
          className: "OptionalClaims"
        }
      },
      passwordCredentials: {
        serializedName: "passwordCredentials",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      },
      preAuthorizedApplications: {
        serializedName: "preAuthorizedApplications",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PreAuthorizedApplication" }
          }
        }
      },
      publicClient: {
        serializedName: "publicClient",
        type: {
          name: "Boolean"
        }
      },
      publisherDomain: {
        serializedName: "publisherDomain",
        type: {
          name: "String"
        }
      },
      replyUrls: {
        serializedName: "replyUrls",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      requiredResourceAccess: {
        serializedName: "requiredResourceAccess",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RequiredResourceAccess" }
          }
        }
      },
      samlMetadataUrl: {
        serializedName: "samlMetadataUrl",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      },
      wwwHomepage: {
        serializedName: "wwwHomepage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppRole: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AppRole",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      allowedMemberTypes: {
        serializedName: "allowedMemberTypes",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InformationalUrl: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InformationalUrl",
    modelProperties: {
      termsOfService: {
        serializedName: "termsOfService",
        type: {
          name: "String"
        }
      },
      marketing: {
        serializedName: "marketing",
        type: {
          name: "String"
        }
      },
      privacy: {
        serializedName: "privacy",
        type: {
          name: "String"
        }
      },
      support: {
        serializedName: "support",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyCredential: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyCredential",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      keyId: {
        serializedName: "keyId",
        type: {
          name: "String"
        }
      },
      usage: {
        serializedName: "usage",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      customKeyIdentifier: {
        serializedName: "customKeyIdentifier",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2Permission: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OAuth2Permission",
    modelProperties: {
      adminConsentDescription: {
        serializedName: "adminConsentDescription",
        type: {
          name: "String"
        }
      },
      adminConsentDisplayName: {
        serializedName: "adminConsentDisplayName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      isEnabled: {
        serializedName: "isEnabled",
        type: {
          name: "Boolean"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      userConsentDescription: {
        serializedName: "userConsentDescription",
        type: {
          name: "String"
        }
      },
      userConsentDisplayName: {
        serializedName: "userConsentDisplayName",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OptionalClaims: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OptionalClaims",
    modelProperties: {
      idToken: {
        serializedName: "idToken",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "OptionalClaim" } }
        }
      },
      accessToken: {
        serializedName: "accessToken",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "OptionalClaim" } }
        }
      },
      samlToken: {
        serializedName: "samlToken",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "OptionalClaim" } }
        }
      }
    }
  }
};

export const OptionalClaim: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OptionalClaim",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      source: {
        serializedName: "source",
        type: {
          name: "String"
        }
      },
      essential: {
        serializedName: "essential",
        type: {
          name: "Boolean"
        }
      },
      additionalProperties: {
        serializedName: "additionalProperties",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const PasswordCredential: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordCredential",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      startDate: {
        serializedName: "startDate",
        type: {
          name: "DateTime"
        }
      },
      endDate: {
        serializedName: "endDate",
        type: {
          name: "DateTime"
        }
      },
      keyId: {
        serializedName: "keyId",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      customKeyIdentifier: {
        serializedName: "customKeyIdentifier",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const PreAuthorizedApplication: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreAuthorizedApplication",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PreAuthorizedApplicationPermission"
            }
          }
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PreAuthorizedApplicationExtension"
            }
          }
        }
      }
    }
  }
};

export const PreAuthorizedApplicationPermission: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreAuthorizedApplicationPermission",
    modelProperties: {
      directAccessGrant: {
        serializedName: "directAccessGrant",
        type: {
          name: "Boolean"
        }
      },
      accessGrants: {
        serializedName: "accessGrants",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const PreAuthorizedApplicationExtension: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PreAuthorizedApplicationExtension",
    modelProperties: {
      conditions: {
        serializedName: "conditions",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const RequiredResourceAccess: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RequiredResourceAccess",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      resourceAccess: {
        serializedName: "resourceAccess",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ResourceAccess" } }
        }
      },
      resourceAppId: {
        serializedName: "resourceAppId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceAccess: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceAccess",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Application" } }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddOwnerParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddOwnerParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const KeyCredentialListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyCredentialListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      }
    }
  }
};

export const KeyCredentialsUpdateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "KeyCredentialsUpdateParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      }
    }
  }
};

export const PasswordCredentialListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordCredentialListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      }
    }
  }
};

export const PasswordCredentialsUpdateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordCredentialsUpdateParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      }
    }
  }
};

export const CheckGroupMembershipParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckGroupMembershipParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      groupId: {
        serializedName: "groupId",
        required: true,
        type: {
          name: "String"
        }
      },
      memberId: {
        serializedName: "memberId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckGroupMembershipResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CheckGroupMembershipResult",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GroupAddMemberParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupAddMemberParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupCreateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupCreateParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      mailEnabled: {
        defaultValue: false,
        isConstant: true,
        serializedName: "mailEnabled",
        type: {
          name: "Boolean"
        }
      },
      mailNickname: {
        serializedName: "mailNickname",
        required: true,
        type: {
          name: "String"
        }
      },
      securityEnabled: {
        defaultValue: true,
        isConstant: true,
        serializedName: "securityEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GroupListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ADGroup" } }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GroupGetMemberGroupsParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupGetMemberGroupsParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      securityEnabledOnly: {
        serializedName: "securityEnabledOnly",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const GroupGetMemberGroupsResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GroupGetMemberGroupsResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ServicePrincipalBase: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalBase",
    modelProperties: {
      accountEnabled: {
        serializedName: "accountEnabled",
        type: {
          name: "Boolean"
        }
      },
      appRoleAssignmentRequired: {
        serializedName: "appRoleAssignmentRequired",
        type: {
          name: "Boolean"
        }
      },
      keyCredentials: {
        serializedName: "keyCredentials",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      },
      passwordCredentials: {
        serializedName: "passwordCredentials",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      },
      servicePrincipalType: {
        serializedName: "servicePrincipalType",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ServicePrincipalListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ServicePrincipal" }
          }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalObjectResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalObjectResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      odataMetadata: {
        serializedName: "odata\\.metadata",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PasswordProfile: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordProfile",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      password: {
        serializedName: "password",
        required: true,
        type: {
          name: "String"
        }
      },
      forceChangePasswordNextLogin: {
        serializedName: "forceChangePasswordNextLogin",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UserBase: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserBase",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      immutableId: {
        serializedName: "immutableId",
        type: {
          name: "String"
        }
      },
      usageLocation: {
        serializedName: "usageLocation",
        type: {
          name: "String"
        }
      },
      givenName: {
        serializedName: "givenName",
        type: {
          name: "String"
        }
      },
      surname: {
        serializedName: "surname",
        type: {
          name: "String"
        }
      },
      userType: {
        serializedName: "userType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "User" } }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserGetMemberGroupsParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserGetMemberGroupsParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      securityEnabledOnly: {
        serializedName: "securityEnabledOnly",
        required: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UserGetMemberGroupsResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserGetMemberGroupsResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const GetObjectsParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GetObjectsParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      objectIds: {
        serializedName: "objectIds",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      types: {
        serializedName: "types",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      includeDirectoryObjectReferences: {
        serializedName: "includeDirectoryObjectReferences",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DomainListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DomainListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Domain" } }
        }
      }
    }
  }
};

export const Domain: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Domain",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      authenticationType: {
        serializedName: "authenticationType",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      isVerified: {
        serializedName: "isVerified",
        readOnly: true,
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2PermissionGrantListResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OAuth2PermissionGrantListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OAuth2PermissionGrant" }
          }
        }
      },
      odataNextLink: {
        serializedName: "odata\\.nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2PermissionGrant: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OAuth2PermissionGrant",
    modelProperties: {
      odataType: {
        serializedName: "odata\\.type",
        type: {
          name: "String"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "String"
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "String"
        }
      },
      consentType: {
        serializedName: "consentType",
        type: {
          name: "String"
        }
      },
      principalId: {
        serializedName: "principalId",
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "String"
        }
      },
      expiryTime: {
        serializedName: "expiryTime",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: coreHttp.CompositeMapper = {
  serializedName: "User",
  type: {
    name: "Composite",
    className: "User",
    uberParent: "DirectoryObject",
    additionalProperties: { type: { name: "Object" } },
    polymorphicDiscriminator: DirectoryObject.type.polymorphicDiscriminator,
    modelProperties: {
      ...DirectoryObject.type.modelProperties,
      immutableId: {
        serializedName: "immutableId",
        type: {
          name: "String"
        }
      },
      usageLocation: {
        serializedName: "usageLocation",
        type: {
          name: "String"
        }
      },
      givenName: {
        serializedName: "givenName",
        type: {
          name: "String"
        }
      },
      surname: {
        serializedName: "surname",
        type: {
          name: "String"
        }
      },
      userType: {
        serializedName: "userType",
        type: {
          name: "String"
        }
      },
      accountEnabled: {
        serializedName: "accountEnabled",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      },
      mailNickname: {
        serializedName: "mailNickname",
        type: {
          name: "String"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      },
      signInNames: {
        serializedName: "signInNames",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "SignInName" } }
        }
      }
    }
  }
};

export const Application: coreHttp.CompositeMapper = {
  serializedName: "Application",
  type: {
    name: "Composite",
    className: "Application",
    uberParent: "DirectoryObject",
    additionalProperties: { type: { name: "Object" } },
    polymorphicDiscriminator: DirectoryObject.type.polymorphicDiscriminator,
    modelProperties: {
      ...DirectoryObject.type.modelProperties,
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      allowGuestsSignIn: {
        serializedName: "allowGuestsSignIn",
        type: {
          name: "Boolean"
        }
      },
      allowPassthroughUsers: {
        serializedName: "allowPassthroughUsers",
        type: {
          name: "Boolean"
        }
      },
      appLogoUrl: {
        serializedName: "appLogoUrl",
        type: {
          name: "String"
        }
      },
      appRoles: {
        serializedName: "appRoles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AppRole" } }
        }
      },
      appPermissions: {
        serializedName: "appPermissions",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      availableToOtherTenants: {
        serializedName: "availableToOtherTenants",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      errorUrl: {
        serializedName: "errorUrl",
        type: {
          name: "String"
        }
      },
      groupMembershipClaims: {
        serializedName: "groupMembershipClaims",
        type: {
          name: "String"
        }
      },
      homepage: {
        serializedName: "homepage",
        type: {
          name: "String"
        }
      },
      identifierUris: {
        serializedName: "identifierUris",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      informationalUrls: {
        serializedName: "informationalUrls",
        type: {
          name: "Composite",
          className: "InformationalUrl"
        }
      },
      isDeviceOnlyAuthSupported: {
        serializedName: "isDeviceOnlyAuthSupported",
        type: {
          name: "Boolean"
        }
      },
      keyCredentials: {
        serializedName: "keyCredentials",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      },
      knownClientApplications: {
        serializedName: "knownClientApplications",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      logoutUrl: {
        serializedName: "logoutUrl",
        type: {
          name: "String"
        }
      },
      oauth2AllowImplicitFlow: {
        serializedName: "oauth2AllowImplicitFlow",
        type: {
          name: "Boolean"
        }
      },
      oauth2AllowUrlPathMatching: {
        serializedName: "oauth2AllowUrlPathMatching",
        type: {
          name: "Boolean"
        }
      },
      oauth2Permissions: {
        serializedName: "oauth2Permissions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OAuth2Permission" }
          }
        }
      },
      oauth2RequirePostResponse: {
        serializedName: "oauth2RequirePostResponse",
        type: {
          name: "Boolean"
        }
      },
      orgRestrictions: {
        serializedName: "orgRestrictions",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      optionalClaims: {
        serializedName: "optionalClaims",
        type: {
          name: "Composite",
          className: "OptionalClaims"
        }
      },
      passwordCredentials: {
        serializedName: "passwordCredentials",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      },
      preAuthorizedApplications: {
        serializedName: "preAuthorizedApplications",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PreAuthorizedApplication" }
          }
        }
      },
      publicClient: {
        serializedName: "publicClient",
        type: {
          name: "Boolean"
        }
      },
      publisherDomain: {
        serializedName: "publisherDomain",
        type: {
          name: "String"
        }
      },
      replyUrls: {
        serializedName: "replyUrls",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      requiredResourceAccess: {
        serializedName: "requiredResourceAccess",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "RequiredResourceAccess" }
          }
        }
      },
      samlMetadataUrl: {
        serializedName: "samlMetadataUrl",
        type: {
          name: "String"
        }
      },
      signInAudience: {
        serializedName: "signInAudience",
        type: {
          name: "String"
        }
      },
      wwwHomepage: {
        serializedName: "wwwHomepage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ADGroup: coreHttp.CompositeMapper = {
  serializedName: "Group",
  type: {
    name: "Composite",
    className: "ADGroup",
    uberParent: "DirectoryObject",
    additionalProperties: { type: { name: "Object" } },
    polymorphicDiscriminator: DirectoryObject.type.polymorphicDiscriminator,
    modelProperties: {
      ...DirectoryObject.type.modelProperties,
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      mailEnabled: {
        serializedName: "mailEnabled",
        type: {
          name: "Boolean"
        }
      },
      mailNickname: {
        serializedName: "mailNickname",
        type: {
          name: "String"
        }
      },
      securityEnabled: {
        serializedName: "securityEnabled",
        type: {
          name: "Boolean"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipal: coreHttp.CompositeMapper = {
  serializedName: "ServicePrincipal",
  type: {
    name: "Composite",
    className: "ServicePrincipal",
    uberParent: "DirectoryObject",
    additionalProperties: { type: { name: "Object" } },
    polymorphicDiscriminator: DirectoryObject.type.polymorphicDiscriminator,
    modelProperties: {
      ...DirectoryObject.type.modelProperties,
      accountEnabled: {
        serializedName: "accountEnabled",
        type: {
          name: "Boolean"
        }
      },
      alternativeNames: {
        serializedName: "alternativeNames",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      appDisplayName: {
        serializedName: "appDisplayName",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      appOwnerTenantId: {
        serializedName: "appOwnerTenantId",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      appRoleAssignmentRequired: {
        serializedName: "appRoleAssignmentRequired",
        type: {
          name: "Boolean"
        }
      },
      appRoles: {
        serializedName: "appRoles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AppRole" } }
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      errorUrl: {
        serializedName: "errorUrl",
        type: {
          name: "String"
        }
      },
      homepage: {
        serializedName: "homepage",
        type: {
          name: "String"
        }
      },
      keyCredentials: {
        serializedName: "keyCredentials",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "KeyCredential" } }
        }
      },
      logoutUrl: {
        serializedName: "logoutUrl",
        type: {
          name: "String"
        }
      },
      oauth2Permissions: {
        serializedName: "oauth2Permissions",
        readOnly: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "OAuth2Permission" }
          }
        }
      },
      passwordCredentials: {
        serializedName: "passwordCredentials",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "PasswordCredential" }
          }
        }
      },
      preferredTokenSigningKeyThumbprint: {
        serializedName: "preferredTokenSigningKeyThumbprint",
        type: {
          name: "String"
        }
      },
      publisherName: {
        serializedName: "publisherName",
        type: {
          name: "String"
        }
      },
      replyUrls: {
        serializedName: "replyUrls",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      samlMetadataUrl: {
        serializedName: "samlMetadataUrl",
        type: {
          name: "String"
        }
      },
      servicePrincipalNames: {
        serializedName: "servicePrincipalNames",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      servicePrincipalType: {
        serializedName: "servicePrincipalType",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ApplicationCreateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationCreateParameters",
    modelProperties: {
      ...ApplicationBase.type.modelProperties,
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      identifierUris: {
        serializedName: "identifierUris",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ApplicationUpdateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ApplicationUpdateParameters",
    modelProperties: {
      ...ApplicationBase.type.modelProperties,
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      identifierUris: {
        serializedName: "identifierUris",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ServicePrincipalCreateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalCreateParameters",
    modelProperties: {
      ...ServicePrincipalBase.type.modelProperties,
      appId: {
        serializedName: "appId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalUpdateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServicePrincipalUpdateParameters",
    modelProperties: {
      ...ServicePrincipalBase.type.modelProperties
    }
  }
};

export const UserCreateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserCreateParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      ...UserBase.type.modelProperties,
      accountEnabled: {
        serializedName: "accountEnabled",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      passwordProfile: {
        serializedName: "passwordProfile",
        type: {
          name: "Composite",
          className: "PasswordProfile"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        required: true,
        type: {
          name: "String"
        }
      },
      mailNickname: {
        serializedName: "mailNickname",
        required: true,
        type: {
          name: "String"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserUpdateParameters: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserUpdateParameters",
    additionalProperties: { type: { name: "Object" } },
    modelProperties: {
      ...UserBase.type.modelProperties,
      accountEnabled: {
        serializedName: "accountEnabled",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      passwordProfile: {
        serializedName: "passwordProfile",
        type: {
          name: "Composite",
          className: "PasswordProfile"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      },
      mailNickname: {
        serializedName: "mailNickname",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  DirectoryObject: DirectoryObject,
  "DirectoryObject.User": User,
  "DirectoryObject.Application": Application,
  "DirectoryObject.Group": ADGroup,
  "DirectoryObject.ServicePrincipal": ServicePrincipal
};
