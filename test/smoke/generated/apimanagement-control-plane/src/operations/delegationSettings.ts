/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClient } from "../apiManagementClient";
import {
  DelegationSettingsGetResponse,
  PortalDelegationSettings,
  DelegationSettingsCreateOrUpdateResponse
} from "../models";

/**
 * Class representing a DelegationSettings.
 */
export class DelegationSettings {
  private readonly client: ApiManagementClient;

  /**
   * Initialize a new instance of the class DelegationSettings class.
   * @param client Reference to the service client
   */
  constructor(client: ApiManagementClient) {
    this.client = client;
  }

  /**
   * Get Delegation settings.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param options The options parameters.
   */
  get(
    apimBaseUrl: string,
    options?: coreHttp.OperationOptions
  ): Promise<DelegationSettingsGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, options: operationOptions },
      getOperationSpec
    ) as Promise<DelegationSettingsGetResponse>;
  }

  /**
   * Update Delegation settings.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param ifMatch The entity state (Etag) version of the property to update. A value of "*" can be used
   *                for If-Match to unconditionally apply the operation.
   * @param parameters Update Delegation settings.
   * @param options The options parameters.
   */
  update(
    apimBaseUrl: string,
    ifMatch: string,
    parameters: PortalDelegationSettings,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, ifMatch, parameters, options: operationOptions },
      updateOperationSpec
    ) as Promise<coreHttp.RestResponse>;
  }

  /**
   * Create or Update Delegation settings.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param parameters Create or update parameters.
   * @param options The options parameters.
   */
  createOrUpdate(
    apimBaseUrl: string,
    parameters: PortalDelegationSettings,
    options?: coreHttp.OperationOptions
  ): Promise<DelegationSettingsCreateOrUpdateResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, parameters, options: operationOptions },
      createOrUpdateOperationSpec
    ) as Promise<DelegationSettingsCreateOrUpdateResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getOperationSpec: coreHttp.OperationSpec = {
  path: "/portalsettings/delegation",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PortalDelegationSettings,
      headersMapper: Mappers.DelegationSettingsGetHeaders
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.apimBaseUrl],
  serializer
};
const updateOperationSpec: coreHttp.OperationSpec = {
  path: "/portalsettings/delegation",
  httpMethod: "PATCH",
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters25,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.apimBaseUrl],
  headerParameters: [Parameters.contentType, Parameters.ifMatch24],
  serializer
};
const createOrUpdateOperationSpec: coreHttp.OperationSpec = {
  path: "/portalsettings/delegation",
  httpMethod: "PUT",
  responses: {
    204: {
      bodyMapper: Mappers.PortalDelegationSettings
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  requestBody: Parameters.parameters26,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.apimBaseUrl],
  headerParameters: [Parameters.contentType],
  serializer
};
