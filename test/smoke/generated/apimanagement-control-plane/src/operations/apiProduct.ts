/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClient } from "../apiManagementClient";
import {
  ApiProductListByApisOptionalParams,
  ApiProductListByApisResponse,
  ApiProductListByApisNextOptionalParams,
  ApiProductListByApisNextResponse
} from "../models";

/**
 * Class representing a ApiProduct.
 */
export class ApiProduct {
  private readonly client: ApiManagementClient;

  /**
   * Initialize a new instance of the class ApiProduct class.
   * @param client Reference to the service client
   */
  constructor(client: ApiManagementClient) {
    this.client = client;
  }

  /**
   * Lists all Products, which the API is part of.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param apiId API identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  listByApis(
    apimBaseUrl: string,
    apiId: string,
    options?: ApiProductListByApisOptionalParams
  ): Promise<ApiProductListByApisResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, apiId, options: operationOptions },
      listByApisOperationSpec
    ) as Promise<ApiProductListByApisResponse>;
  }

  /**
   * ListByApisNext
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param apiId API identifier. Must be unique in the current API Management service instance.
   * @param nextLink The nextLink from the previous successful call to the ListByApis method.
   * @param options The options parameters.
   */
  listByApisNext(
    apimBaseUrl: string,
    apiId: string,
    nextLink: string,
    options?: ApiProductListByApisNextOptionalParams
  ): Promise<ApiProductListByApisNextResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, apiId, nextLink, options: operationOptions },
      listByApisNextOperationSpec
    ) as Promise<ApiProductListByApisNextResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listByApisOperationSpec: coreHttp.OperationSpec = {
  path: "/apis/{apiId}/products",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProductCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top,
    Parameters.skip,
    Parameters.filter2
  ],
  urlParameters: [Parameters.apimBaseUrl, Parameters.apiId],
  serializer
};
const listByApisNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ProductCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top,
    Parameters.skip,
    Parameters.filter2
  ],
  urlParameters: [
    Parameters.apimBaseUrl,
    Parameters.apiId,
    Parameters.nextLink2
  ],
  serializer
};
