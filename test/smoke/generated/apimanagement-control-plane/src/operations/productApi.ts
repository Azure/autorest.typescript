/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClient } from "../apiManagementClient";
import {
  ProductApiListByProductOptionalParams,
  ProductApiListByProductResponse,
  ProductApiCreateOrUpdateResponse,
  ProductApiListByProductNextOptionalParams,
  ProductApiListByProductNextResponse
} from "../models";

/**
 * Class representing a ProductApi.
 */
export class ProductApi {
  private readonly client: ApiManagementClient;

  /**
   * Initialize a new instance of the class ProductApi class.
   * @param client Reference to the service client
   */
  constructor(client: ApiManagementClient) {
    this.client = client;
  }

  /**
   * Lists a collection of the APIs associated with a product.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  listByProduct(
    apimBaseUrl: string,
    productId: string,
    options?: ProductApiListByProductOptionalParams
  ): Promise<ProductApiListByProductResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, productId, options: operationOptions },
      listByProductOperationSpec
    ) as Promise<ProductApiListByProductResponse>;
  }

  /**
   * Adds an API to the specified product.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param apiId API identifier. Must be unique in the current API Management service instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  createOrUpdate(
    apimBaseUrl: string,
    apiId: string,
    productId: string,
    options?: coreHttp.OperationOptions
  ): Promise<ProductApiCreateOrUpdateResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, apiId, productId, options: operationOptions },
      createOrUpdateOperationSpec
    ) as Promise<ProductApiCreateOrUpdateResponse>;
  }

  /**
   * Deletes the specified API from the specified product.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param apiId API identifier. Must be unique in the current API Management service instance.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param options The options parameters.
   */
  delete(
    apimBaseUrl: string,
    apiId: string,
    productId: string,
    options?: coreHttp.OperationOptions
  ): Promise<coreHttp.RestResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, apiId, productId, options: operationOptions },
      deleteOperationSpec
    ) as Promise<coreHttp.RestResponse>;
  }

  /**
   * ListByProductNext
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param productId Product identifier. Must be unique in the current API Management service instance.
   * @param nextLink The nextLink from the previous successful call to the ListByProduct method.
   * @param options The options parameters.
   */
  listByProductNext(
    apimBaseUrl: string,
    productId: string,
    nextLink: string,
    options?: ProductApiListByProductNextOptionalParams
  ): Promise<ProductApiListByProductNextResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, productId, nextLink, options: operationOptions },
      listByProductNextOperationSpec
    ) as Promise<ProductApiListByProductNextResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listByProductOperationSpec: coreHttp.OperationSpec = {
  path: "/products/{productId}/apis",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ApiCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top,
    Parameters.skip,
    Parameters.filter11
  ],
  urlParameters: [Parameters.apimBaseUrl, Parameters.productId],
  serializer
};
const createOrUpdateOperationSpec: coreHttp.OperationSpec = {
  path: "/products/{productId}/apis/{apiId}",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.ApiContract
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.apimBaseUrl,
    Parameters.apiId,
    Parameters.productId
  ],
  serializer
};
const deleteOperationSpec: coreHttp.OperationSpec = {
  path: "/products/{productId}/apis/{apiId}",
  httpMethod: "DELETE",
  responses: {
    204: {},
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [Parameters.apiVersion],
  urlParameters: [
    Parameters.apimBaseUrl,
    Parameters.apiId,
    Parameters.productId
  ],
  serializer
};
const listByProductNextOperationSpec: coreHttp.OperationSpec = {
  path: "{nextLink}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.ApiCollection
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  queryParameters: [
    Parameters.apiVersion,
    Parameters.top,
    Parameters.skip,
    Parameters.filter11
  ],
  urlParameters: [
    Parameters.apimBaseUrl,
    Parameters.productId,
    Parameters.nextLink3
  ],
  serializer
};
