/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ApiManagementClient } from "../apiManagementClient";
import {
  PolicySnippetsListOptionalParams,
  PolicySnippetsListResponse
} from "../models";

/**
 * Class representing a PolicySnippets.
 */
export class PolicySnippets {
  private readonly client: ApiManagementClient;

  /**
   * Initialize a new instance of the class PolicySnippets class.
   * @param client Reference to the service client
   */
  constructor(client: ApiManagementClient) {
    this.client = client;
  }

  /**
   * Lists all policy snippets.
   * @param apimBaseUrl The management endpoint of the API Management service, for example
   *                    https://myapimservice.management.azure-api.net.
   * @param options The options parameters.
   */
  list(
    apimBaseUrl: string,
    options?: PolicySnippetsListOptionalParams
  ): Promise<PolicySnippetsListResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { apimBaseUrl, options: operationOptions },
      listOperationSpec
    ) as Promise<PolicySnippetsListResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const listOperationSpec: coreHttp.OperationSpec = {
  path: "/policySnippets",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.PolicySnippetsCollection
    }
  },
  queryParameters: [Parameters.scope, Parameters.apiVersion],
  urlParameters: [Parameters.apimBaseUrl],
  serializer
};
