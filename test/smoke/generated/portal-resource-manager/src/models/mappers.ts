/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const ResourceProviderOperationList: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderOperationList",
  type: {
    name: "Composite",
    className: "ResourceProviderOperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ResourceProviderOperation" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceProviderOperation: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderOperation",
  type: {
    name: "Composite",
    className: "ResourceProviderOperation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDataAction: {
        serializedName: "isDataAction",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "ResourceProviderOperationDisplay"
        }
      }
    }
  }
};

export const ResourceProviderOperationDisplay: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderOperationDisplay",
  type: {
    name: "Composite",
    className: "ResourceProviderOperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: coreHttp.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorDefinition"
        }
      }
    }
  }
};

export const ErrorDefinition: coreHttp.CompositeMapper = {
  serializedName: "ErrorDefinition",
  type: {
    name: "Composite",
    className: "ErrorDefinition",
    modelProperties: {
      code: {
        serializedName: "code",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ErrorDefinition" } }
        }
      }
    }
  }
};

export const Dashboard: coreHttp.CompositeMapper = {
  serializedName: "Dashboard",
  type: {
    name: "Composite",
    className: "Dashboard",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      },
      lenses: {
        serializedName: "properties.lenses",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "DashboardLens" } }
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" }, serializedName: "any" }
        }
      }
    }
  }
};

export const DashboardLens: coreHttp.CompositeMapper = {
  serializedName: "DashboardLens",
  type: {
    name: "Composite",
    className: "DashboardLens",
    modelProperties: {
      order: {
        serializedName: "order",
        required: true,
        type: {
          name: "Number"
        }
      },
      parts: {
        serializedName: "parts",
        required: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "DashboardParts" } }
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" }, serializedName: "any" }
        }
      }
    }
  }
};

export const DashboardParts: coreHttp.CompositeMapper = {
  serializedName: "DashboardParts",
  type: {
    name: "Composite",
    className: "DashboardParts",
    modelProperties: {
      position: {
        serializedName: "position",
        type: {
          name: "Composite",
          className: "DashboardPartsPosition"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" }, serializedName: "any" }
        }
      }
    }
  }
};

export const DashboardPartsPosition: coreHttp.CompositeMapper = {
  serializedName: "DashboardPartsPosition",
  type: {
    name: "Composite",
    className: "DashboardPartsPosition",
    modelProperties: {
      x: {
        serializedName: "x",
        required: true,
        type: {
          name: "Number"
        }
      },
      y: {
        serializedName: "y",
        required: true,
        type: {
          name: "Number"
        }
      },
      rowSpan: {
        serializedName: "rowSpan",
        required: true,
        type: {
          name: "Number"
        }
      },
      colSpan: {
        serializedName: "colSpan",
        required: true,
        type: {
          name: "Number"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" }, serializedName: "any" }
        }
      }
    }
  }
};

export const PatchableDashboard: coreHttp.CompositeMapper = {
  serializedName: "PatchableDashboard",
  type: {
    name: "Composite",
    className: "PatchableDashboard",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      },
      lenses: {
        serializedName: "properties.lenses",
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "DashboardLens" } }
        }
      },
      metadata: {
        serializedName: "properties.metadata",
        type: {
          name: "Dictionary",
          value: { type: { name: "any" }, serializedName: "any" }
        }
      }
    }
  }
};

export const DashboardListResult: coreHttp.CompositeMapper = {
  serializedName: "DashboardListResult",
  type: {
    name: "Composite",
    className: "DashboardListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Dashboard" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
