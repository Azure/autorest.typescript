/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * List of Operations
 */
export interface OperationList {
  /**
   * Array of operations
   */
  value?: Operation[];
  /**
   * URI to the next page of operations.
   */
  nextLink?: string;
}

/**
 * Describes the supported rest operation.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.
   */
  name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   */
  display?: Display;
}

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface Display {
  /**
   * The localized friendly form of the resource provider name; it is expected to also include the publisher/company responsible. It should use Title Casing and begin with "Microsoft" for 1st party services. e.g. "Microsoft Monitoring Insights" or "Microsoft Compute."
   */
  provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation; it should match the public documentation for the resource provider.
   */
  resource?: string;
  /**
   * The localized friendly name for the operation, as it should be shown to the user.
   */
  operation?: string;
  /**
   * The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise it will be used in tool tips and detailed views.
   */
  description?: string;
}

/**
 * List of keyvault quotas.
 */
export interface QuotaList {
  /**
   * List of keyvault quotas.
   */
  value?: Quota[];
  /**
   * URI to the next page.
   */
  nextLink?: string;
}

/**
 * Base Resource Object
 */
export interface Resource {
  /**
   * URI of the resource.
   */
  readonly id?: string;
  /**
   * Name of the resource.
   */
  readonly name?: string;
  /**
   * Type of resource.
   */
  readonly type?: string;
  /**
   * Location where resource is location.
   */
  readonly location?: string;
  /**
   * List of key value pairs.
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * KeyVault Quota.
 */
export type Quota = Resource & {
  /**
   * Properties for keyvault quotas.
   */
  properties?: any;
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationList;
  };
};

/**
 * Contains response data for the list operation.
 */
export type QuotasListResponse = QuotaList & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: QuotaList;
  };
};

/**
 * Optional parameters.
 */
export interface KeyVaultAdminClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
