/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { QnAMakerClient } from "../qnAMakerClient";
import { OperationsGetDetailsResponse } from "../models";

/**
 * Class representing a Operations.
 */
export class Operations {
  private readonly client: QnAMakerClient;

  /**
   * Initialize a new instance of the class Operations class.
   * @param client Reference to the service client
   */
  constructor(client: QnAMakerClient) {
    this.client = client;
  }

  /**
   * Gets details of a specific long running operation.
   * @param operationId Operation id.
   * @param options The options parameters.
   */
  getDetails(
    operationId: string,
    options?: coreHttp.OperationOptions
  ): Promise<OperationsGetDetailsResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { operationId, options: operationOptions },
      getDetailsOperationSpec
    ) as Promise<OperationsGetDetailsResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const getDetailsOperationSpec: coreHttp.OperationSpec = {
  path: "/operations/{operationId}",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.Operation,
      headersMapper: Mappers.OperationsGetDetailsHeaders
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  urlParameters: [Parameters.endpoint, Parameters.operationId],
  serializer
};
