/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const Services: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Services",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ServiceProperties" }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceProperties: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceProperties",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      activeAlerts: {
        serializedName: "activeAlerts",
        type: {
          name: "Number"
        }
      },
      additionalInformation: {
        serializedName: "additionalInformation",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      customNotificationEmails: {
        serializedName: "customNotificationEmails",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      health: {
        serializedName: "health",
        type: {
          name: "String"
        }
      },
      lastDisabled: {
        serializedName: "lastDisabled",
        type: {
          name: "DateTime"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      monitoringConfigurationsComputed: {
        serializedName: "monitoringConfigurationsComputed",
        type: {
          name: "any"
        }
      },
      monitoringConfigurationsCustomized: {
        serializedName: "monitoringConfigurationsCustomized",
        type: {
          name: "any"
        }
      },
      notificationEmailEnabled: {
        serializedName: "notificationEmailEnabled",
        type: {
          name: "Boolean"
        }
      },
      notificationEmailEnabledForGlobalAdmins: {
        serializedName: "notificationEmailEnabledForGlobalAdmins",
        type: {
          name: "Boolean"
        }
      },
      notificationEmailsEnabledForGlobalAdmins: {
        serializedName: "notificationEmailsEnabledForGlobalAdmins",
        type: {
          name: "Boolean"
        }
      },
      notificationEmails: {
        serializedName: "notificationEmails",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      originalDisabledState: {
        serializedName: "originalDisabledState",
        type: {
          name: "Boolean"
        }
      },
      resolvedAlerts: {
        serializedName: "resolvedAlerts",
        type: {
          name: "Number"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "String"
        }
      },
      serviceName: {
        serializedName: "serviceName",
        type: {
          name: "String"
        }
      },
      signature: {
        serializedName: "signature",
        type: {
          name: "String"
        }
      },
      simpleProperties: {
        serializedName: "simpleProperties",
        type: {
          name: "any"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Alerts: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Alerts",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Alert" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Alert: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Alert",
    modelProperties: {
      alertId: {
        serializedName: "alertId",
        type: {
          name: "Uuid"
        }
      },
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      shortName: {
        serializedName: "shortName",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      remediation: {
        serializedName: "remediation",
        type: {
          name: "String"
        }
      },
      relatedLinks: {
        serializedName: "relatedLinks",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "HelpLink" } }
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      },
      additionalInformation: {
        serializedName: "additionalInformation",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AdditionalInformation" }
          }
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      resolvedDate: {
        serializedName: "resolvedDate",
        type: {
          name: "DateTime"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      monitorRoleType: {
        serializedName: "monitorRoleType",
        type: {
          name: "String"
        }
      },
      activeAlertProperties: {
        serializedName: "activeAlertProperties",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      resolvedAlertProperties: {
        serializedName: "resolvedAlertProperties",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "Uuid"
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const HelpLink: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "HelpLink",
    modelProperties: {
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      url: {
        serializedName: "url",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdditionalInformation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdditionalInformation",
    modelProperties: {
      titleName: {
        serializedName: "titleName",
        type: {
          name: "String"
        }
      },
      titleValue: {
        serializedName: "titleValue",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "any"
        }
      },
      hasProperties: {
        serializedName: "hasProperties",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Item: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Item",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddsConfiguration: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddsConfiguration",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Dimensions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Dimensions",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Dimension" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Dimension: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Dimension",
    modelProperties: {
      health: {
        serializedName: "health",
        type: {
          name: "String"
        }
      },
      simpleProperties: {
        serializedName: "simpleProperties",
        type: {
          name: "any"
        }
      },
      activeAlerts: {
        serializedName: "activeAlerts",
        type: {
          name: "Number"
        }
      },
      additionalInformation: {
        serializedName: "additionalInformation",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      resolvedAlerts: {
        serializedName: "resolvedAlerts",
        type: {
          name: "Number"
        }
      },
      signature: {
        serializedName: "signature",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddsServiceMembers: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddsServiceMembers",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AddsServiceMember" }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AddsServiceMember: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AddsServiceMember",
    modelProperties: {
      domainName: {
        serializedName: "domainName",
        type: {
          name: "String"
        }
      },
      siteName: {
        serializedName: "siteName",
        type: {
          name: "String"
        }
      },
      addsRoles: {
        serializedName: "addsRoles",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      gcReachable: {
        serializedName: "gcReachable",
        type: {
          name: "Boolean"
        }
      },
      isAdvertising: {
        serializedName: "isAdvertising",
        type: {
          name: "Boolean"
        }
      },
      pdcReachable: {
        serializedName: "pdcReachable",
        type: {
          name: "Boolean"
        }
      },
      sysvolState: {
        serializedName: "sysvolState",
        type: {
          name: "Boolean"
        }
      },
      dcTypes: {
        serializedName: "dcTypes",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "String"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      activeAlerts: {
        serializedName: "activeAlerts",
        type: {
          name: "Number"
        }
      },
      additionalInformation: {
        serializedName: "additionalInformation",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      disabledReason: {
        serializedName: "disabledReason",
        type: {
          name: "Number"
        }
      },
      installedQfes: {
        serializedName: "installedQfes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Hotfix" } }
        }
      },
      lastDisabled: {
        serializedName: "lastDisabled",
        type: {
          name: "DateTime"
        }
      },
      lastReboot: {
        serializedName: "lastReboot",
        type: {
          name: "DateTime"
        }
      },
      lastServerReportedMonitoringLevelChange: {
        serializedName: "lastServerReportedMonitoringLevelChange",
        type: {
          name: "DateTime"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String"
        }
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String"
        }
      },
      monitoringConfigurationsComputed: {
        serializedName: "monitoringConfigurationsComputed",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      monitoringConfigurationsCustomized: {
        serializedName: "monitoringConfigurationsCustomized",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      recommendedQfes: {
        serializedName: "recommendedQfes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Hotfix" } }
        }
      },
      resolvedAlerts: {
        serializedName: "resolvedAlerts",
        type: {
          name: "Number"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      serverReportedMonitoringLevel: {
        serializedName: "serverReportedMonitoringLevel",
        type: {
          name: "Enum",
          allowedValues: ["Partial", "Full", "Off"]
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Hotfix: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Hotfix",
    modelProperties: {
      kbName: {
        serializedName: "kbName",
        type: {
          name: "String"
        }
      },
      link: {
        serializedName: "link",
        type: {
          name: "String"
        }
      },
      installedDate: {
        serializedName: "installedDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UserPreference: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserPreference",
    modelProperties: {
      metricNames: {
        serializedName: "metricNames",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ForestSummary: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ForestSummary",
    modelProperties: {
      forestName: {
        serializedName: "forestName",
        type: {
          name: "String"
        }
      },
      domainCount: {
        serializedName: "domainCount",
        type: {
          name: "Number"
        }
      },
      siteCount: {
        serializedName: "siteCount",
        type: {
          name: "Number"
        }
      },
      monitoredDcCount: {
        serializedName: "monitoredDcCount",
        type: {
          name: "Number"
        }
      },
      totalDcCount: {
        serializedName: "totalDcCount",
        type: {
          name: "Number"
        }
      },
      domains: {
        serializedName: "domains",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      sites: {
        serializedName: "sites",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const MetricSets: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricSets",
    modelProperties: {
      sets: {
        serializedName: "sets",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MetricSet" } }
        }
      },
      timeStamps: {
        serializedName: "timeStamps",
        type: {
          name: "Sequence",
          element: { type: { name: "DateTime" } }
        }
      }
    }
  }
};

export const MetricSet: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricSet",
    modelProperties: {
      setName: {
        serializedName: "setName",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: { type: { name: "Number" } }
        }
      }
    }
  }
};

export const Metrics: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Metrics",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricMetadataList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricMetadataList",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MetricMetadata" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricMetadata: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricMetadata",
    modelProperties: {
      metricsProcessorClassName: {
        serializedName: "metricsProcessorClassName",
        type: {
          name: "String"
        }
      },
      metricName: {
        serializedName: "metricName",
        type: {
          name: "String"
        }
      },
      groupings: {
        serializedName: "groupings",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MetricGroup" } }
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      valueKind: {
        serializedName: "valueKind",
        type: {
          name: "String"
        }
      },
      minValue: {
        serializedName: "minValue",
        type: {
          name: "Number"
        }
      },
      maxValue: {
        serializedName: "maxValue",
        type: {
          name: "Number"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        type: {
          name: "Boolean"
        }
      },
      isPerfCounter: {
        serializedName: "isPerfCounter",
        type: {
          name: "Boolean"
        }
      },
      isDevOps: {
        serializedName: "isDevOps",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MetricGroup: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MetricGroup",
    modelProperties: {
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      invisibleForUi: {
        serializedName: "invisibleForUi",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ReplicationDetailsList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicationDetailsList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ReplicationSummary" }
          }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationSummary: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicationSummary",
    modelProperties: {
      targetServer: {
        serializedName: "targetServer",
        type: {
          name: "String"
        }
      },
      site: {
        serializedName: "site",
        type: {
          name: "String"
        }
      },
      domain: {
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      lastAttemptedSync: {
        serializedName: "lastAttemptedSync",
        type: {
          name: "DateTime"
        }
      },
      lastSuccessfulSync: {
        serializedName: "lastSuccessfulSync",
        type: {
          name: "DateTime"
        }
      },
      inboundNeighborCollection: {
        serializedName: "inboundNeighborCollection",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "InboundReplicationNeighbor" }
          }
        }
      }
    }
  }
};

export const InboundReplicationNeighbor: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InboundReplicationNeighbor",
    modelProperties: {
      sourceDomainController: {
        serializedName: "sourceDomainController",
        type: {
          name: "String"
        }
      },
      consecutiveFailureCount: {
        serializedName: "consecutiveFailureCount",
        type: {
          name: "Number"
        }
      },
      namingContext: {
        serializedName: "namingContext",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      lastAttemptedSync: {
        serializedName: "lastAttemptedSync",
        type: {
          name: "DateTime"
        }
      },
      lastSuccessfulSync: {
        serializedName: "lastSuccessfulSync",
        type: {
          name: "DateTime"
        }
      },
      lastErrorCode: {
        serializedName: "lastErrorCode",
        type: {
          name: "Number"
        }
      },
      lastErrorMessage: {
        serializedName: "lastErrorMessage",
        type: {
          name: "String"
        }
      },
      errorTitle: {
        serializedName: "errorTitle",
        type: {
          name: "String"
        }
      },
      errorDescription: {
        serializedName: "errorDescription",
        type: {
          name: "String"
        }
      },
      fixLink: {
        serializedName: "fixLink",
        type: {
          name: "String"
        }
      },
      fixDetails: {
        serializedName: "fixDetails",
        type: {
          name: "String"
        }
      },
      additionalInfo: {
        serializedName: "additionalInfo",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReplicationStatus: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicationStatus",
    modelProperties: {
      forestName: {
        serializedName: "forestName",
        type: {
          name: "String"
        }
      },
      totalDcCount: {
        serializedName: "totalDcCount",
        type: {
          name: "Number"
        }
      },
      errorDcCount: {
        serializedName: "errorDcCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const ReplicationSummaryList: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ReplicationSummaryList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ReplicationSummary" }
          }
        }
      }
    }
  }
};

export const ServiceMembers: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceMembers",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ServiceMember" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceMember: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceMember",
    modelProperties: {
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "String"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      activeAlerts: {
        serializedName: "activeAlerts",
        type: {
          name: "Number"
        }
      },
      additionalInformation: {
        serializedName: "additionalInformation",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      dimensions: {
        serializedName: "dimensions",
        type: {
          name: "any"
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      disabledReason: {
        serializedName: "disabledReason",
        type: {
          name: "Number"
        }
      },
      installedQfes: {
        serializedName: "installedQfes",
        type: {
          name: "any"
        }
      },
      lastDisabled: {
        serializedName: "lastDisabled",
        type: {
          name: "DateTime"
        }
      },
      lastReboot: {
        serializedName: "lastReboot",
        type: {
          name: "DateTime"
        }
      },
      lastServerReportedMonitoringLevelChange: {
        serializedName: "lastServerReportedMonitoringLevelChange",
        type: {
          name: "DateTime"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String"
        }
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String"
        }
      },
      monitoringConfigurationsComputed: {
        serializedName: "monitoringConfigurationsComputed",
        type: {
          name: "any"
        }
      },
      monitoringConfigurationsCustomized: {
        serializedName: "monitoringConfigurationsCustomized",
        type: {
          name: "any"
        }
      },
      osName: {
        serializedName: "osName",
        type: {
          name: "String"
        }
      },
      osVersion: {
        serializedName: "osVersion",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "any"
        }
      },
      recommendedQfes: {
        serializedName: "recommendedQfes",
        type: {
          name: "any"
        }
      },
      resolvedAlerts: {
        serializedName: "resolvedAlerts",
        type: {
          name: "Number"
        }
      },
      role: {
        serializedName: "role",
        type: {
          name: "String"
        }
      },
      serverReportedMonitoringLevel: {
        serializedName: "serverReportedMonitoringLevel",
        type: {
          name: "Enum",
          allowedValues: ["Partial", "Full", "Off"]
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Credentials: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Credentials",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Credential" } }
        }
      }
    }
  }
};

export const Credential: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Credential",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      credentialData: {
        serializedName: "credentialData",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const OperationListResponse: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OperationListResponse",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        readOnly: true,
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const Tenant: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Tenant",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      aadLicense: {
        serializedName: "aadLicense",
        type: {
          name: "String"
        }
      },
      aadPremium: {
        serializedName: "aadPremium",
        type: {
          name: "Boolean"
        }
      },
      agentAutoUpdate: {
        serializedName: "agentAutoUpdate",
        type: {
          name: "Boolean"
        }
      },
      alertSuppressionTimeInMins: {
        serializedName: "alertSuppressionTimeInMins",
        type: {
          name: "Number"
        }
      },
      consentedToMicrosoftDevOps: {
        serializedName: "consentedToMicrosoftDevOps",
        type: {
          name: "Boolean"
        }
      },
      countryLetterCode: {
        serializedName: "countryLetterCode",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      devOpsTtl: {
        serializedName: "devOpsTtl",
        type: {
          name: "DateTime"
        }
      },
      disabled: {
        serializedName: "disabled",
        type: {
          name: "Boolean"
        }
      },
      disabledReason: {
        serializedName: "disabledReason",
        type: {
          name: "Number"
        }
      },
      globalAdminsEmail: {
        serializedName: "globalAdminsEmail",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      initialDomain: {
        serializedName: "initialDomain",
        type: {
          name: "String"
        }
      },
      lastDisabled: {
        serializedName: "lastDisabled",
        type: {
          name: "DateTime"
        }
      },
      lastVerified: {
        serializedName: "lastVerified",
        type: {
          name: "DateTime"
        }
      },
      onboardingAllowed: {
        serializedName: "onboardingAllowed",
        type: {
          name: "Boolean"
        }
      },
      onboarded: {
        serializedName: "onboarded",
        type: {
          name: "Boolean"
        }
      },
      pksCertificate: {
        serializedName: "pksCertificate",
        type: {
          name: "any"
        }
      },
      privatePreviewTenant: {
        serializedName: "privatePreviewTenant",
        type: {
          name: "Boolean"
        }
      },
      tenantInQuarantine: {
        serializedName: "tenantInQuarantine",
        type: {
          name: "Boolean"
        }
      },
      tenantName: {
        serializedName: "tenantName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Result: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Result",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ErrorCounts: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorCounts",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ErrorCount" } }
        }
      }
    }
  }
};

export const ErrorCount: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorCount",
    modelProperties: {
      errorBucket: {
        serializedName: "errorBucket",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      truncated: {
        serializedName: "truncated",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MergedExportErrors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MergedExportErrors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "MergedExportError" }
          }
        }
      }
    }
  }
};

export const MergedExportError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "MergedExportError",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      incomingObjectDisplayName: {
        serializedName: "incomingObjectDisplayName",
        type: {
          name: "String"
        }
      },
      incomingObjectType: {
        serializedName: "incomingObjectType",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      attributeName: {
        serializedName: "attributeName",
        type: {
          name: "String"
        }
      },
      attributeValue: {
        serializedName: "attributeValue",
        type: {
          name: "String"
        }
      },
      timeOccurred: {
        serializedName: "timeOccurred",
        type: {
          name: "DateTime"
        }
      },
      timeFirstOccurred: {
        serializedName: "timeFirstOccurred",
        type: {
          name: "DateTime"
        }
      },
      csObjectId: {
        serializedName: "csObjectId",
        type: {
          name: "String"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      },
      incomingObject: {
        serializedName: "incomingObject",
        type: {
          name: "Composite",
          className: "AssociatedObject"
        }
      },
      existingObject: {
        serializedName: "existingObject",
        type: {
          name: "Composite",
          className: "AssociatedObject"
        }
      },
      modifiedOrRemovedAttributeValue: {
        serializedName: "modifiedOrRemovedAttributeValue",
        type: {
          name: "String"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "Uuid"
        }
      },
      samAccountName: {
        serializedName: "samAccountName",
        type: {
          name: "String"
        }
      },
      serverErrorDetail: {
        serializedName: "serverErrorDetail",
        type: {
          name: "String"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "Uuid"
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "Uuid"
        }
      },
      mergedEntityId: {
        serializedName: "mergedEntityId",
        type: {
          name: "Uuid"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      exportErrorStatus: {
        serializedName: "exportErrorStatus",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const AssociatedObject: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AssociatedObject",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      distinguishedName: {
        serializedName: "distinguishedName",
        type: {
          name: "String"
        }
      },
      lastDirSyncTime: {
        serializedName: "lastDirSyncTime",
        type: {
          name: "DateTime"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "objectGuid",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      onpremisesUserPrincipalName: {
        serializedName: "onpremisesUserPrincipalName",
        type: {
          name: "String"
        }
      },
      proxyAddresses: {
        serializedName: "proxyAddresses",
        type: {
          name: "String"
        }
      },
      sourceAnchor: {
        serializedName: "sourceAnchor",
        type: {
          name: "String"
        }
      },
      sourceOfAuthority: {
        serializedName: "sourceOfAuthority",
        type: {
          name: "String"
        }
      },
      timeOccurred: {
        serializedName: "timeOccurred",
        type: {
          name: "DateTime"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportStatuses: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportStatuses",
    modelProperties: {
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ExportStatus" } }
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportStatus: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportStatus",
    modelProperties: {
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "Uuid"
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "Uuid"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AlertFeedback: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertFeedback",
    modelProperties: {
      level: {
        serializedName: "level",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      shortName: {
        serializedName: "shortName",
        type: {
          name: "String"
        }
      },
      feedback: {
        serializedName: "feedback",
        type: {
          name: "String"
        }
      },
      comment: {
        serializedName: "comment",
        type: {
          name: "String"
        }
      },
      consentedToShare: {
        serializedName: "consentedToShare",
        type: {
          name: "Boolean"
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const AlertFeedbacks: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlertFeedbacks",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AlertFeedback" } }
        }
      }
    }
  }
};

export const Items: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Items",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      }
    }
  }
};

export const ErrorReportUsersEntries: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorReportUsersEntries",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ErrorReportUsersEntry" }
          }
        }
      }
    }
  }
};

export const ErrorReportUsersEntry: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorReportUsersEntry",
    modelProperties: {
      userId: {
        serializedName: "userId",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      uniqueIpAddresses: {
        serializedName: "uniqueIpAddresses",
        type: {
          name: "String"
        }
      },
      totalErrorAttempts: {
        serializedName: "totalErrorAttempts",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Connectors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Connectors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Connector" } }
        }
      }
    }
  }
};

export const Connector: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Connector",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      schemaXml: {
        serializedName: "schemaXml",
        type: {
          name: "String"
        }
      },
      passwordManagementSettings: {
        serializedName: "passwordManagementSettings",
        type: {
          name: "any"
        }
      },
      passwordHashSyncConfiguration: {
        serializedName: "passwordHashSyncConfiguration",
        type: {
          name: "any"
        }
      },
      timeCreated: {
        serializedName: "timeCreated",
        type: {
          name: "DateTime"
        }
      },
      timeLastModified: {
        serializedName: "timeLastModified",
        type: {
          name: "DateTime"
        }
      },
      partitions: {
        serializedName: "partitions",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Partition" } }
        }
      },
      runProfiles: {
        serializedName: "runProfiles",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "RunProfile" } }
        }
      },
      classesIncluded: {
        serializedName: "classesIncluded",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      attributesIncluded: {
        serializedName: "attributesIncluded",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const Partition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Partition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      timeCreated: {
        serializedName: "timeCreated",
        type: {
          name: "DateTime"
        }
      },
      timeLastModified: {
        serializedName: "timeLastModified",
        type: {
          name: "DateTime"
        }
      },
      partitionScope: {
        serializedName: "partitionScope",
        type: {
          name: "Composite",
          className: "PartitionScope"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      isDomain: {
        serializedName: "isDomain",
        type: {
          name: "Boolean"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PartitionScope: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PartitionScope",
    modelProperties: {
      isDefault: {
        serializedName: "isDefault",
        type: {
          name: "Boolean"
        }
      },
      objectClasses: {
        serializedName: "objectClasses",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      containersIncluded: {
        serializedName: "containersIncluded",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      containersExcluded: {
        serializedName: "containersExcluded",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const RunProfile: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RunProfile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      runSteps: {
        serializedName: "runSteps",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "RunStep" } }
        }
      }
    }
  }
};

export const RunStep: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RunStep",
    modelProperties: {
      batchSize: {
        serializedName: "batchSize",
        type: {
          name: "Number"
        }
      },
      objectProcessLimit: {
        serializedName: "objectProcessLimit",
        type: {
          name: "Number"
        }
      },
      objectDeleteLimit: {
        serializedName: "objectDeleteLimit",
        type: {
          name: "Number"
        }
      },
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "Number"
        }
      },
      partitionId: {
        serializedName: "partitionId",
        type: {
          name: "String"
        }
      },
      operationType: {
        serializedName: "operationType",
        type: {
          name: "Number"
        }
      },
      timeout: {
        serializedName: "timeout",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataFreshnessDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DataFreshnessDetails",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      }
    }
  }
};

export const GlobalConfigurations: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalConfigurations",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "GlobalConfiguration" }
          }
        }
      }
    }
  }
};

export const GlobalConfiguration: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GlobalConfiguration",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      schemaXml: {
        serializedName: "schemaXml",
        type: {
          name: "String"
        }
      },
      passwordSyncEnabled: {
        serializedName: "passwordSyncEnabled",
        type: {
          name: "Boolean"
        }
      },
      numSavedPwdEvent: {
        serializedName: "numSavedPwdEvent",
        type: {
          name: "Number"
        }
      },
      featureSet: {
        serializedName: "featureSet",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Item" } }
        }
      }
    }
  }
};

export const ServiceConfiguration: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ServiceConfiguration",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      serviceType: {
        serializedName: "serviceType",
        type: {
          name: "Number"
        }
      },
      serviceAccount: {
        serializedName: "serviceAccount",
        type: {
          name: "String"
        }
      },
      sqlServer: {
        serializedName: "sqlServer",
        type: {
          name: "String"
        }
      },
      sqlVersion: {
        serializedName: "sqlVersion",
        type: {
          name: "String"
        }
      },
      sqlEdition: {
        serializedName: "sqlEdition",
        type: {
          name: "String"
        }
      },
      sqlInstance: {
        serializedName: "sqlInstance",
        type: {
          name: "String"
        }
      },
      sqlDatabaseName: {
        serializedName: "sqlDatabaseName",
        type: {
          name: "String"
        }
      },
      sqlDatabaseSize: {
        serializedName: "sqlDatabaseSize",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RiskyIPBlobUris: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RiskyIPBlobUris",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "RiskyIPBlobUri" } }
        }
      }
    }
  }
};

export const RiskyIPBlobUri: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RiskyIPBlobUri",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "String"
        }
      },
      resultSasUri: {
        serializedName: "resultSasUri",
        type: {
          name: "String"
        }
      },
      blobCreateDateTime: {
        serializedName: "blobCreateDateTime",
        type: {
          name: "DateTime"
        }
      },
      jobCompletionTime: {
        serializedName: "jobCompletionTime",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorMetadata: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorMetadata",
    modelProperties: {
      connectors: {
        serializedName: "connectors",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ConnectorMetadataDetails" }
          }
        }
      },
      runProfileNames: {
        serializedName: "runProfileNames",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ConnectorMetadataDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorMetadataDetails",
    modelProperties: {
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      connectorDisplayName: {
        serializedName: "connectorDisplayName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPAddressAggregates: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPAddressAggregates",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "IPAddressAggregate" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      },
      totalCount: {
        serializedName: "totalCount",
        type: {
          name: "Number"
        }
      },
      continuationToken: {
        serializedName: "continuationToken",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPAddressAggregate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPAddressAggregate",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      timestamp: {
        serializedName: "timestamp",
        type: {
          name: "String"
        }
      },
      firstAuditTimestamp: {
        serializedName: "firstAuditTimestamp",
        type: {
          name: "String"
        }
      },
      lastAuditTimestamp: {
        serializedName: "lastAuditTimestamp",
        type: {
          name: "String"
        }
      },
      extranetLockoutErrorCount: {
        serializedName: "extranetLockoutErrorCount",
        type: {
          name: "Number"
        }
      },
      badPasswordErrorCount: {
        serializedName: "badPasswordErrorCount",
        type: {
          name: "Number"
        }
      },
      uniqueUsernamesAttemptedCount: {
        serializedName: "uniqueUsernamesAttemptedCount",
        type: {
          name: "Number"
        }
      },
      attemptCountThresholdIsExceeded: {
        serializedName: "attemptCountThresholdIsExceeded",
        type: {
          name: "Boolean"
        }
      },
      timeSpan: {
        serializedName: "timeSpan",
        type: {
          name: "String"
        }
      },
      isWhitelistedIpAddress: {
        serializedName: "isWhitelistedIpAddress",
        type: {
          name: "Boolean"
        }
      },
      networkLocation: {
        serializedName: "networkLocation",
        type: {
          name: "String"
        }
      },
      attemptCountThresholdOnTrigger: {
        serializedName: "attemptCountThresholdOnTrigger",
        type: {
          name: "Number"
        }
      },
      attemptThresholdTypeOnTrigger: {
        serializedName: "attemptThresholdTypeOnTrigger",
        type: {
          name: "String"
        }
      },
      geographicLocation: {
        serializedName: "geographicLocation",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IPAddressAggregateSetting: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "IPAddressAggregateSetting",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      badPasswordAndExtranetLockoutCombinedDailyThreshold: {
        serializedName: "badPasswordAndExtranetLockoutCombinedDailyThreshold",
        type: {
          name: "Number"
        }
      },
      badPasswordAndExtranetLockoutCombinedHourlyThreshold: {
        serializedName: "badPasswordAndExtranetLockoutCombinedHourlyThreshold",
        type: {
          name: "Number"
        }
      },
      extranetLockoutDailyThreshold: {
        serializedName: "extranetLockoutDailyThreshold",
        type: {
          name: "Number"
        }
      },
      extranetLockoutHourlyThreshold: {
        serializedName: "extranetLockoutHourlyThreshold",
        type: {
          name: "Number"
        }
      },
      emailNotificationEnabled: {
        serializedName: "emailNotificationEnabled",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const Agent: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Agent",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      machineId: {
        serializedName: "machineId",
        type: {
          name: "String"
        }
      },
      credential: {
        serializedName: "credential",
        type: {
          name: "any"
        }
      },
      machineName: {
        serializedName: "machineName",
        type: {
          name: "String"
        }
      },
      agentVersion: {
        serializedName: "agentVersion",
        type: {
          name: "String"
        }
      },
      createdDate: {
        serializedName: "createdDate",
        type: {
          name: "DateTime"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttributeDelta: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AttributeDelta",
    modelProperties: {
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ValueDelta" } }
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      valueType: {
        serializedName: "valueType",
        type: {
          name: "String"
        }
      },
      multiValued: {
        serializedName: "multiValued",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ValueDelta: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValueDelta",
    modelProperties: {
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttributeMapping: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AttributeMapping",
    modelProperties: {
      mappingSource: {
        serializedName: "mappingSource",
        type: {
          name: "Composite",
          className: "AttributeMppingSource"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      destinationAttribute: {
        serializedName: "destinationAttribute",
        type: {
          name: "String"
        }
      },
      contextId: {
        serializedName: "contextId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AttributeMppingSource: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AttributeMppingSource",
    modelProperties: {
      sourceAttribute: {
        serializedName: "sourceAttribute",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      dnPart: {
        serializedName: "dnPart",
        type: {
          name: "Number"
        }
      },
      scriptContext: {
        serializedName: "scriptContext",
        type: {
          name: "String"
        }
      },
      constantValue: {
        serializedName: "constantValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChangeNotReimported: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeNotReimported",
    modelProperties: {
      delta: {
        serializedName: "delta",
        type: {
          name: "Composite",
          className: "ChangeNotReimportedDelta"
        }
      },
      entry: {
        serializedName: "entry",
        type: {
          name: "Composite",
          className: "ChangeNotReimportedEntry"
        }
      }
    }
  }
};

export const ChangeNotReimportedDelta: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeNotReimportedDelta",
    modelProperties: {
      anchor: {
        serializedName: "anchor",
        type: {
          name: "String"
        }
      },
      dnAttributes: {
        serializedName: "dnAttributes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AttributeDelta" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AttributeDelta" } }
        }
      },
      operationType: {
        serializedName: "operationType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ChangeNotReimportedEntry: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ChangeNotReimportedEntry",
    modelProperties: {
      anchor: {
        serializedName: "anchor",
        type: {
          name: "String"
        }
      },
      parentAnchor: {
        serializedName: "parentAnchor",
        type: {
          name: "String"
        }
      },
      primaryObjectClass: {
        serializedName: "primaryObjectClass",
        type: {
          name: "String"
        }
      },
      objectClasses: {
        serializedName: "objectClasses",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      },
      dnAttributes: {
        serializedName: "dnAttributes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AttributeDelta" } }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "AttributeDelta" } }
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorConnectionError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorConnectionError",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "String"
        }
      },
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      timeOccured: {
        serializedName: "timeOccured",
        type: {
          name: "DateTime"
        }
      },
      server: {
        serializedName: "server",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ConnectorConnectionErrors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorConnectionErrors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ConnectorConnectionError" }
          }
        }
      }
    }
  }
};

export const ConnectorObjectError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorObjectError",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "String"
        }
      },
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      entryNumber: {
        serializedName: "entryNumber",
        type: {
          name: "Number"
        }
      },
      lineNumber: {
        serializedName: "lineNumber",
        type: {
          name: "Number"
        }
      },
      columnNumber: {
        serializedName: "columnNumber",
        type: {
          name: "Number"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      },
      anchor: {
        serializedName: "anchor",
        type: {
          name: "String"
        }
      },
      attributeName: {
        serializedName: "attributeName",
        type: {
          name: "String"
        }
      },
      serverErrorDetail: {
        serializedName: "serverErrorDetail",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ConnectorObjectErrors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ConnectorObjectErrors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ConnectorObjectError" }
          }
        }
      }
    }
  }
};

export const Display: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Display",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorDetail: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorDetail",
    modelProperties: {
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      kbUrl: {
        serializedName: "kbUrl",
        type: {
          name: "String"
        }
      },
      detail: {
        serializedName: "detail",
        type: {
          name: "String"
        }
      },
      objectsWithSyncError: {
        serializedName: "objectsWithSyncError",
        type: {
          name: "Composite",
          className: "ObjectWithSyncError"
        }
      },
      objectWithSyncError: {
        serializedName: "objectWithSyncError",
        type: {
          name: "Composite",
          className: "MergedExportError"
        }
      }
    }
  }
};

export const ObjectWithSyncError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ObjectWithSyncError",
    modelProperties: {
      sourceOfAuthority: {
        serializedName: "sourceOfAuthority",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      objectType: {
        serializedName: "objectType",
        type: {
          name: "String"
        }
      },
      attributeName: {
        serializedName: "attributeName",
        type: {
          name: "String"
        }
      },
      attributeValue: {
        serializedName: "attributeValue",
        type: {
          name: "String"
        }
      },
      modififedValue: {
        serializedName: "modififedValue",
        type: {
          name: "String"
        }
      },
      userPrincipalName: {
        serializedName: "userPrincipalName",
        type: {
          name: "String"
        }
      },
      objectGuid: {
        serializedName: "objectGuid",
        type: {
          name: "String"
        }
      },
      attributeMultiValues: {
        serializedName: "attributeMultiValues",
        type: {
          name: "Boolean"
        }
      },
      minLimit: {
        serializedName: "minLimit",
        type: {
          name: "String"
        }
      },
      maxLimit: {
        serializedName: "maxLimit",
        type: {
          name: "String"
        }
      },
      distinguishedName: {
        serializedName: "distinguishedName",
        type: {
          name: "String"
        }
      },
      mail: {
        serializedName: "mail",
        type: {
          name: "String"
        }
      },
      timeOccured: {
        serializedName: "timeOccured",
        type: {
          name: "DateTime"
        }
      },
      errorType: {
        serializedName: "errorType",
        type: {
          name: "String"
        }
      },
      sourceAnchor: {
        serializedName: "sourceAnchor",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportError",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "String"
        }
      },
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      errorCode: {
        serializedName: "errorCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      serverErrorDetail: {
        serializedName: "serverErrorDetail",
        type: {
          name: "String"
        }
      },
      timeFirstOccured: {
        serializedName: "timeFirstOccured",
        type: {
          name: "DateTime"
        }
      },
      retryCount: {
        serializedName: "retryCount",
        type: {
          name: "Number"
        }
      },
      csObjectId: {
        serializedName: "csObjectId",
        type: {
          name: "String"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      },
      minLimit: {
        serializedName: "minLimit",
        type: {
          name: "String"
        }
      },
      maxLimit: {
        serializedName: "maxLimit",
        type: {
          name: "String"
        }
      },
      cloudAnchor: {
        serializedName: "cloudAnchor",
        type: {
          name: "String"
        }
      },
      attributeName: {
        serializedName: "attributeName",
        type: {
          name: "String"
        }
      },
      attributeValue: {
        serializedName: "attributeValue",
        type: {
          name: "String"
        }
      },
      attributeMultiValue: {
        serializedName: "attributeMultiValue",
        type: {
          name: "Boolean"
        }
      },
      objectIdConflict: {
        serializedName: "objectIdConflict",
        type: {
          name: "String"
        }
      },
      samAccountName: {
        serializedName: "samAccountName",
        type: {
          name: "String"
        }
      },
      adObjectType: {
        serializedName: "adObjectType",
        type: {
          name: "String"
        }
      },
      adObjectGuid: {
        serializedName: "adObjectGuid",
        type: {
          name: "String"
        }
      },
      adDisplayName: {
        serializedName: "adDisplayName",
        type: {
          name: "String"
        }
      },
      adSourceOfAuthority: {
        serializedName: "adSourceOfAuthority",
        type: {
          name: "String"
        }
      },
      adSourceAnchor: {
        serializedName: "adSourceAnchor",
        type: {
          name: "String"
        }
      },
      adUserPrincipalName: {
        serializedName: "adUserPrincipalName",
        type: {
          name: "String"
        }
      },
      adDistinguishedName: {
        serializedName: "adDistinguishedName",
        type: {
          name: "String"
        }
      },
      adMail: {
        serializedName: "adMail",
        type: {
          name: "String"
        }
      },
      timeOccured: {
        serializedName: "timeOccured",
        type: {
          name: "DateTime"
        }
      },
      aadObjectType: {
        serializedName: "aadObjectType",
        type: {
          name: "String"
        }
      },
      aadObjectGuid: {
        serializedName: "aadObjectGuid",
        type: {
          name: "String"
        }
      },
      aadDisplayName: {
        serializedName: "aadDisplayName",
        type: {
          name: "String"
        }
      },
      aadSourceOfAuthority: {
        serializedName: "aadSourceOfAuthority",
        type: {
          name: "String"
        }
      },
      aadUserPrincipalName: {
        serializedName: "aadUserPrincipalName",
        type: {
          name: "String"
        }
      },
      aadDistinguishedName: {
        serializedName: "aadDistinguishedName",
        type: {
          name: "String"
        }
      },
      aadMail: {
        serializedName: "aadMail",
        type: {
          name: "String"
        }
      },
      lastDirSyncTime: {
        serializedName: "lastDirSyncTime",
        type: {
          name: "DateTime"
        }
      },
      modifiedAttributeValue: {
        serializedName: "modifiedAttributeValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExportErrors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExportErrors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ExportError" } }
        }
      }
    }
  }
};

export const ExtensionErrorInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ExtensionErrorInfo",
    modelProperties: {
      extensionName: {
        serializedName: "extensionName",
        type: {
          name: "String"
        }
      },
      extensionContext: {
        serializedName: "extensionContext",
        type: {
          name: "String"
        }
      },
      callStack: {
        serializedName: "callStack",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Hotfixes: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Hotfixes",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Hotfix" } }
        }
      }
    }
  }
};

export const ImportErrors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportErrors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ImportError" } }
        }
      }
    }
  }
};

export const ImportError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ImportError",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      runStepResultId: {
        serializedName: "runStepResultId",
        type: {
          name: "String"
        }
      },
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      timeOccurred: {
        serializedName: "timeOccurred",
        type: {
          name: "DateTime"
        }
      },
      timeFirstOccurred: {
        serializedName: "timeFirstOccurred",
        type: {
          name: "DateTime"
        }
      },
      retryCount: {
        serializedName: "retryCount",
        type: {
          name: "Number"
        }
      },
      algorithmStepType: {
        serializedName: "algorithmStepType",
        type: {
          name: "String"
        }
      },
      changeNotReimported: {
        serializedName: "changeNotReimported",
        type: {
          name: "Composite",
          className: "ChangeNotReimported"
        }
      },
      extensionErrorInfo: {
        serializedName: "extensionErrorInfo",
        type: {
          name: "Composite",
          className: "ExtensionErrorInfo"
        }
      },
      ruleErrorInfo: {
        serializedName: "ruleErrorInfo",
        type: {
          name: "Composite",
          className: "RuleErrorInfo"
        }
      },
      csObjectId: {
        serializedName: "csObjectId",
        type: {
          name: "String"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RuleErrorInfo: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RuleErrorInfo",
    modelProperties: {
      attributeMapping: {
        serializedName: "attributeMapping",
        type: {
          name: "Composite",
          className: "AttributeMapping"
        }
      },
      connectorId: {
        serializedName: "connectorId",
        type: {
          name: "String"
        }
      },
      connectorName: {
        serializedName: "connectorName",
        type: {
          name: "String"
        }
      },
      csObjectId: {
        serializedName: "csObjectId",
        type: {
          name: "String"
        }
      },
      dn: {
        serializedName: "dn",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InboundReplicationNeighbors: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "InboundReplicationNeighbors",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "InboundReplicationNeighbor" }
          }
        }
      }
    }
  }
};

export const ModuleConfiguration: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModuleConfiguration",
    modelProperties: {
      agentService: {
        serializedName: "agentService",
        type: {
          name: "String"
        }
      },
      moduleName: {
        serializedName: "moduleName",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ModuleConfigurations: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ModuleConfigurations",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ModuleConfiguration" }
          }
        }
      }
    }
  }
};

export const PasswordManagementSettings: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordManagementSettings",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      extensionFilePath: {
        serializedName: "extensionFilePath",
        type: {
          name: "String"
        }
      },
      connectTo: {
        serializedName: "connectTo",
        type: {
          name: "String"
        }
      },
      connectionTimeout: {
        serializedName: "connectionTimeout",
        type: {
          name: "Number"
        }
      },
      user: {
        serializedName: "user",
        type: {
          name: "String"
        }
      },
      supportedPasswordOperations: {
        serializedName: "supportedPasswordOperations",
        type: {
          name: "String"
        }
      },
      maximumRetryCount: {
        serializedName: "maximumRetryCount",
        type: {
          name: "Number"
        }
      },
      retryIntervalInSeconds: {
        serializedName: "retryIntervalInSeconds",
        type: {
          name: "Number"
        }
      },
      requiresSecureConnection: {
        serializedName: "requiresSecureConnection",
        type: {
          name: "Boolean"
        }
      },
      unlockAccount: {
        serializedName: "unlockAccount",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const PasswordHashSyncConfiguration: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PasswordHashSyncConfiguration",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      target: {
        serializedName: "target",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RunProfiles: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RunProfiles",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "RunProfile" } }
        }
      }
    }
  }
};

export const TabularExportError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TabularExportError",
    modelProperties: {
      serviceId: {
        serializedName: "serviceId",
        type: {
          name: "Uuid"
        }
      },
      serviceMemberId: {
        serializedName: "serviceMemberId",
        type: {
          name: "Uuid"
        }
      },
      mergedEntityId: {
        serializedName: "mergedEntityId",
        type: {
          name: "Uuid"
        }
      },
      tabularExportErrorData: {
        serializedName: "tabularExportErrorData",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TenantOnboardingDetails: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "TenantOnboardingDetails",
    modelProperties: {
      tenantOnboarded: {
        serializedName: "tenantOnboarded",
        type: {
          name: "Boolean"
        }
      },
      onboardingDisplayUrl: {
        serializedName: "onboardingDisplayUrl",
        type: {
          name: "String"
        }
      }
    }
  }
};
