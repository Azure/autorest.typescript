/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { ADHybridHealthService } from "../aDHybridHealthService";
import {
  IPAddressAggregateSetting,
  UpdateIPAddressAggregateSettingsResponse
} from "../models";

/**
 * Class representing a Update.
 */
export class Update {
  private readonly client: ADHybridHealthService;

  /**
   * Initialize a new instance of the class Update class.
   * @param client Reference to the service client
   */
  constructor(client: ADHybridHealthService) {
    this.client = client;
  }

  /**
   * Updates the IP address aggregate settings alert thresholds.
   * @param serviceName The name of the service.
   * @param iPAddressAggregateSetting The IP address aggregate setting object.
   * @param options The options parameters.
   */
  iPAddressAggregateSettings(
    serviceName: string,
    iPAddressAggregateSetting: IPAddressAggregateSetting,
    options?: coreHttp.OperationOptions
  ): Promise<UpdateIPAddressAggregateSettingsResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.client.sendOperationRequest(
      { serviceName, iPAddressAggregateSetting, options: operationOptions },
      iPAddressAggregateSettingsOperationSpec
    ) as Promise<UpdateIPAddressAggregateSettingsResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);

const iPAddressAggregateSettingsOperationSpec: coreHttp.OperationSpec = {
  path:
    "/providers/Microsoft.ADHybridHealthService/services/{serviceName}/ipAddressAggregateSettings",
  httpMethod: "PATCH",
  responses: {
    200: {
      bodyMapper: Mappers.IPAddressAggregateSetting
    }
  },
  requestBody: Parameters.iPAddressAggregateSetting,
  queryParameters: [Parameters.apiVersion],
  urlParameters: [Parameters.$host, Parameters.serviceName],
  headerParameters: [Parameters.contentType],
  serializer
};
