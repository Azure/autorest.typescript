/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const OperationList: coreHttp.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Operation" } }
        }
      }
    }
  }
};

export const Operation: coreHttp.CompositeMapper = {
  serializedName: "Operation",
  type: {
    name: "Composite",
    className: "Operation",
    modelProperties: {
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      origin: {
        serializedName: "origin",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationDisplay: coreHttp.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      description: {
        serializedName: "description",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SubscriptionList: coreHttp.CompositeMapper = {
  serializedName: "SubscriptionList",
  type: {
    name: "Composite",
    className: "SubscriptionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Subscription" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Subscription: coreHttp.CompositeMapper = {
  serializedName: "Subscription",
  type: {
    name: "Composite",
    className: "Subscription",
    modelProperties: {
      delegatedProviderSubscriptionId: {
        serializedName: "delegatedProviderSubscriptionId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      externalReferenceId: {
        serializedName: "externalReferenceId",
        type: {
          name: "String"
        }
      },
      offerId: {
        serializedName: "offerId",
        type: {
          name: "String"
        }
      },
      owner: {
        serializedName: "owner",
        type: {
          name: "String"
        }
      },
      routingResourceManagerType: {
        serializedName: "routingResourceManagerType",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const IdentityHealthCheckReportDefinition: coreHttp.CompositeMapper = {
  serializedName: "IdentityHealthCheckReportDefinition",
  type: {
    name: "Composite",
    className: "IdentityHealthCheckReportDefinition",
    modelProperties: {
      reportStartTimeUtc: {
        serializedName: "reportStartTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      reportEndTimeUtc: {
        serializedName: "reportEndTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      directoryTenants: {
        serializedName: "directoryTenants",
        type: {
          name: "Composite",
          className: "DirectoryTenantHealthReportList"
        }
      }
    }
  }
};

export const DirectoryTenantHealthReportList: coreHttp.CompositeMapper = {
  serializedName: "DirectoryTenantHealthReportList",
  type: {
    name: "Composite",
    className: "DirectoryTenantHealthReportList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DirectoryTenantHealthReport"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DirectoryTenantHealthReport: coreHttp.CompositeMapper = {
  serializedName: "DirectoryTenantHealthReport",
  type: {
    name: "Composite",
    className: "DirectoryTenantHealthReport",
    modelProperties: {
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "String"
        }
      },
      tenantName: {
        serializedName: "tenantName",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      applications: {
        serializedName: "applications",
        type: {
          name: "Composite",
          className: "ApplicationHealthReportList"
        }
      }
    }
  }
};

export const ApplicationHealthReportList: coreHttp.CompositeMapper = {
  serializedName: "ApplicationHealthReportList",
  type: {
    name: "Composite",
    className: "ApplicationHealthReportList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ApplicationHealthReport" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApplicationHealthReport: coreHttp.CompositeMapper = {
  serializedName: "ApplicationHealthReport",
  type: {
    name: "Composite",
    className: "ApplicationHealthReport",
    modelProperties: {
      appId: {
        serializedName: "appId",
        type: {
          name: "String"
        }
      },
      servicePrincipalObjectId: {
        serializedName: "servicePrincipalObjectId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      appRoleAssignments: {
        serializedName: "appRoleAssignments",
        type: {
          name: "Composite",
          className: "AppRoleAssignmentHealthReportList"
        }
      },
      oAuth2PermissionGrants: {
        serializedName: "oAuth2PermissionGrants",
        type: {
          name: "Composite",
          className: "OAuth2PermissionGrantHealthReportList"
        }
      },
      servicePrincipalTags: {
        serializedName: "servicePrincipalTags",
        type: {
          name: "Composite",
          className: "ServicePrincipalTagHealthReportList"
        }
      }
    }
  }
};

export const AppRoleAssignmentHealthReportList: coreHttp.CompositeMapper = {
  serializedName: "AppRoleAssignmentHealthReportList",
  type: {
    name: "Composite",
    className: "AppRoleAssignmentHealthReportList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AppRoleAssignmentHealthReport"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppRoleAssignmentHealthReport: coreHttp.CompositeMapper = {
  serializedName: "AppRoleAssignmentHealthReport",
  type: {
    name: "Composite",
    className: "AppRoleAssignmentHealthReport",
    modelProperties: {
      appRoleAssignment: {
        serializedName: "appRoleAssignment",
        type: {
          name: "Composite",
          className: "AppRoleAssignmentDefinition"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppRoleAssignmentDefinition: coreHttp.CompositeMapper = {
  serializedName: "AppRoleAssignmentDefinition",
  type: {
    name: "Composite",
    className: "AppRoleAssignmentDefinition",
    modelProperties: {
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      client: {
        serializedName: "client",
        type: {
          name: "String"
        }
      },
      roleId: {
        serializedName: "roleId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2PermissionGrantHealthReportList: coreHttp.CompositeMapper = {
  serializedName: "OAuth2PermissionGrantHealthReportList",
  type: {
    name: "Composite",
    className: "OAuth2PermissionGrantHealthReportList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OAuth2PermissionGrantHealthReport"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2PermissionGrantHealthReport: coreHttp.CompositeMapper = {
  serializedName: "OAuth2PermissionGrantHealthReport",
  type: {
    name: "Composite",
    className: "OAuth2PermissionGrantHealthReport",
    modelProperties: {
      oAuth2PermissionGrant: {
        serializedName: "oAuth2PermissionGrant",
        type: {
          name: "Composite",
          className: "OAuth2PermissionGrantDefinition"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OAuth2PermissionGrantDefinition: coreHttp.CompositeMapper = {
  serializedName: "OAuth2PermissionGrantDefinition",
  type: {
    name: "Composite",
    className: "OAuth2PermissionGrantDefinition",
    modelProperties: {
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      client: {
        serializedName: "client",
        type: {
          name: "String"
        }
      },
      scope: {
        serializedName: "scope",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalTagHealthReportList: coreHttp.CompositeMapper = {
  serializedName: "ServicePrincipalTagHealthReportList",
  type: {
    name: "Composite",
    className: "ServicePrincipalTagHealthReportList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServicePrincipalTagHealthReport"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServicePrincipalTagHealthReport: coreHttp.CompositeMapper = {
  serializedName: "ServicePrincipalTagHealthReport",
  type: {
    name: "Composite",
    className: "ServicePrincipalTagHealthReport",
    modelProperties: {
      servicePrincipalTag: {
        serializedName: "servicePrincipalTag",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MoveSubscriptionsDefinition: coreHttp.CompositeMapper = {
  serializedName: "MoveSubscriptionsDefinition",
  type: {
    name: "Composite",
    className: "MoveSubscriptionsDefinition",
    modelProperties: {
      targetDelegatedProviderOffer: {
        serializedName: "targetDelegatedProviderOffer",
        type: {
          name: "String"
        }
      },
      resources: {
        serializedName: "resources",
        required: true,
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "MoveSubscriptionsDefinitionResourcesItem"
          }
        }
      }
    }
  }
};

export const CheckNameAvailabilityDefinition: coreHttp.CompositeMapper = {
  serializedName: "CheckNameAvailabilityDefinition",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CheckNameAvailabilityResponse: coreHttp.CompositeMapper = {
  serializedName: "CheckNameAvailabilityResponse",
  type: {
    name: "Composite",
    className: "CheckNameAvailabilityResponse",
    modelProperties: {
      nameAvailable: {
        serializedName: "nameAvailable",
        type: {
          name: "Boolean"
        }
      },
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanAcquisitionList: coreHttp.CompositeMapper = {
  serializedName: "PlanAcquisitionList",
  type: {
    name: "Composite",
    className: "PlanAcquisitionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "PlanAcquisition" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanAcquisition: coreHttp.CompositeMapper = {
  serializedName: "PlanAcquisition",
  type: {
    name: "Composite",
    className: "PlanAcquisition",
    modelProperties: {
      acquisitionId: {
        serializedName: "acquisitionId",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      planId: {
        serializedName: "planId",
        type: {
          name: "String"
        }
      },
      externalReferenceId: {
        serializedName: "externalReferenceId",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      acquisitionTime: {
        serializedName: "acquisitionTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const DelegatedProviderOfferList: coreHttp.CompositeMapper = {
  serializedName: "DelegatedProviderOfferList",
  type: {
    name: "Composite",
    className: "DelegatedProviderOfferList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "DelegatedProviderOffer" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        serializedName: "id",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        readOnly: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        readOnly: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      }
    }
  }
};

export const DelegatedProviderOffer: coreHttp.CompositeMapper = {
  serializedName: "DelegatedProviderOffer",
  type: {
    name: "Composite",
    className: "DelegatedProviderOffer",
    modelProperties: {
      ...Resource.type.modelProperties,
      delegatedOfferId: {
        serializedName: "properties.delegatedOfferId",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalReferenceId: {
        serializedName: "properties.externalReferenceId",
        type: {
          name: "String"
        }
      },
      accessibilityState: {
        serializedName: "properties.accessibilityState",
        type: {
          name: "String"
        }
      },
      subscriptionCount: {
        serializedName: "properties.subscriptionCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DirectoryTenantList: coreHttp.CompositeMapper = {
  serializedName: "DirectoryTenantList",
  type: {
    name: "Composite",
    className: "DirectoryTenantList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "DirectoryTenant" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DirectoryTenant: coreHttp.CompositeMapper = {
  serializedName: "DirectoryTenant",
  type: {
    name: "Composite",
    className: "DirectoryTenant",
    modelProperties: {
      ...Resource.type.modelProperties,
      tenantId: {
        serializedName: "properties.tenantId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LocationList: coreHttp.CompositeMapper = {
  serializedName: "LocationList",
  type: {
    name: "Composite",
    className: "LocationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Location" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Location: coreHttp.CompositeMapper = {
  serializedName: "Location",
  type: {
    name: "Composite",
    className: "Location",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      latitude: {
        serializedName: "latitude",
        type: {
          name: "String"
        }
      },
      longitude: {
        serializedName: "longitude",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationsStatus: coreHttp.CompositeMapper = {
  serializedName: "OperationsStatus",
  type: {
    name: "Composite",
    className: "OperationsStatus",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Composite",
          className: "OperationsStatusIdentifier"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      percentComplete: {
        serializedName: "percentComplete",
        type: {
          name: "Number"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "any"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      },
      retryAfter: {
        serializedName: "retryAfter",
        type: {
          name: "String"
        }
      },
      terminalHttpStatusCode: {
        serializedName: "terminalHttpStatusCode",
        type: {
          name: "String"
        }
      },
      responseContent: {
        serializedName: "responseContent",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const OperationsStatusIdentifier: coreHttp.CompositeMapper = {
  serializedName: "OperationsStatusIdentifier",
  type: {
    name: "Composite",
    className: "OperationsStatusIdentifier",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtendedErrorInfo: coreHttp.CompositeMapper = {
  serializedName: "ExtendedErrorInfo",
  type: {
    name: "Composite",
    className: "ExtendedErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        serializedName: "details",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfoList"
        }
      }
    }
  }
};

export const ExtendedErrorInfoList: coreHttp.CompositeMapper = {
  serializedName: "ExtendedErrorInfoList",
  type: {
    name: "Composite",
    className: "ExtendedErrorInfoList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ExtendedErrorInfo" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ManifestList: coreHttp.CompositeMapper = {
  serializedName: "ManifestList",
  type: {
    name: "Composite",
    className: "ManifestList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Manifest" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Manifest: coreHttp.CompositeMapper = {
  serializedName: "Manifest",
  type: {
    name: "Composite",
    className: "Manifest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      resourceTags: {
        serializedName: "resourceTags",
        type: {
          name: "any"
        }
      },
      namespace: {
        serializedName: "namespace",
        type: {
          name: "String"
        }
      },
      providerLocation: {
        serializedName: "providerLocation",
        type: {
          name: "String"
        }
      },
      providerType: {
        serializedName: "providerType",
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      extensionCollection: {
        serializedName: "extensionCollection",
        type: {
          name: "Composite",
          className: "ExtensionCollectionDefinition"
        }
      },
      resourceTypes: {
        serializedName: "resourceTypes",
        type: {
          name: "Composite",
          className: "ResourceTypeList"
        }
      },
      providerAuthorization: {
        serializedName: "providerAuthorization",
        type: {
          name: "Composite",
          className: "ResourceProviderAuthorization"
        }
      },
      resourceHydrationAccounts: {
        serializedName: "resourceHydrationAccounts",
        type: {
          name: "Composite",
          className: "AzureResourceHydrationAccountList"
        }
      },
      linkedNotificationRules: {
        serializedName: "linkedNotificationRules",
        type: {
          name: "Composite",
          className: "FanoutLinkedNotificationRuleList"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      resourceGroupName: {
        serializedName: "resourceGroupName",
        type: {
          name: "String"
        }
      },
      resourceLocation: {
        serializedName: "resourceLocation",
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      alwaysRoutable: {
        serializedName: "alwaysRoutable",
        type: {
          name: "Boolean"
        }
      },
      routingResourceManagerType: {
        serializedName: "routingResourceManagerType",
        type: {
          name: "String"
        }
      },
      metadata: {
        serializedName: "metadata",
        type: {
          name: "any"
        }
      }
    }
  }
};

export const ExtensionCollectionDefinition: coreHttp.CompositeMapper = {
  serializedName: "ExtensionCollectionDefinition",
  type: {
    name: "Composite",
    className: "ExtensionCollectionDefinition",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Composite",
          className: "ExtensionList"
        }
      }
    }
  }
};

export const ExtensionList: coreHttp.CompositeMapper = {
  serializedName: "ExtensionList",
  type: {
    name: "Composite",
    className: "ExtensionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ExtensionDefinition" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtensionDefinition: coreHttp.CompositeMapper = {
  serializedName: "ExtensionDefinition",
  type: {
    name: "Composite",
    className: "ExtensionDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      uri: {
        serializedName: "uri",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ExtensionPropertiesDefinition"
        }
      },
      obsoleteBundlesBitmask: {
        serializedName: "obsoleteBundlesBitmask",
        type: {
          name: "Number"
        }
      },
      resourceAccess: {
        serializedName: "resourceAccess",
        type: {
          name: "Composite",
          className: "ResourceAccessList"
        }
      }
    }
  }
};

export const ExtensionPropertiesDefinition: coreHttp.CompositeMapper = {
  serializedName: "ExtensionPropertiesDefinition",
  type: {
    name: "Composite",
    className: "ExtensionPropertiesDefinition",
    modelProperties: {
      quotaCreateBladeName: {
        serializedName: "quotaCreateBladeName",
        type: {
          name: "String"
        }
      },
      resourceProviderDashboardBladeName: {
        serializedName: "resourceProviderDashboardBladeName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceAccessList: coreHttp.CompositeMapper = {
  serializedName: "ResourceAccessList",
  type: {
    name: "Composite",
    className: "ResourceAccessList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ResourceAccess" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceAccess: coreHttp.CompositeMapper = {
  serializedName: "ResourceAccess",
  type: {
    name: "Composite",
    className: "ResourceAccess",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceTypeList: coreHttp.CompositeMapper = {
  serializedName: "ResourceTypeList",
  type: {
    name: "Composite",
    className: "ResourceTypeList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ResourceType" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceType: coreHttp.CompositeMapper = {
  serializedName: "ResourceType",
  type: {
    name: "Composite",
    className: "ResourceType",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      routingType: {
        serializedName: "routingType",
        type: {
          name: "String"
        }
      },
      resourceDeletionPolicy: {
        serializedName: "resourceDeletionPolicy",
        type: {
          name: "String"
        }
      },
      allowedUnauthorizedActions: {
        serializedName: "allowedUnauthorizedActions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "ResourceTypeAllowedUnauthorizedActionsItem"
          }
        }
      },
      authorizationActionMappings: {
        serializedName: "authorizationActionMappings",
        type: {
          name: "Composite",
          className: "AuthorizationActionMappingList"
        }
      },
      linkedAccessChecks: {
        serializedName: "linkedAccessChecks",
        type: {
          name: "Composite",
          className: "LinkedAccessCheckList"
        }
      },
      linkedNotificationRules: {
        serializedName: "linkedNotificationRules",
        type: {
          name: "Composite",
          className: "LinkedNotificationRuleList"
        }
      },
      linkedOperationRules: {
        serializedName: "linkedOperationRules",
        type: {
          name: "Composite",
          className: "LinkedOperationRuleList"
        }
      },
      apiProfiles: {
        serializedName: "apiProfiles",
        type: {
          name: "Composite",
          className: "ApiProfileList"
        }
      },
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Composite",
          className: "ResourceProviderEndpointList"
        }
      },
      marketplaceType: {
        serializedName: "marketplaceType",
        type: {
          name: "String"
        }
      },
      inGlobalLocation: {
        serializedName: "inGlobalLocation",
        type: {
          name: "Boolean"
        }
      },
      meteredResourceIds: {
        serializedName: "meteredResourceIds",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "ResourceTypeMeteredResourceIdsItem"
          }
        }
      }
    }
  }
};

export const AuthorizationActionMappingList: coreHttp.CompositeMapper = {
  serializedName: "AuthorizationActionMappingList",
  type: {
    name: "Composite",
    className: "AuthorizationActionMappingList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AuthorizationActionMapping" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AuthorizationActionMapping: coreHttp.CompositeMapper = {
  serializedName: "AuthorizationActionMapping",
  type: {
    name: "Composite",
    className: "AuthorizationActionMapping",
    modelProperties: {
      original: {
        serializedName: "original",
        type: {
          name: "String"
        }
      },
      desired: {
        serializedName: "desired",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedAccessCheckList: coreHttp.CompositeMapper = {
  serializedName: "LinkedAccessCheckList",
  type: {
    name: "Composite",
    className: "LinkedAccessCheckList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "LinkedAccessCheck" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedAccessCheck: coreHttp.CompositeMapper = {
  serializedName: "LinkedAccessCheck",
  type: {
    name: "Composite",
    className: "LinkedAccessCheck",
    modelProperties: {
      actionName: {
        serializedName: "actionName",
        type: {
          name: "String"
        }
      },
      linkedProperty: {
        serializedName: "linkedProperty",
        type: {
          name: "String"
        }
      },
      linkedAction: {
        serializedName: "linkedAction",
        type: {
          name: "String"
        }
      },
      linkedActionVerb: {
        serializedName: "linkedActionVerb",
        type: {
          name: "String"
        }
      },
      linkedType: {
        serializedName: "linkedType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedNotificationRuleList: coreHttp.CompositeMapper = {
  serializedName: "LinkedNotificationRuleList",
  type: {
    name: "Composite",
    className: "LinkedNotificationRuleList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "LinkedNotificationRule" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedNotificationRule: coreHttp.CompositeMapper = {
  serializedName: "LinkedNotificationRule",
  type: {
    name: "Composite",
    className: "LinkedNotificationRule",
    modelProperties: {
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "LinkedNotificationRuleActionsItem"
          }
        }
      }
    }
  }
};

export const LinkedOperationRuleList: coreHttp.CompositeMapper = {
  serializedName: "LinkedOperationRuleList",
  type: {
    name: "Composite",
    className: "LinkedOperationRuleList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "LinkedOperationRule" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkedOperationRule: coreHttp.CompositeMapper = {
  serializedName: "LinkedOperationRule",
  type: {
    name: "Composite",
    className: "LinkedOperationRule",
    modelProperties: {
      linkedOperation: {
        serializedName: "linkedOperation",
        type: {
          name: "String"
        }
      },
      linkedAction: {
        serializedName: "linkedAction",
        type: {
          name: "String"
        }
      },
      dependsOnTypes: {
        serializedName: "dependsOnTypes",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "LinkedOperationRuleDependsOnTypesItem"
          }
        }
      }
    }
  }
};

export const ApiProfileList: coreHttp.CompositeMapper = {
  serializedName: "ApiProfileList",
  type: {
    name: "Composite",
    className: "ApiProfileList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "ApiProfile" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiProfile: coreHttp.CompositeMapper = {
  serializedName: "ApiProfile",
  type: {
    name: "Composite",
    className: "ApiProfile",
    modelProperties: {
      profileVersion: {
        serializedName: "profileVersion",
        type: {
          name: "String"
        }
      },
      apiVersion: {
        serializedName: "apiVersion",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceProviderEndpointList: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderEndpointList",
  type: {
    name: "Composite",
    className: "ResourceProviderEndpointList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "ResourceProviderEndpoint" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceProviderEndpoint: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderEndpoint",
  type: {
    name: "Composite",
    className: "ResourceProviderEndpoint",
    modelProperties: {
      apiVersions: {
        serializedName: "apiVersions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "ResourceProviderEndpointApiVersionsItem"
          }
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      endpointUri: {
        serializedName: "endpointUri",
        type: {
          name: "String"
        }
      },
      timeout: {
        serializedName: "timeout",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceProviderAuthorization: coreHttp.CompositeMapper = {
  serializedName: "ResourceProviderAuthorization",
  type: {
    name: "Composite",
    className: "ResourceProviderAuthorization",
    modelProperties: {
      applicationId: {
        serializedName: "applicationId",
        type: {
          name: "String"
        }
      },
      roleDefinitionId: {
        serializedName: "roleDefinitionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceHydrationAccountList: coreHttp.CompositeMapper = {
  serializedName: "AzureResourceHydrationAccountList",
  type: {
    name: "Composite",
    className: "AzureResourceHydrationAccountList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureResourceHydrationAccount"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureResourceHydrationAccount: coreHttp.CompositeMapper = {
  serializedName: "AzureResourceHydrationAccount",
  type: {
    name: "Composite",
    className: "AzureResourceHydrationAccount",
    modelProperties: {
      subscriptionId: {
        serializedName: "subscriptionId",
        type: {
          name: "String"
        }
      },
      accountName: {
        serializedName: "accountName",
        type: {
          name: "String"
        }
      },
      encryptedKey: {
        serializedName: "encryptedKey",
        type: {
          name: "String"
        }
      },
      maxChildResourceConsistencyJobLimit: {
        serializedName: "maxChildResourceConsistencyJobLimit",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FanoutLinkedNotificationRuleList: coreHttp.CompositeMapper = {
  serializedName: "FanoutLinkedNotificationRuleList",
  type: {
    name: "Composite",
    className: "FanoutLinkedNotificationRuleList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FanoutLinkedNotificationRule"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FanoutLinkedNotificationRule: coreHttp.CompositeMapper = {
  serializedName: "FanoutLinkedNotificationRule",
  type: {
    name: "Composite",
    className: "FanoutLinkedNotificationRule",
    modelProperties: {
      actions: {
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "FanoutLinkedNotificationRuleActionsItem"
          }
        }
      },
      endpoints: {
        serializedName: "endpoints",
        type: {
          name: "Composite",
          className: "ResourceProviderEndpointList"
        }
      }
    }
  }
};

export const OfferList: coreHttp.CompositeMapper = {
  serializedName: "OfferList",
  type: {
    name: "Composite",
    className: "OfferList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Offer" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Offer: coreHttp.CompositeMapper = {
  serializedName: "Offer",
  type: {
    name: "Composite",
    className: "Offer",
    modelProperties: {
      ...Resource.type.modelProperties,
      namePropertiesName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      externalReferenceId: {
        serializedName: "properties.externalReferenceId",
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "properties.state",
        type: {
          name: "String"
        }
      },
      subscriptionCount: {
        serializedName: "properties.subscriptionCount",
        type: {
          name: "Number"
        }
      },
      maxSubscriptionsPerAccount: {
        serializedName: "properties.maxSubscriptionsPerAccount",
        type: {
          name: "Number"
        }
      },
      basePlanIds: {
        serializedName: "properties.basePlanIds",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "OfferPropertiesBasePlanIdsItem"
          }
        }
      },
      addonPlans: {
        serializedName: "properties.addonPlans",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "AddonPlanDefinition" }
          }
        }
      }
    }
  }
};

export const AddonPlanDefinition: coreHttp.CompositeMapper = {
  serializedName: "AddonPlanDefinition",
  type: {
    name: "Composite",
    className: "AddonPlanDefinition",
    modelProperties: {
      planId: {
        serializedName: "planId",
        type: {
          name: "String"
        }
      },
      maxAcquisitionCount: {
        serializedName: "maxAcquisitionCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const MetricList: coreHttp.CompositeMapper = {
  serializedName: "MetricList",
  type: {
    name: "Composite",
    className: "MetricList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Metric" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Metric: coreHttp.CompositeMapper = {
  serializedName: "Metric",
  type: {
    name: "Composite",
    className: "Metric",
    modelProperties: {
      metricUnit: {
        serializedName: "metricUnit",
        type: {
          name: "String"
        }
      },
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      startTime: {
        serializedName: "startTime",
        type: {
          name: "DateTime"
        }
      },
      endTime: {
        serializedName: "endTime",
        type: {
          name: "DateTime"
        }
      },
      metricValues: {
        serializedName: "metricValues",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "MetricValue" } }
        }
      }
    }
  }
};

export const MetricValue: coreHttp.CompositeMapper = {
  serializedName: "MetricValue",
  type: {
    name: "Composite",
    className: "MetricValue",
    modelProperties: {
      timeStamp: {
        serializedName: "timeStamp",
        type: {
          name: "DateTime"
        }
      },
      average: {
        serializedName: "average",
        type: {
          name: "Number"
        }
      },
      minimum: {
        serializedName: "minimum",
        type: {
          name: "Number"
        }
      },
      maximum: {
        serializedName: "maximum",
        type: {
          name: "Number"
        }
      },
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      extendedProperties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        }
      }
    }
  }
};

export const MetricDefinitionList: coreHttp.CompositeMapper = {
  serializedName: "MetricDefinitionList",
  type: {
    name: "Composite",
    className: "MetricDefinitionList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "MetricDefinition" }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MetricDefinition: coreHttp.CompositeMapper = {
  serializedName: "MetricDefinition",
  type: {
    name: "Composite",
    className: "MetricDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      primaryAggregationType: {
        serializedName: "primaryAggregationType",
        type: {
          name: "String"
        }
      },
      metricAvailabilities: {
        serializedName: "metricAvailabilities",
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "MetricAvailability" }
          }
        }
      }
    }
  }
};

export const MetricAvailability: coreHttp.CompositeMapper = {
  serializedName: "MetricAvailability",
  type: {
    name: "Composite",
    className: "MetricAvailability",
    modelProperties: {
      timeGrain: {
        serializedName: "timeGrain",
        type: {
          name: "String"
        }
      },
      retention: {
        serializedName: "retention",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanLinkDefinition: coreHttp.CompositeMapper = {
  serializedName: "PlanLinkDefinition",
  type: {
    name: "Composite",
    className: "PlanLinkDefinition",
    modelProperties: {
      planName: {
        serializedName: "planName",
        type: {
          name: "String"
        }
      },
      planLinkType: {
        serializedName: "planLinkType",
        type: {
          name: "String"
        }
      },
      maxAcquisitionCount: {
        serializedName: "maxAcquisitionCount",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const OfferDelegationList: coreHttp.CompositeMapper = {
  serializedName: "OfferDelegationList",
  type: {
    name: "Composite",
    className: "OfferDelegationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "OfferDelegation" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OfferDelegation: coreHttp.CompositeMapper = {
  serializedName: "OfferDelegation",
  type: {
    name: "Composite",
    className: "OfferDelegation",
    modelProperties: {
      ...Resource.type.modelProperties,
      subscriptionId: {
        serializedName: "properties.subscriptionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PlanList: coreHttp.CompositeMapper = {
  serializedName: "PlanList",
  type: {
    name: "Composite",
    className: "PlanList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Plan" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Plan: coreHttp.CompositeMapper = {
  serializedName: "Plan",
  type: {
    name: "Composite",
    className: "Plan",
    modelProperties: {
      ...Resource.type.modelProperties,
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      externalReferenceId: {
        serializedName: "properties.externalReferenceId",
        type: {
          name: "String"
        }
      },
      quotaIds: {
        serializedName: "properties.quotaIds",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "PlanPropertiesQuotaIdsItem"
          }
        }
      },
      namePropertiesName: {
        serializedName: "properties.name",
        type: {
          name: "String"
        }
      },
      subscriptionCount: {
        serializedName: "properties.subscriptionCount",
        type: {
          name: "Number"
        }
      },
      skuIds: {
        serializedName: "properties.skuIds",
        type: {
          name: "Sequence",
          element: {
            type: { name: "String" },
            serializedName: "PlanPropertiesSkuIdsItem"
          }
        }
      }
    }
  }
};

export const QuotaList: coreHttp.CompositeMapper = {
  serializedName: "QuotaList",
  type: {
    name: "Composite",
    className: "QuotaList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: { type: { name: "Composite", className: "Quota" } }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Quota: coreHttp.CompositeMapper = {
  serializedName: "Quota",
  type: {
    name: "Composite",
    className: "Quota",
    modelProperties: {
      ...Resource.type.modelProperties,
      allowCustomPortalBranding: {
        serializedName: "properties.allowCustomPortalBranding",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};
