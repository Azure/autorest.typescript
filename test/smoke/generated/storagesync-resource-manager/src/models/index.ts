/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * The list of storage sync operations.
 */
export interface OperationEntityListResult {
  /**
   * The link used to get the next page of operations.
   */
  nextLink?: string;
  /**
   * The list of operations.
   */
  value?: OperationEntity[];
}

/**
 * The operation supported by storage sync.
 */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * The operation supported by storage sync.
   */
  display?: OperationDisplayInfo;
  /**
   * The origin.
   */
  origin?: string;
}

/**
 * The operation supported by storage sync.
 */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   */
  description?: string;
  /**
   * The action that users can perform, based on their permission level.
   */
  operation?: string;
  /**
   * Service provider: Microsoft StorageSync.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
}

/**
 * Error type
 */
export interface StorageSyncError {
  /**
   * Error details of the given entry.
   */
  error?: StorageSyncApiError;
  /**
   * Error details of the given entry.
   */
  innererror?: StorageSyncApiError;
}

/**
 * Error type
 */
export interface StorageSyncApiError {
  /**
   * Error code of the given entry.
   */
  code?: string;
  /**
   * Error message of the given entry.
   */
  message?: string;
  /**
   * Target of the given error entry.
   */
  target?: string;
  /**
   * Error details of the given entry.
   */
  details?: StorageSyncErrorDetails;
}

/**
 * Error Details object.
 */
export interface StorageSyncErrorDetails {
  /**
   * Error code of the given entry.
   */
  code?: string;
  /**
   * Error message of the given entry.
   */
  message?: string;
  /**
   * Target of the given entry.
   */
  target?: string;
}

/**
 * Parameters for a check name availability request.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The name to check for availability
   */
  name: string;
  /**
   * The resource type. Must be set to Microsoft.StorageSync/storageSyncServices
   */
  type: "Microsoft.StorageSync/storageSyncServices";
}

/**
 * The CheckNameAvailability operation response.
 */
export interface CheckNameAvailabilityResult {
  /**
   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.
   */
  readonly nameAvailable?: boolean;
  /**
   * Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.
   */
  readonly reason?: NameAvailabilityReason;
  /**
   * Gets an error message explaining the Reason value in more detail.
   */
  readonly message?: string;
}

/**
 * The parameters used when creating a storage sync service.
 */
export interface StorageSyncServiceCreateParameters {
  /**
   * Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
   */
  location: string;
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Any object
   */
  properties?: any;
}

export interface Resource {
  /**
   * Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   */
  readonly id?: string;
  /**
   * The name of the resource
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export type TrackedResource = Resource & {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
};

/**
 * Storage Sync Service object.
 */
export type StorageSyncService = TrackedResource & {
  /**
   * Storage Sync service status.
   */
  readonly storageSyncServiceStatus?: number;
  /**
   * Storage Sync service Uid
   */
  readonly storageSyncServiceUid?: string;
};

/**
 * Parameters for updating an Storage sync service.
 */
export interface StorageSyncServiceUpdateParameters {
  /**
   * The user-specified tags associated with the storage sync service.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The properties of the storage sync service.
   */
  properties?: any;
}

/**
 * Array of StorageSyncServices
 */
export interface StorageSyncServiceArray {
  /**
   * Collection of StorageSyncServices.
   */
  value?: StorageSyncService[];
}

/**
 * Array of SyncGroup
 */
export interface SyncGroupArray {
  /**
   * Collection of SyncGroup.
   */
  value?: SyncGroup[];
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
 */
export type ProxyResource = Resource & {};

/**
 * Sync Group object.
 */
export type SyncGroup = ProxyResource & {
  /**
   * Unique Id
   */
  readonly uniqueId?: string;
  /**
   * Sync group status
   */
  readonly syncGroupStatus?: string;
};

/**
 * The parameters used when creating a sync group.
 */
export type SyncGroupCreateParameters = ProxyResource & {
  /**
   * The parameters used to create the sync group
   */
  properties?: any;
};

/**
 * The parameters used when creating a cloud endpoint.
 */
export type CloudEndpointCreateParameters = ProxyResource & {
  /**
   * Storage Account Resource Id
   */
  storageAccountResourceId?: string;
  /**
   * Azure file share name
   */
  azureFileShareName?: string;
  /**
   * Storage Account Tenant Id
   */
  storageAccountTenantId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
};

/**
 * Cloud Endpoint object.
 */
export type CloudEndpoint = ProxyResource & {
  /**
   * Storage Account Resource Id
   */
  storageAccountResourceId?: string;
  /**
   * Azure file share name
   */
  azureFileShareName?: string;
  /**
   * Storage Account Tenant Id
   */
  storageAccountTenantId?: string;
  /**
   * Partnership Id
   */
  partnershipId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Backup Enabled
   */
  readonly backupEnabled?: string;
  /**
   * CloudEndpoint Provisioning State
   */
  provisioningState?: string;
  /**
   * CloudEndpoint lastWorkflowId
   */
  lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   */
  lastOperationName?: string;
};

/**
 * Array of CloudEndpoint
 */
export interface CloudEndpointArray {
  /**
   * Collection of CloudEndpoint.
   */
  value?: CloudEndpoint[];
}

/**
 * Backup request
 */
export interface BackupRequest {
  /**
   * Azure File Share.
   */
  azureFileShare?: string;
}

/**
 * Post Backup Response
 */
export interface PostBackupResponse {
  /**
   * cloud endpoint Name.
   */
  readonly cloudEndpointName?: string;
}

/**
 * Pre Restore request object.
 */
export interface PreRestoreRequest {
  /**
   * Pre Restore partition.
   */
  partition?: string;
  /**
   * Pre Restore replica group.
   */
  replicaGroup?: string;
  /**
   * Pre Restore request id.
   */
  requestId?: string;
  /**
   * Pre Restore Azure file share uri.
   */
  azureFileShareUri?: string;
  /**
   * Pre Restore Azure status.
   */
  status?: string;
  /**
   * Pre Restore Azure source azure file share uri.
   */
  sourceAzureFileShareUri?: string;
  /**
   * Pre Restore backup metadata property bag.
   */
  backupMetadataPropertyBag?: string;
  /**
   * Pre Restore restore file spec array.
   */
  restoreFileSpec?: RestoreFileSpec[];
  /**
   * Pre Restore pause wait for sync drain time period in seconds.
   */
  pauseWaitForSyncDrainTimePeriodInSeconds?: number;
}

/**
 * Restore file spec.
 */
export interface RestoreFileSpec {
  /**
   * Restore file spec path
   */
  path?: string;
  /**
   * Restore file spec isdir
   */
  isdir?: boolean;
}

/**
 * Post Restore Request
 */
export interface PostRestoreRequest {
  /**
   * Post Restore partition.
   */
  partition?: string;
  /**
   * Post Restore replica group.
   */
  replicaGroup?: string;
  /**
   * Post Restore request id.
   */
  requestId?: string;
  /**
   * Post Restore Azure file share uri.
   */
  azureFileShareUri?: string;
  /**
   * Post Restore Azure status.
   */
  status?: string;
  /**
   * Post Restore Azure source azure file share uri.
   */
  sourceAzureFileShareUri?: string;
  /**
   * Post Restore Azure failed file list.
   */
  failedFileList?: string;
  /**
   * Post Restore restore file spec array.
   */
  restoreFileSpec?: RestoreFileSpec[];
}

/**
 * The parameters used when calling trigger change detection action on cloud endpoint.
 */
export interface TriggerChangeDetectionParameters {
  /**
   * Relative path to a directory Azure File share for which change detection is to be performed.
   */
  directoryPath?: string;
  /**
   * Change Detection Mode. Applies to a directory specified in directoryPath parameter.
   */
  changeDetectionMode?: ChangeDetectionMode;
  /**
   * Array of relative paths on the Azure File share to be included in the change detection. Can be files and directories.
   */
  paths?: string[];
}

/**
 * The parameters used when creating a server endpoint.
 */
export type ServerEndpointCreateParameters = ProxyResource & {
  /**
   * Server Local path.
   */
  serverLocalPath?: string;
  /**
   * Cloud Tiering.
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Server Resource Id.
   */
  serverResourceId?: string;
  /**
   * Offline data transfer
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
};

/**
 * Server Endpoint object.
 */
export type ServerEndpoint = ProxyResource & {
  /**
   * Server Local path.
   */
  serverLocalPath?: string;
  /**
   * Cloud Tiering.
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Server Resource Id.
   */
  serverResourceId?: string;
  /**
   * ServerEndpoint Provisioning State
   */
  readonly provisioningState?: string;
  /**
   * ServerEndpoint lastWorkflowId
   */
  readonly lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   */
  readonly lastOperationName?: string;
  /**
   * Server Endpoint sync status
   */
  readonly syncStatus?: ServerEndpointSyncStatus;
  /**
   * Offline data transfer
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer storage account resource ID
   */
  readonly offlineDataTransferStorageAccountResourceId?: string;
  /**
   * Offline data transfer storage account tenant ID
   */
  readonly offlineDataTransferStorageAccountTenantId?: string;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
  /**
   * Cloud tiering status. Only populated if cloud tiering is enabled.
   */
  readonly cloudTieringStatus?: ServerEndpointCloudTieringStatus;
  /**
   * Recall status. Only populated if cloud tiering is enabled.
   */
  readonly recallStatus?: ServerEndpointRecallStatus;
};

/**
 * Server Endpoint sync status
 */
export interface ServerEndpointSyncStatus {
  /**
   * Download Health Status.
   */
  readonly downloadHealth?: ServerEndpointSyncHealthState;
  /**
   * Upload Health Status.
   */
  readonly uploadHealth?: ServerEndpointSyncHealthState;
  /**
   * Combined Health Status.
   */
  readonly combinedHealth?: ServerEndpointSyncHealthState;
  /**
   * Sync activity
   */
  readonly syncActivity?: ServerEndpointSyncActivityState;
  /**
   * Total count of persistent files not syncing (combined upload + download).
   */
  readonly totalPersistentFilesNotSyncingCount?: number;
  /**
   * Last Updated Timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Upload Status
   */
  readonly uploadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Download Status
   */
  readonly downloadStatus?: ServerEndpointSyncSessionStatus;
  /**
   * Upload sync activity
   */
  readonly uploadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Download sync activity
   */
  readonly downloadActivity?: ServerEndpointSyncActivityStatus;
  /**
   * Offline Data Transfer State
   */
  readonly offlineDataTransferStatus?: ServerEndpointOfflineDataTransferState;
}

/**
 * Sync Session status object.
 */
export interface ServerEndpointSyncSessionStatus {
  /**
   * Last sync result (HResult)
   */
  readonly lastSyncResult?: number;
  /**
   * Last sync timestamp
   */
  readonly lastSyncTimestamp?: Date;
  /**
   * Last sync success timestamp
   */
  readonly lastSyncSuccessTimestamp?: Date;
  /**
   * Last sync per item error count.
   */
  readonly lastSyncPerItemErrorCount?: number;
  /**
   * Count of persistent files not syncing.
   */
  readonly persistentFilesNotSyncingCount?: number;
  /**
   * Count of transient files not syncing.
   */
  readonly transientFilesNotSyncingCount?: number;
  /**
   * Array of per-item errors coming from the last sync session.
   */
  readonly filesNotSyncingErrors?: ServerEndpointFilesNotSyncingError[];
}

/**
 * Files not syncing error object
 */
export interface ServerEndpointFilesNotSyncingError {
  /**
   * Error code (HResult)
   */
  readonly errorCode?: number;
  /**
   * Count of persistent files not syncing with the specified error code
   */
  readonly persistentCount?: number;
  /**
   * Count of transient files not syncing with the specified error code
   */
  readonly transientCount?: number;
}

/**
 * Sync Session status object.
 */
export interface ServerEndpointSyncActivityStatus {
  /**
   * Timestamp when properties were updated
   */
  readonly timestamp?: Date;
  /**
   * Per item error count
   */
  readonly perItemErrorCount?: number;
  /**
   * Applied item count.
   */
  readonly appliedItemCount?: number;
  /**
   * Total item count (if available)
   */
  readonly totalItemCount?: number;
  /**
   * Applied bytes
   */
  readonly appliedBytes?: number;
  /**
   * Total bytes (if available)
   */
  readonly totalBytes?: number;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface ServerEndpointCloudTieringStatus {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Cloud tiering health state.
   */
  readonly health?: ServerEndpointCloudTieringHealthState;
  /**
   * The last updated timestamp of health state
   */
  readonly healthLastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   */
  readonly lastCloudTieringResult?: number;
  /**
   * Last cloud tiering success timestamp
   */
  readonly lastSuccessTimestamp?: Date;
  /**
   * Information regarding how much local space cloud tiering is saving.
   */
  readonly spaceSavings?: CloudTieringSpaceSavings;
  /**
   * Information regarding how well the local cache on the server is performing.
   */
  readonly cachePerformance?: CloudTieringCachePerformance;
  /**
   * Information regarding files that failed to be tiered
   */
  readonly filesNotTiering?: CloudTieringFilesNotTiering;
  /**
   * Status of the volume free space policy
   */
  readonly volumeFreeSpacePolicyStatus?: CloudTieringVolumeFreeSpacePolicyStatus;
  /**
   * Status of the date policy
   */
  readonly datePolicyStatus?: CloudTieringDatePolicyStatus;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringSpaceSavings {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Volume size
   */
  readonly volumeSizeBytes?: number;
  /**
   * Total size of content in the azure file share
   */
  readonly totalSizeCloudBytes?: number;
  /**
   * Cached content size on the server
   */
  readonly cachedSizeBytes?: number;
  /**
   * Percentage of cached size over total size
   */
  readonly spaceSavingsPercent?: number;
  /**
   * Count of bytes saved on the server
   */
  readonly spaceSavingsBytes?: number;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringCachePerformance {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Count of bytes that were served from the local server
   */
  readonly cacheHitBytes?: number;
  /**
   * Count of bytes that were served from the cloud
   */
  readonly cacheMissBytes?: number;
  /**
   * Percentage of total bytes (hit + miss) that were served from the local server
   */
  readonly cacheHitBytesPercent?: number;
}

/**
 * Server endpoint cloud tiering status object.
 */
export interface CloudTieringFilesNotTiering {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Last cloud tiering result (HResult)
   */
  readonly totalFileCount?: number;
  /**
   * Array of tiering errors
   */
  readonly errors?: FilesNotTieringError[];
}

/**
 * Files not tiering error object
 */
export interface FilesNotTieringError {
  /**
   * Error code (HResult)
   */
  readonly errorCode?: number;
  /**
   * Count of files with this error
   */
  readonly fileCount?: number;
}

/**
 * Status of the volume free space policy
 */
export interface CloudTieringVolumeFreeSpacePolicyStatus {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * In the case where multiple server endpoints are present in a volume, an effective free space policy is applied.
   */
  readonly effectiveVolumeFreeSpacePolicy?: number;
  /**
   * Current volume free space percentage.
   */
  readonly currentVolumeFreeSpacePercent?: number;
}

/**
 * Status of the date policy
 */
export interface CloudTieringDatePolicyStatus {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Most recent access time of tiered files
   */
  readonly tieredFilesMostRecentAccessTimestamp?: Date;
}

/**
 * Server endpoint recall status object.
 */
export interface ServerEndpointRecallStatus {
  /**
   * Last updated timestamp
   */
  readonly lastUpdatedTimestamp?: Date;
  /**
   * Total count of recall errors.
   */
  readonly totalRecallErrorsCount?: number;
  /**
   * Array of recall errors
   */
  readonly recallErrors?: ServerEndpointRecallError[];
}

/**
 * Server endpoint recall error object
 */
export interface ServerEndpointRecallError {
  /**
   * Error code (HResult)
   */
  readonly errorCode?: number;
  /**
   * Count of occurences of the error
   */
  readonly count?: number;
}

/**
 * Parameters for updating an Server Endpoint.
 */
export interface ServerEndpointUpdateParameters {
  /**
   * Cloud Tiering.
   */
  cloudTiering?: FeatureStatus;
  /**
   * Level of free space to be maintained by Cloud Tiering if it is enabled.
   */
  volumeFreeSpacePercent?: number;
  /**
   * Tier files older than days.
   */
  tierFilesOlderThanDays?: number;
  /**
   * Offline data transfer
   */
  offlineDataTransfer?: FeatureStatus;
  /**
   * Offline data transfer share name
   */
  offlineDataTransferShareName?: string;
}

/**
 * Array of ServerEndpoint
 */
export interface ServerEndpointArray {
  /**
   * Collection of ServerEndpoint.
   */
  value?: ServerEndpoint[];
}

/**
 * The parameters used when calling recall action on server endpoint.
 */
export interface RecallActionParameters {
  /**
   * Pattern of the files.
   */
  pattern?: string;
  /**
   * Recall path.
   */
  recallPath?: string;
}

/**
 * Array of RegisteredServer
 */
export interface RegisteredServerArray {
  /**
   * Collection of Registered Server.
   */
  value?: RegisteredServer[];
}

/**
 * Registered Server resource.
 */
export type RegisteredServer = ProxyResource & {
  /**
   * Registered Server Certificate
   */
  serverCertificate?: string;
  /**
   * Registered Server Agent Version
   */
  agentVersion?: string;
  /**
   * Registered Server OS Version
   */
  serverOSVersion?: string;
  /**
   * Registered Server Management Error Code
   */
  serverManagementErrorCode?: number;
  /**
   * Registered Server last heart beat
   */
  lastHeartBeat?: string;
  /**
   * Registered Server Provisioning State
   */
  provisioningState?: string;
  /**
   * Registered Server serverRole
   */
  serverRole?: string;
  /**
   * Registered Server clusterId
   */
  clusterId?: string;
  /**
   * Registered Server clusterName
   */
  clusterName?: string;
  /**
   * Registered Server serverId
   */
  serverId?: string;
  /**
   * Registered Server storageSyncServiceUid
   */
  storageSyncServiceUid?: string;
  /**
   * Registered Server lastWorkflowId
   */
  lastWorkflowId?: string;
  /**
   * Resource Last Operation Name
   */
  lastOperationName?: string;
  /**
   * Resource discoveryEndpointUri
   */
  discoveryEndpointUri?: string;
  /**
   * Resource Location
   */
  resourceLocation?: string;
  /**
   * Service Location
   */
  serviceLocation?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
  /**
   * Management Endpoint Uri
   */
  managementEndpointUri?: string;
  /**
   * Monitoring Configuration
   */
  monitoringConfiguration?: string;
};

/**
 * The parameters used when creating a registered server.
 */
export type RegisteredServerCreateParameters = ProxyResource & {
  /**
   * Registered Server Certificate
   */
  serverCertificate?: string;
  /**
   * Registered Server Agent Version
   */
  agentVersion?: string;
  /**
   * Registered Server OS Version
   */
  serverOSVersion?: string;
  /**
   * Registered Server last heart beat
   */
  lastHeartBeat?: string;
  /**
   * Registered Server serverRole
   */
  serverRole?: string;
  /**
   * Registered Server clusterId
   */
  clusterId?: string;
  /**
   * Registered Server clusterName
   */
  clusterName?: string;
  /**
   * Registered Server serverId
   */
  serverId?: string;
  /**
   * Friendly Name
   */
  friendlyName?: string;
};

/**
 * Trigger Rollover Request.
 */
export interface TriggerRolloverRequest {
  /**
   * Certificate Data
   */
  serverCertificate?: string;
}

/**
 * Array of Workflow
 */
export interface WorkflowArray {
  /**
   * Collection of workflow items.
   */
  value?: Workflow[];
}

/**
 * Workflow resource.
 */
export type Workflow = ProxyResource & {
  /**
   * last step name
   */
  lastStepName?: string;
  /**
   * workflow status.
   */
  status?: WorkflowStatus;
  /**
   * operation direction.
   */
  operation?: OperationDirection;
  /**
   * workflow steps
   */
  steps?: string;
  /**
   * workflow last operation identifier.
   */
  lastOperationId?: string;
};

/**
 * Operation status object
 */
export interface OperationStatus {
  /**
   * Operation Id
   */
  readonly name?: string;
  /**
   * Operation status
   */
  readonly status?: string;
  /**
   * Start time of the operation
   */
  readonly startTime?: Date;
  /**
   * End time of the operation
   */
  readonly endTime?: Date;
  /**
   * Error details.
   */
  readonly error?: StorageSyncApiError;
}

/**
 * Subscription State object.
 */
export interface SubscriptionState {
  /**
   * State of Azure Subscription
   */
  state?: Reason;
  /**
   * Is Transitioning
   */
  readonly istransitioning?: boolean;
  /**
   * Subscription state properties.
   */
  properties?: any;
}

/**
 * Resource Move Info.
 */
export interface ResourcesMoveInfo {
  /**
   * Target resource group.
   */
  targetResourceGroup?: string;
  /**
   * Collection of Resources.
   */
  resources?: string[];
}

/**
 * Operation Display Resource object.
 */
export interface OperationDisplayResource {
  /**
   * Operation Display Resource Provider.
   */
  provider?: string;
  /**
   * Operation Display Resource.
   */
  resource?: string;
  /**
   * Operation Display Resource Operation.
   */
  operation?: string;
  /**
   * Operation Display Resource Description.
   */
  description?: string;
}

/**
 * Defines headers for operations_list operation.
 */
export interface OperationsListHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for operations_listNext operation.
 */
export interface OperationsListNextHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for storageSyncServices_get operation.
 */
export interface StorageSyncServicesGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for storageSyncServices_update operation.
 */
export interface StorageSyncServicesUpdateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for storageSyncServices_delete operation.
 */
export interface StorageSyncServicesDeleteHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for storageSyncServices_listByResourceGroup operation.
 */
export interface StorageSyncServicesListByResourceGroupHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for storageSyncServices_listBySubscription operation.
 */
export interface StorageSyncServicesListBySubscriptionHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for syncGroups_listByStorageSyncService operation.
 */
export interface SyncGroupsListByStorageSyncServiceHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for syncGroups_create operation.
 */
export interface SyncGroupsCreateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for syncGroups_get operation.
 */
export interface SyncGroupsGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for syncGroups_delete operation.
 */
export interface SyncGroupsDeleteHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_create operation.
 */
export interface CloudEndpointsCreateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_get operation.
 */
export interface CloudEndpointsGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_delete operation.
 */
export interface CloudEndpointsDeleteHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_listBySyncGroup operation.
 */
export interface CloudEndpointsListBySyncGroupHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_preBackup operation.
 */
export interface CloudEndpointsPreBackupHeaders {
  location?: string;
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_postBackup operation.
 */
export interface CloudEndpointsPostBackupHeaders {
  location?: string;
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for cloudEndpoints_restoreheartbeat operation.
 */
export interface CloudEndpointsRestoreheartbeatHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_create operation.
 */
export interface ServerEndpointsCreateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_update operation.
 */
export interface ServerEndpointsUpdateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_get operation.
 */
export interface ServerEndpointsGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_delete operation.
 */
export interface ServerEndpointsDeleteHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_listBySyncGroup operation.
 */
export interface ServerEndpointsListBySyncGroupHeaders {
  location?: string;
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for serverEndpoints_recallAction operation.
 */
export interface ServerEndpointsRecallActionHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for registeredServers_listByStorageSyncService operation.
 */
export interface RegisteredServersListByStorageSyncServiceHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for registeredServers_get operation.
 */
export interface RegisteredServersGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for registeredServers_create operation.
 */
export interface RegisteredServersCreateHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for registeredServers_delete operation.
 */
export interface RegisteredServersDeleteHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for registeredServers_triggerRollover operation.
 */
export interface RegisteredServersTriggerRolloverHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for workflows_listByStorageSyncService operation.
 */
export interface WorkflowsListByStorageSyncServiceHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for workflows_get operation.
 */
export interface WorkflowsGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for workflows_abort operation.
 */
export interface WorkflowsAbortHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines headers for operationStatus_get operation.
 */
export interface OperationStatusGetHeaders {
  xMsRequestId?: string;
  xMsCorrelationRequestId?: string;
}

/**
 * Defines values for ChangeDetectionMode.
 */
export type ChangeDetectionMode = "Default" | "Recursive";
/**
 * Defines values for FeatureStatus.
 */
export type FeatureStatus = "on" | "off";
/**
 * Defines values for ServerEndpointSyncHealthState.
 */
export type ServerEndpointSyncHealthState =
  | "Healthy"
  | "Error"
  | "SyncBlockedForRestore"
  | "SyncBlockedForChangeDetectionPostRestore"
  | "NoActivity";
/**
 * Defines values for ServerEndpointSyncActivityState.
 */
export type ServerEndpointSyncActivityState =
  | "Upload"
  | "Download"
  | "UploadAndDownload";
/**
 * Defines values for ServerEndpointOfflineDataTransferState.
 */
export type ServerEndpointOfflineDataTransferState =
  | "InProgress"
  | "Stopping"
  | "NotRunning"
  | "Complete";
/**
 * Defines values for ServerEndpointCloudTieringHealthState.
 */
export type ServerEndpointCloudTieringHealthState = "Healthy" | "Error";
/**
 * Defines values for WorkflowStatus.
 */
export type WorkflowStatus =
  | "active"
  | "expired"
  | "succeeded"
  | "aborted"
  | "failed";
/**
 * Defines values for OperationDirection.
 */
export type OperationDirection = "do" | "undo" | "cancel";
/**
 * Defines values for Reason.
 */
export type Reason =
  | "Registered"
  | "Unregistered"
  | "Warned"
  | "Suspended"
  | "Deleted";
/**
 * Defines values for ProgressType.
 */
export type ProgressType =
  | "none"
  | "initialize"
  | "download"
  | "upload"
  | "recall";
/**
 * Defines values for NameAvailabilityReason.
 */
export type NameAvailabilityReason = "Invalid" | "AlreadyExists";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationsListHeaders &
  OperationEntityListResult & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationEntityListResult;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationsListHeaders;
    };
  };

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationsListNextHeaders &
  OperationEntityListResult & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationEntityListResult;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationsListNextHeaders;
    };
  };

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type StorageSyncServicesCheckNameAvailabilityResponse = CheckNameAvailabilityResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: CheckNameAvailabilityResult;
  };
};

/**
 * Contains response data for the create operation.
 */
export type StorageSyncServicesCreateResponse = StorageSyncService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: StorageSyncService;
  };
};

/**
 * Contains response data for the get operation.
 */
export type StorageSyncServicesGetResponse = StorageSyncServicesGetHeaders &
  StorageSyncService & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncService;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesGetHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface StorageSyncServicesUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Storage Sync Service resource.
   */
  parameters?: StorageSyncServiceUpdateParameters;
}

/**
 * Contains response data for the update operation.
 */
export type StorageSyncServicesUpdateResponse = StorageSyncServicesUpdateHeaders &
  StorageSyncService & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncService;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesUpdateHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type StorageSyncServicesDeleteResponse = StorageSyncServicesDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: StorageSyncServicesDeleteHeaders;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type StorageSyncServicesListByResourceGroupResponse = StorageSyncServicesListByResourceGroupHeaders &
  StorageSyncServiceArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncServiceArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesListByResourceGroupHeaders;
    };
  };

/**
 * Contains response data for the listBySubscription operation.
 */
export type StorageSyncServicesListBySubscriptionResponse = StorageSyncServicesListBySubscriptionHeaders &
  StorageSyncServiceArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: StorageSyncServiceArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: StorageSyncServicesListBySubscriptionHeaders;
    };
  };

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type SyncGroupsListByStorageSyncServiceResponse = SyncGroupsListByStorageSyncServiceHeaders &
  SyncGroupArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroupArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsListByStorageSyncServiceHeaders;
    };
  };

/**
 * Contains response data for the create operation.
 */
export type SyncGroupsCreateResponse = SyncGroupsCreateHeaders &
  SyncGroup & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsCreateHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type SyncGroupsGetResponse = SyncGroupsGetHeaders &
  SyncGroup & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SyncGroup;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: SyncGroupsGetHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type SyncGroupsDeleteResponse = SyncGroupsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: SyncGroupsDeleteHeaders;
  };
};

/**
 * Contains response data for the create operation.
 */
export type CloudEndpointsCreateResponse = CloudEndpointsCreateHeaders &
  CloudEndpoint & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpoint;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsCreateHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type CloudEndpointsGetResponse = CloudEndpointsGetHeaders &
  CloudEndpoint & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpoint;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsGetHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type CloudEndpointsDeleteResponse = CloudEndpointsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: CloudEndpointsDeleteHeaders;
  };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type CloudEndpointsListBySyncGroupResponse = CloudEndpointsListBySyncGroupHeaders &
  CloudEndpointArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CloudEndpointArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsListBySyncGroupHeaders;
    };
  };

/**
 * Contains response data for the preBackup operation.
 */
export type CloudEndpointsPreBackupResponse = CloudEndpointsPreBackupHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: CloudEndpointsPreBackupHeaders;
  };
};

/**
 * Contains response data for the postBackup operation.
 */
export type CloudEndpointsPostBackupResponse = CloudEndpointsPostBackupHeaders &
  PostBackupResponse & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PostBackupResponse;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: CloudEndpointsPostBackupHeaders;
    };
  };

/**
 * Contains response data for the restoreheartbeat operation.
 */
export type CloudEndpointsRestoreheartbeatResponse = CloudEndpointsRestoreheartbeatHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: CloudEndpointsRestoreheartbeatHeaders;
  };
};

/**
 * Contains response data for the create operation.
 */
export type ServerEndpointsCreateResponse = ServerEndpointsCreateHeaders &
  ServerEndpoint & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsCreateHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface ServerEndpointsUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Any of the properties applicable in PUT request.
   */
  parameters?: ServerEndpointUpdateParameters;
}

/**
 * Contains response data for the update operation.
 */
export type ServerEndpointsUpdateResponse = ServerEndpointsUpdateHeaders &
  ServerEndpoint & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsUpdateHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type ServerEndpointsGetResponse = ServerEndpointsGetHeaders &
  ServerEndpoint & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpoint;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsGetHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type ServerEndpointsDeleteResponse = ServerEndpointsDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: ServerEndpointsDeleteHeaders;
  };
};

/**
 * Contains response data for the listBySyncGroup operation.
 */
export type ServerEndpointsListBySyncGroupResponse = ServerEndpointsListBySyncGroupHeaders &
  ServerEndpointArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ServerEndpointArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: ServerEndpointsListBySyncGroupHeaders;
    };
  };

/**
 * Contains response data for the recallAction operation.
 */
export type ServerEndpointsRecallActionResponse = ServerEndpointsRecallActionHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: ServerEndpointsRecallActionHeaders;
  };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type RegisteredServersListByStorageSyncServiceResponse = RegisteredServersListByStorageSyncServiceHeaders &
  RegisteredServerArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServerArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersListByStorageSyncServiceHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type RegisteredServersGetResponse = RegisteredServersGetHeaders &
  RegisteredServer & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServer;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersGetHeaders;
    };
  };

/**
 * Contains response data for the create operation.
 */
export type RegisteredServersCreateResponse = RegisteredServersCreateHeaders &
  RegisteredServer & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: RegisteredServer;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: RegisteredServersCreateHeaders;
    };
  };

/**
 * Contains response data for the delete operation.
 */
export type RegisteredServersDeleteResponse = RegisteredServersDeleteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: RegisteredServersDeleteHeaders;
  };
};

/**
 * Contains response data for the triggerRollover operation.
 */
export type RegisteredServersTriggerRolloverResponse = RegisteredServersTriggerRolloverHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: RegisteredServersTriggerRolloverHeaders;
  };
};

/**
 * Contains response data for the listByStorageSyncService operation.
 */
export type WorkflowsListByStorageSyncServiceResponse = WorkflowsListByStorageSyncServiceHeaders &
  WorkflowArray & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkflowArray;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkflowsListByStorageSyncServiceHeaders;
    };
  };

/**
 * Contains response data for the get operation.
 */
export type WorkflowsGetResponse = WorkflowsGetHeaders &
  Workflow & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Workflow;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: WorkflowsGetHeaders;
    };
  };

/**
 * Contains response data for the abort operation.
 */
export type WorkflowsAbortResponse = WorkflowsAbortHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: WorkflowsAbortHeaders;
  };
};

/**
 * Contains response data for the get operation.
 */
export type OperationStatusGetResponse = OperationStatusGetHeaders &
  OperationStatus & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationStatus;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: OperationStatusGetHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface MicrosoftStorageSyncOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
