/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

/**
 * Result of the request to list Windows IoT Device Service operations. It contains a list of operations and a URL link to get the next set of results.
 */
export interface OperationListResult {
  /**
   * List of Windows IoT Device Service operations supported by the Microsoft.WindowsIoT resource provider.
   */
  readonly value?: OperationEntity[];
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

/**
 * The operation supported by Azure Data Catalog Service.
 */
export interface OperationEntity {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  name?: string;
  /**
   * The operation supported by Azure Data Catalog Service.
   */
  display?: OperationDisplayInfo;
}

/**
 * The operation supported by Azure Data Catalog Service.
 */
export interface OperationDisplayInfo {
  /**
   * The description of the operation.
   */
  description?: string;
  /**
   * The action that users can perform, based on their permission level.
   */
  operation?: string;
  /**
   * Service provider: Azure Data Catalog Service.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed.
   */
  resource?: string;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * One of a server-defined set of error codes.
   */
  code?: string;
  /**
   * A human-readable representation of the error.
   */
  message?: string;
  /**
   * The target of the particular error.
   */
  target?: string;
  /**
   * A human-readable representation of the error's details.
   */
  details?: string;
}

/**
 * The core properties of ARM resources
 */
export interface Resource {
  /**
   * Fully qualified resource Id for the resource
   */
  readonly id?: string;
  /**
   * The name of the resource
   */
  readonly name?: string;
  /**
   * The type of the resource.
   */
  readonly type?: string;
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export type TrackedResource = Resource & {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The Azure Region where the resource lives
   */
  location?: string;
};

/**
 * The description of the Windows IoT Device Service.
 */
export type DeviceService = TrackedResource & {
  /**
   * The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
   */
  etag?: string;
  /**
   * Windows IoT Device Service notes.
   */
  notes?: string;
  /**
   * Windows IoT Device Service start date,
   */
  readonly startDate?: Date;
  /**
   * Windows IoT Device Service device allocation,
   */
  quantity?: number;
  /**
   * Windows IoT Device Service ODM AAD domain
   */
  billingDomainName?: string;
  /**
   * Windows IoT Device Service OEM AAD domain
   */
  adminDomainName?: string;
};

/**
 * The properties of a Windows IoT Device Service.
 */
export interface DeviceServiceProperties {
  /**
   * Windows IoT Device Service notes.
   */
  notes?: string;
  /**
   * Windows IoT Device Service start date,
   */
  readonly startDate?: Date;
  /**
   * Windows IoT Device Service device allocation,
   */
  quantity?: number;
  /**
   * Windows IoT Device Service ODM AAD domain
   */
  billingDomainName?: string;
  /**
   * Windows IoT Device Service OEM AAD domain
   */
  adminDomainName?: string;
}

/**
 * The JSON-serialized array of DeviceService objects with a next link.
 */
export interface DeviceServiceDescriptionListResult {
  /**
   * The array of DeviceService objects.
   */
  value?: DeviceService[];
  /**
   * The next link.
   */
  readonly nextLink?: string;
}

/**
 * Input values.
 */
export interface DeviceServiceCheckNameAvailabilityParameters {
  /**
   * The name of the Windows IoT Device Service to check.
   */
  name: string;
}

/**
 * The properties indicating whether a given Windows IoT Device Service name is available.
 */
export interface DeviceServiceNameAvailabilityInfo {
  /**
   * The value which indicates whether the provided name is available.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason for unavailability.
   */
  readonly reason?: ServiceNameUnavailabilityReason;
  /**
   * The detailed reason message.
   */
  message?: string;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
 */
export type ProxyResource = Resource & {};
/**
 * Defines values for ServiceNameUnavailabilityReason.
 */
export type ServiceNameUnavailabilityReason = "Invalid" | "AlreadyExists";

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: OperationListResult;
  };
};

/**
 * Contains response data for the get operation.
 */
export type ServicesGetResponse = DeviceService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceService;
  };
};

/**
 * Optional parameters.
 */
export interface ServicesCreateOrUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * ETag of the Windows IoT Device Service. Do not specify for creating a new Windows IoT Device Service. Required to update an existing Windows IoT Device Service.
   */
  ifMatch?: string;
}

/**
 * Contains response data for the createOrUpdate operation.
 */
export type ServicesCreateOrUpdateResponse = DeviceService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceService;
  };
};

/**
 * Optional parameters.
 */
export interface ServicesUpdateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * ETag of the Windows IoT Device Service. Do not specify for creating a brand new Windows IoT Device Service. Required to update an existing Windows IoT Device Service.
   */
  ifMatch?: string;
}

/**
 * Contains response data for the update operation.
 */
export type ServicesUpdateResponse = DeviceService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceService;
  };
};

/**
 * Contains response data for the delete operation.
 */
export type ServicesDeleteResponse = DeviceService & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceService;
  };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type ServicesListByResourceGroupResponse = DeviceServiceDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceServiceDescriptionListResult;
  };
};

/**
 * Contains response data for the list operation.
 */
export type ServicesListResponse = DeviceServiceDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceServiceDescriptionListResult;
  };
};

/**
 * Contains response data for the checkDeviceServiceNameAvailability operation.
 */
export type ServicesCheckDeviceServiceNameAvailabilityResponse = DeviceServiceNameAvailabilityInfo & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceServiceNameAvailabilityInfo;
  };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type ServicesListByResourceGroupNextResponse = DeviceServiceDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceServiceDescriptionListResult;
  };
};

/**
 * Contains response data for the listNext operation.
 */
export type ServicesListNextResponse = DeviceServiceDescriptionListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: DeviceServiceDescriptionListResult;
  };
};

/**
 * Optional parameters.
 */
export interface DeviceServicesOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Api Version
   */
  apiVersion?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
