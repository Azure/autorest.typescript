/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {number} [status]
   */
  status?: number;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing RefColorConstant.
 */
export interface RefColorConstant {
  /**
   * @member {string} [field1] Sample string.
   */
  field1?: string;
}

/**
 * @interface
 * An interface representing StringPutNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface StringPutNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {StringBody} [stringBody] Possible values include: ''
   */
  stringBody?: StringBody;
}

/**
 * @interface
 * An interface representing EnumModelPutReferencedConstantOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface EnumModelPutReferencedConstantOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [field1] Sample string.
   */
  field1?: string;
}

/**
 * Defines values for Colors.
 * Possible values include: 'red color', 'green-color', 'blue_color'
 * @readonly
 * @enum {string}
 */
export type Colors = 'red color' | 'green-color' | 'blue_color';

/**
 * Defines values for StringBody.
 * Possible values include: ''
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: StringBody = <StringBody>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export type StringBody = null;

/**
 * Defines values for GetNullOKResponse.
 * Possible values include: ''
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: GetNullOKResponse =
 * <GetNullOKResponse>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export type GetNullOKResponse = null;

/**
 * Defines values for GetEmptyOKResponse.
 * Possible values include: ''
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: GetEmptyOKResponse =
 * <GetEmptyOKResponse>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export type GetEmptyOKResponse = '';

/**
 * Defines values for GetMbcsOKResponse.
 * Possible values include:
 * '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: GetMbcsOKResponse =
 * <GetMbcsOKResponse>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export type GetMbcsOKResponse = '啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€';

/**
 * Defines values for GetWhitespaceOKResponse.
 * Possible values include: '    Now is the time for all good men to come to
 * the aid of their country    '
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: GetWhitespaceOKResponse =
 * <GetWhitespaceOKResponse>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export type GetWhitespaceOKResponse = '    Now is the time for all good men to come to the aid of their country    ';

/**
 * Contains response data for the getNull operation.
 */
export interface StringGetNullResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: GetNullOKResponse;
}

/**
 * Contains response data for the getEmpty operation.
 */
export interface StringGetEmptyResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: GetEmptyOKResponse;
}

/**
 * Contains response data for the getMbcs operation.
 */
export interface StringGetMbcsResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: GetMbcsOKResponse;
}

/**
 * Contains response data for the getWhitespace operation.
 */
export interface StringGetWhitespaceResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: GetWhitespaceOKResponse;
}

/**
 * Contains response data for the getNotProvided operation.
 */
export interface StringGetNotProvidedResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: string;
}

/**
 * Contains response data for the getBase64Encoded operation.
 */
export interface StringGetBase64EncodedResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: Uint8Array;
}

/**
 * Contains response data for the getBase64UrlEncoded operation.
 */
export interface StringGetBase64UrlEncodedResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: Uint8Array;
}

/**
 * Contains response data for the getNullBase64UrlEncoded operation.
 */
export interface StringGetNullBase64UrlEncodedResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: Uint8Array;
}

/**
 * Contains response data for the getNotExpandable operation.
 */
export interface EnumModelGetNotExpandableResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: Colors;
}

/**
 * Contains response data for the getReferenced operation.
 */
export interface EnumModelGetReferencedResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: Colors;
}

/**
 * Contains response data for the getReferencedConstant operation.
 */
export interface EnumModelGetReferencedConstantResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: RefColorConstant;
}
