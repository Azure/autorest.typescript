/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "ms-rest-js";
import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {number} [status]
   */
  status?: number;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing AutoRestUrlTestServiceOptions.
 * @extends ServiceClientOptions
 */
export interface AutoRestUrlTestServiceOptions extends ServiceClientOptions {
  /**
   * @member {string} [globalStringQuery] should contain value null
   */
  globalStringQuery?: string;
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing QueriesGetBooleanNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesGetBooleanNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [boolQuery] null boolean value
   */
  boolQuery?: boolean;
}

/**
 * @interface
 * An interface representing QueriesGetIntNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesGetIntNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [intQuery] null integer value
   */
  intQuery?: number;
}

/**
 * @interface
 * An interface representing QueriesGetLongNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesGetLongNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [longQuery] null 64 bit integer value
   */
  longQuery?: number;
}

/**
 * @interface
 * An interface representing QueriesFloatNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesFloatNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [floatQuery] null numeric value
   */
  floatQuery?: number;
}

/**
 * @interface
 * An interface representing QueriesDoubleNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesDoubleNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [doubleQuery] null numeric value
   */
  doubleQuery?: number;
}

/**
 * @interface
 * An interface representing QueriesStringNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesStringNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [stringQuery] null string value
   */
  stringQuery?: string;
}

/**
 * @interface
 * An interface representing QueriesEnumValidOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesEnumValidOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {UriColor} [enumQuery] 'green color' enum value. Possible values
   * include: 'red color', 'green color', 'blue color'
   */
  enumQuery?: UriColor;
}

/**
 * @interface
 * An interface representing QueriesEnumNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesEnumNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {UriColor} [enumQuery] null string value. Possible values include:
   * 'red color', 'green color', 'blue color'
   */
  enumQuery?: UriColor;
}

/**
 * @interface
 * An interface representing QueriesByteMultiByteOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesByteMultiByteOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Uint8Array} [byteQuery] '啊齄丂狛狜隣郎隣兀﨩' multibyte value as utf-8
   * encoded byte array
   */
  byteQuery?: Uint8Array;
}

/**
 * @interface
 * An interface representing QueriesByteNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesByteNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Uint8Array} [byteQuery] null as byte array (no query parameters
   * in uri)
   */
  byteQuery?: Uint8Array;
}

/**
 * @interface
 * An interface representing QueriesDateNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesDateNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [dateQuery] null as date (no query parameters in uri)
   */
  dateQuery?: Date;
}

/**
 * @interface
 * An interface representing QueriesDateTimeNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesDateTimeNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {Date} [dateTimeQuery] null as date-time (no query parameters)
   */
  dateTimeQuery?: Date;
}

/**
 * @interface
 * An interface representing QueriesArrayStringCsvValidOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringCsvValidOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] an array of string ['ArrayQuery1',
   * 'begin!*'();:@ &=+$,/?#[]end' , null, ''] using the csv-array format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing QueriesArrayStringCsvNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringCsvNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] a null array of string using the csv-array
   * format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing QueriesArrayStringCsvEmptyOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringCsvEmptyOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] an empty array [] of string using the
   * csv-array format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing QueriesArrayStringSsvValidOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringSsvValidOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] an array of string ['ArrayQuery1',
   * 'begin!*'();:@ &=+$,/?#[]end' , null, ''] using the ssv-array format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing QueriesArrayStringTsvValidOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringTsvValidOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] an array of string ['ArrayQuery1',
   * 'begin!*'();:@ &=+$,/?#[]end' , null, ''] using the tsv-array format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing QueriesArrayStringPipesValidOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface QueriesArrayStringPipesValidOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string[]} [arrayQuery] an array of string ['ArrayQuery1',
   * 'begin!*'();:@ &=+$,/?#[]end' , null, ''] using the pipes-array format
   */
  arrayQuery?: string[];
}

/**
 * @interface
 * An interface representing PathItemsGetAllWithValuesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PathItemsGetAllWithValuesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [localStringQuery] should contain value
   * 'localStringQuery'
   */
  localStringQuery?: string;
  /**
   * @member {string} [pathItemStringQuery] A string value
   * 'pathItemStringQuery' that appears as a query parameter
   */
  pathItemStringQuery?: string;
}

/**
 * @interface
 * An interface representing PathItemsGetGlobalQueryNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PathItemsGetGlobalQueryNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [localStringQuery] should contain value
   * 'localStringQuery'
   */
  localStringQuery?: string;
  /**
   * @member {string} [pathItemStringQuery] A string value
   * 'pathItemStringQuery' that appears as a query parameter
   */
  pathItemStringQuery?: string;
}

/**
 * @interface
 * An interface representing PathItemsGetGlobalAndLocalQueryNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PathItemsGetGlobalAndLocalQueryNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [localStringQuery] should contain null value
   */
  localStringQuery?: string;
  /**
   * @member {string} [pathItemStringQuery] A string value
   * 'pathItemStringQuery' that appears as a query parameter
   */
  pathItemStringQuery?: string;
}

/**
 * @interface
 * An interface representing PathItemsGetLocalPathItemQueryNullOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface PathItemsGetLocalPathItemQueryNullOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [localStringQuery] should contain value null
   */
  localStringQuery?: string;
  /**
   * @member {string} [pathItemStringQuery] should contain value null
   */
  pathItemStringQuery?: string;
}

/**
 * Defines values for UriColor.
 * Possible values include: 'red color', 'green color', 'blue color'
 * @readonly
 * @enum {string}
 */
export enum UriColor {
  Redcolor = 'red color',
  Greencolor = 'green color',
  Bluecolor = 'blue color',
}
