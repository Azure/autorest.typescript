/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/pathItemsMappers";
import * as Parameters from "../models/parameters";
import { AutoRestUrlTestServiceContext } from "../autoRestUrlTestServiceContext";

/** Class representing a PathItems. */
export class PathItems {
  private readonly client: AutoRestUrlTestServiceContext;

  /**
   * Create a PathItems.
   * @param {AutoRestUrlTestServiceContext} client Reference to the service client.
   */
  constructor(client: AutoRestUrlTestServiceContext) {
    this.client = client;
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery='globalStringQuery',
   * pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetAllWithValuesOptionalParams} [options] Optional Parameters.
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse} The deserialized result object.
   *
   * @reject {Error|ServiceError} The error object.
   */
  getAllWithValuesWithHttpOperationResponse(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetAllWithValuesOptionalParams): Promise<msRest.HttpOperationResponse<void>> {
    return this.client.sendOperationRequest(
      {
        localStringPath,
        pathItemStringPath,
        options
      },
      getAllWithValuesOperationSpec);
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery=null,
   * pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetGlobalQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse} The deserialized result object.
   *
   * @reject {Error|ServiceError} The error object.
   */
  getGlobalQueryNullWithHttpOperationResponse(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetGlobalQueryNullOptionalParams): Promise<msRest.HttpOperationResponse<void>> {
    return this.client.sendOperationRequest(
      {
        localStringPath,
        pathItemStringPath,
        options
      },
      getGlobalQueryNullOperationSpec);
  }

  /**
   * send globalStringPath=globalStringPath, pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery=null,
   * pathItemStringQuery='pathItemStringQuery', localStringQuery=null
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetGlobalAndLocalQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse} The deserialized result object.
   *
   * @reject {Error|ServiceError} The error object.
   */
  getGlobalAndLocalQueryNullWithHttpOperationResponse(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetGlobalAndLocalQueryNullOptionalParams): Promise<msRest.HttpOperationResponse<void>> {
    return this.client.sendOperationRequest(
      {
        localStringPath,
        pathItemStringPath,
        options
      },
      getGlobalAndLocalQueryNullOperationSpec);
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery='globalStringQuery',
   * pathItemStringQuery=null, localStringQuery=null
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetLocalPathItemQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse} The deserialized result object.
   *
   * @reject {Error|ServiceError} The error object.
   */
  getLocalPathItemQueryNullWithHttpOperationResponse(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetLocalPathItemQueryNullOptionalParams): Promise<msRest.HttpOperationResponse<void>> {
    return this.client.sendOperationRequest(
      {
        localStringPath,
        pathItemStringPath,
        options
      },
      getLocalPathItemQueryNullOperationSpec);
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery='globalStringQuery',
   * pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetAllWithValuesOptionalParams} [options] Optional Parameters.
   *
   * @param {ServiceCallback} callback The callback.
   *
   * @returns {ServiceCallback} callback(err, result, request, operationRes)
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *                      {void} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.
   */
  getAllWithValues(localStringPath: string, pathItemStringPath: string): Promise<void>;
  getAllWithValues(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetAllWithValuesOptionalParams): Promise<void>;
  getAllWithValues(localStringPath: string, pathItemStringPath: string, callback: msRest.ServiceCallback<void>): void;
  getAllWithValues(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetAllWithValuesOptionalParams, callback: msRest.ServiceCallback<void>): void;
  getAllWithValues(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetAllWithValuesOptionalParams, callback?: msRest.ServiceCallback<void>): any {
    return msRest.responseToBody(this.getAllWithValuesWithHttpOperationResponse.bind(this), localStringPath, pathItemStringPath, options, callback);
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery=null,
   * pathItemStringQuery='pathItemStringQuery', localStringQuery='localStringQuery'
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetGlobalQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @param {ServiceCallback} callback The callback.
   *
   * @returns {ServiceCallback} callback(err, result, request, operationRes)
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *                      {void} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.
   */
  getGlobalQueryNull(localStringPath: string, pathItemStringPath: string): Promise<void>;
  getGlobalQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetGlobalQueryNullOptionalParams): Promise<void>;
  getGlobalQueryNull(localStringPath: string, pathItemStringPath: string, callback: msRest.ServiceCallback<void>): void;
  getGlobalQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetGlobalQueryNullOptionalParams, callback: msRest.ServiceCallback<void>): void;
  getGlobalQueryNull(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetGlobalQueryNullOptionalParams, callback?: msRest.ServiceCallback<void>): any {
    return msRest.responseToBody(this.getGlobalQueryNullWithHttpOperationResponse.bind(this), localStringPath, pathItemStringPath, options, callback);
  }

  /**
   * send globalStringPath=globalStringPath, pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery=null,
   * pathItemStringQuery='pathItemStringQuery', localStringQuery=null
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetGlobalAndLocalQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @param {ServiceCallback} callback The callback.
   *
   * @returns {ServiceCallback} callback(err, result, request, operationRes)
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *                      {void} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.
   */
  getGlobalAndLocalQueryNull(localStringPath: string, pathItemStringPath: string): Promise<void>;
  getGlobalAndLocalQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetGlobalAndLocalQueryNullOptionalParams): Promise<void>;
  getGlobalAndLocalQueryNull(localStringPath: string, pathItemStringPath: string, callback: msRest.ServiceCallback<void>): void;
  getGlobalAndLocalQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetGlobalAndLocalQueryNullOptionalParams, callback: msRest.ServiceCallback<void>): void;
  getGlobalAndLocalQueryNull(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetGlobalAndLocalQueryNullOptionalParams, callback?: msRest.ServiceCallback<void>): any {
    return msRest.responseToBody(this.getGlobalAndLocalQueryNullWithHttpOperationResponse.bind(this), localStringPath, pathItemStringPath, options, callback);
  }

  /**
   * send globalStringPath='globalStringPath', pathItemStringPath='pathItemStringPath',
   * localStringPath='localStringPath', globalStringQuery='globalStringQuery',
   * pathItemStringQuery=null, localStringQuery=null
   *
   * @param {string} localStringPath should contain value 'localStringPath'
   *
   * @param {string} pathItemStringPath A string value 'pathItemStringPath' that appears in the path
   *
   * @param {PathItemsGetLocalPathItemQueryNullOptionalParams} [options] Optional Parameters.
   *
   * @param {ServiceCallback} callback The callback.
   *
   * @returns {ServiceCallback} callback(err, result, request, operationRes)
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *                      {void} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.
   */
  getLocalPathItemQueryNull(localStringPath: string, pathItemStringPath: string): Promise<void>;
  getLocalPathItemQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetLocalPathItemQueryNullOptionalParams): Promise<void>;
  getLocalPathItemQueryNull(localStringPath: string, pathItemStringPath: string, callback: msRest.ServiceCallback<void>): void;
  getLocalPathItemQueryNull(localStringPath: string, pathItemStringPath: string, options: Models.PathItemsGetLocalPathItemQueryNullOptionalParams, callback: msRest.ServiceCallback<void>): void;
  getLocalPathItemQueryNull(localStringPath: string, pathItemStringPath: string, options?: Models.PathItemsGetLocalPathItemQueryNullOptionalParams, callback?: msRest.ServiceCallback<void>): any {
    return msRest.responseToBody(this.getLocalPathItemQueryNullWithHttpOperationResponse.bind(this), localStringPath, pathItemStringPath, options, callback);
  }

}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getAllWithValuesOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/pathItemStringQuery/localStringQuery",
  urlParameters: [
    Parameters.localStringPath,
    Parameters.pathItemStringPath,
    Parameters.globalStringPath
  ],
  queryParameters: [
    Parameters.localStringQuery,
    Parameters.pathItemStringQuery,
    Parameters.globalStringQuery
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const getGlobalQueryNullOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/localStringQuery",
  urlParameters: [
    Parameters.localStringPath,
    Parameters.pathItemStringPath,
    Parameters.globalStringPath
  ],
  queryParameters: [
    Parameters.localStringQuery,
    Parameters.pathItemStringQuery,
    Parameters.globalStringQuery
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const getGlobalAndLocalQueryNullOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/null",
  urlParameters: [
    Parameters.localStringPath,
    Parameters.pathItemStringPath,
    Parameters.globalStringPath
  ],
  queryParameters: [
    Parameters.localStringQuery,
    Parameters.pathItemStringQuery,
    Parameters.globalStringQuery
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

const getLocalPathItemQueryNullOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/null/null",
  urlParameters: [
    Parameters.localStringPath,
    Parameters.pathItemStringPath,
    Parameters.globalStringPath
  ],
  queryParameters: [
    Parameters.localStringQuery,
    Parameters.pathItemStringQuery,
    Parameters.globalStringQuery
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};
