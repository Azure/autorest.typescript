/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {number} [status]
   */
  status?: number;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing A.
 */
export interface A {
  /**
   * @member {string} [statusCode]
   */
  statusCode?: string;
}

/**
 * @interface
 * An interface representing B.
 * @extends A
 */
export interface B extends A {
  /**
   * @member {string} [textStatusCode]
   */
  textStatusCode?: string;
}

/**
 * @interface
 * An interface representing C.
 */
export interface C {
  /**
   * @member {string} [httpCode]
   */
  httpCode?: string;
}

/**
 * @interface
 * An interface representing D.
 */
export interface D {
  /**
   * @member {string} [httpStatusCode]
   */
  httpStatusCode?: string;
}

/**
 * @interface
 * An interface representing HttpSuccessPut200OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPut200OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPatch200OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPatch200OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPost200OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPost200OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessDelete200OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessDelete200OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPut201OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPut201OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPost201OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPost201OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPut202OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPut202OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPatch202OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPatch202OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPost202OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPost202OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessDelete202OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessDelete202OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPut204OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPut204OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPatch204OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPatch204OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessPost204OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessPost204OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpSuccessDelete204OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpSuccessDelete204OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPut301OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPut301OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPatch302OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPatch302OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPost303OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPost303OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPut307OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPut307OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPatch307OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPatch307OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsPost307OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsPost307OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsDelete307OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRedirectsDelete307OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePut400OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePut400OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePatch400OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePatch400OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePost400OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePost400OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailureDelete400OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailureDelete400OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePut404OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePut404OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePatch405OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePatch405OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePost406OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePost406OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailureDelete407OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailureDelete407OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePut409OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePut409OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePut413OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePut413OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePatch414OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePatch414OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailurePost415OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailurePost415OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpClientFailureDelete417OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpClientFailureDelete417OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpServerFailurePost505OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpServerFailurePost505OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpServerFailureDelete505OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpServerFailureDelete505OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryPut500OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryPut500OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryPatch500OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryPatch500OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryPost503OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryPost503OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryDelete503OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryDelete503OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryPut504OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryPut504OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRetryPatch504OptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface HttpRetryPatch504OptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {boolean} [booleanValue] Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * @interface
 * An interface representing HttpRedirectsHead300Headers.
 * Defines headers for head300 operation.
 *
 */
export interface HttpRedirectsHead300Headers {
  /**
   * @member {Location} [location] The redirect location for this request.
   * Possible values include: '/http/success/head/200'
   */
  location?: Location;
}

/**
 * @interface
 * An interface representing HttpRedirectsGet300Headers.
 * Defines headers for get300 operation.
 *
 */
export interface HttpRedirectsGet300Headers {
  /**
   * @member {Location1} [location] The redirect location for this request.
   * Possible values include: '/http/success/get/200'
   */
  location?: Location1;
}

/**
 * @interface
 * An interface representing HttpRedirectsHead301Headers.
 * Defines headers for head301 operation.
 *
 */
export interface HttpRedirectsHead301Headers {
  /**
   * @member {Location2} [location] The redirect location for this request.
   * Possible values include: '/http/success/head/200'
   */
  location?: Location2;
}

/**
 * @interface
 * An interface representing HttpRedirectsGet301Headers.
 * Defines headers for get301 operation.
 *
 */
export interface HttpRedirectsGet301Headers {
  /**
   * @member {Location3} [location] The redirect location for this request.
   * Possible values include: '/http/success/get/200'
   */
  location?: Location3;
}

/**
 * @interface
 * An interface representing HttpRedirectsPut301Headers.
 * Defines headers for put301 operation.
 *
 */
export interface HttpRedirectsPut301Headers {
  /**
   * @member {Location4} [location] The redirect location for this request.
   * Possible values include: '/http/failure/500'
   */
  location?: Location4;
}

/**
 * @interface
 * An interface representing HttpRedirectsHead302Headers.
 * Defines headers for head302 operation.
 *
 */
export interface HttpRedirectsHead302Headers {
  /**
   * @member {Location5} [location] The redirect location for this request.
   * Possible values include: '/http/success/head/200'
   */
  location?: Location5;
}

/**
 * @interface
 * An interface representing HttpRedirectsGet302Headers.
 * Defines headers for get302 operation.
 *
 */
export interface HttpRedirectsGet302Headers {
  /**
   * @member {Location6} [location] The redirect location for this request.
   * Possible values include: '/http/success/get/200'
   */
  location?: Location6;
}

/**
 * @interface
 * An interface representing HttpRedirectsPatch302Headers.
 * Defines headers for patch302 operation.
 *
 */
export interface HttpRedirectsPatch302Headers {
  /**
   * @member {Location7} [location] The redirect location for this request.
   * Possible values include: '/http/failure/500'
   */
  location?: Location7;
}

/**
 * @interface
 * An interface representing HttpRedirectsPost303Headers.
 * Defines headers for post303 operation.
 *
 */
export interface HttpRedirectsPost303Headers {
  /**
   * @member {Location8} [location] The redirect location for this request.
   * Possible values include: '/http/success/get/200'
   */
  location?: Location8;
}

/**
 * @interface
 * An interface representing HttpRedirectsHead307Headers.
 * Defines headers for head307 operation.
 *
 */
export interface HttpRedirectsHead307Headers {
  /**
   * @member {Location9} [location] The redirect location for this request.
   * Possible values include: '/http/success/head/200'
   */
  location?: Location9;
}

/**
 * @interface
 * An interface representing HttpRedirectsGet307Headers.
 * Defines headers for get307 operation.
 *
 */
export interface HttpRedirectsGet307Headers {
  /**
   * @member {Location10} [location] The redirect location for this request.
   * Possible values include: '/http/success/get/200'
   */
  location?: Location10;
}

/**
 * @interface
 * An interface representing HttpRedirectsPut307Headers.
 * Defines headers for put307 operation.
 *
 */
export interface HttpRedirectsPut307Headers {
  /**
   * @member {Location11} [location] The redirect location for this request.
   * Possible values include: '/http/success/put/200'
   */
  location?: Location11;
}

/**
 * @interface
 * An interface representing HttpRedirectsPatch307Headers.
 * Defines headers for patch307 operation.
 *
 */
export interface HttpRedirectsPatch307Headers {
  /**
   * @member {Location12} [location] The redirect location for this request.
   * Possible values include: '/http/success/patch/200'
   */
  location?: Location12;
}

/**
 * @interface
 * An interface representing HttpRedirectsPost307Headers.
 * Defines headers for post307 operation.
 *
 */
export interface HttpRedirectsPost307Headers {
  /**
   * @member {Location13} [location] The redirect location for this request.
   * Possible values include: '/http/success/post/200'
   */
  location?: Location13;
}

/**
 * @interface
 * An interface representing HttpRedirectsDelete307Headers.
 * Defines headers for delete307 operation.
 *
 */
export interface HttpRedirectsDelete307Headers {
  /**
   * @member {Location14} [location] The redirect location for this request.
   * Possible values include: '/http/success/delete/200'
   */
  location?: Location14;
}

/**
 * Defines values for Location.
 * Possible values include: '/http/success/head/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location = <Location>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location {
  Httpsuccesshead200 = '/http/success/head/200',
}

/**
 * Defines values for Location1.
 * Possible values include: '/http/success/get/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location1 = <Location1>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location1 {
  Httpsuccessget200 = '/http/success/get/200',
}

/**
 * Defines values for Location2.
 * Possible values include: '/http/success/head/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location2 = <Location2>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location2 {
  Httpsuccesshead200 = '/http/success/head/200',
}

/**
 * Defines values for Location3.
 * Possible values include: '/http/success/get/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location3 = <Location3>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location3 {
  Httpsuccessget200 = '/http/success/get/200',
}

/**
 * Defines values for Location4.
 * Possible values include: '/http/failure/500'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location4 = <Location4>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location4 {
  Httpfailure500 = '/http/failure/500',
}

/**
 * Defines values for Location5.
 * Possible values include: '/http/success/head/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location5 = <Location5>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location5 {
  Httpsuccesshead200 = '/http/success/head/200',
}

/**
 * Defines values for Location6.
 * Possible values include: '/http/success/get/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location6 = <Location6>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location6 {
  Httpsuccessget200 = '/http/success/get/200',
}

/**
 * Defines values for Location7.
 * Possible values include: '/http/failure/500'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location7 = <Location7>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location7 {
  Httpfailure500 = '/http/failure/500',
}

/**
 * Defines values for Location8.
 * Possible values include: '/http/success/get/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location8 = <Location8>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location8 {
  Httpsuccessget200 = '/http/success/get/200',
}

/**
 * Defines values for Location9.
 * Possible values include: '/http/success/head/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location9 = <Location9>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location9 {
  Httpsuccesshead200 = '/http/success/head/200',
}

/**
 * Defines values for Location10.
 * Possible values include: '/http/success/get/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location10 = <Location10>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location10 {
  Httpsuccessget200 = '/http/success/get/200',
}

/**
 * Defines values for Location11.
 * Possible values include: '/http/success/put/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location11 = <Location11>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location11 {
  Httpsuccessput200 = '/http/success/put/200',
}

/**
 * Defines values for Location12.
 * Possible values include: '/http/success/patch/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location12 = <Location12>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location12 {
  Httpsuccesspatch200 = '/http/success/patch/200',
}

/**
 * Defines values for Location13.
 * Possible values include: '/http/success/post/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location13 = <Location13>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location13 {
  Httpsuccesspost200 = '/http/success/post/200',
}

/**
 * Defines values for Location14.
 * Possible values include: '/http/success/delete/200'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: Location14 = <Location14>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum Location14 {
  Httpsuccessdelete200 = '/http/success/delete/200',
}

/**
 * Contains response data for the getEmptyError operation.
 */
export interface HttpFailureGetEmptyErrorResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: boolean;
}

/**
 * Contains response data for the getNoModelError operation.
 */
export interface HttpFailureGetNoModelErrorResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: boolean;
}

/**
 * Contains response data for the getNoModelEmpty operation.
 */
export interface HttpFailureGetNoModelEmptyResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: boolean;
}

/**
 * Contains response data for the get200 operation.
 */
export interface HttpSuccessGet200Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: boolean;
}

/**
 * Contains response data for the head300 operation.
 */
export interface HttpRedirectsHead300Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsHead300Headers;
}

/**
 * Contains response data for the get300 operation.
 */
export interface HttpRedirectsGet300Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsGet300Headers;
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: string[];
}

/**
 * Contains response data for the head301 operation.
 */
export interface HttpRedirectsHead301Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsHead301Headers;
}

/**
 * Contains response data for the get301 operation.
 */
export interface HttpRedirectsGet301Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsGet301Headers;
}

/**
 * Contains response data for the put301 operation.
 */
export interface HttpRedirectsPut301Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPut301Headers;
}

/**
 * Contains response data for the head302 operation.
 */
export interface HttpRedirectsHead302Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsHead302Headers;
}

/**
 * Contains response data for the get302 operation.
 */
export interface HttpRedirectsGet302Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsGet302Headers;
}

/**
 * Contains response data for the patch302 operation.
 */
export interface HttpRedirectsPatch302Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPatch302Headers;
}

/**
 * Contains response data for the post303 operation.
 */
export interface HttpRedirectsPost303Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPost303Headers;
}

/**
 * Contains response data for the head307 operation.
 */
export interface HttpRedirectsHead307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsHead307Headers;
}

/**
 * Contains response data for the get307 operation.
 */
export interface HttpRedirectsGet307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsGet307Headers;
}

/**
 * Contains response data for the put307 operation.
 */
export interface HttpRedirectsPut307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPut307Headers;
}

/**
 * Contains response data for the patch307 operation.
 */
export interface HttpRedirectsPatch307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPatch307Headers;
}

/**
 * Contains response data for the post307 operation.
 */
export interface HttpRedirectsPost307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsPost307Headers;
}

/**
 * Contains response data for the delete307 operation.
 */
export interface HttpRedirectsDelete307Response extends msRest.HttpResponse {
  /**
   * The parsed HTTP response headers.
   */
  parsedHeaders: HttpRedirectsDelete307Headers;
}

/**
 * Contains response data for the head400 operation.
 */
export interface HttpClientFailureHead400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get400 operation.
 */
export interface HttpClientFailureGet400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the put400 operation.
 */
export interface HttpClientFailurePut400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the patch400 operation.
 */
export interface HttpClientFailurePatch400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the post400 operation.
 */
export interface HttpClientFailurePost400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the delete400 operation.
 */
export interface HttpClientFailureDelete400Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the head401 operation.
 */
export interface HttpClientFailureHead401Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get402 operation.
 */
export interface HttpClientFailureGet402Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get403 operation.
 */
export interface HttpClientFailureGet403Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the put404 operation.
 */
export interface HttpClientFailurePut404Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the patch405 operation.
 */
export interface HttpClientFailurePatch405Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the post406 operation.
 */
export interface HttpClientFailurePost406Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the delete407 operation.
 */
export interface HttpClientFailureDelete407Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the put409 operation.
 */
export interface HttpClientFailurePut409Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the head410 operation.
 */
export interface HttpClientFailureHead410Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get411 operation.
 */
export interface HttpClientFailureGet411Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get412 operation.
 */
export interface HttpClientFailureGet412Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the put413 operation.
 */
export interface HttpClientFailurePut413Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the patch414 operation.
 */
export interface HttpClientFailurePatch414Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the post415 operation.
 */
export interface HttpClientFailurePost415Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get416 operation.
 */
export interface HttpClientFailureGet416Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the delete417 operation.
 */
export interface HttpClientFailureDelete417Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the head429 operation.
 */
export interface HttpClientFailureHead429Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the head501 operation.
 */
export interface HttpServerFailureHead501Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get501 operation.
 */
export interface HttpServerFailureGet501Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the post505 operation.
 */
export interface HttpServerFailurePost505Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the delete505 operation.
 */
export interface HttpServerFailureDelete505Response extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: ErrorModel;
}

/**
 * Contains response data for the get200Model204NoModelDefaultError200Valid
 * operation.
 */
export interface MultipleResponsesGet200Model204NoModelDefaultError200ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model204NoModelDefaultError204Valid
 * operation.
 */
export interface MultipleResponsesGet200Model204NoModelDefaultError204ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model204NoModelDefaultError201Invalid
 * operation.
 */
export interface MultipleResponsesGet200Model204NoModelDefaultError201InvalidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model204NoModelDefaultError202None
 * operation.
 */
export interface MultipleResponsesGet200Model204NoModelDefaultError202NoneResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model204NoModelDefaultError400Valid
 * operation.
 */
export interface MultipleResponsesGet200Model204NoModelDefaultError400ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model201ModelDefaultError200Valid
 * operation.
 */
export interface MultipleResponsesGet200Model201ModelDefaultError200ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model201ModelDefaultError201Valid
 * operation.
 */
export interface MultipleResponsesGet200Model201ModelDefaultError201ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200Model201ModelDefaultError400Valid
 * operation.
 */
export interface MultipleResponsesGet200Model201ModelDefaultError400ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the
 * get200ModelA201ModelC404ModelDDefaultError200Valid operation.
 */
export interface MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError200ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: any;
}

/**
 * Contains response data for the
 * get200ModelA201ModelC404ModelDDefaultError201Valid operation.
 */
export interface MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError201ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: any;
}

/**
 * Contains response data for the
 * get200ModelA201ModelC404ModelDDefaultError404Valid operation.
 */
export interface MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError404ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: any;
}

/**
 * Contains response data for the
 * get200ModelA201ModelC404ModelDDefaultError400Valid operation.
 */
export interface MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError400ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: any;
}

/**
 * Contains response data for the getDefaultModelA200Valid operation.
 */
export interface MultipleResponsesGetDefaultModelA200ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the getDefaultModelA200None operation.
 */
export interface MultipleResponsesGetDefaultModelA200NoneResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the getDefaultModelA400Valid operation.
 */
export interface MultipleResponsesGetDefaultModelA400ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the getDefaultModelA400None operation.
 */
export interface MultipleResponsesGetDefaultModelA400NoneResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA200None operation.
 */
export interface MultipleResponsesGet200ModelA200NoneResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA200Valid operation.
 */
export interface MultipleResponsesGet200ModelA200ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA200Invalid operation.
 */
export interface MultipleResponsesGet200ModelA200InvalidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA400None operation.
 */
export interface MultipleResponsesGet200ModelA400NoneResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA400Valid operation.
 */
export interface MultipleResponsesGet200ModelA400ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA400Invalid operation.
 */
export interface MultipleResponsesGet200ModelA400InvalidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}

/**
 * Contains response data for the get200ModelA202Valid operation.
 */
export interface MultipleResponsesGet200ModelA202ValidResponse extends msRest.HttpResponse {
  /**
   * The response body as text (string format)
   */
  bodyAsText: string;
  /**
   * The response body as parsed JSON or XML
   */
  parsedBody: A;
}
