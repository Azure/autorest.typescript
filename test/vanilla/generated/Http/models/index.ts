/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/core-http";
import * as coreHttp from "@azure/core-http";

/**
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  status?: number;
  message?: string;
}

/**
 * An interface representing A.
 */
export interface A {
  statusCode?: string;
}

/**
 * An interface representing B.
 */
export interface B extends A {
  textStatusCode?: string;
}

/**
 * An interface representing C.
 */
export interface C {
  httpCode?: string;
}

/**
 * An interface representing D.
 */
export interface D {
  httpStatusCode?: string;
}

/**
 * An interface representing AutoRestHttpInfrastructureTestServiceOptions.
 */
export interface AutoRestHttpInfrastructureTestServiceOptions extends ServiceClientOptions {
  baseUri?: string;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPut200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPatch200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPost200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessDelete200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPut201OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPost201OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPut202OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPatch202OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPost202OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessDelete202OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPut204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPatch204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessPost204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpSuccessDelete204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPut301OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPatch302OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPost303OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPut307OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPatch307OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsPost307OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRedirectsDelete307OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePut400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePatch400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePost400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailureDelete400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePut404OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePatch405OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePost406OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailureDelete407OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePut409OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePut413OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePatch414OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailurePost415OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpClientFailureDelete417OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpServerFailurePost505OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpServerFailureDelete505OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryPut500OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryPatch500OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryPost503OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryDelete503OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryPut504OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Optional Parameters.
 */
export interface HttpRetryPatch504OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Simple boolean value true
   */
  booleanValue?: boolean;
}

/**
 * Defines headers for head300 operation.
 */
export interface HttpRedirectsHead300Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/head/200'
   */
  location: Location;
}

/**
 * Defines headers for get300 operation.
 */
export interface HttpRedirectsGet300Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/get/200'
   */
  location: Location1;
}

/**
 * Defines headers for head301 operation.
 */
export interface HttpRedirectsHead301Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/head/200'
   */
  location: Location2;
}

/**
 * Defines headers for get301 operation.
 */
export interface HttpRedirectsGet301Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/get/200'
   */
  location: Location3;
}

/**
 * Defines headers for put301 operation.
 */
export interface HttpRedirectsPut301Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/failure/500'
   */
  location: Location4;
}

/**
 * Defines headers for head302 operation.
 */
export interface HttpRedirectsHead302Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/head/200'
   */
  location: Location5;
}

/**
 * Defines headers for get302 operation.
 */
export interface HttpRedirectsGet302Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/get/200'
   */
  location: Location6;
}

/**
 * Defines headers for patch302 operation.
 */
export interface HttpRedirectsPatch302Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/failure/500'
   */
  location: Location7;
}

/**
 * Defines headers for post303 operation.
 */
export interface HttpRedirectsPost303Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/get/200'
   */
  location: Location8;
}

/**
 * Defines headers for head307 operation.
 */
export interface HttpRedirectsHead307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/head/200'
   */
  location: Location9;
}

/**
 * Defines headers for get307 operation.
 */
export interface HttpRedirectsGet307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/get/200'
   */
  location: Location10;
}

/**
 * Defines headers for put307 operation.
 */
export interface HttpRedirectsPut307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/put/200'
   */
  location: Location11;
}

/**
 * Defines headers for patch307 operation.
 */
export interface HttpRedirectsPatch307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/patch/200'
   */
  location: Location12;
}

/**
 * Defines headers for post307 operation.
 */
export interface HttpRedirectsPost307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/post/200'
   */
  location: Location13;
}

/**
 * Defines headers for delete307 operation.
 */
export interface HttpRedirectsDelete307Headers {
  /**
   * The redirect location for this request. Possible values include: '/http/success/delete/200'
   */
  location: Location14;
}

/**
 * Defines values for Location.
 * Possible values include: '/http/success/head/200'
 * @readonly
 * @enum {string}
 */
export type Location = '/http/success/head/200';

/**
 * Defines values for Location1.
 * Possible values include: '/http/success/get/200'
 * @readonly
 * @enum {string}
 */
export type Location1 = '/http/success/get/200';

/**
 * Defines values for Location2.
 * Possible values include: '/http/success/head/200'
 * @readonly
 * @enum {string}
 */
export type Location2 = '/http/success/head/200';

/**
 * Defines values for Location3.
 * Possible values include: '/http/success/get/200'
 * @readonly
 * @enum {string}
 */
export type Location3 = '/http/success/get/200';

/**
 * Defines values for Location4.
 * Possible values include: '/http/failure/500'
 * @readonly
 * @enum {string}
 */
export type Location4 = '/http/failure/500';

/**
 * Defines values for Location5.
 * Possible values include: '/http/success/head/200'
 * @readonly
 * @enum {string}
 */
export type Location5 = '/http/success/head/200';

/**
 * Defines values for Location6.
 * Possible values include: '/http/success/get/200'
 * @readonly
 * @enum {string}
 */
export type Location6 = '/http/success/get/200';

/**
 * Defines values for Location7.
 * Possible values include: '/http/failure/500'
 * @readonly
 * @enum {string}
 */
export type Location7 = '/http/failure/500';

/**
 * Defines values for Location8.
 * Possible values include: '/http/success/get/200'
 * @readonly
 * @enum {string}
 */
export type Location8 = '/http/success/get/200';

/**
 * Defines values for Location9.
 * Possible values include: '/http/success/head/200'
 * @readonly
 * @enum {string}
 */
export type Location9 = '/http/success/head/200';

/**
 * Defines values for Location10.
 * Possible values include: '/http/success/get/200'
 * @readonly
 * @enum {string}
 */
export type Location10 = '/http/success/get/200';

/**
 * Defines values for Location11.
 * Possible values include: '/http/success/put/200'
 * @readonly
 * @enum {string}
 */
export type Location11 = '/http/success/put/200';

/**
 * Defines values for Location12.
 * Possible values include: '/http/success/patch/200'
 * @readonly
 * @enum {string}
 */
export type Location12 = '/http/success/patch/200';

/**
 * Defines values for Location13.
 * Possible values include: '/http/success/post/200'
 * @readonly
 * @enum {string}
 */
export type Location13 = '/http/success/post/200';

/**
 * Defines values for Location14.
 * Possible values include: '/http/success/delete/200'
 * @readonly
 * @enum {string}
 */
export type Location14 = '/http/success/delete/200';

/**
 * Contains response data for the getEmptyError operation.
 */
export type HttpFailureGetEmptyErrorResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getNoModelError operation.
 */
export type HttpFailureGetNoModelErrorResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getNoModelEmpty operation.
 */
export type HttpFailureGetNoModelEmptyResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the get200 operation.
 */
export type HttpSuccessGet200Response = {
  /**
   * The parsed response body.
   */
  body: boolean;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the head300 operation.
 */
export type HttpRedirectsHead300Response = HttpRedirectsHead300Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsHead300Headers;
    };
};

/**
 * Contains response data for the get300 operation.
 */
export type HttpRedirectsGet300Response = Array<string> & HttpRedirectsGet300Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsGet300Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the head301 operation.
 */
export type HttpRedirectsHead301Response = HttpRedirectsHead301Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsHead301Headers;
    };
};

/**
 * Contains response data for the get301 operation.
 */
export type HttpRedirectsGet301Response = HttpRedirectsGet301Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsGet301Headers;
    };
};

/**
 * Contains response data for the put301 operation.
 */
export type HttpRedirectsPut301Response = HttpRedirectsPut301Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPut301Headers;
    };
};

/**
 * Contains response data for the head302 operation.
 */
export type HttpRedirectsHead302Response = HttpRedirectsHead302Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsHead302Headers;
    };
};

/**
 * Contains response data for the get302 operation.
 */
export type HttpRedirectsGet302Response = HttpRedirectsGet302Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsGet302Headers;
    };
};

/**
 * Contains response data for the patch302 operation.
 */
export type HttpRedirectsPatch302Response = HttpRedirectsPatch302Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPatch302Headers;
    };
};

/**
 * Contains response data for the post303 operation.
 */
export type HttpRedirectsPost303Response = HttpRedirectsPost303Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPost303Headers;
    };
};

/**
 * Contains response data for the head307 operation.
 */
export type HttpRedirectsHead307Response = HttpRedirectsHead307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsHead307Headers;
    };
};

/**
 * Contains response data for the get307 operation.
 */
export type HttpRedirectsGet307Response = HttpRedirectsGet307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsGet307Headers;
    };
};

/**
 * Contains response data for the put307 operation.
 */
export type HttpRedirectsPut307Response = HttpRedirectsPut307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPut307Headers;
    };
};

/**
 * Contains response data for the patch307 operation.
 */
export type HttpRedirectsPatch307Response = HttpRedirectsPatch307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPatch307Headers;
    };
};

/**
 * Contains response data for the post307 operation.
 */
export type HttpRedirectsPost307Response = HttpRedirectsPost307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsPost307Headers;
    };
};

/**
 * Contains response data for the delete307 operation.
 */
export type HttpRedirectsDelete307Response = HttpRedirectsDelete307Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: HttpRedirectsDelete307Headers;
    };
};

/**
 * Contains response data for the head400 operation.
 */
export type HttpClientFailureHead400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get400 operation.
 */
export type HttpClientFailureGet400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the put400 operation.
 */
export type HttpClientFailurePut400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the patch400 operation.
 */
export type HttpClientFailurePatch400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the post400 operation.
 */
export type HttpClientFailurePost400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the delete400 operation.
 */
export type HttpClientFailureDelete400Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the head401 operation.
 */
export type HttpClientFailureHead401Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get402 operation.
 */
export type HttpClientFailureGet402Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get403 operation.
 */
export type HttpClientFailureGet403Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the put404 operation.
 */
export type HttpClientFailurePut404Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the patch405 operation.
 */
export type HttpClientFailurePatch405Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the post406 operation.
 */
export type HttpClientFailurePost406Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the delete407 operation.
 */
export type HttpClientFailureDelete407Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the put409 operation.
 */
export type HttpClientFailurePut409Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the head410 operation.
 */
export type HttpClientFailureHead410Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get411 operation.
 */
export type HttpClientFailureGet411Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get412 operation.
 */
export type HttpClientFailureGet412Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the put413 operation.
 */
export type HttpClientFailurePut413Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the patch414 operation.
 */
export type HttpClientFailurePatch414Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the post415 operation.
 */
export type HttpClientFailurePost415Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get416 operation.
 */
export type HttpClientFailureGet416Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the delete417 operation.
 */
export type HttpClientFailureDelete417Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the head429 operation.
 */
export type HttpClientFailureHead429Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the head501 operation.
 */
export type HttpServerFailureHead501Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get501 operation.
 */
export type HttpServerFailureGet501Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the post505 operation.
 */
export type HttpServerFailurePost505Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the delete505 operation.
 */
export type HttpServerFailureDelete505Response = ErrorModel & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ErrorModel;
    };
};

/**
 * Contains response data for the get200Model204NoModelDefaultError200Valid operation.
 */
export type MultipleResponsesGet200Model204NoModelDefaultError200ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model204NoModelDefaultError204Valid operation.
 */
export type MultipleResponsesGet200Model204NoModelDefaultError204ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model204NoModelDefaultError201Invalid operation.
 */
export type MultipleResponsesGet200Model204NoModelDefaultError201InvalidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model204NoModelDefaultError202None operation.
 */
export type MultipleResponsesGet200Model204NoModelDefaultError202NoneResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model204NoModelDefaultError400Valid operation.
 */
export type MultipleResponsesGet200Model204NoModelDefaultError400ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model201ModelDefaultError200Valid operation.
 */
export type MultipleResponsesGet200Model201ModelDefaultError200ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model201ModelDefaultError201Valid operation.
 */
export type MultipleResponsesGet200Model201ModelDefaultError201ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200Model201ModelDefaultError400Valid operation.
 */
export type MultipleResponsesGet200Model201ModelDefaultError400ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA201ModelC404ModelDDefaultError200Valid operation.
 */
export type MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError200ValidResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get200ModelA201ModelC404ModelDDefaultError201Valid operation.
 */
export type MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError201ValidResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get200ModelA201ModelC404ModelDDefaultError404Valid operation.
 */
export type MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError404ValidResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get200ModelA201ModelC404ModelDDefaultError400Valid operation.
 */
export type MultipleResponsesGet200ModelA201ModelC404ModelDDefaultError400ValidResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the getDefaultModelA200Valid operation.
 */
export type MultipleResponsesGetDefaultModelA200ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the getDefaultModelA200None operation.
 */
export type MultipleResponsesGetDefaultModelA200NoneResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the getDefaultModelA400Valid operation.
 */
export type MultipleResponsesGetDefaultModelA400ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the getDefaultModelA400None operation.
 */
export type MultipleResponsesGetDefaultModelA400NoneResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA200None operation.
 */
export type MultipleResponsesGet200ModelA200NoneResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA200Valid operation.
 */
export type MultipleResponsesGet200ModelA200ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA200Invalid operation.
 */
export type MultipleResponsesGet200ModelA200InvalidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA400None operation.
 */
export type MultipleResponsesGet200ModelA400NoneResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA400Valid operation.
 */
export type MultipleResponsesGet200ModelA400ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA400Invalid operation.
 */
export type MultipleResponsesGet200ModelA400InvalidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};

/**
 * Contains response data for the get200ModelA202Valid operation.
 */
export type MultipleResponsesGet200ModelA202ValidResponse = A & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: A;
    };
};
