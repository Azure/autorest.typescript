/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const ErrorModel = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      parentError: {
        serializedName: "parentError",
        type: {
          name: "Composite",
          className: "ErrorModel"
        }
      }
    }
  }
};

export const Resource = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlattenedProduct = {
  serializedName: "FlattenedProduct",
  type: {
    name: "Composite",
    className: "FlattenedProduct",
    modelProperties: {
      ...Resource.type.modelProperties,
      pname: {
        serializedName: "properties.p\\.name",
        type: {
          name: "String"
        }
      },
      flattenedProductType: {
        serializedName: "properties.type",
        type: {
          name: "String"
        }
      },
      provisioningStateValues: {
        readOnly: true,
        serializedName: "properties.provisioningStateValues",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceCollection = {
  serializedName: "ResourceCollection",
  type: {
    name: "Composite",
    className: "ResourceCollection",
    modelProperties: {
      productresource: {
        serializedName: "productresource",
        type: {
          name: "Composite",
          className: "FlattenedProduct"
        }
      },
      arrayofresources: {
        serializedName: "arrayofresources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FlattenedProduct"
            }
          }
        }
      },
      dictionaryofresources: {
        serializedName: "dictionaryofresources",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "FlattenedProduct"
            }
          }
        }
      }
    }
  }
};

export const BaseProduct = {
  serializedName: "BaseProduct",
  type: {
    name: "Composite",
    className: "BaseProduct",
    modelProperties: {
      productId: {
        required: true,
        serializedName: "base_product_id",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "base_product_description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SimpleProduct = {
  serializedName: "SimpleProduct",
  type: {
    name: "Composite",
    className: "SimpleProduct",
    modelProperties: {
      ...BaseProduct.type.modelProperties,
      maxProductDisplayName: {
        required: true,
        serializedName: "details.max_product_display_name",
        type: {
          name: "String"
        }
      },
      capacity: {
        required: true,
        isConstant: true,
        serializedName: "details.max_product_capacity",
        defaultValue: 'Large',
        type: {
          name: "String"
        }
      },
      genericValue: {
        serializedName: "details.max_product_image.generic_value",
        type: {
          name: "String"
        }
      },
      odatavalue: {
        serializedName: "details.max_product_image.@odata\\.value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const GenericUrl = {
  serializedName: "GenericUrl",
  type: {
    name: "Composite",
    className: "GenericUrl",
    modelProperties: {
      genericValue: {
        serializedName: "generic_value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const WrappedProduct = {
  serializedName: "WrappedProduct",
  type: {
    name: "Composite",
    className: "WrappedProduct",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductWrapper = {
  serializedName: "ProductWrapper",
  type: {
    name: "Composite",
    className: "ProductWrapper",
    modelProperties: {
      value: {
        serializedName: "property.value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FlattenParameterGroup = {
  type: {
    name: "Composite",
    className: "FlattenParameterGroup",
    modelProperties: {
      name: {
        required: true,
        type: {
          name: "String"
        }
      },
      productId: {
        required: true,
        type: {
          name: "String"
        }
      },
      description: {
        type: {
          name: "String"
        }
      },
      maxProductDisplayName: {
        required: true,
        type: {
          name: "String"
        }
      },
      genericValue: {
        type: {
          name: "String"
        }
      },
      odatavalue: {
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePutArrayOptionalParams = {
  serializedName: "PutArrayOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePutArrayOptionalParams",
    modelProperties: {
      resourceArray: {
        serializedName: "ResourceArray",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Resource"
            }
          }
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePutWrappedArrayOptionalParams = {
  serializedName: "PutWrappedArrayOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePutWrappedArrayOptionalParams",
    modelProperties: {
      resourceArray: {
        serializedName: "ResourceArray",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WrappedProduct"
            }
          }
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePutDictionaryOptionalParams = {
  serializedName: "PutDictionaryOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePutDictionaryOptionalParams",
    modelProperties: {
      resourceDictionary: {
        serializedName: "ResourceDictionary",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "FlattenedProduct"
            }
          }
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePutResourceCollectionOptionalParams = {
  serializedName: "PutResourceCollectionOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePutResourceCollectionOptionalParams",
    modelProperties: {
      resourceComplexObject: {
        serializedName: "ResourceComplexObject",
        type: {
          name: "Composite",
          className: "ResourceCollection"
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePutSimpleProductOptionalParams = {
  serializedName: "PutSimpleProductOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePutSimpleProductOptionalParams",
    modelProperties: {
      simpleBodyProduct: {
        serializedName: "SimpleBodyProduct",
        type: {
          name: "Composite",
          className: "SimpleProduct"
        }
      }
    }
  }
};

export const AutoRestResourceFlatteningTestServicePostFlattenedSimpleProductOptionalParams = {
  serializedName: "PostFlattenedSimpleProductOptions",
  type: {
    name: "Composite",
    className: "AutoRestResourceFlatteningTestServicePostFlattenedSimpleProductOptionalParams",
    modelProperties: {
      description: {
        serializedName: "base_product_description",
        type: {
          name: "String"
        }
      },
      genericValue: {
        serializedName: "details.max_product_image.generic_value",
        type: {
          name: "String"
        }
      },
      odatavalue: {
        serializedName: "details.max_product_image.@odata\\.value",
        type: {
          name: "String"
        }
      }
    }
  }
};
