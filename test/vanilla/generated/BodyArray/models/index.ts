/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "ms-rest-js";
import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing Product.
 */
export interface Product {
  /**
   * @member {number} [integer]
   */
  integer?: number;
  /**
   * @member {string} [string]
   */
  string?: string;
}

/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {number} [status]
   */
  status?: number;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing AutoRestSwaggerBATArrayServiceOptions.
 * @extends ServiceClientOptions
 */
export interface AutoRestSwaggerBATArrayServiceOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * Defines values for FooEnum.
 * Possible values include: 'foo1', 'foo2', 'foo3'
 * @readonly
 * @enum {string}
 */
export enum FooEnum {
  Foo1 = 'foo1',
  Foo2 = 'foo2',
  Foo3 = 'foo3',
}

/**
 * Contains response data for the getNull operation.
 */
export type ArrayModelGetNullResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getInvalid operation.
 */
export type ArrayModelGetInvalidResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getEmpty operation.
 */
export type ArrayModelGetEmptyResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getBooleanTfft operation.
 */
export type ArrayModelGetBooleanTfftResponse = Array<boolean> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean[];
    };
};

/**
 * Contains response data for the getBooleanInvalidNull operation.
 */
export type ArrayModelGetBooleanInvalidNullResponse = Array<boolean> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean[];
    };
};

/**
 * Contains response data for the getBooleanInvalidString operation.
 */
export type ArrayModelGetBooleanInvalidStringResponse = Array<boolean> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean[];
    };
};

/**
 * Contains response data for the getIntegerValid operation.
 */
export type ArrayModelGetIntegerValidResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getIntInvalidNull operation.
 */
export type ArrayModelGetIntInvalidNullResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getIntInvalidString operation.
 */
export type ArrayModelGetIntInvalidStringResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getLongValid operation.
 */
export type ArrayModelGetLongValidResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getLongInvalidNull operation.
 */
export type ArrayModelGetLongInvalidNullResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getLongInvalidString operation.
 */
export type ArrayModelGetLongInvalidStringResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getFloatValid operation.
 */
export type ArrayModelGetFloatValidResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getFloatInvalidNull operation.
 */
export type ArrayModelGetFloatInvalidNullResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getFloatInvalidString operation.
 */
export type ArrayModelGetFloatInvalidStringResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getDoubleValid operation.
 */
export type ArrayModelGetDoubleValidResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getDoubleInvalidNull operation.
 */
export type ArrayModelGetDoubleInvalidNullResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getDoubleInvalidString operation.
 */
export type ArrayModelGetDoubleInvalidStringResponse = Array<number> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: number[];
    };
};

/**
 * Contains response data for the getStringValid operation.
 */
export type ArrayModelGetStringValidResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getEnumValid operation.
 */
export type ArrayModelGetEnumValidResponse = Array<FooEnum> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: FooEnum[];
    };
};

/**
 * Contains response data for the getStringEnumValid operation.
 */
export type ArrayModelGetStringEnumValidResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getStringWithNull operation.
 */
export type ArrayModelGetStringWithNullResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getStringWithInvalid operation.
 */
export type ArrayModelGetStringWithInvalidResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getUuidValid operation.
 */
export type ArrayModelGetUuidValidResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getUuidInvalidChars operation.
 */
export type ArrayModelGetUuidInvalidCharsResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getDateValid operation.
 */
export type ArrayModelGetDateValidResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateInvalidNull operation.
 */
export type ArrayModelGetDateInvalidNullResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateInvalidChars operation.
 */
export type ArrayModelGetDateInvalidCharsResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateTimeValid operation.
 */
export type ArrayModelGetDateTimeValidResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateTimeInvalidNull operation.
 */
export type ArrayModelGetDateTimeInvalidNullResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateTimeInvalidChars operation.
 */
export type ArrayModelGetDateTimeInvalidCharsResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDateTimeRfc1123Valid operation.
 */
export type ArrayModelGetDateTimeRfc1123ValidResponse = Array<Date> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date[] | string[];
    };
};

/**
 * Contains response data for the getDurationValid operation.
 */
export type ArrayModelGetDurationValidResponse = Array<string> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[];
    };
};

/**
 * Contains response data for the getByteValid operation.
 */
export type ArrayModelGetByteValidResponse = Array<Uint8Array> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Uint8Array[];
    };
};

/**
 * Contains response data for the getByteInvalidNull operation.
 */
export type ArrayModelGetByteInvalidNullResponse = Array<Uint8Array> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Uint8Array[];
    };
};

/**
 * Contains response data for the getBase64Url operation.
 */
export type ArrayModelGetBase64UrlResponse = Array<Uint8Array> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Uint8Array[];
    };
};

/**
 * Contains response data for the getComplexNull operation.
 */
export type ArrayModelGetComplexNullResponse = Array<Product> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product[];
    };
};

/**
 * Contains response data for the getComplexEmpty operation.
 */
export type ArrayModelGetComplexEmptyResponse = Array<Product> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product[];
    };
};

/**
 * Contains response data for the getComplexItemNull operation.
 */
export type ArrayModelGetComplexItemNullResponse = Array<Product> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product[];
    };
};

/**
 * Contains response data for the getComplexItemEmpty operation.
 */
export type ArrayModelGetComplexItemEmptyResponse = Array<Product> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product[];
    };
};

/**
 * Contains response data for the getComplexValid operation.
 */
export type ArrayModelGetComplexValidResponse = Array<Product> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product[];
    };
};

/**
 * Contains response data for the getArrayNull operation.
 */
export type ArrayModelGetArrayNullResponse = Array<string[]> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[][];
    };
};

/**
 * Contains response data for the getArrayEmpty operation.
 */
export type ArrayModelGetArrayEmptyResponse = Array<string[]> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[][];
    };
};

/**
 * Contains response data for the getArrayItemNull operation.
 */
export type ArrayModelGetArrayItemNullResponse = Array<string[]> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[][];
    };
};

/**
 * Contains response data for the getArrayItemEmpty operation.
 */
export type ArrayModelGetArrayItemEmptyResponse = Array<string[]> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[][];
    };
};

/**
 * Contains response data for the getArrayValid operation.
 */
export type ArrayModelGetArrayValidResponse = Array<string[]> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: string[][];
    };
};

/**
 * Contains response data for the getDictionaryNull operation.
 */
export type ArrayModelGetDictionaryNullResponse = Array<{ [propertyName: string]: string }> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string }[];
    };
};

/**
 * Contains response data for the getDictionaryEmpty operation.
 */
export type ArrayModelGetDictionaryEmptyResponse = Array<{ [propertyName: string]: string }> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string }[];
    };
};

/**
 * Contains response data for the getDictionaryItemNull operation.
 */
export type ArrayModelGetDictionaryItemNullResponse = Array<{ [propertyName: string]: string }> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string }[];
    };
};

/**
 * Contains response data for the getDictionaryItemEmpty operation.
 */
export type ArrayModelGetDictionaryItemEmptyResponse = Array<{ [propertyName: string]: string }> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string }[];
    };
};

/**
 * Contains response data for the getDictionaryValid operation.
 */
export type ArrayModelGetDictionaryValidResponse = Array<{ [propertyName: string]: string }> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: { [propertyName: string]: string }[];
    };
};
