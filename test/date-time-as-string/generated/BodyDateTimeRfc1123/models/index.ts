/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "ms-rest-js";
import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  /**
   * @member {number} [status]
   */
  status?: number;
  /**
   * @member {string} [message]
   */
  message?: string;
}

/**
 * @interface
 * An interface representing AutoRestRFC1123DateTimeTestServiceOptions.
 * @extends ServiceClientOptions
 */
export interface AutoRestRFC1123DateTimeTestServiceOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * Contains response data for the getNull operation.
 */
export type Datetimerfc1123GetNullResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getInvalid operation.
 */
export type Datetimerfc1123GetInvalidResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getOverflow operation.
 */
export type Datetimerfc1123GetOverflowResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getUnderflow operation.
 */
export type Datetimerfc1123GetUnderflowResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getUtcLowercaseMaxDateTime operation.
 */
export type Datetimerfc1123GetUtcLowercaseMaxDateTimeResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getUtcUppercaseMaxDateTime operation.
 */
export type Datetimerfc1123GetUtcUppercaseMaxDateTimeResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};

/**
 * Contains response data for the getUtcMinDateTime operation.
 */
export type Datetimerfc1123GetUtcMinDateTimeResponse = {
  /**
   * The parsed response body.
   */
  body: Date;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Date;
    };
};
