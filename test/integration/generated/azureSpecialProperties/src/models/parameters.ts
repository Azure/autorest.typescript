/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationURLParameter,
  OperationParameter,
  OperationQueryParameter
} from "@azure/core-http";

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const xMsClientRequestId: OperationParameter = {
  parameterPath: "xMsClientRequestId",
  mapper: {
    serializedName: "x-ms-client-request-id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const subscriptionId: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2015-07-01-preview",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const subscriptionId1: OperationURLParameter = {
  parameterPath: "subscriptionId",
  mapper: {
    serializedName: "subscriptionId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const apiVersion1: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2.0",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const apiVersion2: OperationQueryParameter = {
  parameterPath: ["options", "apiVersion"],
  mapper: {
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const unencodedPathParam: OperationURLParameter = {
  parameterPath: "unencodedPathParam",
  mapper: {
    serializedName: "unencodedPathParam",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const unencodedPathParam1: OperationURLParameter = {
  parameterPath: "unencodedPathParam",
  mapper: {
    defaultValue: "path1/path2/path3",
    isConstant: true,
    serializedName: "unencodedPathParam",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const q1: OperationQueryParameter = {
  parameterPath: "q1",
  mapper: {
    serializedName: "q1",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const q11: OperationQueryParameter = {
  parameterPath: ["options", "q1"],
  mapper: {
    serializedName: "q1",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const q12: OperationQueryParameter = {
  parameterPath: "q1",
  mapper: {
    defaultValue: "value1&q2=value2&q3=value3",
    isConstant: true,
    serializedName: "q1",
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const filter: OperationQueryParameter = {
  parameterPath: ["options", "filter"],
  mapper: {
    serializedName: "$filter",
    type: {
      name: "String"
    }
  }
};

export const top: OperationQueryParameter = {
  parameterPath: ["options", "top"],
  mapper: {
    serializedName: "$top",
    type: {
      name: "Number"
    }
  }
};

export const orderby: OperationQueryParameter = {
  parameterPath: ["options", "orderby"],
  mapper: {
    serializedName: "$orderby",
    type: {
      name: "String"
    }
  }
};

export const fooClientRequestId: OperationParameter = {
  parameterPath: "fooClientRequestId",
  mapper: {
    serializedName: "foo-client-request-id",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const fooClientRequestId1: OperationParameter = {
  parameterPath: [
    "headerCustomNamedRequestIdParamGroupingParameters",
    "fooClientRequestId"
  ],
  mapper: {
    serializedName: "foo-client-request-id",
    required: true,
    type: {
      name: "String"
    }
  }
};
