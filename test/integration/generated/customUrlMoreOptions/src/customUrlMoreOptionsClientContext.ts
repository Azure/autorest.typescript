/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import { CustomUrlMoreOptionsClientOptionalParams } from "./models";

const packageName = "custom-url-MoreOptions";
const packageVersion = "1.0.0-preview1";

export class CustomUrlMoreOptionsClientContext extends coreHttp.ServiceClient {
  dnsSuffix: string;
  subscriptionId: string;

  /**
   * Initializes a new instance of the CustomUrlMoreOptionsClientContext class.
   * @param subscriptionId The subscription id with value 'test12'.
   * @param options The parameter options
   */
  constructor(
    subscriptionId: string,
    options?: CustomUrlMoreOptionsClientOptionalParams
  ) {
    if (subscriptionId === undefined) {
      throw new Error("'subscriptionId' cannot be null");
    }

    // Initializing default values for options
    if (!options) {
      options = {};
    }

    if (!options.userAgent) {
      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();
      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;
    }

    super(undefined, options);

    this.requestContentType = "application/json; charset=utf-8";

    this.baseUri = options.endpoint || "{vault}{secret}{dnsSuffix}";

    // Parameter assignments
    this.subscriptionId = subscriptionId;

    // Assigning values to Constant parameters
    this.dnsSuffix = options.dnsSuffix || "host";
  }
}
