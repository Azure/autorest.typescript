/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  Basic,
  Primitive,
  Array,
  Dictionary,
  Inheritance,
  Polymorphism,
  Polymorphicrecursive,
  Readonlyproperty,
  Flattencomplex
} from "./operations";
import { BodyComplexWithTracingContext } from "./bodyComplexWithTracingContext";
import { BodyComplexWithTracingOptionalParams } from "./models";

export class BodyComplexWithTracing extends BodyComplexWithTracingContext {
  /**
   * Initializes a new instance of the BodyComplexWithTracing class.
   * @param options The parameter options
   */
  constructor(options?: BodyComplexWithTracingOptionalParams) {
    super(options);
    this.basic = new Basic(this);
    this.primitive = new Primitive(this);
    this.array = new Array(this);
    this.dictionary = new Dictionary(this);
    this.inheritance = new Inheritance(this);
    this.polymorphism = new Polymorphism(this);
    this.polymorphicrecursive = new Polymorphicrecursive(this);
    this.readonlyproperty = new Readonlyproperty(this);
    this.flattencomplex = new Flattencomplex(this);
  }

  basic: Basic;
  primitive: Primitive;
  array: Array;
  dictionary: Dictionary;
  inheritance: Inheritance;
  polymorphism: Polymorphism;
  polymorphicrecursive: Polymorphicrecursive;
  readonlyproperty: Readonlyproperty;
  flattencomplex: Flattencomplex;
}
