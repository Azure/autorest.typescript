/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import {
  LROsPut200SucceededOptionalParams,
  LROsPut200SucceededResponse,
  LROsPut201SucceededOptionalParams,
  LROsPut201SucceededResponse,
  LROsPost202ListOptionalParams,
  LROsPost202ListResponse,
  LROsPut200SucceededNoStateOptionalParams,
  LROsPut200SucceededNoStateResponse,
  LROsPut202Retry200OptionalParams,
  LROsPut202Retry200Response,
  LROsPut201CreatingSucceeded200OptionalParams,
  LROsPut201CreatingSucceeded200Response,
  LROsPut200UpdatingSucceeded204OptionalParams,
  LROsPut200UpdatingSucceeded204Response,
  LROsPut201CreatingFailed200OptionalParams,
  LROsPut201CreatingFailed200Response,
  LROsPut200Acceptedcanceled200OptionalParams,
  LROsPut200Acceptedcanceled200Response,
  LROsPutNoHeaderInRetryOptionalParams,
  LROsPutNoHeaderInRetryResponse,
  LROsPutAsyncRetrySucceededOptionalParams,
  LROsPutAsyncRetrySucceededResponse,
  LROsPutAsyncNoRetrySucceededOptionalParams,
  LROsPutAsyncNoRetrySucceededResponse,
  LROsPutAsyncRetryFailedOptionalParams,
  LROsPutAsyncRetryFailedResponse,
  LROsPutAsyncNoRetrycanceledOptionalParams,
  LROsPutAsyncNoRetrycanceledResponse,
  LROsPutAsyncNoHeaderInRetryOptionalParams,
  LROsPutAsyncNoHeaderInRetryResponse,
  LROsPutNonResourceOptionalParams,
  LROsPutNonResourceResponse,
  LROsPutAsyncNonResourceOptionalParams,
  LROsPutAsyncNonResourceResponse,
  LROsPutSubResourceOptionalParams,
  LROsPutSubResourceResponse,
  LROsPutAsyncSubResourceOptionalParams,
  LROsPutAsyncSubResourceResponse,
  LROsDeleteProvisioning202Accepted200SucceededOptionalParams,
  LROsDeleteProvisioning202Accepted200SucceededResponse,
  LROsDeleteProvisioning202DeletingFailed200OptionalParams,
  LROsDeleteProvisioning202DeletingFailed200Response,
  LROsDeleteProvisioning202Deletingcanceled200OptionalParams,
  LROsDeleteProvisioning202Deletingcanceled200Response,
  LROsDelete204SucceededOptionalParams,
  LROsDelete202Retry200OptionalParams,
  LROsDelete202Retry200Response,
  LROsDelete202NoRetry204OptionalParams,
  LROsDelete202NoRetry204Response,
  LROsDeleteNoHeaderInRetryOptionalParams,
  LROsDeleteNoHeaderInRetryResponse,
  LROsDeleteAsyncNoHeaderInRetryOptionalParams,
  LROsDeleteAsyncNoHeaderInRetryResponse,
  LROsDeleteAsyncRetrySucceededOptionalParams,
  LROsDeleteAsyncRetrySucceededResponse,
  LROsDeleteAsyncNoRetrySucceededOptionalParams,
  LROsDeleteAsyncNoRetrySucceededResponse,
  LROsDeleteAsyncRetryFailedOptionalParams,
  LROsDeleteAsyncRetryFailedResponse,
  LROsDeleteAsyncRetrycanceledOptionalParams,
  LROsDeleteAsyncRetrycanceledResponse,
  LROsPost200WithPayloadOptionalParams,
  LROsPost200WithPayloadResponse,
  LROsPost202Retry200OptionalParams,
  LROsPost202Retry200Response,
  LROsPost202NoRetry204OptionalParams,
  LROsPost202NoRetry204Response,
  LROsPostDoubleHeadersFinalLocationGetOptionalParams,
  LROsPostDoubleHeadersFinalLocationGetResponse,
  LROsPostDoubleHeadersFinalAzureHeaderGetOptionalParams,
  LROsPostDoubleHeadersFinalAzureHeaderGetResponse,
  LROsPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams,
  LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse,
  LROsPostAsyncRetrySucceededOptionalParams,
  LROsPostAsyncRetrySucceededResponse,
  LROsPostAsyncNoRetrySucceededOptionalParams,
  LROsPostAsyncNoRetrySucceededResponse,
  LROsPostAsyncRetryFailedOptionalParams,
  LROsPostAsyncRetryFailedResponse,
  LROsPostAsyncRetrycanceledOptionalParams,
  LROsPostAsyncRetrycanceledResponse
} from "../models";

/** Interface representing a LROs. */
export interface LROs {
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  put200Succeeded(
    options?: LROsPut200SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut200SucceededResponse>,
      LROsPut200SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  put201Succeeded(
    options?: LROsPut201SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut201SucceededResponse>,
      LROsPut201SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 with empty body to first request, returns a 200 with
   * body [{ 'id': '100', 'name': 'foo' }].
   * @param options The options parameters.
   */
  post202List(
    options?: LROsPost202ListOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPost202ListResponse>,
      LROsPost202ListResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that does not
   * contain ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  put200SucceededNoState(
    options?: LROsPut200SucceededNoStateOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut200SucceededNoStateResponse>,
      LROsPut200SucceededNoStateResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request, with a location header that
   * points to a polling URL that returns a 200 and an entity that doesn't contains ProvisioningState
   * @param options The options parameters.
   */
  put202Retry200(
    options?: LROsPut202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut202Retry200Response>,
      LROsPut202Retry200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  put201CreatingSucceeded200(
    options?: LROsPut201CreatingSucceeded200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut201CreatingSucceeded200Response>,
      LROsPut201CreatingSucceeded200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  put200UpdatingSucceeded204(
    options?: LROsPut200UpdatingSucceeded204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut200UpdatingSucceeded204Response>,
      LROsPut200UpdatingSucceeded204Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  put201CreatingFailed200(
    options?: LROsPut201CreatingFailed200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut201CreatingFailed200Response>,
      LROsPut201CreatingFailed200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  put200Acceptedcanceled200(
    options?: LROsPut200Acceptedcanceled200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPut200Acceptedcanceled200Response>,
      LROsPut200Acceptedcanceled200Response
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with location header.
   * Subsequent calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  putNoHeaderInRetry(
    options?: LROsPutNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutNoHeaderInRetryResponse>,
      LROsPutNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  putAsyncRetrySucceeded(
    options?: LROsPutAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncRetrySucceededResponse>,
      LROsPutAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  putAsyncNoRetrySucceeded(
    options?: LROsPutAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncNoRetrySucceededResponse>,
      LROsPutAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  putAsyncRetryFailed(
    options?: LROsPutAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncRetryFailedResponse>,
      LROsPutAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  putAsyncNoRetrycanceled(
    options?: LROsPutAsyncNoRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncNoRetrycanceledResponse>,
      LROsPutAsyncNoRetrycanceledResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation
   * header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  putAsyncNoHeaderInRetry(
    options?: LROsPutAsyncNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncNoHeaderInRetryResponse>,
      LROsPutAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  putNonResource(
    options?: LROsPutNonResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutNonResourceResponse>,
      LROsPutNonResourceResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  putAsyncNonResource(
    options?: LROsPutAsyncNonResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncNonResourceResponse>,
      LROsPutAsyncNonResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  putSubResource(
    options?: LROsPutSubResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutSubResourceResponse>,
      LROsPutSubResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  putAsyncSubResource(
    options?: LROsPutAsyncSubResourceOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPutAsyncSubResourceResponse>,
      LROsPutAsyncSubResourceResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  deleteProvisioning202Accepted200Succeeded(
    options?: LROsDeleteProvisioning202Accepted200SucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteProvisioning202Accepted200SucceededResponse>,
      LROsDeleteProvisioning202Accepted200SucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  deleteProvisioning202DeletingFailed200(
    options?: LROsDeleteProvisioning202DeletingFailed200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteProvisioning202DeletingFailed200Response>,
      LROsDeleteProvisioning202DeletingFailed200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  deleteProvisioning202Deletingcanceled200(
    options?: LROsDeleteProvisioning202Deletingcanceled200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteProvisioning202Deletingcanceled200Response>,
      LROsDeleteProvisioning202Deletingcanceled200Response
    >
  >;
  /**
   * Long running delete succeeds and returns right away
   * @param options The options parameters.
   */
  delete204Succeeded(
    options?: LROsDelete204SucceededOptionalParams
  ): Promise<
    PollerLike<PollOperationState<coreHttp.RestResponse>, coreHttp.RestResponse>
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  delete202Retry200(
    options?: LROsDelete202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDelete202Retry200Response>,
      LROsDelete202Retry200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  delete202NoRetry204(
    options?: LROsDelete202NoRetry204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDelete202NoRetry204Response>,
      LROsDelete202NoRetry204Response
    >
  >;
  /**
   * Long running delete request, service returns a location header in the initial request. Subsequent
   * calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  deleteNoHeaderInRetry(
    options?: LROsDeleteNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteNoHeaderInRetryResponse>,
      LROsDeleteNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns an Azure-AsyncOperation header in the initial request.
   * Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  deleteAsyncNoHeaderInRetry(
    options?: LROsDeleteAsyncNoHeaderInRetryOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteAsyncNoHeaderInRetryResponse>,
      LROsDeleteAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  deleteAsyncRetrySucceeded(
    options?: LROsDeleteAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteAsyncRetrySucceededResponse>,
      LROsDeleteAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  deleteAsyncNoRetrySucceeded(
    options?: LROsDeleteAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteAsyncNoRetrySucceededResponse>,
      LROsDeleteAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  deleteAsyncRetryFailed(
    options?: LROsDeleteAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteAsyncRetryFailedResponse>,
      LROsDeleteAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  deleteAsyncRetrycanceled(
    options?: LROsDeleteAsyncRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsDeleteAsyncRetrycanceledResponse>,
      LROsDeleteAsyncRetrycanceledResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header.
   * Poll returns a 200 with a response body after success.
   * @param options The options parameters.
   */
  post200WithPayload(
    options?: LROsPost200WithPayloadOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPost200WithPayloadResponse>,
      LROsPost200WithPayloadResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' and
   * 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  post202Retry200(
    options?: LROsPost202Retry200OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPost202Retry200Response>,
      LROsPost202Retry200Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header, 204
   * with noresponse body after success
   * @param options The options parameters.
   */
  post202NoRetry204(
    options?: LROsPost202NoRetry204OptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPost202NoRetry204Response>,
      LROsPost202NoRetry204Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should poll Location to get the final object
   * @param options The options parameters.
   */
  postDoubleHeadersFinalLocationGet(
    options?: LROsPostDoubleHeadersFinalLocationGetOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostDoubleHeadersFinalLocationGetResponse>,
      LROsPostDoubleHeadersFinalLocationGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object
   * @param options The options parameters.
   */
  postDoubleHeadersFinalAzureHeaderGet(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostDoubleHeadersFinalAzureHeaderGetResponse>,
      LROsPostDoubleHeadersFinalAzureHeaderGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object if you support initial Autorest behavior.
   * @param options The options parameters.
   */
  postDoubleHeadersFinalAzureHeaderGetDefault(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<
        LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse
      >,
      LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  postAsyncRetrySucceeded(
    options?: LROsPostAsyncRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostAsyncRetrySucceededResponse>,
      LROsPostAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  postAsyncNoRetrySucceeded(
    options?: LROsPostAsyncNoRetrySucceededOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostAsyncNoRetrySucceededResponse>,
      LROsPostAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  postAsyncRetryFailed(
    options?: LROsPostAsyncRetryFailedOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostAsyncRetryFailedResponse>,
      LROsPostAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  postAsyncRetrycanceled(
    options?: LROsPostAsyncRetrycanceledOptionalParams
  ): Promise<
    PollerLike<
      PollOperationState<LROsPostAsyncRetrycanceledResponse>,
      LROsPostAsyncRetrycanceledResponse
    >
  >;
}
