/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export interface Resource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource Type
   */
  readonly typeProperty?: string;
  /**
   * Dictionary of <string>
   */
  tags?: { [propertyName: string]: string };
  /**
   * Resource Location
   */
  location?: string;
  /**
   * Resource Name
   */
  readonly name?: string;
}

export type Product = Resource & {
  provisioningState?: string;
  readonly provisioningStateValues?: ProductPropertiesProvisioningStateValues;
};

export interface CloudError {
  status?: number;
  message?: string;
}

export interface Sku {
  name?: string;
  id?: string;
}

export interface SubResource {
  /**
   * Sub Resource Id
   */
  readonly id?: string;
}

export type SubProduct = SubResource & {
  provisioningState?: string;
  readonly provisioningStateValues?: SubProductPropertiesProvisioningStateValues;
};

export interface OperationResult {
  /**
   * The status of the request
   */
  status?: OperationResultStatus;
  errorProperty?: OperationResultError;
}

export interface OperationResultError {
  /**
   * The error code for an operation failure
   */
  code?: number;
  /**
   * The detailed arror message
   */
  message?: string;
}

/**
 * Defines headers for lros_putnoheaderinretry operation.
 */
export interface LrosPutnoheaderinretryHeaders {
  location?: string;
}

/**
 * Defines headers for lros_putasyncretrysucceeded operation.
 */
export interface LrosPutasyncretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_putasyncnoretrysucceeded operation.
 */
export interface LrosPutasyncnoretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
}

/**
 * Defines headers for lros_putasyncretryfailed operation.
 */
export interface LrosPutasyncretryfailedHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_putasyncnoretrycanceled operation.
 */
export interface LrosPutasyncnoretrycanceledHeaders {
  azureAsyncOperation?: string;
  location?: string;
}

/**
 * Defines headers for lros_putasyncnoheaderinretry operation.
 */
export interface LrosPutasyncnoheaderinretryHeaders {
  azureAsyncOperation?: string;
}

/**
 * Defines headers for lros_deleteprovisioning202accepted200succeeded operation.
 */
export interface LrosDeleteprovisioning202accepted200succeededHeaders {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deleteprovisioning202deletingfailed200 operation.
 */
export interface LrosDeleteprovisioning202deletingfailed200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deleteprovisioning202deletingcanceled200 operation.
 */
export interface LrosDeleteprovisioning202deletingcanceled200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_delete202retry200 operation.
 */
export interface LrosDelete202retry200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_delete202noretry204 operation.
 */
export interface LrosDelete202noretry204Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deletenoheaderinretry operation.
 */
export interface LrosDeletenoheaderinretryHeaders {
  location?: string;
}

/**
 * Defines headers for lros_deleteasyncnoheaderinretry operation.
 */
export interface LrosDeleteasyncnoheaderinretryHeaders {
  location?: string;
}

/**
 * Defines headers for lros_deleteasyncretrysucceeded operation.
 */
export interface LrosDeleteasyncretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deleteasyncnoretrysucceeded operation.
 */
export interface LrosDeleteasyncnoretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deleteasyncretryfailed operation.
 */
export interface LrosDeleteasyncretryfailedHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_deleteasyncretrycanceled operation.
 */
export interface LrosDeleteasyncretrycanceledHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_post202retry200 operation.
 */
export interface LrosPost202retry200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_post202noretry204 operation.
 */
export interface LrosPost202noretry204Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_postasyncretrysucceeded operation.
 */
export interface LrosPostasyncretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_postasyncnoretrysucceeded operation.
 */
export interface LrosPostasyncnoretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_postasyncretryfailed operation.
 */
export interface LrosPostasyncretryfailedHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lros_postasyncretrycanceled operation.
 */
export interface LrosPostasyncretrycanceledHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_putasyncrelativeretrysucceeded operation.
 */
export interface LroretrysPutasyncrelativeretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_deleteprovisioning202accepted200succeeded operation.
 */
export interface LroretrysDeleteprovisioning202accepted200succeededHeaders {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_delete202retry200 operation.
 */
export interface LroretrysDelete202retry200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_deleteasyncrelativeretrysucceeded operation.
 */
export interface LroretrysDeleteasyncrelativeretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_post202retry200 operation.
 */
export interface LroretrysPost202retry200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroretrys_postasyncrelativeretrysucceeded operation.
 */
export interface LroretrysPostasyncrelativeretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_putasyncrelativeretry400 operation.
 */
export interface LrosadsPutasyncrelativeretry400Headers {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_deletenonretry400 operation.
 */
export interface LrosadsDeletenonretry400Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_delete202nonretry400 operation.
 */
export interface LrosadsDelete202nonretry400Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_deleteasyncrelativeretry400 operation.
 */
export interface LrosadsDeleteasyncrelativeretry400Headers {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_postnonretry400 operation.
 */
export interface LrosadsPostnonretry400Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_post202nonretry400 operation.
 */
export interface LrosadsPost202nonretry400Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_postasyncrelativeretry400 operation.
 */
export interface LrosadsPostasyncrelativeretry400Headers {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_putasyncrelativeretrynostatus operation.
 */
export interface LrosadsPutasyncrelativeretrynostatusHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_putasyncrelativeretrynostatuspayload operation.
 */
export interface LrosadsPutasyncrelativeretrynostatuspayloadHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_deleteasyncrelativeretrynostatus operation.
 */
export interface LrosadsDeleteasyncrelativeretrynostatusHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_post202nolocation operation.
 */
export interface LrosadsPost202nolocationHeaders {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_postasyncrelativeretrynopayload operation.
 */
export interface LrosadsPostasyncrelativeretrynopayloadHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_putasyncrelativeretryinvalidheader operation.
 */
export interface LrosadsPutasyncrelativeretryinvalidheaderHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_putasyncrelativeretryinvalidjsonpolling operation.
 */
export interface LrosadsPutasyncrelativeretryinvalidjsonpollingHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_delete202retryinvalidheader operation.
 */
export interface LrosadsDelete202retryinvalidheaderHeaders {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_deleteasyncrelativeretryinvalidheader operation.
 */
export interface LrosadsDeleteasyncrelativeretryinvalidheaderHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_deleteasyncrelativeretryinvalidjsonpolling operation.
 */
export interface LrosadsDeleteasyncrelativeretryinvalidjsonpollingHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_post202retryinvalidheader operation.
 */
export interface LrosadsPost202retryinvalidheaderHeaders {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_postasyncrelativeretryinvalidheader operation.
 */
export interface LrosadsPostasyncrelativeretryinvalidheaderHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lrosads_postasyncrelativeretryinvalidjsonpolling operation.
 */
export interface LrosadsPostasyncrelativeretryinvalidjsonpollingHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroscustomheader_putasyncretrysucceeded operation.
 */
export interface LroscustomheaderPutasyncretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroscustomheader_post202retry200 operation.
 */
export interface LroscustomheaderPost202retry200Headers {
  location?: string;
  retryAfter?: number;
}

/**
 * Defines headers for lroscustomheader_postasyncretrysucceeded operation.
 */
export interface LroscustomheaderPostasyncretrysucceededHeaders {
  azureAsyncOperation?: string;
  location?: string;
  retryAfter?: number;
}

/**
 * Defines values for ProductPropertiesProvisioningStateValues.
 */
export type ProductPropertiesProvisioningStateValues =
  | "Succeeded"
  | "Failed"
  | "canceled"
  | "Accepted"
  | "Creating"
  | "Created"
  | "Updating"
  | "Updated"
  | "Deleting"
  | "Deleted"
  | "OK";
/**
 * Defines values for SubProductPropertiesProvisioningStateValues.
 */
export type SubProductPropertiesProvisioningStateValues =
  | "Succeeded"
  | "Failed"
  | "canceled"
  | "Accepted"
  | "Creating"
  | "Created"
  | "Updating"
  | "Updated"
  | "Deleting"
  | "Deleted"
  | "OK";
/**
 * Defines values for OperationResultStatus.
 */
export type OperationResultStatus =
  | "Succeeded"
  | "Failed"
  | "canceled"
  | "Accepted"
  | "Creating"
  | "Created"
  | "Updating"
  | "Updated"
  | "Deleting"
  | "Deleted"
  | "OK";

/**
 * Optional parameters.
 */
export interface LROsPut200SucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put200Succeeded operation.
 */
export type LROsPut200SucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut200SucceededNoStateOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put200SucceededNoState operation.
 */
export type LROsPut200SucceededNoStateResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut202Retry200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put202Retry200 operation.
 */
export type LROsPut202Retry200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut201CreatingSucceeded200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LROsPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut200UpdatingSucceeded204OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put200UpdatingSucceeded204 operation.
 */
export type LROsPut200UpdatingSucceeded204Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut201CreatingFailed200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put201CreatingFailed200 operation.
 */
export type LROsPut201CreatingFailed200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPut200Acceptedcanceled200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put200Acceptedcanceled200 operation.
 */
export type LROsPut200Acceptedcanceled200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPutNoHeaderInRetryOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putNoHeaderInRetry operation.
 */
export type LROsPutNoHeaderInRetryResponse = LrosPutnoheaderinretryHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutnoheaderinretryHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutAsyncRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRetrySucceeded operation.
 */
export type LROsPutAsyncRetrySucceededResponse = LrosPutasyncretrysucceededHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutasyncretrysucceededHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutAsyncNoRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncNoRetrySucceeded operation.
 */
export type LROsPutAsyncNoRetrySucceededResponse = LrosPutasyncnoretrysucceededHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutasyncnoretrysucceededHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutAsyncRetryFailedOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRetryFailed operation.
 */
export type LROsPutAsyncRetryFailedResponse = LrosPutasyncretryfailedHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutasyncretryfailedHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutAsyncNoRetrycanceledOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncNoRetrycanceled operation.
 */
export type LROsPutAsyncNoRetrycanceledResponse = LrosPutasyncnoretrycanceledHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutasyncnoretrycanceledHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutAsyncNoHeaderInRetryOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncNoHeaderInRetry operation.
 */
export type LROsPutAsyncNoHeaderInRetryResponse = LrosPutasyncnoheaderinretryHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPutasyncnoheaderinretryHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsPutNonResourceOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * sku to put
   */
  sku?: Sku;
}

/**
 * Contains response data for the putNonResource operation.
 */
export type LROsPutNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Sku;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPutAsyncNonResourceOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Sku to put
   */
  sku?: Sku;
}

/**
 * Contains response data for the putAsyncNonResource operation.
 */
export type LROsPutAsyncNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Sku;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPutSubResourceOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Sub Product to put
   */
  product?: SubProduct;
}

/**
 * Contains response data for the putSubResource operation.
 */
export type LROsPutSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SubProduct;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPutAsyncSubResourceOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Sub Product to put
   */
  product?: SubProduct;
}

/**
 * Contains response data for the putAsyncSubResource operation.
 */
export type LROsPutAsyncSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: SubProduct;
  };
};

/**
 * Contains response data for the deleteProvisioning202Accepted200Succeeded operation.
 */
export type LROsDeleteProvisioning202Accepted200SucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the deleteProvisioning202DeletingFailed200 operation.
 */
export type LROsDeleteProvisioning202DeletingFailed200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the deleteProvisioning202Deletingcanceled200 operation.
 */
export type LROsDeleteProvisioning202Deletingcanceled200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the delete202Retry200 operation.
 */
export type LROsDelete202Retry200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the delete202NoRetry204 operation.
 */
export type LROsDelete202NoRetry204Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the deleteAsyncRetrySucceeded operation.
 */
export type LROsDeleteAsyncRetrySucceededResponse = LrosDeleteasyncretrysucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosDeleteasyncretrysucceededHeaders;
  };
};

/**
 * Contains response data for the deleteAsyncNoRetrySucceeded operation.
 */
export type LROsDeleteAsyncNoRetrySucceededResponse = LrosDeleteasyncnoretrysucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosDeleteasyncnoretrysucceededHeaders;
  };
};

/**
 * Contains response data for the deleteAsyncRetryFailed operation.
 */
export type LROsDeleteAsyncRetryFailedResponse = LrosDeleteasyncretryfailedHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosDeleteasyncretryfailedHeaders;
  };
};

/**
 * Contains response data for the deleteAsyncRetrycanceled operation.
 */
export type LROsDeleteAsyncRetrycanceledResponse = LrosDeleteasyncretrycanceledHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosDeleteasyncretrycanceledHeaders;
  };
};

/**
 * Contains response data for the post200WithPayload operation.
 */
export type LROsPost200WithPayloadResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Sku;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPost202Retry200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LROsPost202Retry200Response = LrosPost202retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosPost202retry200Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPost202NoRetry204OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202NoRetry204 operation.
 */
export type LROsPost202NoRetry204Response = LrosPost202noretry204Headers &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosPost202noretry204Headers;
    };
  };

/**
 * Contains response data for the postDoubleHeadersFinalLocationGet operation.
 */
export type LROsPostDoubleHeadersFinalLocationGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the postDoubleHeadersFinalAzureHeaderGet operation.
 */
export type LROsPostDoubleHeadersFinalAzureHeaderGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the postDoubleHeadersFinalAzureHeaderGetDefault operation.
 */
export type LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPostAsyncRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRetrySucceeded operation.
 */
export type LROsPostAsyncRetrySucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPostAsyncNoRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncNoRetrySucceeded operation.
 */
export type LROsPostAsyncNoRetrySucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPostAsyncRetryFailedOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRetryFailed operation.
 */
export type LROsPostAsyncRetryFailedResponse = LrosPostasyncretryfailedHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosPostasyncretryfailedHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LROsPostAsyncRetrycanceledOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRetrycanceled operation.
 */
export type LROsPostAsyncRetrycanceledResponse = LrosPostasyncretrycanceledHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosPostasyncretrycanceledHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LRORetrysPut201CreatingSucceeded200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LRORetrysPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LRORetrysPutAsyncRelativeRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysPutAsyncRelativeRetrySucceededResponse = LroretrysPutasyncrelativeretrysucceededHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LroretrysPutasyncrelativeretrysucceededHeaders;
    };
  };

/**
 * Contains response data for the deleteProvisioning202Accepted200Succeeded operation.
 */
export type LRORetrysDeleteProvisioning202Accepted200SucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Contains response data for the delete202Retry200 operation.
 */
export type LRORetrysDelete202Retry200Response = LroretrysDelete202retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroretrysDelete202retry200Headers;
  };
};

/**
 * Contains response data for the deleteAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysDeleteAsyncRelativeRetrySucceededResponse = LroretrysDeleteasyncrelativeretrysucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroretrysDeleteasyncrelativeretrysucceededHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LRORetrysPost202Retry200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LRORetrysPost202Retry200Response = LroretrysPost202retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroretrysPost202retry200Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LRORetrysPostAsyncRelativeRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysPostAsyncRelativeRetrySucceededResponse = LroretrysPostasyncrelativeretrysucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroretrysPostasyncrelativeretrysucceededHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutNonRetry400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putNonRetry400 operation.
 */
export type LrosaDsPutNonRetry400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutNonRetry201Creating400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putNonRetry201Creating400 operation.
 */
export type LrosaDsPutNonRetry201Creating400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutNonRetry201Creating400InvalidJsonOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putNonRetry201Creating400InvalidJson operation.
 */
export type LrosaDsPutNonRetry201Creating400InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutAsyncRelativeRetry400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetry400 operation.
 */
export type LrosaDsPutAsyncRelativeRetry400Response = LrosadsPutasyncrelativeretry400Headers &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosadsPutasyncrelativeretry400Headers;
    };
  };

/**
 * Contains response data for the deleteNonRetry400 operation.
 */
export type LrosaDsDeleteNonRetry400Response = LrosadsDeletenonretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDeletenonretry400Headers;
  };
};

/**
 * Contains response data for the delete202NonRetry400 operation.
 */
export type LrosaDsDelete202NonRetry400Response = LrosadsDelete202nonretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDelete202nonretry400Headers;
  };
};

/**
 * Contains response data for the deleteAsyncRelativeRetry400 operation.
 */
export type LrosaDsDeleteAsyncRelativeRetry400Response = LrosadsDeleteasyncrelativeretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDeleteasyncrelativeretry400Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPostNonRetry400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postNonRetry400 operation.
 */
export type LrosaDsPostNonRetry400Response = LrosadsPostnonretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPostnonretry400Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPost202NonRetry400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202NonRetry400 operation.
 */
export type LrosaDsPost202NonRetry400Response = LrosadsPost202nonretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPost202nonretry400Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPostAsyncRelativeRetry400OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRelativeRetry400 operation.
 */
export type LrosaDsPostAsyncRelativeRetry400Response = LrosadsPostasyncrelativeretry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPostasyncrelativeretry400Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutError201NoProvisioningStatePayloadOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putError201NoProvisioningStatePayload operation.
 */
export type LrosaDsPutError201NoProvisioningStatePayloadResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutAsyncRelativeRetryNoStatusOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetryNoStatus operation.
 */
export type LrosaDsPutAsyncRelativeRetryNoStatusResponse = LrosadsPutasyncrelativeretrynostatusHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosadsPutasyncrelativeretrynostatusHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LrosaDsPutAsyncRelativeRetryNoStatusPayloadOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetryNoStatusPayload operation.
 */
export type LrosaDsPutAsyncRelativeRetryNoStatusPayloadResponse = LrosadsPutasyncrelativeretrynostatuspayloadHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosadsPutasyncrelativeretrynostatuspayloadHeaders;
    };
  };

/**
 * Contains response data for the deleteAsyncRelativeRetryNoStatus operation.
 */
export type LrosaDsDeleteAsyncRelativeRetryNoStatusResponse = LrosadsDeleteasyncrelativeretrynostatusHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDeleteasyncrelativeretrynostatusHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPost202NoLocationOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202NoLocation operation.
 */
export type LrosaDsPost202NoLocationResponse = LrosadsPost202nolocationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPost202nolocationHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPostAsyncRelativeRetryNoPayloadOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRelativeRetryNoPayload operation.
 */
export type LrosaDsPostAsyncRelativeRetryNoPayloadResponse = LrosadsPostasyncrelativeretrynopayloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPostasyncrelativeretrynopayloadHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPut200InvalidJsonOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put200InvalidJson operation.
 */
export type LrosaDsPut200InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPutAsyncRelativeRetryInvalidHeaderOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetryInvalidHeader operation.
 */
export type LrosaDsPutAsyncRelativeRetryInvalidHeaderResponse = LrosadsPutasyncrelativeretryinvalidheaderHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosadsPutasyncrelativeretryinvalidheaderHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LrosaDsPutAsyncRelativeRetryInvalidJsonPollingOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LrosaDsPutAsyncRelativeRetryInvalidJsonPollingResponse = LrosadsPutasyncrelativeretryinvalidjsonpollingHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LrosadsPutasyncrelativeretryinvalidjsonpollingHeaders;
    };
  };

/**
 * Contains response data for the delete202RetryInvalidHeader operation.
 */
export type LrosaDsDelete202RetryInvalidHeaderResponse = LrosadsDelete202retryinvalidheaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDelete202retryinvalidheaderHeaders;
  };
};

/**
 * Contains response data for the deleteAsyncRelativeRetryInvalidHeader operation.
 */
export type LrosaDsDeleteAsyncRelativeRetryInvalidHeaderResponse = LrosadsDeleteasyncrelativeretryinvalidheaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDeleteasyncrelativeretryinvalidheaderHeaders;
  };
};

/**
 * Contains response data for the deleteAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LrosaDsDeleteAsyncRelativeRetryInvalidJsonPollingResponse = LrosadsDeleteasyncrelativeretryinvalidjsonpollingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsDeleteasyncrelativeretryinvalidjsonpollingHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPost202RetryInvalidHeaderOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202RetryInvalidHeader operation.
 */
export type LrosaDsPost202RetryInvalidHeaderResponse = LrosadsPost202retryinvalidheaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPost202retryinvalidheaderHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPostAsyncRelativeRetryInvalidHeaderOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRelativeRetryInvalidHeader operation.
 */
export type LrosaDsPostAsyncRelativeRetryInvalidHeaderResponse = LrosadsPostasyncrelativeretryinvalidheaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPostasyncrelativeretryinvalidheaderHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LrosaDsPostAsyncRelativeRetryInvalidJsonPollingOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LrosaDsPostAsyncRelativeRetryInvalidJsonPollingResponse = LrosadsPostasyncrelativeretryinvalidjsonpollingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LrosadsPostasyncrelativeretryinvalidjsonpollingHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LROsCustomHeaderPutAsyncRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the putAsyncRetrySucceeded operation.
 */
export type LROsCustomHeaderPutAsyncRetrySucceededResponse = LroscustomheaderPutasyncretrysucceededHeaders &
  Product & {
    /**
     * The underlying HTTP response.
     */
    _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LroscustomheaderPutasyncretrysucceededHeaders;
    };
  };

/**
 * Optional parameters.
 */
export interface LROsCustomHeaderPut201CreatingSucceeded200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LROsCustomHeaderPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The response body as text (string format)
     */
    bodyAsText: string;

    /**
     * The response body as parsed JSON or XML
     */
    parsedBody: Product;
  };
};

/**
 * Optional parameters.
 */
export interface LROsCustomHeaderPost202Retry200OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LROsCustomHeaderPost202Retry200Response = LroscustomheaderPost202retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroscustomheaderPost202retry200Headers;
  };
};

/**
 * Optional parameters.
 */
export interface LROsCustomHeaderPostAsyncRetrySucceededOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Contains response data for the postAsyncRetrySucceeded operation.
 */
export type LROsCustomHeaderPostAsyncRetrySucceededResponse = LroscustomheaderPostasyncretrysucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: LroscustomheaderPostasyncretrysucceededHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface LROClientOptionalParams extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
