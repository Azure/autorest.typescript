/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const Resource: coreHttp.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: { type: { name: "String" }, serializedName: "id", readOnly: true },
      typeProperty: {
        type: { name: "String" },
        serializedName: "type",
        readOnly: true
      },
      tags: {
        type: {
          name: "Dictionary",
          value: { type: { name: "String" }, serializedName: "String" }
        },
        serializedName: "tags"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      name: { type: { name: "String" }, serializedName: "name", readOnly: true }
    }
  }
};

export const Product: coreHttp.CompositeMapper = {
  serializedName: "Product",
  type: {
    name: "Composite",
    className: "Product",
    modelProperties: {
      ...Resource.type.modelProperties,
      provisioningState: {
        type: { name: "String" },
        serializedName: "properties.provisioningState"
      },
      provisioningStateValues: {
        type: { name: "String" },
        serializedName: "properties.provisioningStateValues",
        readOnly: true
      }
    }
  }
};

export const CloudError: coreHttp.CompositeMapper = {
  serializedName: "CloudError",
  type: {
    name: "Composite",
    className: "CloudError",
    modelProperties: {
      status: { type: { name: "Number" }, serializedName: "status" },
      message: { type: { name: "String" }, serializedName: "message" }
    }
  }
};

export const Sku: coreHttp.CompositeMapper = {
  serializedName: "Sku",
  type: {
    name: "Composite",
    className: "Sku",
    modelProperties: {
      name: { type: { name: "String" }, serializedName: "name" },
      id: { type: { name: "String" }, serializedName: "id" }
    }
  }
};

export const SubResource: coreHttp.CompositeMapper = {
  serializedName: "SubResource",
  type: {
    name: "Composite",
    className: "SubResource",
    modelProperties: {
      id: { type: { name: "String" }, serializedName: "id", readOnly: true }
    }
  }
};

export const SubProduct: coreHttp.CompositeMapper = {
  serializedName: "SubProduct",
  type: {
    name: "Composite",
    className: "SubProduct",
    modelProperties: {
      ...SubResource.type.modelProperties,
      provisioningState: {
        type: { name: "String" },
        serializedName: "properties.provisioningState"
      },
      provisioningStateValues: {
        type: { name: "String" },
        serializedName: "properties.provisioningStateValues",
        readOnly: true
      }
    }
  }
};

export const OperationResult: coreHttp.CompositeMapper = {
  serializedName: "OperationResult",
  type: {
    name: "Composite",
    className: "OperationResult",
    modelProperties: {
      status: { type: { name: "String" }, serializedName: "status" },
      errorProperty: {
        serializedName: "error",
        type: { name: "Composite", className: "OperationResultError" }
      }
    }
  }
};

export const OperationResultError: coreHttp.CompositeMapper = {
  serializedName: "OperationResultError",
  type: {
    name: "Composite",
    className: "OperationResultError",
    modelProperties: {
      code: { type: { name: "Number" }, serializedName: "code" },
      message: { type: { name: "String" }, serializedName: "message" }
    }
  }
};

export const LrosPutnoheaderinretryHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putnoheaderinretryHeaders",
  type: {
    name: "Composite",
    className: "LrosPutnoheaderinretryHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" }
    }
  }
};

export const LrosPutasyncretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putasyncretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosPutasyncretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPutasyncnoretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putasyncnoretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosPutasyncnoretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" }
    }
  }
};

export const LrosPutasyncretryfailedHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putasyncretryfailedHeaders",
  type: {
    name: "Composite",
    className: "LrosPutasyncretryfailedHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPutasyncnoretrycanceledHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putasyncnoretrycanceledHeaders",
  type: {
    name: "Composite",
    className: "LrosPutasyncnoretrycanceledHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" }
    }
  }
};

export const LrosPutasyncnoheaderinretryHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_putasyncnoheaderinretryHeaders",
  type: {
    name: "Composite",
    className: "LrosPutasyncnoheaderinretryHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      }
    }
  }
};

export const LrosDeleteprovisioning202accepted200succeededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteprovisioning202accepted200succeededHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteprovisioning202accepted200succeededHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeleteprovisioning202deletingfailed200Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteprovisioning202deletingfailed200Headers",
  type: {
    name: "Composite",
    className: "LrosDeleteprovisioning202deletingfailed200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeleteprovisioning202deletingcanceled200Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteprovisioning202deletingcanceled200Headers",
  type: {
    name: "Composite",
    className: "LrosDeleteprovisioning202deletingcanceled200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDelete202retry200Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_delete202retry200Headers",
  type: {
    name: "Composite",
    className: "LrosDelete202retry200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDelete202noretry204Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_delete202noretry204Headers",
  type: {
    name: "Composite",
    className: "LrosDelete202noretry204Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeletenoheaderinretryHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deletenoheaderinretryHeaders",
  type: {
    name: "Composite",
    className: "LrosDeletenoheaderinretryHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" }
    }
  }
};

export const LrosDeleteasyncnoheaderinretryHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteasyncnoheaderinretryHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteasyncnoheaderinretryHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" }
    }
  }
};

export const LrosDeleteasyncretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteasyncretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteasyncretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeleteasyncnoretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteasyncnoretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteasyncnoretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeleteasyncretryfailedHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteasyncretryfailedHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteasyncretryfailedHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosDeleteasyncretrycanceledHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_deleteasyncretrycanceledHeaders",
  type: {
    name: "Composite",
    className: "LrosDeleteasyncretrycanceledHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPost202retry200Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_post202retry200Headers",
  type: {
    name: "Composite",
    className: "LrosPost202retry200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPost202noretry204Headers: coreHttp.CompositeMapper = {
  serializedName: "lros_post202noretry204Headers",
  type: {
    name: "Composite",
    className: "LrosPost202noretry204Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPostasyncretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_postasyncretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosPostasyncretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPostasyncnoretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_postasyncnoretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LrosPostasyncnoretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPostasyncretryfailedHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_postasyncretryfailedHeaders",
  type: {
    name: "Composite",
    className: "LrosPostasyncretryfailedHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosPostasyncretrycanceledHeaders: coreHttp.CompositeMapper = {
  serializedName: "lros_postasyncretrycanceledHeaders",
  type: {
    name: "Composite",
    className: "LrosPostasyncretrycanceledHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysPutasyncrelativeretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_putasyncrelativeretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LroretrysPutasyncrelativeretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysDeleteprovisioning202accepted200succeededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_deleteprovisioning202accepted200succeededHeaders",
  type: {
    name: "Composite",
    className: "LroretrysDeleteprovisioning202accepted200succeededHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysDelete202retry200Headers: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_delete202retry200Headers",
  type: {
    name: "Composite",
    className: "LroretrysDelete202retry200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysDeleteasyncrelativeretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_deleteasyncrelativeretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LroretrysDeleteasyncrelativeretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysPost202retry200Headers: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_post202retry200Headers",
  type: {
    name: "Composite",
    className: "LroretrysPost202retry200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroretrysPostasyncrelativeretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroretrys_postasyncrelativeretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LroretrysPostasyncrelativeretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPutasyncrelativeretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_putasyncrelativeretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsPutasyncrelativeretry400Headers",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDeletenonretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_deletenonretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsDeletenonretry400Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDelete202nonretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_delete202nonretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsDelete202nonretry400Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDeleteasyncrelativeretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_deleteasyncrelativeretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsDeleteasyncrelativeretry400Headers",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPostnonretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_postnonretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsPostnonretry400Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPost202nonretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_post202nonretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsPost202nonretry400Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPostasyncrelativeretry400Headers: coreHttp.CompositeMapper = {
  serializedName: "lrosads_postasyncrelativeretry400Headers",
  type: {
    name: "Composite",
    className: "LrosadsPostasyncrelativeretry400Headers",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPutasyncrelativeretrynostatusHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_putasyncrelativeretrynostatusHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPutasyncrelativeretrynostatusHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPutasyncrelativeretrynostatuspayloadHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_putasyncrelativeretrynostatuspayloadHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPutasyncrelativeretrynostatuspayloadHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDeleteasyncrelativeretrynostatusHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_deleteasyncrelativeretrynostatusHeaders",
  type: {
    name: "Composite",
    className: "LrosadsDeleteasyncrelativeretrynostatusHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPost202nolocationHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_post202nolocationHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPost202nolocationHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPostasyncrelativeretrynopayloadHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_postasyncrelativeretrynopayloadHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPostasyncrelativeretrynopayloadHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPutasyncrelativeretryinvalidheaderHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_putasyncrelativeretryinvalidheaderHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPutasyncrelativeretryinvalidheaderHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPutasyncrelativeretryinvalidjsonpollingHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_putasyncrelativeretryinvalidjsonpollingHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPutasyncrelativeretryinvalidjsonpollingHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDelete202retryinvalidheaderHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_delete202retryinvalidheaderHeaders",
  type: {
    name: "Composite",
    className: "LrosadsDelete202retryinvalidheaderHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDeleteasyncrelativeretryinvalidheaderHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_deleteasyncrelativeretryinvalidheaderHeaders",
  type: {
    name: "Composite",
    className: "LrosadsDeleteasyncrelativeretryinvalidheaderHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsDeleteasyncrelativeretryinvalidjsonpollingHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_deleteasyncrelativeretryinvalidjsonpollingHeaders",
  type: {
    name: "Composite",
    className: "LrosadsDeleteasyncrelativeretryinvalidjsonpollingHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPost202retryinvalidheaderHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_post202retryinvalidheaderHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPost202retryinvalidheaderHeaders",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPostasyncrelativeretryinvalidheaderHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_postasyncrelativeretryinvalidheaderHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPostasyncrelativeretryinvalidheaderHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LrosadsPostasyncrelativeretryinvalidjsonpollingHeaders: coreHttp.CompositeMapper = {
  serializedName: "lrosads_postasyncrelativeretryinvalidjsonpollingHeaders",
  type: {
    name: "Composite",
    className: "LrosadsPostasyncrelativeretryinvalidjsonpollingHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroscustomheaderPutasyncretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroscustomheader_putasyncretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LroscustomheaderPutasyncretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroscustomheaderPost202retry200Headers: coreHttp.CompositeMapper = {
  serializedName: "lroscustomheader_post202retry200Headers",
  type: {
    name: "Composite",
    className: "LroscustomheaderPost202retry200Headers",
    modelProperties: {
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};

export const LroscustomheaderPostasyncretrysucceededHeaders: coreHttp.CompositeMapper = {
  serializedName: "lroscustomheader_postasyncretrysucceededHeaders",
  type: {
    name: "Composite",
    className: "LroscustomheaderPostasyncretrysucceededHeaders",
    modelProperties: {
      azureAsyncOperation: {
        type: { name: "String" },
        serializedName: "azure-asyncoperation"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      retryAfter: { type: { name: "Number" }, serializedName: "retry-after" }
    }
  }
};
