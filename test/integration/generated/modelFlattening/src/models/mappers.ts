/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const Resource: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: { type: { name: "String" }, serializedName: "id", readOnly: true },
      type: {
        type: { name: "String" },
        serializedName: "type",
        readOnly: true
      },
      tags: {
        type: { name: "Dictionary", value: { type: { name: "String" } } },
        serializedName: "tags"
      },
      location: { type: { name: "String" }, serializedName: "location" },
      name: { type: { name: "String" }, serializedName: "name", readOnly: true }
    }
  }
};

export const ErrorModel: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      status: { type: { name: "Number" }, serializedName: "status" },
      message: { type: { name: "String" }, serializedName: "message" },
      parentError: {
        serializedName: "parentError",
        type: { name: "Composite", className: "ErrorModel" }
      }
    }
  }
};

export const FlattenedProduct: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "FlattenedProduct",
    modelProperties: {
      ...Resource.type.modelProperties,
      pName: {
        type: { name: "String" },
        serializedName: "properties.p\\.name"
      },
      typePropertiesType: {
        type: { name: "String" },
        serializedName: "properties.type"
      },
      provisioningStateValues: {
        type: { name: "String" },
        serializedName: "properties.provisioningStateValues",
        readOnly: true
      },
      provisioningState: {
        type: { name: "String" },
        serializedName: "properties.provisioningState"
      }
    }
  }
};

export const WrappedProduct: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "WrappedProduct",
    modelProperties: {
      value: { type: { name: "String" }, serializedName: "value" }
    }
  }
};

export const ProductWrapper: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductWrapper",
    modelProperties: {
      value: { type: { name: "String" }, serializedName: "property.value" }
    }
  }
};

export const ResourceCollection: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResourceCollection",
    modelProperties: {
      productresource: {
        serializedName: "productresource",
        type: { name: "Composite", className: "FlattenedProduct" }
      },
      arrayofresources: {
        type: {
          name: "Sequence",
          element: {
            type: { name: "Composite", className: "FlattenedProduct" }
          }
        },
        serializedName: "arrayofresources"
      },
      dictionaryofresources: {
        type: {
          name: "Dictionary",
          value: { type: { name: "Composite", className: "FlattenedProduct" } }
        },
        serializedName: "dictionaryofresources"
      }
    }
  }
};

export const BaseProduct: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BaseProduct",
    modelProperties: {
      productId: {
        type: { name: "String" },
        serializedName: "base_product_id",
        required: true
      },
      description: {
        type: { name: "String" },
        serializedName: "base_product_description"
      }
    }
  }
};

export const SimpleProduct: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "SimpleProduct",
    modelProperties: {
      ...BaseProduct.type.modelProperties,
      maxProductDisplayName: {
        type: { name: "String" },
        serializedName: "details.max_product_display_name"
      },
      capacity: {
        type: { name: "String" },
        defaultValue: "Large",
        isConstant: true,
        serializedName: "details.max_product_capacity"
      },
      genericValue: {
        type: { name: "String" },
        serializedName: "details.max_product_image.generic_value"
      },
      odataValue: {
        type: { name: "String" },
        serializedName: "details.max_product_image.@odata\\.value"
      }
    }
  }
};

export const GenericUrl: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "GenericUrl",
    modelProperties: {
      genericValue: {
        type: { name: "String" },
        serializedName: "generic_value"
      }
    }
  }
};

export const ProductUrl: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProductUrl",
    modelProperties: {
      ...GenericUrl.type.modelProperties,
      odataValue: { type: { name: "String" }, serializedName: "@odata\\.value" }
    }
  }
};
