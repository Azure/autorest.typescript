/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { OperationParameter, OperationURLParameter } from "@azure/core-client";
import { SourcePath as SourcePathMapper } from "../models/mappers";

export const contentType: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    serializedName: "Content-Type",
    required: true,
    type: {
      name: "Enum",
      allowedValues: [
        "application/pdf",
        "image/jpeg",
        "image/png",
        "image/tiff"
      ]
    }
  }
};

export const input: OperationParameter = {
  parameterPath: ["options", "input"],
  mapper: {
    serializedName: "input",
    type: {
      name: "Stream"
    }
  }
};

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const contentType1: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const input1: OperationParameter = {
  parameterPath: ["options", "input"],
  mapper: SourcePathMapper
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const $host: OperationURLParameter = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};

export const contentType2: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "text/plain; charset=UTF-8",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const input2: OperationParameter = {
  parameterPath: ["options", "input"],
  mapper: {
    serializedName: "input",
    type: {
      name: "String"
    }
  }
};

export const accept2: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const contentType3: OperationParameter = {
  parameterPath: ["options", "contentType"],
  mapper: {
    serializedName: "Content-Type",
    type: {
      name: "Enum",
      allowedValues: ["application/json", "application/octet-stream"]
    }
  }
};

export const message: OperationParameter = {
  parameterPath: "message",
  mapper: {
    serializedName: "message",
    required: true,
    type: {
      name: "Stream"
    }
  }
};

export const accept3: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "text/plain",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const contentType4: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    serializedName: "Content-Type",
    required: true,
    type: {
      name: "Enum",
      allowedValues: ["application/json", "application/octet-stream"]
    }
  }
};

export const contentType5: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    defaultValue: "text/plain",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const message1: OperationParameter = {
  parameterPath: "message",
  mapper: {
    serializedName: "message",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accept4: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "text/plain",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const contentType6: OperationParameter = {
  parameterPath: "contentType",
  mapper: {
    defaultValue: "application/octet-stream",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};

export const message2: OperationParameter = {
  parameterPath: "message",
  mapper: {
    serializedName: "message",
    required: true,
    type: {
      name: "any"
    }
  }
};

export const accept5: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "text/plain",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const message3: OperationParameter = {
  parameterPath: "message",
  mapper: {
    serializedName: "message",
    required: true,
    type: {
      name: "String"
    }
  }
};
