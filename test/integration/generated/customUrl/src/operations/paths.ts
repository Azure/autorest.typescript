/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Paths } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { CustomUrlClient } from "../customUrlClient";
import { PathsGetEmptyOptionalParams } from "../models";

/** Class containing Paths operations. */
export class PathsImpl implements Paths {
  private readonly client: CustomUrlClient;

  /**
   * Initialize a new instance of the class Paths class.
   * @param client Reference to the service client
   */
  constructor(client: CustomUrlClient) {
    this.client = client;
  }

  /**
   * Get a 200 to test a valid base uri
   * @param accountName Account Name
   * @param options The options parameters.
   */
  getEmpty(
    accountName: string,
    options?: PathsGetEmptyOptionalParams
  ): Promise<void> {
    return this.client.sendOperationRequest(
      { accountName, options },
      getEmptyOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getEmptyOperationSpec: coreClient.OperationSpec = {
  path: "/customuri",
  httpMethod: "GET",
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  urlParameters: [Parameters.accountName, Parameters.host],
  headerParameters: [Parameters.accept],
  serializer
};
