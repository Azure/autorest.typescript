/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { Pets } from "../operationsInterfaces";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
import { AdditionalPropertiesClient } from "../additionalPropertiesClient";
import {
  PetsCreateAPTrueResponse,
  PetsCreateCatAPTrueResponse,
  PetsCreateAPObjectResponse,
  PetsCreateAPStringResponse,
  PetsCreateAPInPropertiesResponse,
  PetsCreateAPInPropertiesWithAPStringResponse
} from "../models";

/** Class containing Pets operations. */
export class PetsImpl implements Pets {
  private readonly client: AdditionalPropertiesClient;

  /**
   * Initialize a new instance of the class Pets class.
   * @param client Reference to the service client
   */
  constructor(client: AdditionalPropertiesClient) {
    this.client = client;
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   *
   */
  createAPTrue(): Promise<PetsCreateAPTrueResponse> {
    return this.client.sendOperationRequest(
      { options },
      createAPTrueOperationSpec
    );
  }

  /**
   * Create a CatAPTrue which contains more properties than what is defined.
   *
   */
  createCatAPTrue(): Promise<PetsCreateCatAPTrueResponse> {
    return this.client.sendOperationRequest(
      { options },
      createCatAPTrueOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   *
   */
  createAPObject(): Promise<PetsCreateAPObjectResponse> {
    return this.client.sendOperationRequest(
      { options },
      createAPObjectOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   *
   */
  createAPString(): Promise<PetsCreateAPStringResponse> {
    return this.client.sendOperationRequest(
      { options },
      createAPStringOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   *
   */
  createAPInProperties(): Promise<PetsCreateAPInPropertiesResponse> {
    return this.client.sendOperationRequest(
      { options },
      createAPInPropertiesOperationSpec
    );
  }

  /**
   * Create a Pet which contains more properties than what is defined.
   *
   */
  createAPInPropertiesWithAPString(): Promise<
    PetsCreateAPInPropertiesWithAPStringResponse
  > {
    return this.client.sendOperationRequest(
      { options },
      createAPInPropertiesWithAPStringOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const createAPTrueOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/true",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPTrue
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const createCatAPTrueOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/true-subclass",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.CatAPTrue
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters1,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const createAPObjectOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/type/object",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPObject
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters2,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const createAPStringOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/type/string",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPString
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters3,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const createAPInPropertiesOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/in/properties",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPInProperties
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters4,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
const createAPInPropertiesWithAPStringOperationSpec: coreClient.OperationSpec = {
  path: "/additionalProperties/in/properties/with/additionalProperties/string",
  httpMethod: "PUT",
  responses: {
    200: {
      bodyMapper: Mappers.PetAPInPropertiesWithAPString
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  requestBody: Parameters.createParameters5,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.contentType, Parameters.accept],
  mediaType: "json",
  serializer
};
