/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as Parameters from "./models/parameters";
import * as Mappers from "./models/mappers";
import { ReportClientContext } from "./reportClientContext";
import {
  ReportClientOptionalParams,
  ReportClientGetReportOptionalParams,
  ReportClientGetReportResponse,
  ReportClientGetOptionalReportOptionalParams,
  ReportClientGetOptionalReportResponse
} from "./models";

export class ReportClient extends ReportClientContext {
  /**
   * Initializes a new instance of the ReportClient class.
   * @param options The parameter options
   */
  constructor(options?: ReportClientOptionalParams) {
    super(options);
  }

  /**
   * Get test coverage report
   * @param options The options parameters.
   */
  getReport(
    options?: ReportClientGetReportOptionalParams
  ): Promise<ReportClientGetReportResponse> {
    return this.sendOperationRequest({ options }, getReportOperationSpec);
  }

  /**
   * Get optional test coverage report
   * @param options The options parameters.
   */
  getOptionalReport(
    options?: ReportClientGetOptionalReportOptionalParams
  ): Promise<ReportClientGetOptionalReportResponse> {
    return this.sendOperationRequest(
      { options },
      getOptionalReportOperationSpec
    );
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getReportOperationSpec: coreClient.OperationSpec = {
  path: "/report",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "Number" } } }
      }
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.qualifier],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer
};
const getOptionalReportOperationSpec: coreClient.OperationSpec = {
  path: "/report/optional",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "Number" } } }
      }
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  queryParameters: [Parameters.qualifier],
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer
};
