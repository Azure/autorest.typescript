/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

/** I am root, and I ref a model with no meta */
export interface RootWithRefAndNoMeta {
  /** XML will use RefToModel */
  refToModel?: ComplexTypeNoMeta;
  /** Something else (just to avoid flattening) */
  something?: string;
}

/** I am a complex type with no XML node */
export interface ComplexTypeNoMeta {
  /** The id of the res */
  id?: string;
}

/** I am root, and I ref a model WITH meta */
export interface RootWithRefAndMeta {
  /** XML will use XMLComplexTypeWithMeta */
  refToModel?: ComplexTypeWithMeta;
  /** Something else (just to avoid flattening) */
  something?: string;
}

/** I am a complex type with XML node */
export interface ComplexTypeWithMeta {
  /** The id of the res */
  id?: string;
}

/** Data about a slideshow */
export interface Slideshow {
  title?: string;
  date?: string;
  author?: string;
  slides?: Slide[];
}

/** A slide in a slideshow */
export interface Slide {
  type?: string;
  title?: string;
  items?: string[];
}

export interface ErrorModel {
  status?: number;
  message?: string;
}

/** A barrel of apples. */
export interface AppleBarrel {
  goodApples?: string[];
  badApples?: string[];
}

/** A banana. */
export interface Banana {
  name?: string;
  flavor?: string;
  /** The time at which you should reconsider eating this banana */
  expiration?: Date;
}

/** An enumeration of containers */
export interface ListContainersResponse {
  serviceEndpoint: string;
  prefix: string;
  marker?: string;
  maxResults: number;
  containers?: Container[];
  nextMarker: string;
}

/** An Azure Storage container */
export interface Container {
  name: string;
  /** Properties of a container */
  properties: ContainerProperties;
  /** Dictionary of <string> */
  metadata?: { [propertyName: string]: string };
}

/** Properties of a container */
export interface ContainerProperties {
  lastModified: Date;
  etag: string;
  leaseStatus?: LeaseStatusType;
  leaseState?: LeaseStateType;
  leaseDuration?: LeaseDurationType;
  publicAccess?: PublicAccessType;
}

/** Storage Service Properties. */
export interface StorageServiceProperties {
  /** Azure Analytics Logging settings */
  logging?: Logging;
  /** A summary of request statistics grouped by API in hourly aggregates for blobs */
  hourMetrics?: Metrics;
  /** a summary of request statistics grouped by API in minute aggregates for blobs */
  minuteMetrics?: Metrics;
  /** The set of CORS rules. */
  cors?: CorsRule[];
  /** The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions */
  defaultServiceVersion?: string;
  /** The Delete Retention Policy for the service */
  deleteRetentionPolicy?: RetentionPolicy;
}

/** Azure Analytics Logging settings. */
export interface Logging {
  /** The version of Storage Analytics to configure. */
  version: string;
  /** Indicates whether all delete requests should be logged. */
  delete: boolean;
  /** Indicates whether all read requests should be logged. */
  read: boolean;
  /** Indicates whether all write requests should be logged. */
  write: boolean;
  /** the retention policy */
  retentionPolicy: RetentionPolicy;
}

/** the retention policy */
export interface RetentionPolicy {
  /** Indicates whether a retention policy is enabled for the storage service */
  enabled: boolean;
  /** Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted */
  days?: number;
}

export interface Metrics {
  /** The version of Storage Analytics to configure. */
  version?: string;
  /** Indicates whether metrics are enabled for the Blob service. */
  enabled: boolean;
  /** Indicates whether metrics should generate summary statistics for called API operations. */
  includeAPIs?: boolean;
  /** the retention policy */
  retentionPolicy?: RetentionPolicy;
}

/** CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain */
export interface CorsRule {
  /** The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. */
  allowedOrigins: string;
  /** The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated) */
  allowedMethods: string;
  /** the request headers that the origin domain may specify on the CORS request. */
  allowedHeaders: string;
  /** The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer */
  exposedHeaders: string;
  /** The maximum amount time that a browser should cache the preflight OPTIONS request. */
  maxAgeInSeconds: number;
}

/** signed identifier */
export interface SignedIdentifier {
  /** a unique id */
  id: string;
  /** The access policy */
  accessPolicy: AccessPolicy;
}

/** An Access policy */
export interface AccessPolicy {
  /** the date-time the policy is active */
  start: Date;
  /** the date-time the policy expires */
  expiry: Date;
  /** the permissions for the acl policy */
  permission: string;
}

/** An enumeration of blobs */
export interface ListBlobsResponse {
  serviceEndpoint?: string;
  containerName: string;
  prefix: string;
  marker: string;
  maxResults: number;
  delimiter: string;
  blobs: Blobs;
  nextMarker: string;
}

export interface Blobs {
  blobPrefix?: BlobPrefix[];
  blob?: Blob[];
}

export interface BlobPrefix {
  name: string;
}

/** An Azure Storage blob */
export interface Blob {
  name: string;
  deleted: boolean;
  snapshot: string;
  /** Properties of a blob */
  properties: BlobProperties;
  /** Dictionary of <string> */
  metadata?: { [propertyName: string]: string };
}

/** Properties of a blob */
export interface BlobProperties {
  lastModified: Date;
  etag: string;
  /** Size in bytes */
  contentLength?: number;
  contentType?: string;
  contentEncoding?: string;
  contentLanguage?: string;
  contentMD5?: string;
  contentDisposition?: string;
  cacheControl?: string;
  blobSequenceNumber?: number;
  blobType?: BlobType;
  leaseStatus?: LeaseStatusType;
  leaseState?: LeaseStateType;
  leaseDuration?: LeaseDurationType;
  copyId?: string;
  copyStatus?: CopyStatusType;
  copySource?: string;
  copyProgress?: string;
  copyCompletionTime?: Date;
  copyStatusDescription?: string;
  serverEncrypted?: boolean;
  incrementalCopy?: boolean;
  destinationSnapshot?: string;
  deletedTime?: Date;
  remainingRetentionDays?: number;
  accessTier?: AccessTier;
  accessTierInferred?: boolean;
  archiveStatus?: ArchiveStatus;
}

export interface JsonInput {
  id?: number;
}

export interface JsonOutput {
  id?: number;
}

/** Contans property */
export interface ObjectWithXMsTextProperty {
  /** Returned value should be 'english' */
  language?: string;
  /** Returned value should be 'I am text' */
  content?: string;
}

export interface ModelWithByteProperty {
  bytes?: Uint8Array;
}

export interface ModelWithUrlProperty {
  url?: string;
}

/** Defines headers for Xml_getHeaders operation. */
export interface XmlGetHeadersHeaders {
  /** A custom response header. */
  customHeader?: string;
}

/** Known values of {@link PublicAccessType} that the service accepts. */
export enum KnownPublicAccessType {
  /** Container */
  Container = "container",
  /** Blob */
  Blob = "blob"
}

/**
 * Defines values for PublicAccessType. \
 * {@link KnownPublicAccessType} can be used interchangeably with PublicAccessType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **container** \
 * **blob**
 */
export type PublicAccessType = string;

/** Known values of {@link AccessTier} that the service accepts. */
export enum KnownAccessTier {
  /** P4 */
  P4 = "P4",
  /** P6 */
  P6 = "P6",
  /** P10 */
  P10 = "P10",
  /** P20 */
  P20 = "P20",
  /** P30 */
  P30 = "P30",
  /** P40 */
  P40 = "P40",
  /** P50 */
  P50 = "P50",
  /** Hot */
  Hot = "Hot",
  /** Cool */
  Cool = "Cool",
  /** Archive */
  Archive = "Archive"
}

/**
 * Defines values for AccessTier. \
 * {@link KnownAccessTier} can be used interchangeably with AccessTier,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **P4** \
 * **P6** \
 * **P10** \
 * **P20** \
 * **P30** \
 * **P40** \
 * **P50** \
 * **Hot** \
 * **Cool** \
 * **Archive**
 */
export type AccessTier = string;

/** Known values of {@link ArchiveStatus} that the service accepts. */
export enum KnownArchiveStatus {
  /** RehydratePendingToHot */
  RehydratePendingToHot = "rehydrate-pending-to-hot",
  /** RehydratePendingToCool */
  RehydratePendingToCool = "rehydrate-pending-to-cool"
}

/**
 * Defines values for ArchiveStatus. \
 * {@link KnownArchiveStatus} can be used interchangeably with ArchiveStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **rehydrate-pending-to-hot** \
 * **rehydrate-pending-to-cool**
 */
export type ArchiveStatus = string;
/** Defines values for LeaseStatusType. */
export type LeaseStatusType = "locked" | "unlocked";
/** Defines values for LeaseStateType. */
export type LeaseStateType =
  | "available"
  | "leased"
  | "expired"
  | "breaking"
  | "broken";
/** Defines values for LeaseDurationType. */
export type LeaseDurationType = "infinite" | "fixed";
/** Defines values for BlobType. */
export type BlobType = "BlockBlob" | "PageBlob" | "AppendBlob";
/** Defines values for CopyStatusType. */
export type CopyStatusType = "pending" | "success" | "aborted" | "failed";

/** Optional parameters. */
export interface XmlGetComplexTypeRefNoMetaOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getComplexTypeRefNoMeta operation. */
export type XmlGetComplexTypeRefNoMetaResponse = RootWithRefAndNoMeta;

/** Optional parameters. */
export interface XmlPutComplexTypeRefNoMetaOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetComplexTypeRefWithMetaOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getComplexTypeRefWithMeta operation. */
export type XmlGetComplexTypeRefWithMetaResponse = RootWithRefAndMeta;

/** Optional parameters. */
export interface XmlPutComplexTypeRefWithMetaOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetSimpleOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getSimple operation. */
export type XmlGetSimpleResponse = Slideshow;

/** Optional parameters. */
export interface XmlPutSimpleOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetWrappedListsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getWrappedLists operation. */
export type XmlGetWrappedListsResponse = AppleBarrel;

/** Optional parameters. */
export interface XmlPutWrappedListsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetHeadersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getHeaders operation. */
export type XmlGetHeadersResponse = XmlGetHeadersHeaders;

/** Optional parameters. */
export interface XmlGetEmptyListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEmptyList operation. */
export type XmlGetEmptyListResponse = Slideshow;

/** Optional parameters. */
export interface XmlPutEmptyListOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetEmptyWrappedListsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEmptyWrappedLists operation. */
export type XmlGetEmptyWrappedListsResponse = AppleBarrel;

/** Optional parameters. */
export interface XmlPutEmptyWrappedListsOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetRootListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRootList operation. */
export type XmlGetRootListResponse = Banana[];

/** Optional parameters. */
export interface XmlPutRootListOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetRootListSingleItemOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getRootListSingleItem operation. */
export type XmlGetRootListSingleItemResponse = Banana[];

/** Optional parameters. */
export interface XmlPutRootListSingleItemOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetEmptyRootListOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEmptyRootList operation. */
export type XmlGetEmptyRootListResponse = Banana[];

/** Optional parameters. */
export interface XmlPutEmptyRootListOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetEmptyChildElementOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getEmptyChildElement operation. */
export type XmlGetEmptyChildElementResponse = Banana;

/** Optional parameters. */
export interface XmlPutEmptyChildElementOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlListContainersOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listContainers operation. */
export type XmlListContainersResponse = ListContainersResponse;

/** Optional parameters. */
export interface XmlGetServicePropertiesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getServiceProperties operation. */
export type XmlGetServicePropertiesResponse = StorageServiceProperties;

/** Optional parameters. */
export interface XmlPutServicePropertiesOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetAclsOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the getAcls operation. */
export type XmlGetAclsResponse = SignedIdentifier[];

/** Optional parameters. */
export interface XmlPutAclsOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlListBlobsOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the listBlobs operation. */
export type XmlListBlobsResponse = ListBlobsResponse;

/** Optional parameters. */
export interface XmlJsonInputOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlJsonOutputOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the jsonOutput operation. */
export type XmlJsonOutputResponse = JsonOutput;

/** Optional parameters. */
export interface XmlGetXMsTextOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getXMsText operation. */
export type XmlGetXMsTextResponse = ObjectWithXMsTextProperty;

/** Optional parameters. */
export interface XmlGetBytesOptionalParams
  extends coreClient.OperationOptions {}

/** Contains response data for the getBytes operation. */
export type XmlGetBytesResponse = ModelWithByteProperty;

/** Optional parameters. */
export interface XmlPutBinaryOptionalParams
  extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlGetUriOptionalParams extends coreClient.OperationOptions {}

/** Contains response data for the getUri operation. */
export type XmlGetUriResponse = ModelWithUrlProperty;

/** Optional parameters. */
export interface XmlPutUriOptionalParams extends coreClient.OperationOptions {}

/** Optional parameters. */
export interface XmlServiceClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
