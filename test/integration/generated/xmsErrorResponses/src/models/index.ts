/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export type NotFoundErrorBaseUnion =
  | NotFoundErrorBase
  | LinkNotFound
  | AnimalNotFound;
export type PetActionErrorUnion = PetActionError | PetSadErrorUnion;
export type PetSadErrorUnion = PetSadError | PetHungryOrThirstyError;

export interface Animal {
  aniType?: string;
}

export interface BaseError {
  someBaseProp?: string;
}

export interface PetAction {
  /** action feedback */
  actionResponse?: string;
}

export type PetDef = Animal & {
  /**
   * Gets the Pet by id.
   * NOTE: This property will not be serialized. It can only be populated by the server.
   */
  readonly name?: string;
};

export type NotFoundErrorBase = BaseError & {
  reason?: string;
  whatNotFound: string;
};

export type PetActionError = PetAction & {
  errorType: string;
  /** the error message */
  errorMessage?: string;
};

export type LinkNotFound = NotFoundErrorBase & {
  whatSubAddress?: string;
};

export type AnimalNotFound = NotFoundErrorBase & {
  name?: string;
};

export type PetSadError = PetActionError & {
  /** why is the pet sad */
  reason?: string;
};

export type PetHungryOrThirstyError = PetSadError & {
  /** is the pet hungry or thirsty or both */
  hungryOrThirsty?: string;
};

/** Optional parameters. */
export interface PetGetPetByIdOptionalParams
  extends coreHttp.OperationOptions {}

/** Contains response data for the getPetById operation. */
export type PetGetPetByIdResponse = PetDef & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: PetDef;
  };
};

/** Optional parameters. */
export interface PetDoSomethingOptionalParams
  extends coreHttp.OperationOptions {}

/** Contains response data for the doSomething operation. */
export type PetDoSomethingResponse = PetAction & {
  /** The underlying HTTP response. */
  _response: coreHttp.HttpResponse & {
    /** The response body as text (string format) */
    bodyAsText: string;

    /** The response body as parsed JSON or XML */
    parsedBody: PetAction;
  };
};

/** Optional parameters. */
export interface PetHasModelsParamOptionalParams
  extends coreHttp.OperationOptions {
  /** Make sure model deserialization doesn't conflict with this param name, which has input name 'models'. Use client default value in call */
  models?: string;
}

/** Optional parameters. */
export interface XmsErrorResponsesClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /** server parameter */
  $host?: string;
  /** Overrides client endpoint. */
  endpoint?: string;
}
