/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export const Animal: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Animal",
    modelProperties: {
      aniType: {
        serializedName: "aniType",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BaseError: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "BaseError",
    modelProperties: {
      someBaseProp: {
        serializedName: "someBaseProp",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PetAction: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PetAction",
    modelProperties: {
      actionResponse: {
        serializedName: "actionResponse",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PetDef: coreClient.CompositeMapper = {
  type: {
    name: "Composite",
    className: "PetDef",
    modelProperties: {
      ...Animal.type.modelProperties,
      name: {
        serializedName: "name",
        readOnly: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const NotFoundErrorBase: coreClient.CompositeMapper = {
  serializedName: "NotFoundErrorBase",
  type: {
    name: "Composite",
    className: "NotFoundErrorBase",
    uberParent: "BaseError",
    polymorphicDiscriminator: {
      serializedName: "whatNotFound",
      clientName: "whatNotFound"
    },
    modelProperties: {
      ...BaseError.type.modelProperties,
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      },
      whatNotFound: {
        serializedName: "whatNotFound",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PetActionError: coreClient.CompositeMapper = {
  serializedName: "PetActionError",
  type: {
    name: "Composite",
    className: "PetActionError",
    uberParent: "PetAction",
    polymorphicDiscriminator: {
      serializedName: "errorType",
      clientName: "errorType"
    },
    modelProperties: {
      ...PetAction.type.modelProperties,
      errorType: {
        serializedName: "errorType",
        required: true,
        type: {
          name: "String"
        }
      },
      errorMessage: {
        serializedName: "errorMessage",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const LinkNotFound: coreClient.CompositeMapper = {
  serializedName: "InvalidResourceLink",
  type: {
    name: "Composite",
    className: "LinkNotFound",
    uberParent: "BaseError",
    polymorphicDiscriminator: BaseError.type.polymorphicDiscriminator,
    modelProperties: {
      ...NotFoundErrorBase.type.modelProperties,
      whatSubAddress: {
        serializedName: "whatSubAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AnimalNotFound: coreClient.CompositeMapper = {
  serializedName: "AnimalNotFound",
  type: {
    name: "Composite",
    className: "AnimalNotFound",
    uberParent: "BaseError",
    polymorphicDiscriminator: BaseError.type.polymorphicDiscriminator,
    modelProperties: {
      ...NotFoundErrorBase.type.modelProperties,
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PetSadError: coreClient.CompositeMapper = {
  serializedName: "PetSadError",
  type: {
    name: "Composite",
    className: "PetSadError",
    uberParent: "PetAction",
    polymorphicDiscriminator: {
      serializedName: "errorType",
      clientName: "errorType"
    },
    modelProperties: {
      ...PetActionError.type.modelProperties,
      reason: {
        serializedName: "reason",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PetHungryOrThirstyError: coreClient.CompositeMapper = {
  serializedName: "PetHungryOrThirstyError",
  type: {
    name: "Composite",
    className: "PetHungryOrThirstyError",
    uberParent: "PetAction",
    polymorphicDiscriminator: PetAction.type.polymorphicDiscriminator,
    modelProperties: {
      ...PetSadError.type.modelProperties,
      hungryOrThirsty: {
        serializedName: "hungryOrThirsty",
        type: {
          name: "String"
        }
      }
    }
  }
};

export let discriminators = {
  "BaseError.NotFoundErrorBase": NotFoundErrorBase,
  "PetAction.PetActionError": PetActionError,
  "BaseError.InvalidResourceLink": LinkNotFound,
  "BaseError.AnimalNotFound": AnimalNotFound,
  "PetAction.PetSadError": PetSadError,
  "PetAction.PetHungryOrThirstyError": PetHungryOrThirstyError
};
