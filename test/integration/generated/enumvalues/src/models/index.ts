/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";

export interface StorageError {
  message?: string;
}

/** Defines headers for Blob_download operation. */
export interface BlobDownloadHeaders {
  /** Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob. */
  lastModified?: Date;
}

/** Defines headers for Blob_download operation. */
export interface BlobDownloadExceptionHeaders {
  errorCode?: string;
}

/** Parameter group */
export interface CpkInfo {
  /** The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided. */
  encryptionAlgorithm?: "AES256";
  /** The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided. */
  encryptionAlgorithmWithTwoValues?: EncryptionAlgorithmWithTwoValuesType;
  /** The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided. */
  encryptionAlgorithmRequiredWithTwoValues: EncryptionAlgorithmRequiredWithTwoValuesType;
}

/** Defines values for EncryptionAlgorithmWithTwoValuesType. */
export type EncryptionAlgorithmWithTwoValuesType = "AES256" | "AES257";
/** Defines values for EncryptionAlgorithmRequiredWithTwoValuesType. */
export type EncryptionAlgorithmRequiredWithTwoValuesType = "AES256" | "AES257";

/** Optional parameters. */
export interface BlobDownloadOptionalParams
  extends coreClient.OperationOptions {
  /** The algorithm used to produce the encryption key hash. Currently, the only accepted value is "AES256". Must be provided if the x-ms-encryption-key header is provided. */
  encryptionAlgorithmWithTwoValues?: EncryptionAlgorithmWithTwoValuesType;
}

/** Contains response data for the download operation. */
export type BlobDownloadResponse = BlobDownloadHeaders & {
  /**
   * BROWSER ONLY
   *
   * The response body as a browser Blob.
   * Always `undefined` in node.js.
   */
  blobBody?: Promise<Blob>;
  /**
   * NODEJS ONLY
   *
   * The response body as a node.js Readable stream.
   * Always `undefined` in the browser.
   */
  readableStreamBody?: NodeJS.ReadableStream;
};

/** Optional parameters. */
export interface EnumValuesClientOptionalParams
  extends coreClient.ServiceClientOptions {
  /** Overrides client endpoint. */
  endpoint?: string;
}
