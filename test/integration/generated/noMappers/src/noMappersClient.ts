/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";
import * as Parameters from "./models/parameters";
import * as Models from "./models";
import { NoMappersClientContext } from "./noMappersClientContext";
import { NoMappersClientApiV1ValueGetResponse } from "./models";

class NoMappersClient extends NoMappersClientContext {
  /**
   * Initializes a new instance of the NoMappersClient class.
   * @param $host server parameter
   * @param options The parameter options
   */
  constructor($host: string, options?: Models.NoMappersClientOptionalParams) {
    super($host, options);
  }

  /**
   * @param options The options parameters.
   */
  apiV1ValueGet(
    options?: coreHttp.OperationOptions
  ): Promise<NoMappersClientApiV1ValueGetResponse> {
    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(
      options || {}
    );
    return this.sendOperationRequest(
      { options: operationOptions },
      apiV1ValueGetOperationSpec
    ) as Promise<NoMappersClientApiV1ValueGetResponse>;
  }
}
// Operation Specifications

const serializer = new coreHttp.Serializer({}, /* isXml */ false);

const apiV1ValueGetOperationSpec: coreHttp.OperationSpec = {
  path: "/api/v1/value",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: { type: { name: "String" }, serializedName: "String" }
    }
  },
  urlParameters: [Parameters.$host],
  serializer
};

// Operation Specifications

export { NoMappersClient, NoMappersClientContext, Models as NoMappersModels };
