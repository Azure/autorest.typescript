/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export interface ErrorModel {
  status?: number;
  message?: string;
}

/**
 * Defines headers for header_responseexistingkey operation.
 */
export interface HeaderResponseexistingkeyHeaders {
  userAgent?: string;
}

/**
 * Defines headers for header_responseprotectedkey operation.
 */
export interface HeaderResponseprotectedkeyHeaders {
  contentType?: string;
}

/**
 * Defines headers for header_responseinteger operation.
 */
export interface HeaderResponseintegerHeaders {
  value?: number;
}

/**
 * Defines headers for header_responselong operation.
 */
export interface HeaderResponselongHeaders {
  value?: number;
}

/**
 * Defines headers for header_responsefloat operation.
 */
export interface HeaderResponsefloatHeaders {
  value?: number;
}

/**
 * Defines headers for header_responsedouble operation.
 */
export interface HeaderResponsedoubleHeaders {
  value?: number;
}

/**
 * Defines headers for header_responsebool operation.
 */
export interface HeaderResponseboolHeaders {
  value?: boolean;
}

/**
 * Defines headers for header_responsestring operation.
 */
export interface HeaderResponsestringHeaders {
  value?: string;
}

/**
 * Defines headers for header_responsedate operation.
 */
export interface HeaderResponsedateHeaders {
  value?: Date;
}

/**
 * Defines headers for header_responsedatetime operation.
 */
export interface HeaderResponsedatetimeHeaders {
  value?: Date;
}

/**
 * Defines headers for header_responsedatetimerfc1123 operation.
 */
export interface HeaderResponsedatetimerfc1123Headers {
  value?: Date;
}

/**
 * Defines headers for header_responseduration operation.
 */
export interface HeaderResponsedurationHeaders {
  value?: string;
}

/**
 * Defines headers for header_responsebyte operation.
 */
export interface HeaderResponsebyteHeaders {
  value?: Uint8Array;
}

/**
 * Defines headers for header_responseenum operation.
 */
export interface HeaderResponseenumHeaders {
  value?: GreyscaleColors;
}

/**
 * Defines values for GreyscaleColors.
 */
export type GreyscaleColors = "White" | "black" | "GREY";

/**
 * Contains response data for the responseExistingKey operation.
 */
export type HeaderResponseExistingKeyResponse = HeaderResponseexistingkeyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponseexistingkeyHeaders;
  };
};

/**
 * Contains response data for the responseProtectedKey operation.
 */
export type HeaderResponseProtectedKeyResponse = HeaderResponseprotectedkeyHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponseprotectedkeyHeaders;
  };
};

/**
 * Contains response data for the responseInteger operation.
 */
export type HeaderResponseIntegerResponse = HeaderResponseintegerHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponseintegerHeaders;
  };
};

/**
 * Contains response data for the responseLong operation.
 */
export type HeaderResponseLongResponse = HeaderResponselongHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponselongHeaders;
  };
};

/**
 * Contains response data for the responseFloat operation.
 */
export type HeaderResponseFloatResponse = HeaderResponsefloatHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsefloatHeaders;
  };
};

/**
 * Contains response data for the responseDouble operation.
 */
export type HeaderResponseDoubleResponse = HeaderResponsedoubleHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsedoubleHeaders;
  };
};

/**
 * Contains response data for the responseBool operation.
 */
export type HeaderResponseBoolResponse = HeaderResponseboolHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponseboolHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface HeaderParamStringOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Send a post request with header values "The quick brown fox jumps over the lazy dog" or null or ""
   */
  value?: string;
}

/**
 * Contains response data for the responseString operation.
 */
export type HeaderResponseStringResponse = HeaderResponsestringHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsestringHeaders;
  };
};

/**
 * Contains response data for the responseDate operation.
 */
export type HeaderResponseDateResponse = HeaderResponsedateHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsedateHeaders;
  };
};

/**
 * Contains response data for the responseDatetime operation.
 */
export type HeaderResponseDatetimeResponse = HeaderResponsedatetimeHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsedatetimeHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface HeaderParamDatetimeRfc1123OptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Send a post request with header values "Wed, 01 Jan 2010 12:34:56 GMT" or "Mon, 01 Jan 0001 00:00:00 GMT"
   */
  value?: Date;
}

/**
 * Contains response data for the responseDatetimeRfc1123 operation.
 */
export type HeaderResponseDatetimeRfc1123Response = HeaderResponsedatetimerfc1123Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsedatetimerfc1123Headers;
  };
};

/**
 * Contains response data for the responseDuration operation.
 */
export type HeaderResponseDurationResponse = HeaderResponsedurationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsedurationHeaders;
  };
};

/**
 * Contains response data for the responseByte operation.
 */
export type HeaderResponseByteResponse = HeaderResponsebyteHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponsebyteHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface HeaderParamEnumOptionalParams
  extends coreHttp.OperationOptions {
  /**
   * Send a post request with header values 'GREY'
   */
  value?: GreyscaleColors;
}

/**
 * Contains response data for the responseEnum operation.
 */
export type HeaderResponseEnumResponse = HeaderResponseenumHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
    /**
     * The parsed HTTP response headers.
     */
    parsedHeaders: HeaderResponseenumHeaders;
  };
};

/**
 * Optional parameters.
 */
export interface HeaderClientOptionalParams
  extends coreHttp.ServiceClientOptions {
  /**
   * server parameter
   */
  $host?: string;
  /**
   * Overrides client endpoint.
   */
  endpoint?: string;
}
