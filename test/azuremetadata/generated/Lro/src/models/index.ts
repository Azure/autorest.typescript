/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/core-arm";
import * as coreHttp from "@azure/core-http";

export { BaseResource, CloudError };

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource Type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  tags?: { [propertyName: string]: string };
  /**
   * Resource Location
   */
  location?: string;
  /**
   * Resource Name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
}

/**
 * An interface representing Sku.
 */
export interface Sku {
  name?: string;
  id?: string;
}

/**
 * An interface representing Product.
 */
export interface Product extends Resource {
  provisioningState?: string;
  /**
   * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
   * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningStateValues?: ProvisioningStateValues;
}

/**
 * An interface representing SubResource.
 */
export interface SubResource extends BaseResource {
  /**
   * Sub Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
}

/**
 * An interface representing SubProduct.
 */
export interface SubProduct extends SubResource {
  provisioningState?: string;
  /**
   * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
   * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningStateValues?: ProvisioningStateValues1;
}

/**
 * An interface representing OperationResultError.
 */
export interface OperationResultError {
  /**
   * The error code for an operation failure
   */
  code?: number;
  /**
   * The detailed arror message
   */
  message?: string;
}

/**
 * An interface representing OperationResult.
 */
export interface OperationResult {
  /**
   * The status of the request. Possible values include: 'Succeeded', 'Failed', 'canceled',
   * 'Accepted', 'Creating', 'Created', 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
   */
  status?: Status;
  error?: OperationResultError;
}

/**
 * Optional Parameters.
 */
export interface LROsPut200SucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut200SucceededNoStateOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut200UpdatingSucceeded204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut201CreatingFailed200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPut200Acceptedcanceled200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutNoHeaderInRetryOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncNoRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncRetryFailedOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncNoRetrycanceledOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncNoHeaderInRetryOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPutNonResourceOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * sku to put
   */
  sku?: Sku;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncNonResourceOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Sku to put
   */
  sku?: Sku;
}

/**
 * Optional Parameters.
 */
export interface LROsPutSubResourceOptionalParams extends coreHttp.RequestOptionsBase {
  provisioningState?: string;
}

/**
 * Optional Parameters.
 */
export interface LROsPutAsyncSubResourceOptionalParams extends coreHttp.RequestOptionsBase {
  provisioningState?: string;
}

/**
 * Optional Parameters.
 */
export interface LROsPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPost202NoRetry204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPostAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPostAsyncNoRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPostAsyncRetryFailedOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsPostAsyncRetrycanceledOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut200SucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut200SucceededNoStateOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut200UpdatingSucceeded204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut201CreatingFailed200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPut200Acceptedcanceled200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutNoHeaderInRetryOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncNoRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncRetryFailedOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncNoRetrycanceledOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncNoHeaderInRetryOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutNonResourceOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * sku to put
   */
  sku?: Sku;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncNonResourceOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Sku to put
   */
  sku?: Sku;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutSubResourceOptionalParams extends coreHttp.RequestOptionsBase {
  provisioningState?: string;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPutAsyncSubResourceOptionalParams extends coreHttp.RequestOptionsBase {
  provisioningState?: string;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPost202NoRetry204OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPostAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPostAsyncNoRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPostAsyncRetryFailedOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsBeginPostAsyncRetrycanceledOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysPutAsyncRelativeRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysPostAsyncRelativeRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysBeginPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysBeginPutAsyncRelativeRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysBeginPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LRORetrysBeginPostAsyncRelativeRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutNonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutNonRetry201Creating400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutNonRetry201Creating400InvalidJsonOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutAsyncRelativeRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPostNonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPost202NonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPostAsyncRelativeRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutError201NoProvisioningStatePayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutAsyncRelativeRetryNoStatusOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutAsyncRelativeRetryNoStatusPayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPost202NoLocationOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPostAsyncRelativeRetryNoPayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPut200InvalidJsonOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutAsyncRelativeRetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPutAsyncRelativeRetryInvalidJsonPollingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPost202RetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPostAsyncRelativeRetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsPostAsyncRelativeRetryInvalidJsonPollingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutNonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutNonRetry201Creating400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutNonRetry201Creating400InvalidJsonOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutAsyncRelativeRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPostNonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPost202NonRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPostAsyncRelativeRetry400OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutError201NoProvisioningStatePayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutAsyncRelativeRetryNoStatusOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutAsyncRelativeRetryNoStatusPayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPost202NoLocationOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPostAsyncRelativeRetryNoPayloadOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPut200InvalidJsonOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutAsyncRelativeRetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPutAsyncRelativeRetryInvalidJsonPollingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPost202RetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPostAsyncRelativeRetryInvalidHeaderOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROSADsBeginPostAsyncRelativeRetryInvalidJsonPollingOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderPutAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderPostAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderBeginPutAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderBeginPut201CreatingSucceeded200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderBeginPost202Retry200OptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * Optional Parameters.
 */
export interface LROsCustomHeaderBeginPostAsyncRetrySucceededOptionalParams extends coreHttp.RequestOptionsBase {
  /**
   * Product to put
   */
  product?: Product;
}

/**
 * An interface representing AutoRestLongRunningOperationTestServiceOptions.
 */
export interface AutoRestLongRunningOperationTestServiceOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for putNoHeaderInRetry operation.
 */
export interface LROsPutNoHeaderInRetryHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/noheader/202/200/operationResults
   */
  locationHeader: string;
}

/**
 * Defines headers for putAsyncRetrySucceeded operation.
 */
export interface LROsPutAsyncRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncNoRetrySucceeded operation.
 */
export interface LROsPutAsyncNoRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/noretry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/noretry/succeeded/operationResults/200
   */
  locationHeader: string;
}

/**
 * Defines headers for putAsyncRetryFailed operation.
 */
export interface LROsPutAsyncRetryFailedHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncNoRetrycanceled operation.
 */
export interface LROsPutAsyncNoRetrycanceledHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/noretry/canceled/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/noretry/canceled/operationResults/200
   */
  locationHeader: string;
}

/**
 * Defines headers for putAsyncNoHeaderInRetry operation.
 */
export interface LROsPutAsyncNoHeaderInRetryHeaders {
  azureAsyncOperation: string;
}

/**
 * Defines headers for deleteProvisioning202Accepted200Succeeded operation.
 */
export interface LROsDeleteProvisioning202Accepted200SucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/delete/provisioning/202/accepted/200/succeeded
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteProvisioning202DeletingFailed200 operation.
 */
export interface LROsDeleteProvisioning202DeletingFailed200Headers {
  /**
   * Location to poll for result status: will be set to
   * /lro/delete/provisioning/202/deleting/200/failed
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteProvisioning202Deletingcanceled200 operation.
 */
export interface LROsDeleteProvisioning202Deletingcanceled200Headers {
  /**
   * Location to poll for result status: will be set to
   * /lro/delete/provisioning/202/deleting/200/canceled
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for delete202Retry200 operation.
 */
export interface LROsDelete202Retry200Headers {
  /**
   * Location to poll for result status: will be set to /lro/delete/202/retry/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for delete202NoRetry204 operation.
 */
export interface LROsDelete202NoRetry204Headers {
  /**
   * Location to poll for result status: will be set to /lro/delete/202/noretry/204
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteNoHeaderInRetry operation.
 */
export interface LROsDeleteNoHeaderInRetryHeaders {
  /**
   * Location to poll for result status: will be set to /lro/put/noheader/202/204/operationresults
   */
  location: string;
}

/**
 * Defines headers for deleteAsyncNoHeaderInRetry operation.
 */
export interface LROsDeleteAsyncNoHeaderInRetryHeaders {
  /**
   * Location to poll for result status: will be set to /lro/put/noheader/202/204/operationresults
   */
  location: string;
}

/**
 * Defines headers for deleteAsyncRetrySucceeded operation.
 */
export interface LROsDeleteAsyncRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncNoRetrySucceeded operation.
 */
export interface LROsDeleteAsyncNoRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/noretry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/noretry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRetryFailed operation.
 */
export interface LROsDeleteAsyncRetryFailedHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/failed/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/failed/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRetrycanceled operation.
 */
export interface LROsDeleteAsyncRetrycanceledHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/canceled/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/canceled/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202Retry200 operation.
 */
export interface LROsPost202Retry200Headers {
  /**
   * Location to poll for result status: will be set to /lro/post/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202NoRetry204 operation.
 */
export interface LROsPost202NoRetry204Headers {
  /**
   * Location to poll for result status: will be set to /lro/post/202/noretry/204
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRetrySucceeded operation.
 */
export interface LROsPostAsyncRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncNoRetrySucceeded operation.
 */
export interface LROsPostAsyncNoRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRetryFailed operation.
 */
export interface LROsPostAsyncRetryFailedHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRetrycanceled operation.
 */
export interface LROsPostAsyncRetrycanceledHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/canceled/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/canceled/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetrySucceeded operation.
 */
export interface LRORetrysPutAsyncRelativeRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteProvisioning202Accepted200Succeeded operation.
 */
export interface LRORetrysDeleteProvisioning202Accepted200SucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/delete/provisioning/202/accepted/200/succeeded
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for delete202Retry200 operation.
 */
export interface LRORetrysDelete202Retry200Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/delete/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRelativeRetrySucceeded operation.
 */
export interface LRORetrysDeleteAsyncRelativeRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/deleteasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/deleteasync/retry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202Retry200 operation.
 */
export interface LRORetrysPost202Retry200Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/post/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRelativeRetrySucceeded operation.
 */
export interface LRORetrysPostAsyncRelativeRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/retryerror/putasync/retry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetry400 operation.
 */
export interface LROSADsPutAsyncRelativeRetry400Headers {
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/putasync/retry/operationResults/400
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/putasync/retry/operationResults/400
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteNonRetry400 operation.
 */
export interface LROSADsDeleteNonRetry400Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/delete/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for delete202NonRetry400 operation.
 */
export interface LROSADsDelete202NonRetry400Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/delete/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRelativeRetry400 operation.
 */
export interface LROSADsDeleteAsyncRelativeRetry400Headers {
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/deleteasync/retry/operationResults/400
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/deleteasync/retry/operationResults/400
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postNonRetry400 operation.
 */
export interface LROSADsPostNonRetry400Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/post/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202NonRetry400 operation.
 */
export interface LROSADsPost202NonRetry400Headers {
  /**
   * Location to poll for result status: will be set to /lro/retryerror/post/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRelativeRetry400 operation.
 */
export interface LROSADsPostAsyncRelativeRetry400Headers {
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/putasync/retry/operationResults/400
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/nonretryerror/putasync/retry/operationResults/400
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetryNoStatus operation.
 */
export interface LROSADsPutAsyncRelativeRetryNoStatusHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetryNoStatusPayload operation.
 */
export interface LROSADsPutAsyncRelativeRetryNoStatusPayloadHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRelativeRetryNoStatus operation.
 */
export interface LROSADsDeleteAsyncRelativeRetryNoStatusHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/deleteasync/retry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202NoLocation operation.
 */
export interface LROSADsPost202NoLocationHeaders {
  /**
   * Location to poll for result status: will not be set
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRelativeRetryNoPayload operation.
 */
export interface LROSADsPostAsyncRelativeRetryNoPayloadHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/error/putasync/retry/failed/operationResults/nopayload
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/error/putasync/retry/failed/operationResults/nopayload
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetryInvalidHeader operation.
 */
export interface LROSADsPutAsyncRelativeRetryInvalidHeaderHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRelativeRetryInvalidJsonPolling operation.
 */
export interface LROSADsPutAsyncRelativeRetryInvalidJsonPollingHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/putasync/retry/failed/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for delete202RetryInvalidHeader operation.
 */
export interface LROSADsDelete202RetryInvalidHeaderHeaders {
  /**
   * Location to poll for result status: will be set to /foo
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to /bar
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRelativeRetryInvalidHeader operation.
 */
export interface LROSADsDeleteAsyncRelativeRetryInvalidHeaderHeaders {
  /**
   * Location to poll for result status: will be set to /foo
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to /foo
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to /bar
   */
  retryAfter: number;
}

/**
 * Defines headers for deleteAsyncRelativeRetryInvalidJsonPolling operation.
 */
export interface LROSADsDeleteAsyncRelativeRetryInvalidJsonPollingHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/error/deleteasync/retry/failed/operationResults/invalidjsonpolling
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/error/deleteasync/retry/failed/operationResults/invalidjsonpolling
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202RetryInvalidHeader operation.
 */
export interface LROSADsPost202RetryInvalidHeaderHeaders {
  /**
   * Location to poll for result status: will be set to /foo
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to /bar
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRelativeRetryInvalidHeader operation.
 */
export interface LROSADsPostAsyncRelativeRetryInvalidHeaderHeaders {
  /**
   * Location to poll for result status: will be set to foo
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to foo
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to /bar
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRelativeRetryInvalidJsonPolling operation.
 */
export interface LROSADsPostAsyncRelativeRetryInvalidJsonPollingHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/error/postasync/retry/failed/operationResults/invalidjsonpolling
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/error/postasync/retry/failed/operationResults/invalidjsonpolling
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for putAsyncRetrySucceeded operation.
 */
export interface LROsCustomHeaderPutAsyncRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/customheader/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/customheader/putasync/retry/succeeded/operationResults/200
   */
  locationHeader: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for post202Retry200 operation.
 */
export interface LROsCustomHeaderPost202Retry200Headers {
  /**
   * Location to poll for result status: will be set to /lro/customheader/post/202/retry/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines headers for postAsyncRetrySucceeded operation.
 */
export interface LROsCustomHeaderPostAsyncRetrySucceededHeaders {
  /**
   * Location to poll for result status: will be set to
   * /lro/customheader/putasync/retry/succeeded/operationResults/200
   */
  azureAsyncOperation: string;
  /**
   * Location to poll for result status: will be set to
   * /lro/customheader/putasync/retry/succeeded/operationResults/200
   */
  location: string;
  /**
   * Number of milliseconds until the next poll should be sent, will be set to zero
   */
  retryAfter: number;
}

/**
 * Defines values for ProvisioningStateValues.
 * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
 * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
 * @readonly
 * @enum {string}
 */
export type ProvisioningStateValues = 'Succeeded' | 'Failed' | 'canceled' | 'Accepted' | 'Creating' | 'Created' | 'Updating' | 'Updated' | 'Deleting' | 'Deleted' | 'OK';

/**
 * Defines values for ProvisioningStateValues1.
 * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
 * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
 * @readonly
 * @enum {string}
 */
export type ProvisioningStateValues1 = 'Succeeded' | 'Failed' | 'canceled' | 'Accepted' | 'Creating' | 'Created' | 'Updating' | 'Updated' | 'Deleting' | 'Deleted' | 'OK';

/**
 * Defines values for Status.
 * Possible values include: 'Succeeded', 'Failed', 'canceled', 'Accepted', 'Creating', 'Created',
 * 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'
 * @readonly
 * @enum {string}
 */
export type Status = 'Succeeded' | 'Failed' | 'canceled' | 'Accepted' | 'Creating' | 'Created' | 'Updating' | 'Updated' | 'Deleting' | 'Deleted' | 'OK';

/**
 * Contains response data for the put200Succeeded operation.
 */
export type LROsPut200SucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put200SucceededNoState operation.
 */
export type LROsPut200SucceededNoStateResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put202Retry200 operation.
 */
export type LROsPut202Retry200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LROsPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put200UpdatingSucceeded204 operation.
 */
export type LROsPut200UpdatingSucceeded204Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put201CreatingFailed200 operation.
 */
export type LROsPut201CreatingFailed200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put200Acceptedcanceled200 operation.
 */
export type LROsPut200Acceptedcanceled200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putNoHeaderInRetry operation.
 */
export type LROsPutNoHeaderInRetryResponse = Product & LROsPutNoHeaderInRetryHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutNoHeaderInRetryHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRetrySucceeded operation.
 */
export type LROsPutAsyncRetrySucceededResponse = Product & LROsPutAsyncRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutAsyncRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncNoRetrySucceeded operation.
 */
export type LROsPutAsyncNoRetrySucceededResponse = Product & LROsPutAsyncNoRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutAsyncNoRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRetryFailed operation.
 */
export type LROsPutAsyncRetryFailedResponse = Product & LROsPutAsyncRetryFailedHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutAsyncRetryFailedHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncNoRetrycanceled operation.
 */
export type LROsPutAsyncNoRetrycanceledResponse = Product & LROsPutAsyncNoRetrycanceledHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutAsyncNoRetrycanceledHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncNoHeaderInRetry operation.
 */
export type LROsPutAsyncNoHeaderInRetryResponse = Product & LROsPutAsyncNoHeaderInRetryHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPutAsyncNoHeaderInRetryHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putNonResource operation.
 */
export type LROsPutNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the putAsyncNonResource operation.
 */
export type LROsPutAsyncNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the putSubResource operation.
 */
export type LROsPutSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubProduct;
    };
};

/**
 * Contains response data for the putAsyncSubResource operation.
 */
export type LROsPutAsyncSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubProduct;
    };
};

/**
 * Contains response data for the deleteProvisioning202Accepted200Succeeded operation.
 */
export type LROsDeleteProvisioning202Accepted200SucceededResponse = Product & LROsDeleteProvisioning202Accepted200SucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteProvisioning202Accepted200SucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteProvisioning202DeletingFailed200 operation.
 */
export type LROsDeleteProvisioning202DeletingFailed200Response = Product & LROsDeleteProvisioning202DeletingFailed200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteProvisioning202DeletingFailed200Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteProvisioning202Deletingcanceled200 operation.
 */
export type LROsDeleteProvisioning202Deletingcanceled200Response = Product & LROsDeleteProvisioning202Deletingcanceled200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteProvisioning202Deletingcanceled200Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the delete202Retry200 operation.
 */
export type LROsDelete202Retry200Response = Product & LROsDelete202Retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDelete202Retry200Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the delete202NoRetry204 operation.
 */
export type LROsDelete202NoRetry204Response = Product & LROsDelete202NoRetry204Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDelete202NoRetry204Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteNoHeaderInRetry operation.
 */
export type LROsDeleteNoHeaderInRetryResponse = LROsDeleteNoHeaderInRetryHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteNoHeaderInRetryHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncNoHeaderInRetry operation.
 */
export type LROsDeleteAsyncNoHeaderInRetryResponse = LROsDeleteAsyncNoHeaderInRetryHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteAsyncNoHeaderInRetryHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncRetrySucceeded operation.
 */
export type LROsDeleteAsyncRetrySucceededResponse = LROsDeleteAsyncRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteAsyncRetrySucceededHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncNoRetrySucceeded operation.
 */
export type LROsDeleteAsyncNoRetrySucceededResponse = LROsDeleteAsyncNoRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteAsyncNoRetrySucceededHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncRetryFailed operation.
 */
export type LROsDeleteAsyncRetryFailedResponse = LROsDeleteAsyncRetryFailedHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteAsyncRetryFailedHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncRetrycanceled operation.
 */
export type LROsDeleteAsyncRetrycanceledResponse = LROsDeleteAsyncRetrycanceledHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsDeleteAsyncRetrycanceledHeaders;
    };
};

/**
 * Contains response data for the post200WithPayload operation.
 */
export type LROsPost200WithPayloadResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LROsPost202Retry200Response = LROsPost202Retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPost202Retry200Headers;
    };
};

/**
 * Contains response data for the post202NoRetry204 operation.
 */
export type LROsPost202NoRetry204Response = Product & LROsPost202NoRetry204Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPost202NoRetry204Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postDoubleHeadersFinalLocationGet operation.
 */
export type LROsPostDoubleHeadersFinalLocationGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postDoubleHeadersFinalAzureHeaderGet operation.
 */
export type LROsPostDoubleHeadersFinalAzureHeaderGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postDoubleHeadersFinalAzureHeaderGetDefault operation.
 */
export type LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postAsyncRetrySucceeded operation.
 */
export type LROsPostAsyncRetrySucceededResponse = Product & LROsPostAsyncRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPostAsyncRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postAsyncNoRetrySucceeded operation.
 */
export type LROsPostAsyncNoRetrySucceededResponse = Product & LROsPostAsyncNoRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPostAsyncNoRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the postAsyncRetryFailed operation.
 */
export type LROsPostAsyncRetryFailedResponse = LROsPostAsyncRetryFailedHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPostAsyncRetryFailedHeaders;
    };
};

/**
 * Contains response data for the postAsyncRetrycanceled operation.
 */
export type LROsPostAsyncRetrycanceledResponse = LROsPostAsyncRetrycanceledHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsPostAsyncRetrycanceledHeaders;
    };
};

/**
 * Contains response data for the beginPut200Succeeded operation.
 */
export type LROsBeginPut200SucceededResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut200SucceededNoState operation.
 */
export type LROsBeginPut200SucceededNoStateResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut202Retry200 operation.
 */
export type LROsBeginPut202Retry200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut201CreatingSucceeded200 operation.
 */
export type LROsBeginPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut200UpdatingSucceeded204 operation.
 */
export type LROsBeginPut200UpdatingSucceeded204Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut201CreatingFailed200 operation.
 */
export type LROsBeginPut201CreatingFailed200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut200Acceptedcanceled200 operation.
 */
export type LROsBeginPut200Acceptedcanceled200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPutNonResource operation.
 */
export type LROsBeginPutNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the beginPutAsyncNonResource operation.
 */
export type LROsBeginPutAsyncNonResourceResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the beginPutSubResource operation.
 */
export type LROsBeginPutSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubProduct;
    };
};

/**
 * Contains response data for the beginPutAsyncSubResource operation.
 */
export type LROsBeginPutAsyncSubResourceResponse = SubProduct & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SubProduct;
    };
};

/**
 * Contains response data for the beginPost200WithPayload operation.
 */
export type LROsBeginPost200WithPayloadResponse = Sku & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Sku;
    };
};

/**
 * Contains response data for the beginPostDoubleHeadersFinalLocationGet operation.
 */
export type LROsBeginPostDoubleHeadersFinalLocationGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPostDoubleHeadersFinalAzureHeaderGet operation.
 */
export type LROsBeginPostDoubleHeadersFinalAzureHeaderGetResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPostDoubleHeadersFinalAzureHeaderGetDefault operation.
 */
export type LROsBeginPostDoubleHeadersFinalAzureHeaderGetDefaultResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LRORetrysPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysPutAsyncRelativeRetrySucceededResponse = Product & LRORetrysPutAsyncRelativeRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysPutAsyncRelativeRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteProvisioning202Accepted200Succeeded operation.
 */
export type LRORetrysDeleteProvisioning202Accepted200SucceededResponse = Product & LRORetrysDeleteProvisioning202Accepted200SucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysDeleteProvisioning202Accepted200SucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the delete202Retry200 operation.
 */
export type LRORetrysDelete202Retry200Response = LRORetrysDelete202Retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysDelete202Retry200Headers;
    };
};

/**
 * Contains response data for the deleteAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysDeleteAsyncRelativeRetrySucceededResponse = LRORetrysDeleteAsyncRelativeRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysDeleteAsyncRelativeRetrySucceededHeaders;
    };
};

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LRORetrysPost202Retry200Response = LRORetrysPost202Retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysPost202Retry200Headers;
    };
};

/**
 * Contains response data for the postAsyncRelativeRetrySucceeded operation.
 */
export type LRORetrysPostAsyncRelativeRetrySucceededResponse = LRORetrysPostAsyncRelativeRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LRORetrysPostAsyncRelativeRetrySucceededHeaders;
    };
};

/**
 * Contains response data for the beginPut201CreatingSucceeded200 operation.
 */
export type LRORetrysBeginPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putNonRetry400 operation.
 */
export type LROSADsPutNonRetry400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putNonRetry201Creating400 operation.
 */
export type LROSADsPutNonRetry201Creating400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putNonRetry201Creating400InvalidJson operation.
 */
export type LROSADsPutNonRetry201Creating400InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetry400 operation.
 */
export type LROSADsPutAsyncRelativeRetry400Response = Product & LROSADsPutAsyncRelativeRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPutAsyncRelativeRetry400Headers;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteNonRetry400 operation.
 */
export type LROSADsDeleteNonRetry400Response = LROSADsDeleteNonRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDeleteNonRetry400Headers;
    };
};

/**
 * Contains response data for the delete202NonRetry400 operation.
 */
export type LROSADsDelete202NonRetry400Response = LROSADsDelete202NonRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDelete202NonRetry400Headers;
    };
};

/**
 * Contains response data for the deleteAsyncRelativeRetry400 operation.
 */
export type LROSADsDeleteAsyncRelativeRetry400Response = LROSADsDeleteAsyncRelativeRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDeleteAsyncRelativeRetry400Headers;
    };
};

/**
 * Contains response data for the postNonRetry400 operation.
 */
export type LROSADsPostNonRetry400Response = LROSADsPostNonRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPostNonRetry400Headers;
    };
};

/**
 * Contains response data for the post202NonRetry400 operation.
 */
export type LROSADsPost202NonRetry400Response = LROSADsPost202NonRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPost202NonRetry400Headers;
    };
};

/**
 * Contains response data for the postAsyncRelativeRetry400 operation.
 */
export type LROSADsPostAsyncRelativeRetry400Response = LROSADsPostAsyncRelativeRetry400Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPostAsyncRelativeRetry400Headers;
    };
};

/**
 * Contains response data for the putError201NoProvisioningStatePayload operation.
 */
export type LROSADsPutError201NoProvisioningStatePayloadResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetryNoStatus operation.
 */
export type LROSADsPutAsyncRelativeRetryNoStatusResponse = Product & LROSADsPutAsyncRelativeRetryNoStatusHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPutAsyncRelativeRetryNoStatusHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetryNoStatusPayload operation.
 */
export type LROSADsPutAsyncRelativeRetryNoStatusPayloadResponse = Product & LROSADsPutAsyncRelativeRetryNoStatusPayloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPutAsyncRelativeRetryNoStatusPayloadHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the deleteAsyncRelativeRetryNoStatus operation.
 */
export type LROSADsDeleteAsyncRelativeRetryNoStatusResponse = LROSADsDeleteAsyncRelativeRetryNoStatusHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDeleteAsyncRelativeRetryNoStatusHeaders;
    };
};

/**
 * Contains response data for the post202NoLocation operation.
 */
export type LROSADsPost202NoLocationResponse = LROSADsPost202NoLocationHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPost202NoLocationHeaders;
    };
};

/**
 * Contains response data for the postAsyncRelativeRetryNoPayload operation.
 */
export type LROSADsPostAsyncRelativeRetryNoPayloadResponse = LROSADsPostAsyncRelativeRetryNoPayloadHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPostAsyncRelativeRetryNoPayloadHeaders;
    };
};

/**
 * Contains response data for the put200InvalidJson operation.
 */
export type LROSADsPut200InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetryInvalidHeader operation.
 */
export type LROSADsPutAsyncRelativeRetryInvalidHeaderResponse = Product & LROSADsPutAsyncRelativeRetryInvalidHeaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPutAsyncRelativeRetryInvalidHeaderHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LROSADsPutAsyncRelativeRetryInvalidJsonPollingResponse = Product & LROSADsPutAsyncRelativeRetryInvalidJsonPollingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPutAsyncRelativeRetryInvalidJsonPollingHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the delete202RetryInvalidHeader operation.
 */
export type LROSADsDelete202RetryInvalidHeaderResponse = LROSADsDelete202RetryInvalidHeaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDelete202RetryInvalidHeaderHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncRelativeRetryInvalidHeader operation.
 */
export type LROSADsDeleteAsyncRelativeRetryInvalidHeaderResponse = LROSADsDeleteAsyncRelativeRetryInvalidHeaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDeleteAsyncRelativeRetryInvalidHeaderHeaders;
    };
};

/**
 * Contains response data for the deleteAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LROSADsDeleteAsyncRelativeRetryInvalidJsonPollingResponse = LROSADsDeleteAsyncRelativeRetryInvalidJsonPollingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsDeleteAsyncRelativeRetryInvalidJsonPollingHeaders;
    };
};

/**
 * Contains response data for the post202RetryInvalidHeader operation.
 */
export type LROSADsPost202RetryInvalidHeaderResponse = LROSADsPost202RetryInvalidHeaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPost202RetryInvalidHeaderHeaders;
    };
};

/**
 * Contains response data for the postAsyncRelativeRetryInvalidHeader operation.
 */
export type LROSADsPostAsyncRelativeRetryInvalidHeaderResponse = LROSADsPostAsyncRelativeRetryInvalidHeaderHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPostAsyncRelativeRetryInvalidHeaderHeaders;
    };
};

/**
 * Contains response data for the postAsyncRelativeRetryInvalidJsonPolling operation.
 */
export type LROSADsPostAsyncRelativeRetryInvalidJsonPollingResponse = LROSADsPostAsyncRelativeRetryInvalidJsonPollingHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROSADsPostAsyncRelativeRetryInvalidJsonPollingHeaders;
    };
};

/**
 * Contains response data for the beginPutNonRetry400 operation.
 */
export type LROSADsBeginPutNonRetry400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPutNonRetry201Creating400 operation.
 */
export type LROSADsBeginPutNonRetry201Creating400Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPutNonRetry201Creating400InvalidJson operation.
 */
export type LROSADsBeginPutNonRetry201Creating400InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPutError201NoProvisioningStatePayload operation.
 */
export type LROSADsBeginPutError201NoProvisioningStatePayloadResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the beginPut200InvalidJson operation.
 */
export type LROSADsBeginPut200InvalidJsonResponse = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the putAsyncRetrySucceeded operation.
 */
export type LROsCustomHeaderPutAsyncRetrySucceededResponse = Product & LROsCustomHeaderPutAsyncRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsCustomHeaderPutAsyncRetrySucceededHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the put201CreatingSucceeded200 operation.
 */
export type LROsCustomHeaderPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};

/**
 * Contains response data for the post202Retry200 operation.
 */
export type LROsCustomHeaderPost202Retry200Response = LROsCustomHeaderPost202Retry200Headers & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsCustomHeaderPost202Retry200Headers;
    };
};

/**
 * Contains response data for the postAsyncRetrySucceeded operation.
 */
export type LROsCustomHeaderPostAsyncRetrySucceededResponse = LROsCustomHeaderPostAsyncRetrySucceededHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: LROsCustomHeaderPostAsyncRetrySucceededHeaders;
    };
};

/**
 * Contains response data for the beginPut201CreatingSucceeded200 operation.
 */
export type LROsCustomHeaderBeginPut201CreatingSucceeded200Response = Product & {
  /**
   * The underlying HTTP response.
   */
  _response: coreHttp.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Product;
    };
};
