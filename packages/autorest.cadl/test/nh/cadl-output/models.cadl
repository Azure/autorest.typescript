import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";

using Cadl.Rest;
using Azure.Core;

namespace NotificationHubsClient;

enum MSApiVersionTypeKnownValues {
  TwoThousandFifteen01: "2015-01",
  TwoThousandFifteen04: "2015-04",
  TwoThousandFifteen08: "2015-08",
  TwoThousandSixteen07: "2016-07",
}

@knownValues(MSApiVersionTypeKnownValues)
model MSApiVersionType is string;

enum NotificationHubContentModelTypeKnownValues {
  ApplicationXml: "application/xml",
}

@knownValues(NotificationHubContentModelTypeKnownValues)
model NotificationHubContentModelType is string;

enum NotificationHubDescriptionModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(NotificationHubDescriptionModelXmlnsIKnownValues)
model NotificationHubDescriptionModelXmlnsI is string;

enum NotificationHubDescriptionModelAuthorizationRulesItemITypeKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(
  NotificationHubDescriptionModelAuthorizationRulesItemITypeKnownValues
)
model NotificationHubDescriptionModelAuthorizationRulesItemIType is string;

enum NotificationHubDescriptionModelAuthorizationRulesItemClaimTypeKnownValues {
  "SharedAccessAuthorizationRule",
}

@knownValues(
  NotificationHubDescriptionModelAuthorizationRulesItemClaimTypeKnownValues
)
model NotificationHubDescriptionModelAuthorizationRulesItemClaimType is string;

enum RegistrationEntryModelXmlnsMKnownValues {
  HttpSchemasMicrosoftComAdo200708DataservicesMetadata: "http://schemas.microsoft.com/ado/2007/08/dataservices/metadata",
}

@knownValues(RegistrationEntryModelXmlnsMKnownValues)
model RegistrationEntryModelXmlnsM is string;

enum PlatformTypeKnownValues {
  Apns: "apns",
  Wns: "wns",
  Gcm: "gcm",
  Baidu: "baidu",
  Adm: "adm",
}

@knownValues(PlatformTypeKnownValues)
model PlatformType is string;

enum InstallationPatchTypeKnownValues {
  Add: "add",
  Remove: "remove",
  Replace: "replace",
}

@knownValues(InstallationPatchTypeKnownValues)
model InstallationPatchType is string;

enum FormatParameterTypeKnownValues {
  Apple: "apple",
  Baidu: "baidu",
  Gcm: "gcm",
  Windows: "windows",
}

@knownValues(FormatParameterTypeKnownValues)
model FormatParameterType is string;

enum RegistrationContentModelTypeKnownValues {
  ApplicationXml: "application/xml",
}

@knownValues(RegistrationContentModelTypeKnownValues)
model RegistrationContentModelType is string;

enum AppleRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(AppleRegistrationContentModelXmlnsIKnownValues)
model AppleRegistrationContentModelXmlnsI is string;

enum AppleTemplateRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(AppleTemplateRegistrationContentModelXmlnsIKnownValues)
model AppleTemplateRegistrationContentModelXmlnsI is string;

enum BaiduRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(BaiduRegistrationContentModelXmlnsIKnownValues)
model BaiduRegistrationContentModelXmlnsI is string;

enum BaiduTemplateRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(BaiduTemplateRegistrationContentModelXmlnsIKnownValues)
model BaiduTemplateRegistrationContentModelXmlnsI is string;

enum GcmRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(GcmRegistrationContentModelXmlnsIKnownValues)
model GcmRegistrationContentModelXmlnsI is string;

enum GcmTemplateRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(GcmTemplateRegistrationContentModelXmlnsIKnownValues)
model GcmTemplateRegistrationContentModelXmlnsI is string;

enum WindowsRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(WindowsRegistrationContentModelXmlnsIKnownValues)
model WindowsRegistrationContentModelXmlnsI is string;

enum WindowsTemplateRegistrationContentModelXmlnsIKnownValues {
  HttpWwwW3Org2001XMLSchemaInstance: "http://www.w3.org/2001/XMLSchema-instance",
}

@knownValues(WindowsTemplateRegistrationContentModelXmlnsIKnownValues)
model WindowsTemplateRegistrationContentModelXmlnsI is string;

enum ApiVersionTypeKnownValues {
  TwoThousandFifteen01: "2015-01",
  TwoThousandFifteen04: "2015-04",
  TwoThousandFifteen08: "2015-08",
  TwoThousandSixteen07: "2016-07",
  TwoThousandTwenty06: "2020-06",
}

@knownValues(ApiVersionTypeKnownValues)
model ApiVersionType is string;

enum ContentType {
  ApplicationJsonCharsetUtf8: "application/json;charset=utf-8",
  ApplicationXmlCharsetUtf8: "application/xml;charset=utf-8",
}

model NotificationHubEntryModel {
  content?: NotificationHubContentModel;
}

model NotificationHubContentModel {
  type?: NotificationHubContentModelType;
  NotificationHubDescription?: NotificationHubDescriptionModel;
}

model NotificationHubDescriptionModel {
  "xmlns:i"?: NotificationHubDescriptionModelXmlnsI;
  RegistrationTtl?: string;
  Location?: string;
  ApnsCredential?: PropertyBagModelItem[];
  GcmCredential?: PropertyBagModelItem[];
  WnsCredential?: PropertyBagModelItem[];
  AuthorizationRules?: NotificationHubDescriptionModelAuthorizationRulesItem[];
}

model PropertyBagModelItem {
  Name?: string;
  Value?: string;
}

model NotificationHubDescriptionModelAuthorizationRulesItem {
  "i:type"?: NotificationHubDescriptionModelAuthorizationRulesItemIType;
  ClaimType?: NotificationHubDescriptionModelAuthorizationRulesItemClaimType;
  ClaimValue?: string;
  Rights?: string[];
  CreatedTime?: string;
  ModifiedTime?: string;
  KeyName?: string;
  PrimaryKey?: string;
  SecondaryKey?: string;
}

model RegistrationEntryModel {
  content?: NotificationHubContentModel;
  "xmlns:m"?: RegistrationEntryModelXmlnsM;
  "m:etag"?: string;
}

@resource("{hubName}/installations/{installationId}")
model InstallationModel {
  @doc("Installation Unique Identifier")
  // FIXME: (resource-key-guessing) - Verify that this property is the resource key, if not please update the model with the right one
  @key
  installationId: string;

  @doc("The user ID for the installation")
  userId?: string;

  @doc("The date when the installation was made inactivate by the PNS.")
  @visibility("read")
  lastActiveOn?: string;

  @doc("Date in W3C format of last update to this installation.")
  @visibility("read")
  lastUpdate?: string;

  @doc("PNS Platform for the installation")
  platform: PlatformType;

  @doc("The unique device handle for the PNS.")
  pushChannel: string;

  @doc("This is true if the PNS expired the channel.")
  @visibility("read")
  expiredPushChannel?: boolean;

  @doc("The tags for the installation for targeting")
  tags?: string[];

  @doc("Set of named templates associated with the installation.")
  templates?: Record<InstallationTemplateModel>;

  @doc("""
Set of secondary tiles associated with the installation. Applies only to the
'wns' platform.
""")
  secondaryTiles?: Record<InstallationSecondaryTileModel>;
}

model InstallationTemplateModel {
  @doc("Template for the body of the notification.")
  body: string;

  @doc("""
Set of named headers associated with the template. Header values can contain
template parameters.
""")
  headers?: Record<string>;

  @doc("Template expression evaluating in W3D date format.")
  expiry?: string;

  @doc("The tags for the installation for targeting")
  tags?: string[];
}

model InstallationSecondaryTileModel {
  @doc("ChannelUri for the secondary tile. Applies only to the 'wns' platform.")
  pushChannel: string;

  @doc("The tags for the installation for targeting")
  tags?: string[];

  @doc("""
Set of named templates associated with the secondary tile. Applies only to the
'wns' platform.
""")
  templates?: Record<InstallationTemplateModel>;
}

model InstallationPatchModelItem {
  "op": InstallationPatchType;
  path: string;
  value?: string;
}

model RegistrationContentModel {
  type?: RegistrationContentModelType;
  AppleRegistrationDescription?: AppleRegistrationContentModel;
  AppleTemplateRegistrationDescription?: AppleTemplateRegistrationContentModel;
  BaiduRegistrationDescription?: BaiduRegistrationContentModel;
  BaiduTemplateRegistrationDescription?: BaiduTemplateRegistrationContentModel;
  GcmRegistrationDescription?: GcmRegistrationContentModel;
  GcmTemplateRegistrationDescription?: GcmTemplateRegistrationContentModel;
  WindowsRegistrationDescription?: WindowsRegistrationContentModel;
  WindowsTemplateRegistrationDescription?: WindowsTemplateRegistrationContentModel;
}

model AppleRegistrationContentModel {
  "xmlns:i"?: AppleRegistrationContentModelXmlnsI;
  Tags?: string;
  DeviceToken: string;
}

model AppleTemplateRegistrationContentModel {
  "xmlns:i"?: AppleTemplateRegistrationContentModelXmlnsI;
  Tags?: string;
  DeviceToken: string;
  BodyTemplate: string;
  Expiry?: string;
}

model BaiduRegistrationContentModel {
  "xmlns:i"?: BaiduRegistrationContentModelXmlnsI;
  Tags?: string;
  BaiduUserId: string;
  BaiduChannelId: string;
}

model BaiduTemplateRegistrationContentModel {
  "xmlns:i"?: BaiduTemplateRegistrationContentModelXmlnsI;
  Tags?: string;
  BaiduUserId: string;
  BaiduChannelId: string;
  BodyTemplate: string;
}

model GcmRegistrationContentModel {
  "xmlns:i"?: GcmRegistrationContentModelXmlnsI;
  Tags?: string;
  GcmRegistrationId?: string;
}

model GcmTemplateRegistrationContentModel {
  "xmlns:i"?: GcmTemplateRegistrationContentModelXmlnsI;
  Tags?: string;
  GcmRegistrationId: string;
  BodyTemplate: string;
}

model WindowsRegistrationContentModel {
  "xmlns:i"?: WindowsRegistrationContentModelXmlnsI;
  Tags?: string;
  ChannelUri: string;
}

model WindowsTemplateRegistrationContentModel {
  "xmlns:i"?: WindowsTemplateRegistrationContentModelXmlnsI;
  Tags?: string;
  ChannelUri: string;
  BodyTemplate: string;
  WnsHeaders?: WindowsTemplateRegistrationContentModelWnsHeadersItem[];
}

model WindowsTemplateRegistrationContentModelWnsHeadersItem {
  Header?: string;
  Value?: string;
}
