import "@azure-tools/cadl-azure-core";
import "@cadl-lang/rest";
import "./models.cadl";

using Cadl.Rest;
using Cadl.Http;

namespace NotificationHubsClient;

@doc("Deletes a notification hub.")
@route("/{hubName}")
@delete
op DeleteNotificationHub is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Retrieves information about a notification hub.")
@route("/{hubName}")
@get
op GetNotificationHub is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  NotificationHubEntryModel | void
>;

@doc("Create or update a notification hub.")
@route("/{hubName}")
@put
op CreateOrUpdateNotificationHub is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("ETag as returned by creation, update, and retrieval, or * (overwrite).")
    @header
    "If-Match": string;
    @body body: NotificationHubEntryModel;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  NotificationHubEntryModel | void
>;

@doc("Retrieves all registrations with a specific tag.")
@route("/{hubName}/tags/{tag}/registrations")
@get
op GetRegistrationsByTag is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("The path for the tag to query")
    @path
    tag: string;

    @doc("""
Contains the token to continue the enumeration of registrations, in case there
are more.
""")
    @query
    ContinuationToken: string;

    @doc("OData top parameter")
    @query
    $top: string;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  void
>;

@doc("Create a registration ID")
@route("/{hubName}/registrationIDs")
@post
op CreateRegistrationId is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get registrations by the specified criteria")
@route("/{hubName}/registrations")
@get
op GetRegistrations is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("""
Contains the token to continue the enumeration of registrations, in case there
are more.
""")
    @query
    ContinuationToken: string;

    @doc("OData filter parameter")
    @query
    $filter: string;

    @doc("OData top parameter")
    @query
    $top: string;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  void
>;

@doc("Creates a registration")
@route("/{hubName}/registrations")
@post
op CreateRegistration is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  RegistrationEntryModel | void
>;

@doc("Deletes a registration")
@route("/{hubName}/registrations/{registrationId}")
@delete
op DeleteRegistration is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Registration ID parameter")
    @path
    registrationId: string;

    @doc("ETag as returned by creation, update, and retrieval, or * (overwrite).")
    @header
    "If-Match": string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get a registration by registration ID")
@route("/{hubName}/registrations/{registrationId}")
@get
op GetRegistration is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Registration ID parameter")
    @path
    registrationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  RegistrationEntryModel | void
>;

@doc("Create or update a registration")
@route("/{hubName}/registrations/{registrationId}")
@put
op CreateOrUpdateRegistration is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Registration ID parameter")
    @path
    registrationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
    @body body: RegistrationEntryModel;

    @doc("Accept header")
    @header
    Accept: "application/atom+xml;type=entry;charset=utf-8";
  },
  RegistrationEntryModel | void
>;

@summary("Delete Installation")
@doc("Delete an installation by ID")
@route("/{hubName}/installations/{installationId}")
@delete
op DeleteInstallation is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Installation ID parameter")
    @path
    installationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get an Installation by Installation ID")
@route("/{hubName}/installations/{installationId}")
@get
op GetInstallation is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Installation ID parameter")
    @path
    installationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  InstallationModel | void
>;

@doc("""
Azure Notification Hubs supports partial updates to an installation using the
JSON-Patch standard in [RFC6902](https://tools.ietf.org/html/rfc6902).
""")
@route("/{hubName}/installations/{installationId}")
@patch
op PatchInstallation is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Installation ID parameter")
    @path
    installationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
    @body body: InstallationPatchModelItem[];
  },
  void
>;

@doc("Creates or overwrites an installation.")
@route("/{hubName}/installations/{installationId}")
@put
op CreateOrUpdateInstallation is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Installation ID parameter")
    @path
    installationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
    @body body: InstallationModel;
  },
  void
>;