import "@azure-tools/cadl-azure-core";
import "@cadl-lang/rest";
import "./models.cadl";

using Cadl.Rest;
using Cadl.Http;

namespace NotificationHubsClient;

@doc("Deletes a notification hub.")
@route("/{hubName}")
@delete
op DeleteNotificationHub is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Retrieves information about a notification hub.")
op GetNotificationHub is Azure.Core.ResourceRead<
  NotificationHubEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Create or update a notification hub.")
op CreateOrUpdateNotificationHub is Azure.Core.ResourceCreateOrReplace<
  NotificationHubEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("ETag as returned by creation, update, and retrieval, or * (overwrite).")
      @header
      "If-Match": string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Retrieves all registrations with a specific tag.")
op GetRegistrationsByTag is Azure.Core.NonPagedResourceList<
  RegistrationEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("""
Contains the token to continue the enumeration of registrations, in case there
are more.
""")
      @query
      ContinuationToken: string;

      @doc("OData top parameter")
      @query
      $top: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Create a registration ID")
@route("/{hubName}/registrationIDs")
@post
op CreateRegistrationId is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get registrations by the specified criteria")
op GetRegistrations is Azure.Core.NonPagedResourceList<
  RegistrationEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("""
Contains the token to continue the enumeration of registrations, in case there
are more.
""")
      @query
      ContinuationToken: string;

      @doc("OData filter parameter")
      @query
      $filter: string;

      @doc("OData top parameter")
      @query
      $top: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Creates a registration")
op CreateRegistration is Azure.Core.ResourceCreateWithServiceProvidedName<
  RegistrationEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Deletes a registration")
@route("/{hubName}/registrations/{registrationId}")
@delete
op DeleteRegistration is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Registration ID parameter")
    @path
    registrationId: string;

    @doc("ETag as returned by creation, update, and retrieval, or * (overwrite).")
    @header
    "If-Match": string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get a registration by registration ID")
op GetRegistration is Azure.Core.ResourceRead<
  RegistrationEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@doc("Create or update a registration")
op CreateOrUpdateRegistration is Azure.Core.ResourceCreateOrReplace<
  RegistrationEntryModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;

      @doc("Accept header")
      @header
      Accept: "application/atom+xml;type=entry;charset=utf-8";
    };
  }
>;

@summary("Delete Installation")
@doc("Delete an installation by ID")
@route("/{hubName}/installations/{installationId}")
@delete
op DeleteInstallation is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Installation ID parameter")
    @path
    installationId: string;

    @doc("Authorization Header value")
    @header
    Authorization: string;
  },
  void
>;

@doc("Get an Installation by Installation ID")
op GetInstallation is Azure.Core.ResourceRead<
  InstallationModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;
    };
  }
>;

@doc("""
Azure Notification Hubs supports partial updates to an installation using the
JSON-Patch standard in [RFC6902](https://tools.ietf.org/html/rfc6902).
""")
op PatchInstallation is Azure.Core.ResourceCreateOrUpdate<
  InstallationModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;
    };
  }
>;

@doc("Creates or overwrites an installation.")
op CreateOrUpdateInstallation is Azure.Core.ResourceCreateOrReplace<
  InstallationModel,
  {
    parameters: {
      @doc("API Version")
      @header
      "x-ms-version": MSApiVersionType;

      @doc("Authorization Header value")
      @header
      Authorization: string;
    };
  }
>;

@doc("Sends a notification to the specified targets.")
@route("/{hubName}/messages")
@post
op SendMessage is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("Device handle for the PNS")
    @header
    "ServiceBusNotification-DeviceHandle": string;

    @doc("Platform type for the notification")
    @header
    "ServiceBusNotification-Format": FormatParameterType;

    @doc("Notification message tags for targeting")
    @header
    "ServiceBusNotification-Tags": string;

    @doc("Direct Send")
    @query
    direct: boolean;

    @doc("The apns-topic header")
    @header
    "apns-topic": string;

    @doc("The apns-priority header")
    @header
    "apns-priority": string;

    @doc("The apns-push-type header")
    @header
    "apns-push-type": string;

    @doc(" X-WNS-Cache-Policy header parameter")
    @header
    "X-WNS-Cache-Policy": string;

    @doc("X-WNS-PRIORITY header parameter")
    @header
    "X-WNS-PRIORITY": string;

    @doc("X-WNS-RequestForStatus header parameter")
    @header
    "X-WNS-RequestForStatus": string;

    @doc("X-WNS-Tag header parameter")
    @header
    "X-WNS-Tag": string;

    @doc("X-WNS-TTL header parameter")
    @header
    "X-WNS-TTL": string;

    @doc("X-WNS-Type header parameter")
    @header
    "X-WNS-Type": string;

    @doc("Upload file type")
    @header
    "Content-Type": ContentType;

    @doc("The notification message body")
    @body
    body: string;
  },
  void
>;

@doc("Sends a notification to the specified targets.")
@route("/{hubName}/messages")
@post
op SendMessage is Azure.Core.Foundations.Operation<
  {
    @doc("Notification Hub Name")
    @path
    hubName: string;

    @doc("API Version")
    @header
    "x-ms-version": MSApiVersionType;

    @doc("Authorization Header value")
    @header
    Authorization: string;

    @doc("Device handle for the PNS")
    @header
    "ServiceBusNotification-DeviceHandle": string;

    @doc("Platform type for the notification")
    @header
    "ServiceBusNotification-Format": FormatParameterType;

    @doc("Notification message tags for targeting")
    @header
    "ServiceBusNotification-Tags": string;

    @doc("Direct Send")
    @query
    direct: boolean;

    @doc("The apns-topic header")
    @header
    "apns-topic": string;

    @doc("The apns-priority header")
    @header
    "apns-priority": string;

    @doc("The apns-push-type header")
    @header
    "apns-push-type": string;

    @doc(" X-WNS-Cache-Policy header parameter")
    @header
    "X-WNS-Cache-Policy": string;

    @doc("X-WNS-PRIORITY header parameter")
    @header
    "X-WNS-PRIORITY": string;

    @doc("X-WNS-RequestForStatus header parameter")
    @header
    "X-WNS-RequestForStatus": string;

    @doc("X-WNS-Tag header parameter")
    @header
    "X-WNS-Tag": string;

    @doc("X-WNS-TTL header parameter")
    @header
    "X-WNS-TTL": string;

    @doc("X-WNS-Type header parameter")
    @header
    "X-WNS-Type": string;

    @doc("Upload file type")
    @header
    "Content-Type": ContentType;

    @doc("The notification message body")
    @body
    body: string;
  },
  void
>;
