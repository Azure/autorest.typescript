import "@typespec/http";
import "@typespec/rest";
import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";

using TypeSpec.Http;
using TypeSpec.Rest;
using TypeSpec.Versioning;
using Azure.Core;
using Azure.Core.Traits;
using Azure.Core.Foundations;

@service(#{
  title: "Operation Templates Test Service",
})
@doc("Test service for Azure Core operation templates.")
@useDependency(Versions.v1_0_Preview_1)
namespace Microsoft.ContosoProviderHub;

alias ServiceTraits = NoRepeatableRequests &
  NoConditionalRequests &
  NoClientRequestId;

alias Operations = Azure.Core.ResourceOperations<ServiceTraits>;

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
@discriminator("kind")
model DataConnectionData {
  @doc("The name of data connection")
  name?: string;

  @doc("The day to update the data connection on. (1-7 for weekly, 1-31 for monthly)")
  frequencyOffset?: int32;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
model LogAnalyticsDataConnectionData extends DataConnectionData {
  @doc("The kind of DataConnectionData")
  kind: "logAnalytics";

  @doc("logAnalyticsProperty1 property")
  logAnalyticsProperty1: int64;

  @doc("logAnalyticsProperty2 property")
  logAnalyticsProperty2: string;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
@discriminator("kind")
@resource("dataConnections")
model DataConnection {
  @doc("The system generated unique id for the resource.")
  id?: string;

  @doc("The caller provided unique name for the resource.")
  @key("dataConnectionName")
  @visibility(Lifecycle.Read)
  name: string;

  @doc("The name that can be used for display purposes.")
  displayName?: string;

  @doc("The date the data connection was created.")
  @visibility(Lifecycle.Read)
  createdDate?: utcDateTime;

  @doc("The day to update the data connection on.")
  frequencyOffset?: int32;

  @doc("The date the data connection was last updated.")
  @visibility(Lifecycle.Read)
  updatedDate?: utcDateTime;

  @doc("An indicator of whether the data connection is active.")
  active?: boolean;

  @doc("A message that specifies details about data connection if inactive.")
  @visibility(Lifecycle.Read)
  inactiveMessage?: string;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
model ValidateResult {
  @doc("This is the top-level error object whose code matches the x-ms-error-code response header.")
  error?: Error;
}

// Widget model for ResourceCreateWithServiceProvidedName template
#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
@resource("widgets")
model Widget {
  @doc("The system generated unique id for the resource.")
  @visibility(Lifecycle.Read)
  id?: string;

  @doc("The widget name generated by the service.")
  @key("widgetName")
  @visibility(Lifecycle.Read)
  name: string;

  @doc("Widget properties")
  properties?: WidgetProperties;

  @doc("Widget location")
  location: string;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
model WidgetProperties {
  @doc("Widget color")
  color: string;

  @doc("Widget weight")
  weight: int32;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
model WidgetCreateParams {
  @doc("Widget properties")
  properties?: WidgetProperties;

  @doc("Widget location")
  location: string;
}

// Gadget model for ResourceOperation foundation template
#suppress "@azure-tools/typespec-azure-core/documentation-required" "Documentation will be added next preview version"
@resource("gadgets")
model Gadget {
  @doc("The gadget name.")
  @key("gadgetName")
  @visibility(Lifecycle.Read)
  name: string;

  @doc("The gadget kind")
  kind: string;

  @doc("The gadget description")
  description: string;

  @doc("The gadget value")
  value: int32;
}

// Test ResourceCollectionAction operation template
interface DataConnections {
  @doc("Validate a data connection with a given dataConnectionName.")
  @action("validateDataConnection")
  validateDataConnection is Operations.ResourceCollectionAction<
    DataConnection,
    { @body body: DataConnectionData },
    ValidateResult
  >;
}

// Test ResourceCreateWithServiceProvidedName operation template  
interface Widgets {
  @doc("Create a widget with service provided name.")
  create is Azure.Core.StandardResourceOperations.ResourceCreateWithServiceProvidedName<Widget, WidgetCreateParams>;
}

// Test ResourceOperation foundation template
interface Gadgets {
  #suppress "@azure-tools/typespec-azure-core/use-standard-operations"
  @doc("Create or replace a gadget with a given gadgetName.")
  @createsOrReplacesResource(Gadget)
  @put
  createOrReplaceGadget is Foundations.ResourceOperation<
    Gadget,
    { @body body: Gadget },
    Gadget
  >;
}