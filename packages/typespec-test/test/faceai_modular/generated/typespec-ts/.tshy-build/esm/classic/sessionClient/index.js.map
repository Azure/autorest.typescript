{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/sessionClient/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAalC,OAAO,EACL,qBAAqB,EACrB,kBAAkB,EAClB,qBAAqB,EACrB,oBAAoB,EACpB,+BAA+B,EAC/B,qCAAqC,EACrC,yCAAyC,EACzC,4BAA4B,EAC5B,+BAA+B,EAC/B,8BAA8B,EAC9B,yCAAyC,GAC1C,MAAM,kCAAkC,CAAC;AA4D1C,MAAM,UAAU,gBAAgB,CAAC,OAAoB;IACnD,OAAO;QACL,qBAAqB,EAAE,CACrB,IAAoC,EACpC,OAAmD,EACnD,EAAE,CAAC,qBAAqB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QAClD,kBAAkB,EAAE,CAClB,SAAiB,EACjB,OAAgD,EAChD,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QACpD,qBAAqB,EAAE,CACrB,SAAiB,EACjB,OAAmD,EACnD,EAAE,CAAC,qBAAqB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QACvD,oBAAoB,EAAE,CACpB,OAAkD,EAClD,EAAE,CAAC,oBAAoB,CAAC,OAAO,EAAE,OAAO,CAAC;QAC3C,+BAA+B,EAAE,CAC/B,SAAiB,EACjB,OAA6D,EAC7D,EAAE,CAAC,+BAA+B,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QACjE,qCAAqC,EAAE,CACrC,IAAoC,EACpC,OAAmE,EACnE,EAAE,CAAC,qCAAqC,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QAClE,yCAAyC,EAAE,CACzC,IAA8C,EAC9C,OAAuE,EACvE,EAAE,CAAC,yCAAyC,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;QACtE,4BAA4B,EAAE,CAC5B,SAAiB,EACjB,OAA0D,EAC1D,EAAE,CAAC,4BAA4B,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QAC9D,+BAA+B,EAAE,CAC/B,SAAiB,EACjB,OAA6D,EAC7D,EAAE,CAAC,+BAA+B,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QACjE,8BAA8B,EAAE,CAC9B,OAA4D,EAC5D,EAAE,CAAC,8BAA8B,CAAC,OAAO,EAAE,OAAO,CAAC;QACrD,yCAAyC,EAAE,CACzC,SAAiB,EACjB,OAAuE,EACvE,EAAE,CAAC,yCAAyC,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;KAC5E,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,0BAA0B,CACxC,OAAoB;IAEpB,OAAO;QACL,GAAG,gBAAgB,CAAC,OAAO,CAAC;KAC7B,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { FaceContext } from \"../../api/FaceContext.js\";\nimport {\n  LivenessSessionCreationContent,\n  LivenessSessionCreationResult,\n  LivenessSession,\n  LivenessSessionAuditEntry,\n  LivenessSessionItem,\n  LivenessWithVerifySessionCreationContent,\n  LivenessWithVerifySession,\n  LivenessWithVerifySessionAuditEntry,\n} from \"../../models/models.js\";\nimport {\n  createLivenessSession,\n  getLivenessSession,\n  deleteLivenessSession,\n  listLivenessSessions,\n  listLivenessSessionAuditEntries,\n  createLivenessWithVerifySessionByJson,\n  createLivenessWithVerifySessionByFormData,\n  getLivenessWithVerifySession,\n  deleteLivenessWithVerifySession,\n  listLivenessWithVerifySessions,\n  listLivenessWithVerifySessionAuditEntries,\n} from \"../../api/sessionClient/index.js\";\nimport {\n  SessionClientCreateLivenessSessionOptions,\n  SessionClientGetLivenessSessionOptions,\n  SessionClientDeleteLivenessSessionOptions,\n  SessionClientListLivenessSessionsOptions,\n  SessionClientListLivenessSessionAuditEntriesOptions,\n  SessionClientCreateLivenessWithVerifySessionByJsonOptions,\n  SessionClientCreateLivenessWithVerifySessionByFormDataOptions,\n  SessionClientGetLivenessWithVerifySessionOptions,\n  SessionClientDeleteLivenessWithVerifySessionOptions,\n  SessionClientListLivenessWithVerifySessionsOptions,\n  SessionClientListLivenessWithVerifySessionAuditEntriesOptions,\n} from \"../../models/options.js\";\n\nexport interface SessionClientOperations {\n  createLivenessSession: (\n    body: LivenessSessionCreationContent,\n    options?: SessionClientCreateLivenessSessionOptions,\n  ) => Promise<LivenessSessionCreationResult>;\n  getLivenessSession: (\n    sessionId: string,\n    options?: SessionClientGetLivenessSessionOptions,\n  ) => Promise<LivenessSession>;\n  deleteLivenessSession: (\n    sessionId: string,\n    options?: SessionClientDeleteLivenessSessionOptions,\n  ) => Promise<void>;\n  listLivenessSessions: (\n    options?: SessionClientListLivenessSessionsOptions,\n  ) => Promise<LivenessSessionItem[]>;\n  listLivenessSessionAuditEntries: (\n    sessionId: string,\n    options?: SessionClientListLivenessSessionAuditEntriesOptions,\n  ) => Promise<LivenessSessionAuditEntry[]>;\n  createLivenessWithVerifySessionByJson: (\n    body: LivenessSessionCreationContent,\n    options?: SessionClientCreateLivenessWithVerifySessionByJsonOptions,\n  ) => Promise<LivenessSessionCreationResult>;\n  createLivenessWithVerifySessionByFormData: (\n    body: LivenessWithVerifySessionCreationContent,\n    options?: SessionClientCreateLivenessWithVerifySessionByFormDataOptions,\n  ) => Promise<LivenessSessionCreationResult>;\n  getLivenessWithVerifySession: (\n    sessionId: string,\n    options?: SessionClientGetLivenessWithVerifySessionOptions,\n  ) => Promise<LivenessWithVerifySession>;\n  deleteLivenessWithVerifySession: (\n    sessionId: string,\n    options?: SessionClientDeleteLivenessWithVerifySessionOptions,\n  ) => Promise<void>;\n  listLivenessWithVerifySessions: (\n    options?: SessionClientListLivenessWithVerifySessionsOptions,\n  ) => Promise<LivenessSessionItem[]>;\n  listLivenessWithVerifySessionAuditEntries: (\n    sessionId: string,\n    options?: SessionClientListLivenessWithVerifySessionAuditEntriesOptions,\n  ) => Promise<LivenessWithVerifySessionAuditEntry[]>;\n}\n\nexport function getSessionClient(context: FaceContext) {\n  return {\n    createLivenessSession: (\n      body: LivenessSessionCreationContent,\n      options?: SessionClientCreateLivenessSessionOptions,\n    ) => createLivenessSession(context, body, options),\n    getLivenessSession: (\n      sessionId: string,\n      options?: SessionClientGetLivenessSessionOptions,\n    ) => getLivenessSession(context, sessionId, options),\n    deleteLivenessSession: (\n      sessionId: string,\n      options?: SessionClientDeleteLivenessSessionOptions,\n    ) => deleteLivenessSession(context, sessionId, options),\n    listLivenessSessions: (\n      options?: SessionClientListLivenessSessionsOptions,\n    ) => listLivenessSessions(context, options),\n    listLivenessSessionAuditEntries: (\n      sessionId: string,\n      options?: SessionClientListLivenessSessionAuditEntriesOptions,\n    ) => listLivenessSessionAuditEntries(context, sessionId, options),\n    createLivenessWithVerifySessionByJson: (\n      body: LivenessSessionCreationContent,\n      options?: SessionClientCreateLivenessWithVerifySessionByJsonOptions,\n    ) => createLivenessWithVerifySessionByJson(context, body, options),\n    createLivenessWithVerifySessionByFormData: (\n      body: LivenessWithVerifySessionCreationContent,\n      options?: SessionClientCreateLivenessWithVerifySessionByFormDataOptions,\n    ) => createLivenessWithVerifySessionByFormData(context, body, options),\n    getLivenessWithVerifySession: (\n      sessionId: string,\n      options?: SessionClientGetLivenessWithVerifySessionOptions,\n    ) => getLivenessWithVerifySession(context, sessionId, options),\n    deleteLivenessWithVerifySession: (\n      sessionId: string,\n      options?: SessionClientDeleteLivenessWithVerifySessionOptions,\n    ) => deleteLivenessWithVerifySession(context, sessionId, options),\n    listLivenessWithVerifySessions: (\n      options?: SessionClientListLivenessWithVerifySessionsOptions,\n    ) => listLivenessWithVerifySessions(context, options),\n    listLivenessWithVerifySessionAuditEntries: (\n      sessionId: string,\n      options?: SessionClientListLivenessWithVerifySessionAuditEntriesOptions,\n    ) => listLivenessWithVerifySessionAuditEntries(context, sessionId, options),\n  };\n}\n\nexport function getSessionClientOperations(\n  context: FaceContext,\n): SessionClientOperations {\n  return {\n    ...getSessionClient(context),\n  };\n}\n"]}