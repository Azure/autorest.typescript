{"version":3,"file":"isUnexpected.js","sourceRoot":"","sources":["../../../src/rest/isUnexpected.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CreateLivenessSession200Response,\n  CreateLivenessSessionDefaultResponse,\n  ListLivenessSessions200Response,\n  ListLivenessSessionsDefaultResponse,\n  GetLivenessSession200Response,\n  GetLivenessSessionDefaultResponse,\n  DeleteLivenessSession200Response,\n  DeleteLivenessSessionDefaultResponse,\n  ListLivenessSessionAuditEntries200Response,\n  ListLivenessSessionAuditEntriesDefaultResponse,\n  CreateLivenessWithVerifySessionByJson200Response,\n  CreateLivenessWithVerifySessionByFormData200Response,\n  CreateLivenessWithVerifySessionByJsonDefaultResponse,\n  ListLivenessWithVerifySessions200Response,\n  ListLivenessWithVerifySessionsDefaultResponse,\n  GetLivenessWithVerifySession200Response,\n  GetLivenessWithVerifySessionDefaultResponse,\n  DeleteLivenessWithVerifySession200Response,\n  DeleteLivenessWithVerifySessionDefaultResponse,\n  ListLivenessWithVerifySessionAuditEntries200Response,\n  ListLivenessWithVerifySessionAuditEntriesDefaultResponse,\n} from \"./responses.js\";\n\nconst responseMap: Record<string, string[]> = {\n  \"POST /face/{apiVersion}/detectLiveness/singleModal/sessions\": [\"200\"],\n  \"GET /face/{apiVersion}/detectLiveness/singleModal/sessions\": [\"200\"],\n  \"GET /face/{apiVersion}/detectLiveness/singleModal/sessions/{sessionId}\": [\n    \"200\",\n  ],\n  \"DELETE /face/{apiVersion}/detectLiveness/singleModal/sessions/{sessionId}\": [\n    \"200\",\n  ],\n  \"GET /face/{apiVersion}/detectLiveness/singleModal/sessions/{sessionId}/audit\":\n    [\"200\"],\n  \"POST /face/{apiVersion}/detectLivenessWithVerify/singleModal/sessions\": [\n    \"200\",\n  ],\n  \"GET /face/{apiVersion}/detectLivenessWithVerify/singleModal/sessions\": [\n    \"200\",\n  ],\n  \"GET /face/{apiVersion}/detectLivenessWithVerify/singleModal/sessions/{sessionId}\":\n    [\"200\"],\n  \"DELETE /face/{apiVersion}/detectLivenessWithVerify/singleModal/sessions/{sessionId}\":\n    [\"200\"],\n  \"GET /face/{apiVersion}/detectLivenessWithVerify/singleModal/sessions/{sessionId}/audit\":\n    [\"200\"],\n};\n\nexport function isUnexpected(\n  response:\n    | CreateLivenessSession200Response\n    | CreateLivenessSessionDefaultResponse,\n): response is CreateLivenessSessionDefaultResponse;\nexport function isUnexpected(\n  response:\n    | ListLivenessSessions200Response\n    | ListLivenessSessionsDefaultResponse,\n): response is ListLivenessSessionsDefaultResponse;\nexport function isUnexpected(\n  response: GetLivenessSession200Response | GetLivenessSessionDefaultResponse,\n): response is GetLivenessSessionDefaultResponse;\nexport function isUnexpected(\n  response:\n    | DeleteLivenessSession200Response\n    | DeleteLivenessSessionDefaultResponse,\n): response is DeleteLivenessSessionDefaultResponse;\nexport function isUnexpected(\n  response:\n    | ListLivenessSessionAuditEntries200Response\n    | ListLivenessSessionAuditEntriesDefaultResponse,\n): response is ListLivenessSessionAuditEntriesDefaultResponse;\nexport function isUnexpected(\n  response:\n    | CreateLivenessWithVerifySessionByJson200Response\n    | CreateLivenessWithVerifySessionByFormData200Response\n    | CreateLivenessWithVerifySessionByJsonDefaultResponse,\n): response is CreateLivenessWithVerifySessionByJsonDefaultResponse;\nexport function isUnexpected(\n  response:\n    | ListLivenessWithVerifySessions200Response\n    | ListLivenessWithVerifySessionsDefaultResponse,\n): response is ListLivenessWithVerifySessionsDefaultResponse;\nexport function isUnexpected(\n  response:\n    | GetLivenessWithVerifySession200Response\n    | GetLivenessWithVerifySessionDefaultResponse,\n): response is GetLivenessWithVerifySessionDefaultResponse;\nexport function isUnexpected(\n  response:\n    | DeleteLivenessWithVerifySession200Response\n    | DeleteLivenessWithVerifySessionDefaultResponse,\n): response is DeleteLivenessWithVerifySessionDefaultResponse;\nexport function isUnexpected(\n  response:\n    | ListLivenessWithVerifySessionAuditEntries200Response\n    | ListLivenessWithVerifySessionAuditEntriesDefaultResponse,\n): response is ListLivenessWithVerifySessionAuditEntriesDefaultResponse;\nexport function isUnexpected(\n  response:\n    | CreateLivenessSession200Response\n    | CreateLivenessSessionDefaultResponse\n    | ListLivenessSessions200Response\n    | ListLivenessSessionsDefaultResponse\n    | GetLivenessSession200Response\n    | GetLivenessSessionDefaultResponse\n    | DeleteLivenessSession200Response\n    | DeleteLivenessSessionDefaultResponse\n    | ListLivenessSessionAuditEntries200Response\n    | ListLivenessSessionAuditEntriesDefaultResponse\n    | CreateLivenessWithVerifySessionByJson200Response\n    | CreateLivenessWithVerifySessionByFormData200Response\n    | CreateLivenessWithVerifySessionByJsonDefaultResponse\n    | ListLivenessWithVerifySessions200Response\n    | ListLivenessWithVerifySessionsDefaultResponse\n    | GetLivenessWithVerifySession200Response\n    | GetLivenessWithVerifySessionDefaultResponse\n    | DeleteLivenessWithVerifySession200Response\n    | DeleteLivenessWithVerifySessionDefaultResponse\n    | ListLivenessWithVerifySessionAuditEntries200Response\n    | ListLivenessWithVerifySessionAuditEntriesDefaultResponse,\n): response is\n  | CreateLivenessSessionDefaultResponse\n  | ListLivenessSessionsDefaultResponse\n  | GetLivenessSessionDefaultResponse\n  | DeleteLivenessSessionDefaultResponse\n  | ListLivenessSessionAuditEntriesDefaultResponse\n  | CreateLivenessWithVerifySessionByJsonDefaultResponse\n  | ListLivenessWithVerifySessionsDefaultResponse\n  | GetLivenessWithVerifySessionDefaultResponse\n  | DeleteLivenessWithVerifySessionDefaultResponse\n  | ListLivenessWithVerifySessionAuditEntriesDefaultResponse {\n  const lroOriginal = response.headers[\"x-ms-original-url\"];\n  const url = new URL(lroOriginal ?? response.request.url);\n  const method = response.request.method;\n  let pathDetails = responseMap[`${method} ${url.pathname}`];\n  if (!pathDetails) {\n    pathDetails = getParametrizedPathSuccess(method, url.pathname);\n  }\n  return !pathDetails.includes(response.status);\n}\n\nfunction getParametrizedPathSuccess(method: string, path: string): string[] {\n  const pathParts = path.split(\"/\");\n\n  // Traverse list to match the longest candidate\n  // matchedLen: the length of candidate path\n  // matchedValue: the matched status code array\n  let matchedLen = -1,\n    matchedValue: string[] = [];\n\n  // Iterate the responseMap to find a match\n  for (const [key, value] of Object.entries(responseMap)) {\n    // Extracting the path from the map key which is in format\n    // GET /path/foo\n    if (!key.startsWith(method)) {\n      continue;\n    }\n    const candidatePath = getPathFromMapKey(key);\n    // Get each part of the url path\n    const candidateParts = candidatePath.split(\"/\");\n\n    // track if we have found a match to return the values found.\n    let found = true;\n    for (\n      let i = candidateParts.length - 1, j = pathParts.length - 1;\n      i >= 1 && j >= 1;\n      i--, j--\n    ) {\n      if (\n        candidateParts[i]?.startsWith(\"{\") &&\n        candidateParts[i]?.indexOf(\"}\") !== -1\n      ) {\n        const start = candidateParts[i]!.indexOf(\"}\") + 1,\n          end = candidateParts[i]?.length;\n        // If the current part of the candidate is a \"template\" part\n        // Try to use the suffix of pattern to match the path\n        // {guid} ==> $\n        // {guid}:export ==> :export$\n        const isMatched = new RegExp(\n          `${candidateParts[i]?.slice(start, end)}`,\n        ).test(pathParts[j] || \"\");\n\n        if (!isMatched) {\n          found = false;\n          break;\n        }\n        continue;\n      }\n\n      // If the candidate part is not a template and\n      // the parts don't match mark the candidate as not found\n      // to move on with the next candidate path.\n      if (candidateParts[i] !== pathParts[j]) {\n        found = false;\n        break;\n      }\n    }\n\n    // We finished evaluating the current candidate parts\n    // Update the matched value if and only if we found the longer pattern\n    if (found && candidatePath.length > matchedLen) {\n      matchedLen = candidatePath.length;\n      matchedValue = value;\n    }\n  }\n\n  return matchedValue;\n}\n\nfunction getPathFromMapKey(mapKey: string): string {\n  const pathStart = mapKey.indexOf(\"/\");\n  return mapKey.slice(pathStart);\n}\n"]}