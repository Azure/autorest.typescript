{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/models/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/** Data for creating liveness session. */\nexport interface LivenessSessionCreationContent {\n  /** Device Correlation Id to use for linking multiple sessions together. */\n  deviceCorrelationId: string;\n  /** Session length in seconds. Range is 60 to 86400 seconds. */\n  authTokenTimeToLiveInSeconds?: number;\n  /** The operation mode for the liveness modal. */\n  livenessOperationMode: string;\n}\n\n/** Response of liveness session creation. */\nexport interface LivenessSessionCreationResult {\n  /** Unique ID to reference this session. */\n  sessionId: string;\n  /** Authorization token for use by the client application */\n  authToken: string;\n}\n\n/** Session result of detect liveness. */\nexport interface LivenessSession {\n  /** Device Correlation Id to use for linking multiple sessions together. */\n  deviceCorrelationId: string;\n  /** Session length in seconds. Range is 60 to 86400 seconds. */\n  authTokenTimeToLiveInSeconds?: number;\n  /** The operation mode for the liveness modal. */\n  livenessOperationMode: string;\n  /** Unique ID to reference this session. */\n  readonly id: string;\n  /** Session creation time in millisecond from epoch. */\n  createdDateTime: Date;\n  /** Session started time from session auth token. */\n  sessionStartDateTime?: Date;\n  /** Whether or not the session is expired. */\n  sessionExpired: boolean;\n  /** The session status. */\n  status: SessionStatus;\n  /** The last result of session. */\n  result?: LivenessSessionAuditEntry;\n}\n\n/** Session status. */\n/** \"NotStarted\", \"Started\", \"ResultAvailable\" */\nexport type SessionStatus = string;\n\n/** Audit entry for a request in session. */\nexport interface LivenessSessionAuditEntry {\n  /** ID of this audit entry. */\n  readonly id: number;\n  /** Session ID of this audit entry. */\n  sessionId: string;\n  /** Request ID in the request header. */\n  requestId: string;\n  /** Client request ID in the request header. */\n  clientRequestId: string;\n  /** The UTC date time of the request. */\n  receivedDateTime: Date;\n  /** The request of this entry. */\n  request: SessionAuditEntryRequestInfo;\n  /** The response of this entry. */\n  response: SessionAuditEntryResponseInfo;\n  /** The digest of the request body. */\n  digest: string;\n}\n\n/** Audit entry for a request in the session. */\nexport interface SessionAuditEntryRequestInfo {\n  /** The URL of the request. */\n  url: string;\n  /** The HTTP method of the request. */\n  method: string;\n  /** The length of the request body in bytes. */\n  contentLength?: number;\n  /** The content type of the request. */\n  contentType: string;\n  /** The user agent of the request. */\n  userAgent?: string;\n}\n\n/** Audit entry for a response in the session. */\nexport interface SessionAuditEntryResponseInfo {\n  /** The response body. */\n  body: Record<string, unknown>;\n  /** The HTTP status code of the request. */\n  statusCode: number;\n  /** The latency of the request. */\n  latencyInMilliseconds: number;\n}\n\n/** Session data returned for enumeration. */\nexport interface LivenessSessionItem {\n  /** Device Correlation Id to use for linking multiple sessions together. */\n  deviceCorrelationId: string;\n  /** Session length in seconds. Range is 60 to 86400 seconds. */\n  authTokenTimeToLiveInSeconds?: number;\n  /** The operation mode for the liveness modal. */\n  livenessOperationMode: string;\n  /** Unique ID to reference this session. */\n  readonly id: string;\n  /** Session creation time in millisecond from epoch. */\n  createdDateTime: Date;\n  /** Session started time from session auth token. */\n  sessionStartDateTime?: Date;\n  /** Whether or not the session is expired. */\n  sessionExpired: boolean;\n}\n\n/** Request of liveness with verify session creation. */\nexport interface LivenessWithVerifySessionCreationContent {\n  /** The json for creating liveness session. */\n  parameters: LivenessSessionCreationContent;\n  /** The image stream for verify. */\n  verifyImage: Uint8Array;\n}\n\n/** Session result of detect liveness with verify. */\nexport interface LivenessWithVerifySession {\n  /** Device Correlation Id to use for linking multiple sessions together. */\n  deviceCorrelationId: string;\n  /** Session length in seconds. Range is 60 to 86400 seconds. */\n  authTokenTimeToLiveInSeconds?: number;\n  /** The operation mode for the liveness modal. */\n  livenessOperationMode: string;\n  /** Unique ID to reference this session. */\n  readonly id: string;\n  /** Session creation time in millisecond from epoch. */\n  createdDateTime: Date;\n  /** Session started time from session auth token. */\n  sessionStartDateTime?: Date;\n  /** Whether or not the session is expired. */\n  sessionExpired: boolean;\n  /** The session status. */\n  status: SessionStatus;\n  /** The last result of session. */\n  result?: LivenessWithVerifySessionAuditEntry;\n}\n\n/** Audit entry for a request in session. */\nexport interface LivenessWithVerifySessionAuditEntry {\n  /** ID of this audit entry. */\n  readonly id: number;\n  /** Session ID of this audit entry. */\n  sessionId: string;\n  /** Request ID in the request header. */\n  requestId: string;\n  /** Client request ID in the request header. */\n  clientRequestId: string;\n  /** The UTC date time of the request. */\n  receivedDateTime: Date;\n  /** The request of this entry. */\n  request: SessionAuditEntryRequestInfo;\n  /** The response of this entry. */\n  response: SessionAuditEntryResponseInfo;\n  /** The digest of the request body. */\n  digest: string;\n}\n"]}