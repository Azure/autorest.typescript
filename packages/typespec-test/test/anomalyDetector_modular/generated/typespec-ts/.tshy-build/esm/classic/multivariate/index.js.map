{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/multivariate/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAWlC,OAAO,EACL,mCAAmC,EACnC,sBAAsB,EACtB,sBAAsB,EACtB,uBAAuB,EACvB,oBAAoB,EACpB,8BAA8B,EAC9B,6BAA6B,GAC9B,MAAM,iCAAiC,CAAC;AA4CzC,MAAM,UAAU,eAAe,CAAC,OAA+B;IAC7D,OAAO;QACL,mCAAmC,EAAE,CACnC,QAAgB,EAChB,OAAgE,EAChE,EAAE,CAAC,mCAAmC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;QACpE,sBAAsB,EAAE,CACtB,SAAgC,EAChC,OAAmD,EACnD,EAAE,CAAC,sBAAsB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;QACxD,sBAAsB,EAAE,CACtB,OAAmD,EACnD,EAAE,CAAC,sBAAsB,CAAC,OAAO,EAAE,OAAO,CAAC;QAC7C,uBAAuB,EAAE,CACvB,OAAe,EACf,OAAoD,EACpD,EAAE,CAAC,uBAAuB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACvD,oBAAoB,EAAE,CACpB,OAAe,EACf,OAAiD,EACjD,EAAE,CAAC,oBAAoB,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACpD,8BAA8B,EAAE,CAC9B,OAAe,EACf,OAAuD,EACvD,OAA2D,EAC3D,EAAE,CAAC,8BAA8B,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;QACvE,6BAA6B,EAAE,CAC7B,OAAe,EACf,OAAsD,EACtD,OAA0D,EAC1D,EAAE,CAAC,6BAA6B,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;KACvE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,yBAAyB,CACvC,OAA+B;IAE/B,OAAO;QACL,GAAG,eAAe,CAAC,OAAO,CAAC;KAC5B,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AnomalyDetectorContext } from \"../../api/AnomalyDetectorContext.js\";\nimport {\n  MultivariateMultivariateDetectionResult,\n  MultivariateMultivariateBatchDetectionOptions,\n  MultivariateModelInfo,\n  MultivariateAnomalyDetectionModel,\n  MultivariateMultivariateLastDetectionOptions,\n  MultivariateMultivariateLastDetectionResult,\n} from \"../../models/models.js\";\nimport {\n  getMultivariateBatchDetectionResult,\n  trainMultivariateModel,\n  listMultivariateModels,\n  deleteMultivariateModel,\n  getMultivariateModel,\n  detectMultivariateBatchAnomaly,\n  detectMultivariateLastAnomaly,\n} from \"../../api/multivariate/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport {\n  MultivariateGetMultivariateBatchDetectionResultOptions,\n  MultivariateTrainMultivariateModelOptions,\n  MultivariateListMultivariateModelsOptions,\n  MultivariateDeleteMultivariateModelOptions,\n  MultivariateGetMultivariateModelOptions,\n  MultivariateDetectMultivariateBatchAnomalyOptions,\n  MultivariateDetectMultivariateLastAnomalyOptions,\n} from \"../../models/options.js\";\n\nexport interface MultivariateOperations {\n  getMultivariateBatchDetectionResult: (\n    resultId: string,\n    options?: MultivariateGetMultivariateBatchDetectionResultOptions,\n  ) => Promise<MultivariateMultivariateDetectionResult>;\n  trainMultivariateModel: (\n    modelInfo: MultivariateModelInfo,\n    options?: MultivariateTrainMultivariateModelOptions,\n  ) => Promise<MultivariateAnomalyDetectionModel>;\n  listMultivariateModels: (\n    options?: MultivariateListMultivariateModelsOptions,\n  ) => PagedAsyncIterableIterator<MultivariateAnomalyDetectionModel>;\n  deleteMultivariateModel: (\n    modelId: string,\n    options?: MultivariateDeleteMultivariateModelOptions,\n  ) => Promise<void>;\n  getMultivariateModel: (\n    modelId: string,\n    options?: MultivariateGetMultivariateModelOptions,\n  ) => Promise<MultivariateAnomalyDetectionModel>;\n  detectMultivariateBatchAnomaly: (\n    modelId: string,\n    options?: MultivariateMultivariateBatchDetectionOptions,\n    options?: MultivariateDetectMultivariateBatchAnomalyOptions,\n  ) => Promise<MultivariateMultivariateDetectionResult>;\n  detectMultivariateLastAnomaly: (\n    modelId: string,\n    options?: MultivariateMultivariateLastDetectionOptions,\n    options?: MultivariateDetectMultivariateLastAnomalyOptions,\n  ) => Promise<MultivariateMultivariateLastDetectionResult>;\n}\n\nexport function getMultivariate(context: AnomalyDetectorContext) {\n  return {\n    getMultivariateBatchDetectionResult: (\n      resultId: string,\n      options?: MultivariateGetMultivariateBatchDetectionResultOptions,\n    ) => getMultivariateBatchDetectionResult(context, resultId, options),\n    trainMultivariateModel: (\n      modelInfo: MultivariateModelInfo,\n      options?: MultivariateTrainMultivariateModelOptions,\n    ) => trainMultivariateModel(context, modelInfo, options),\n    listMultivariateModels: (\n      options?: MultivariateListMultivariateModelsOptions,\n    ) => listMultivariateModels(context, options),\n    deleteMultivariateModel: (\n      modelId: string,\n      options?: MultivariateDeleteMultivariateModelOptions,\n    ) => deleteMultivariateModel(context, modelId, options),\n    getMultivariateModel: (\n      modelId: string,\n      options?: MultivariateGetMultivariateModelOptions,\n    ) => getMultivariateModel(context, modelId, options),\n    detectMultivariateBatchAnomaly: (\n      modelId: string,\n      options?: MultivariateMultivariateBatchDetectionOptions,\n      options?: MultivariateDetectMultivariateBatchAnomalyOptions,\n    ) => detectMultivariateBatchAnomaly(context, modelId, options, options),\n    detectMultivariateLastAnomaly: (\n      modelId: string,\n      options?: MultivariateMultivariateLastDetectionOptions,\n      options?: MultivariateDetectMultivariateLastAnomalyOptions,\n    ) => detectMultivariateLastAnomaly(context, modelId, options, options),\n  };\n}\n\nexport function getMultivariateOperations(\n  context: AnomalyDetectorContext,\n): MultivariateOperations {\n  return {\n    ...getMultivariate(context),\n  };\n}\n"]}