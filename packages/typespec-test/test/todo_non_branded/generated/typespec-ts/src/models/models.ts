// Licensed under the MIT license.

import {
  TodoItem as TodoItemRest,
  TodoLabelRecord as TodoLabelRecordRest,
  TodoFileAttachment as TodoFileAttachmentRest,
  TodoUrlAttachment as TodoUrlAttachmentRest,
  TodoItemPatch as TodoItemPatchRest,
  User as UserRest,
} from "../rest/index.js";
import { uint8ArrayToString } from "@typespec/ts-http-runtime";

export interface TodoPage {
  /** The items in the page */
  items: TodoItem[];
  pagination: {
    pageSize: number;
    totalSize: number;
    prevLink?: string;
    nextLink?: string;
  };
}

export interface TodoItem {
  /** The item's unique id */
  readonly id: number;
  /** The item's title */
  title: string;
  /** User that created the todo */
  readonly createdBy: number;
  /** User that the todo is assigned to */
  assignedTo?: number;
  /** A longer description of the todo item in markdown format */
  description?: string;
  /** The status of the todo item */
  status: "NotStarted" | "InProgress" | "Completed";
  /** When the todo item was created. */
  readonly createdAt: Date;
  /** When the todo item was last updated */
  readonly updatedAt: Date;
  /** When the todo item was makred as completed */
  readonly completedAt?: Date;
  labels?: TodoLabels;
  dummy?: string;
}

export function todoItemSerializer(item: TodoItem): TodoItemRest {
  return {
    title: item["title"],
    assignedTo: item["assignedTo"],
    description: item["description"],
    status: item["status"],
    labels: item["labels"],
    _dummy: item["dummy"],
  };
}

export interface TodoLabelRecord {
  name: string;
  color?: string;
}

export function todoLabelRecordSerializer(
  item: TodoLabelRecord,
): TodoLabelRecordRest {
  return {
    name: item["name"],
    color: item["color"],
  };
}

export interface ApiError {
  /** A machine readable error code */
  code: string;
  /** A human readable message */
  message: string;
}

/** Something is wrong with you. */
export interface Standard4XXResponse extends ApiError {}

/** Something is wrong with me. */
export interface Standard5XXResponse extends ApiError {}

export interface TodoFileAttachment {
  /** The file name of the attachment */
  filename: string;
  /** The media type of the attachment */
  mediaType: string;
  /** The contents of the file */
  contents: Uint8Array;
}

export function todoFileAttachmentSerializer(
  item: TodoFileAttachment,
): TodoFileAttachmentRest {
  return {
    filename: item["filename"],
    mediaType: item["mediaType"],
    contents: uint8ArrayToString(item["contents"], "base64"),
  };
}

export interface TodoUrlAttachment {
  /** A description of the URL */
  description: string;
  /** The url */
  url: string;
}

export function todoUrlAttachmentSerializer(
  item: TodoUrlAttachment,
): TodoUrlAttachmentRest {
  return {
    description: item["description"],
    url: item["url"],
  };
}

export interface InvalidTodoItem extends ApiError {}

export interface TodoItemPatch {
  /** The item's title */
  title?: string;
  /** User that the todo is assigned to */
  assignedTo?: number | null;
  /** A longer description of the todo item in markdown format */
  description?: string | null;
  /** The status of the todo item */
  status?: "NotStarted" | "InProgress" | "Completed";
}

export function todoItemPatchSerializer(
  item: TodoItemPatch,
): TodoItemPatchRest {
  return {
    title: item["title"],
    assignedTo: item["assignedTo"],
    description: item["description"],
    status: item["status"],
  };
}

export interface User {
  /** An autogenerated unique id for the user */
  readonly id: number;
  /** The user's username */
  username: string;
  /** The user's email address */
  email: string;
  /**
   * The user's password, provided when creating a user
   * but is otherwise not visible (and hashed by the backend)
   */
  password: string;
  /** Whether the user is validated. Never visible to the API. */
  validated: boolean;
}

export function userSerializer(item: User): UserRest {
  return {
    username: item["username"],
    email: item["email"],
    password: item["password"],
    validated: item["validated"],
  };
}

/** The user already exists */
export interface UserExistsResponse extends ApiError {
  code: "user-exists";
}

/** The user is invalid (e.g. forgot to enter email address) */
export interface InvalidUserResponse extends ApiError {
  code: "invalid-user";
}

/** Alias for TodoLabels */
export type TodoLabels =
  | string
  | string[]
  | TodoLabelRecord
  | TodoLabelRecord[];
/** Alias for TodoAttachment */
export type TodoAttachment = TodoFileAttachment | TodoUrlAttachment;
