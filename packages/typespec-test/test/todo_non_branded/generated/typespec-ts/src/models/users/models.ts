// Licensed under the MIT License.

import { ApiError } from "../models.js";

/** model interface UserCreatedResponse */
export interface UserCreatedResponse {
  /** An autogenerated unique id for the user */
  readonly id: number;
  /** The user's username */
  username: string;
  /** The user's email address */
  email: string;
  /**
   * The user's password, provided when creating a user
   * but is otherwise not visible (and hashed by the backend)
   */
  password: string;
  /** The token to use to construct the validate email address url */
  token: string;
}

/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
export function userCreatedResponseDeserializer(
  item: any,
): UserCreatedResponse {
  return {
    id: item["id"],
    username: item["username"],
    email: item["email"],
    password: item["password"],
    token: item["token"],
  };
}
/* eslint-enable @typescript-eslint/explicit-module-boundary-types */
/** The user already exists */
export interface UserExistsResponse extends ApiError {
  code: "user-exists";
}

/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
export function userExistsResponseDeserializer(item: any): UserExistsResponse {
  return {
    code: item["code"],
    message: item["message"],
  };
}
/* eslint-enable @typescript-eslint/explicit-module-boundary-types */
/** The user is invalid (e.g. forgot to enter email address) */
export interface InvalidUserResponse extends ApiError {
  code: "invalid-user";
}

/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
export function invalidUserResponseDeserializer(
  item: any,
): InvalidUserResponse {
  return {
    code: item["code"],
    message: item["message"],
  };
}
/* eslint-enable @typescript-eslint/explicit-module-boundary-types */
