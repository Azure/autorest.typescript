{"version":3,"file":"parametrizedHostClient.js","sourceRoot":"","sources":["../../../src/rest/parametrizedHostClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,SAAS,EAAiB,MAAM,yBAAyB,CAAC;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,cAAc,CAAC;AAWtC;;;;GAIG;AACH,MAAM,CAAC,OAAO,UAAU,YAAY,CAClC,WAA4B,EAC5B,UAA0C,EAAE;IAE5C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,KAAK,CAAC;IACnC,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,KAAK,CAAC;IAC7C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC;IACvC,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC;IAC9C,MAAM,WAAW,GACf,OAAO,CAAC,QAAQ;QAChB,OAAO,CAAC,OAAO;QACf,GAAG,IAAI,IAAI,SAAS,IAAI,KAAK,QAAQ,UAAU,EAAE,CAAC;IAEpD,MAAM,aAAa,GAAG,8CAA8C,CAAC;IACrE,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;QAClE,CAAC,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,aAAa,EAAE;QAChE,CAAC,CAAC,GAAG,aAAa,EAAE,CAAC;IACzB,OAAO,GAAG;QACR,GAAG,OAAO;QACV,gBAAgB,EAAE;YAChB,eAAe;SAChB;QACD,cAAc,EAAE;YACd,MAAM,EAAE,OAAO,CAAC,cAAc,EAAE,MAAM,IAAI,MAAM,CAAC,IAAI;SACtD;QACD,WAAW,EAAE;YACX,MAAM,EAAE,OAAO,CAAC,WAAW,EAAE,MAAM,IAAI;gBACrC,8CAA8C;aAC/C;SACF;KACF,CAAC;IAEF,MAAM,MAAM,GAAG,SAAS,CACtB,WAAW,EACX,WAAW,EACX,OAAO,CACmB,CAAC;IAE7B,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAE3D,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getClient, ClientOptions } from \"@azure-rest/core-client\";\nimport { logger } from \"../logger.js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { ParametrizedHostContext } from \"./clientDefinitions.js\";\n\nexport interface ParametrizedHostContextOptions extends ClientOptions {\n  host?: string;\n  subdomain?: string;\n  sufix?: string;\n  apiVersion?: string;\n}\n\n/**\n * Initialize a new instance of `ParametrizedHostContext`\n * @param credentials - uniquely identify client credential\n * @param options - the parameter for all optional parameters\n */\nexport default function createClient(\n  credentials: TokenCredential,\n  options: ParametrizedHostContextOptions = {},\n): ParametrizedHostContext {\n  const host = options.host ?? \"one\";\n  const subdomain = options.subdomain ?? \"two\";\n  const sufix = options.sufix ?? \"three\";\n  const apiVersion = options.apiVersion ?? \"v1\";\n  const endpointUrl =\n    options.endpoint ??\n    options.baseUrl ??\n    `${host}.${subdomain}.${sufix}.com/${apiVersion}`;\n\n  const userAgentInfo = `azsdk-js-parametrized-host-rest/1.0.0-beta.1`;\n  const userAgentPrefix =\n    options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n      ? `${options.userAgentOptions.userAgentPrefix} ${userAgentInfo}`\n      : `${userAgentInfo}`;\n  options = {\n    ...options,\n    userAgentOptions: {\n      userAgentPrefix,\n    },\n    loggingOptions: {\n      logger: options.loggingOptions?.logger ?? logger.info,\n    },\n    credentials: {\n      scopes: options.credentials?.scopes ?? [\n        \"https://parametrized-host.azure.com/.default\",\n      ],\n    },\n  };\n\n  const client = getClient(\n    endpointUrl,\n    credentials,\n    options,\n  ) as ParametrizedHostContext;\n\n  client.pipeline.removePolicy({ name: \"ApiVersionPolicy\" });\n\n  return client;\n}\n"]}