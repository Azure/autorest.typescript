{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/confidentialLedger/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EAAE,eAAe,EAAE,MAAM,uCAAuC,CAAC;AAUxE,MAAM,UAAU,qBAAqB,CAAC,OAAgC;IACpE,OAAO;QACL,eAAe,EAAE,CACf,UAAkB,EAClB,OAAkD,EAClD,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;KACnD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,+BAA+B,CAC7C,OAAgC;IAEhC,OAAO;QACL,GAAG,qBAAqB,CAAC,OAAO,CAAC;KAClC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ParametrizedHostContext } from \"../../api/ParametrizedHostContext.js\";\nimport { Collection } from \"../../models/models.js\";\nimport { listCollections } from \"../../api/confidentialLedger/index.js\";\nimport { ConfidentialLedgerListCollectionsOptions } from \"../../models/options.js\";\n\nexport interface ConfidentialLedgerOperations {\n  listCollections: (\n    apiVersion: string,\n    options?: ConfidentialLedgerListCollectionsOptions,\n  ) => Promise<Collection[]>;\n}\n\nexport function getConfidentialLedger(context: ParametrizedHostContext) {\n  return {\n    listCollections: (\n      apiVersion: string,\n      options?: ConfidentialLedgerListCollectionsOptions,\n    ) => listCollections(context, apiVersion, options),\n  };\n}\n\nexport function getConfidentialLedgerOperations(\n  context: ParametrizedHostContext,\n): ConfidentialLedgerOperations {\n  return {\n    ...getConfidentialLedger(context),\n  };\n}\n"]}