import { PollerLike, OperationState } from "@azure/core-lro";
import { WorkloadNetworkVMGroup, _WorkloadNetworkVMGroupsList } from "../../models/models.js";
import { PagedAsyncIterableIterator } from "../../models/pagingTypes.js";
import { AVSContext as Client, WorkloadNetworkVmGroupsCreate200Response, WorkloadNetworkVmGroupsCreate201Response, WorkloadNetworkVmGroupsCreateDefaultResponse, WorkloadNetworkVmGroupsCreateLogicalResponse, WorkloadNetworkVmGroupsDelete200Response, WorkloadNetworkVmGroupsDelete202Response, WorkloadNetworkVmGroupsDelete204Response, WorkloadNetworkVmGroupsDeleteDefaultResponse, WorkloadNetworkVmGroupsDeleteLogicalResponse, WorkloadNetworkVmGroupsGet200Response, WorkloadNetworkVmGroupsGetDefaultResponse, WorkloadNetworkVmGroupsListByWorkloadNetwork200Response, WorkloadNetworkVmGroupsListByWorkloadNetworkDefaultResponse, WorkloadNetworkVmGroupsUpdate200Response, WorkloadNetworkVmGroupsUpdate202Response, WorkloadNetworkVmGroupsUpdateDefaultResponse, WorkloadNetworkVmGroupsUpdateLogicalResponse } from "../../rest/index.js";
import { StreamableMethod } from "@azure-rest/core-client";
import { WorkloadNetworkVmGroupsListByWorkloadNetworkOptionalParams, WorkloadNetworkVmGroupsGetOptionalParams, WorkloadNetworkVmGroupsCreateOptionalParams, WorkloadNetworkVmGroupsUpdateOptionalParams, WorkloadNetworkVmGroupsDeleteOptionalParams } from "../../models/options.js";
export declare function _listByWorkloadNetworkSend(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, options?: WorkloadNetworkVmGroupsListByWorkloadNetworkOptionalParams): StreamableMethod<WorkloadNetworkVmGroupsListByWorkloadNetwork200Response | WorkloadNetworkVmGroupsListByWorkloadNetworkDefaultResponse>;
export declare function _listByWorkloadNetworkDeserialize(result: WorkloadNetworkVmGroupsListByWorkloadNetwork200Response | WorkloadNetworkVmGroupsListByWorkloadNetworkDefaultResponse): Promise<_WorkloadNetworkVMGroupsList>;
/** List WorkloadNetworkVMGroup resources by WorkloadNetwork */
export declare function listByWorkloadNetwork(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, options?: WorkloadNetworkVmGroupsListByWorkloadNetworkOptionalParams): PagedAsyncIterableIterator<WorkloadNetworkVMGroup>;
export declare function _getSend(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, options?: WorkloadNetworkVmGroupsGetOptionalParams): StreamableMethod<WorkloadNetworkVmGroupsGet200Response | WorkloadNetworkVmGroupsGetDefaultResponse>;
export declare function _getDeserialize(result: WorkloadNetworkVmGroupsGet200Response | WorkloadNetworkVmGroupsGetDefaultResponse): Promise<WorkloadNetworkVMGroup>;
/** Get a WorkloadNetworkVMGroup */
export declare function get(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, options?: WorkloadNetworkVmGroupsGetOptionalParams): Promise<WorkloadNetworkVMGroup>;
export declare function _createSend(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, resource: WorkloadNetworkVMGroup, options?: WorkloadNetworkVmGroupsCreateOptionalParams): StreamableMethod<WorkloadNetworkVmGroupsCreate200Response | WorkloadNetworkVmGroupsCreate201Response | WorkloadNetworkVmGroupsCreateDefaultResponse | WorkloadNetworkVmGroupsCreateLogicalResponse>;
export declare function _createDeserialize(result: WorkloadNetworkVmGroupsCreate200Response | WorkloadNetworkVmGroupsCreate201Response | WorkloadNetworkVmGroupsCreateDefaultResponse | WorkloadNetworkVmGroupsCreateLogicalResponse): Promise<WorkloadNetworkVMGroup>;
/** Create a WorkloadNetworkVMGroup */
export declare function create(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, resource: WorkloadNetworkVMGroup, options?: WorkloadNetworkVmGroupsCreateOptionalParams): PollerLike<OperationState<WorkloadNetworkVMGroup>, WorkloadNetworkVMGroup>;
export declare function _updateSend(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: WorkloadNetworkVMGroup, options?: WorkloadNetworkVmGroupsUpdateOptionalParams): StreamableMethod<WorkloadNetworkVmGroupsUpdate200Response | WorkloadNetworkVmGroupsUpdate202Response | WorkloadNetworkVmGroupsUpdateDefaultResponse | WorkloadNetworkVmGroupsUpdateLogicalResponse>;
export declare function _updateDeserialize(result: WorkloadNetworkVmGroupsUpdate200Response | WorkloadNetworkVmGroupsUpdate202Response | WorkloadNetworkVmGroupsUpdateDefaultResponse | WorkloadNetworkVmGroupsUpdateLogicalResponse): Promise<WorkloadNetworkVMGroup>;
/** Update a WorkloadNetworkVMGroup */
export declare function update(context: Client, subscriptionId: string, resourceGroupName: string, privateCloudName: string, vmGroupId: string, workloadNetworkVMGroup: WorkloadNetworkVMGroup, options?: WorkloadNetworkVmGroupsUpdateOptionalParams): PollerLike<OperationState<WorkloadNetworkVMGroup>, WorkloadNetworkVMGroup>;
export declare function _$deleteSend(context: Client, subscriptionId: string, resourceGroupName: string, vmGroupId: string, privateCloudName: string, options?: WorkloadNetworkVmGroupsDeleteOptionalParams): StreamableMethod<WorkloadNetworkVmGroupsDelete200Response | WorkloadNetworkVmGroupsDelete202Response | WorkloadNetworkVmGroupsDelete204Response | WorkloadNetworkVmGroupsDeleteDefaultResponse | WorkloadNetworkVmGroupsDeleteLogicalResponse>;
export declare function _$deleteDeserialize(result: WorkloadNetworkVmGroupsDelete200Response | WorkloadNetworkVmGroupsDelete202Response | WorkloadNetworkVmGroupsDelete204Response | WorkloadNetworkVmGroupsDeleteDefaultResponse | WorkloadNetworkVmGroupsDeleteLogicalResponse): Promise<void>;
/** Delete a WorkloadNetworkVMGroup */
/**
 *  @fixme delete is a reserved word that cannot be used as an operation name.
 *         Please add @clientName("clientName") or @clientName("<JS-Specific-Name>", "javascript")
 *         to the operation to override the generated name.
 */
export declare function $delete(context: Client, subscriptionId: string, resourceGroupName: string, vmGroupId: string, privateCloudName: string, options?: WorkloadNetworkVmGroupsDeleteOptionalParams): PollerLike<OperationState<void>, void>;
//# sourceMappingURL=index.d.ts.map