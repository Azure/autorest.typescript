{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/cloudLinks/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,kBAAkB,EAClB,GAAG,EACH,cAAc,EACd,OAAO,GACR,MAAM,+BAA+B,CAAC;AAyCvC,MAAM,UAAU,aAAa,CAAC,OAAmB;IAC/C,OAAO;QACL,kBAAkB,EAAE,CAClB,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD,EACpD,EAAE,CACF,kBAAkB,CAChB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,aAAqB,EACrB,OAAqC,EACrC,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,OAAO,CACR;QACH,cAAc,EAAE,CACd,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,aAAqB,EACrB,SAAoB,EACpB,OAAgD,EAChD,EAAE,CACF,cAAc,CACZ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,SAAS,EACT,OAAO,CACR;QACH,MAAM,EAAE,CACN,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,aAAqB,EACrB,OAAwC,EACxC,EAAE,CACF,OAAO,CACL,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,OAAmB;IAEnB,OAAO;QACL,GAAG,aAAa,CAAC,OAAO,CAAC;KAC1B,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { CloudLink } from \"../../models/models.js\";\nimport {\n  listByPrivateCloud,\n  get,\n  createOrUpdate,\n  $delete,\n} from \"../../api/cloudLinks/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  CloudLinksListByPrivateCloudOptionalParams,\n  CloudLinksGetOptionalParams,\n  CloudLinksCreateOrUpdateOptionalParams,\n  CloudLinksDeleteOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface CloudLinksOperations {\n  listByPrivateCloud: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: CloudLinksListByPrivateCloudOptionalParams,\n  ) => PagedAsyncIterableIterator<CloudLink>;\n  get: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    cloudLinkName: string,\n    options?: CloudLinksGetOptionalParams,\n  ) => Promise<CloudLink>;\n  createOrUpdate: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    cloudLinkName: string,\n    cloudLink: CloudLink,\n    options?: CloudLinksCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<CloudLink>, CloudLink>;\n  delete: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    cloudLinkName: string,\n    options?: CloudLinksDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n}\n\nexport function getCloudLinks(context: AVSContext) {\n  return {\n    listByPrivateCloud: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: CloudLinksListByPrivateCloudOptionalParams,\n    ) =>\n      listByPrivateCloud(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      cloudLinkName: string,\n      options?: CloudLinksGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        cloudLinkName,\n        options,\n      ),\n    createOrUpdate: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      cloudLinkName: string,\n      cloudLink: CloudLink,\n      options?: CloudLinksCreateOrUpdateOptionalParams,\n    ) =>\n      createOrUpdate(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        cloudLinkName,\n        cloudLink,\n        options,\n      ),\n    delete: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      cloudLinkName: string,\n      options?: CloudLinksDeleteOptionalParams,\n    ) =>\n      $delete(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        cloudLinkName,\n        options,\n      ),\n  };\n}\n\nexport function getCloudLinksOperations(\n  context: AVSContext,\n): CloudLinksOperations {\n  return {\n    ...getCloudLinks(context),\n  };\n}\n"]}