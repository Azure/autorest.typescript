{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/workloadNetworkSegments/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getLongRunningPoller } from \"../pollingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  workloadNetworkSegmentPropertiesSerializer,\n  CreatedByType,\n  WorkloadNetworkSegment,\n  SegmentStatusEnum,\n  _WorkloadNetworkSegmentsList,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { buildPagedAsyncIterator } from \"../pagingHelpers.js\";\nimport {\n  isUnexpected,\n  AVSContext as Client,\n  WorkloadNetworkSegmentsCreate200Response,\n  WorkloadNetworkSegmentsCreate201Response,\n  WorkloadNetworkSegmentsCreateDefaultResponse,\n  WorkloadNetworkSegmentsCreateLogicalResponse,\n  WorkloadNetworkSegmentsDeleteSegment200Response,\n  WorkloadNetworkSegmentsDeleteSegment202Response,\n  WorkloadNetworkSegmentsDeleteSegment204Response,\n  WorkloadNetworkSegmentsDeleteSegmentDefaultResponse,\n  WorkloadNetworkSegmentsDeleteSegmentLogicalResponse,\n  WorkloadNetworkSegmentsGet200Response,\n  WorkloadNetworkSegmentsGetDefaultResponse,\n  WorkloadNetworkSegmentsListByWorkloadNetwork200Response,\n  WorkloadNetworkSegmentsListByWorkloadNetworkDefaultResponse,\n  WorkloadNetworkSegmentsUpdate200Response,\n  WorkloadNetworkSegmentsUpdate202Response,\n  WorkloadNetworkSegmentsUpdateDefaultResponse,\n  WorkloadNetworkSegmentsUpdateLogicalResponse,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@azure-rest/core-client\";\nimport {\n  WorkloadNetworkSegmentsListByWorkloadNetworkOptionalParams,\n  WorkloadNetworkSegmentsGetOptionalParams,\n  WorkloadNetworkSegmentsCreateOptionalParams,\n  WorkloadNetworkSegmentsUpdateOptionalParams,\n  WorkloadNetworkSegmentsDeleteSegmentOptionalParams,\n} from \"../../models/options.js\";\n\nexport function _listByWorkloadNetworkSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: WorkloadNetworkSegmentsListByWorkloadNetworkOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | WorkloadNetworkSegmentsListByWorkloadNetwork200Response\n  | WorkloadNetworkSegmentsListByWorkloadNetworkDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listByWorkloadNetworkDeserialize(\n  result:\n    | WorkloadNetworkSegmentsListByWorkloadNetwork200Response\n    | WorkloadNetworkSegmentsListByWorkloadNetworkDefaultResponse,\n): Promise<_WorkloadNetworkSegmentsList> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => {\n      return {\n        id: p[\"id\"],\n        name: p[\"name\"],\n        type: p[\"type\"],\n        systemData: !p.systemData\n          ? undefined\n          : {\n              createdBy: p.systemData?.[\"createdBy\"],\n              createdByType: p.systemData?.[\"createdByType\"] as CreatedByType,\n              createdAt:\n                p.systemData?.[\"createdAt\"] !== undefined\n                  ? new Date(p.systemData?.[\"createdAt\"])\n                  : undefined,\n              lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n              lastModifiedByType: p.systemData?.[\n                \"lastModifiedByType\"\n              ] as CreatedByType,\n              lastModifiedAt:\n                p.systemData?.[\"lastModifiedAt\"] !== undefined\n                  ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                  : undefined,\n            },\n        properties: !p.properties\n          ? undefined\n          : {\n              displayName: p.properties?.[\"displayName\"],\n              connectedGateway: p.properties?.[\"connectedGateway\"],\n              subnet: !p.properties?.subnet\n                ? undefined\n                : {\n                    dhcpRanges: p.properties?.subnet?.[\"dhcpRanges\"],\n                    gatewayAddress: p.properties?.subnet?.[\"gatewayAddress\"],\n                  },\n              portVif:\n                p.properties?.[\"portVif\"] === undefined\n                  ? p.properties?.[\"portVif\"]\n                  : p.properties?.[\"portVif\"].map((p) => {\n                      return { portName: p[\"portName\"] };\n                    }),\n              status: p.properties?.[\"status\"] as SegmentStatusEnum,\n              provisioningState: p.properties?.[\"provisioningState\"] as any,\n              revision: p.properties?.[\"revision\"],\n            },\n      };\n    }),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List WorkloadNetworkSegment resources by WorkloadNetwork */\nexport function listByWorkloadNetwork(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: WorkloadNetworkSegmentsListByWorkloadNetworkOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<WorkloadNetworkSegment> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByWorkloadNetworkSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    _listByWorkloadNetworkDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  options: WorkloadNetworkSegmentsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | WorkloadNetworkSegmentsGet200Response\n  | WorkloadNetworkSegmentsGetDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      segmentId,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getDeserialize(\n  result:\n    | WorkloadNetworkSegmentsGet200Response\n    | WorkloadNetworkSegmentsGetDefaultResponse,\n): Promise<WorkloadNetworkSegment> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\n            \"createdByType\"\n          ] as CreatedByType,\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\n            \"lastModifiedByType\"\n          ] as CreatedByType,\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          displayName: result.body.properties?.[\"displayName\"],\n          connectedGateway: result.body.properties?.[\"connectedGateway\"],\n          subnet: !result.body.properties?.subnet\n            ? undefined\n            : {\n                dhcpRanges: result.body.properties?.subnet?.[\"dhcpRanges\"],\n                gatewayAddress:\n                  result.body.properties?.subnet?.[\"gatewayAddress\"],\n              },\n          portVif:\n            result.body.properties?.[\"portVif\"] === undefined\n              ? result.body.properties?.[\"portVif\"]\n              : result.body.properties?.[\"portVif\"].map((p) => {\n                  return { portName: p[\"portName\"] };\n                }),\n          status: result.body.properties?.[\"status\"] as SegmentStatusEnum,\n          provisioningState: result.body.properties?.[\n            \"provisioningState\"\n          ] as any,\n          revision: result.body.properties?.[\"revision\"],\n        },\n  };\n}\n\n/** Get a WorkloadNetworkSegment */\nexport async function get(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  options: WorkloadNetworkSegmentsGetOptionalParams = { requestOptions: {} },\n): Promise<WorkloadNetworkSegment> {\n  const result = await _getSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    segmentId,\n    options,\n  );\n  return _getDeserialize(result);\n}\n\nexport function _createSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  workloadNetworkSegment: WorkloadNetworkSegment,\n  options: WorkloadNetworkSegmentsCreateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | WorkloadNetworkSegmentsCreate200Response\n  | WorkloadNetworkSegmentsCreate201Response\n  | WorkloadNetworkSegmentsCreateDefaultResponse\n  | WorkloadNetworkSegmentsCreateLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      segmentId,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        properties: !workloadNetworkSegment.properties\n          ? workloadNetworkSegment.properties\n          : workloadNetworkSegmentPropertiesSerializer(\n              workloadNetworkSegment.properties,\n            ),\n      },\n    });\n}\n\nexport async function _createDeserialize(\n  result:\n    | WorkloadNetworkSegmentsCreate200Response\n    | WorkloadNetworkSegmentsCreate201Response\n    | WorkloadNetworkSegmentsCreateDefaultResponse\n    | WorkloadNetworkSegmentsCreateLogicalResponse,\n): Promise<WorkloadNetworkSegment> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as WorkloadNetworkSegmentsCreateLogicalResponse;\n  return {\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\n            \"createdByType\"\n          ] as CreatedByType,\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\n            \"lastModifiedByType\"\n          ] as CreatedByType,\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          displayName: result.body.properties?.[\"displayName\"],\n          connectedGateway: result.body.properties?.[\"connectedGateway\"],\n          subnet: !result.body.properties?.subnet\n            ? undefined\n            : {\n                dhcpRanges: result.body.properties?.subnet?.[\"dhcpRanges\"],\n                gatewayAddress:\n                  result.body.properties?.subnet?.[\"gatewayAddress\"],\n              },\n          portVif:\n            result.body.properties?.[\"portVif\"] === undefined\n              ? result.body.properties?.[\"portVif\"]\n              : result.body.properties?.[\"portVif\"].map((p) => {\n                  return { portName: p[\"portName\"] };\n                }),\n          status: result.body.properties?.[\"status\"] as SegmentStatusEnum,\n          provisioningState: result.body.properties?.[\n            \"provisioningState\"\n          ] as any,\n          revision: result.body.properties?.[\"revision\"],\n        },\n  };\n}\n\n/** Create a WorkloadNetworkSegment */\nexport function create(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  workloadNetworkSegment: WorkloadNetworkSegment,\n  options: WorkloadNetworkSegmentsCreateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<WorkloadNetworkSegment>, WorkloadNetworkSegment> {\n  return getLongRunningPoller(context, _createDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        segmentId,\n        workloadNetworkSegment,\n        options,\n      ),\n  }) as PollerLike<\n    OperationState<WorkloadNetworkSegment>,\n    WorkloadNetworkSegment\n  >;\n}\n\nexport function _updateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  properties: WorkloadNetworkSegment,\n  options: WorkloadNetworkSegmentsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | WorkloadNetworkSegmentsUpdate200Response\n  | WorkloadNetworkSegmentsUpdate202Response\n  | WorkloadNetworkSegmentsUpdateDefaultResponse\n  | WorkloadNetworkSegmentsUpdateLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      segmentId,\n    )\n    .patch({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        properties: !properties.properties\n          ? properties.properties\n          : workloadNetworkSegmentPropertiesSerializer(properties.properties),\n      },\n    });\n}\n\nexport async function _updateDeserialize(\n  result:\n    | WorkloadNetworkSegmentsUpdate200Response\n    | WorkloadNetworkSegmentsUpdate202Response\n    | WorkloadNetworkSegmentsUpdateDefaultResponse\n    | WorkloadNetworkSegmentsUpdateLogicalResponse,\n): Promise<WorkloadNetworkSegment> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as WorkloadNetworkSegmentsUpdateLogicalResponse;\n  return {\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\n            \"createdByType\"\n          ] as CreatedByType,\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\n            \"lastModifiedByType\"\n          ] as CreatedByType,\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          displayName: result.body.properties?.[\"displayName\"],\n          connectedGateway: result.body.properties?.[\"connectedGateway\"],\n          subnet: !result.body.properties?.subnet\n            ? undefined\n            : {\n                dhcpRanges: result.body.properties?.subnet?.[\"dhcpRanges\"],\n                gatewayAddress:\n                  result.body.properties?.subnet?.[\"gatewayAddress\"],\n              },\n          portVif:\n            result.body.properties?.[\"portVif\"] === undefined\n              ? result.body.properties?.[\"portVif\"]\n              : result.body.properties?.[\"portVif\"].map((p) => {\n                  return { portName: p[\"portName\"] };\n                }),\n          status: result.body.properties?.[\"status\"] as SegmentStatusEnum,\n          provisioningState: result.body.properties?.[\n            \"provisioningState\"\n          ] as any,\n          revision: result.body.properties?.[\"revision\"],\n        },\n  };\n}\n\n/** Update a WorkloadNetworkSegment */\nexport function update(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  properties: WorkloadNetworkSegment,\n  options: WorkloadNetworkSegmentsUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<WorkloadNetworkSegment>, WorkloadNetworkSegment> {\n  return getLongRunningPoller(context, _updateDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _updateSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        segmentId,\n        properties,\n        options,\n      ),\n  }) as PollerLike<\n    OperationState<WorkloadNetworkSegment>,\n    WorkloadNetworkSegment\n  >;\n}\n\nexport function _deleteSegmentSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  options: WorkloadNetworkSegmentsDeleteSegmentOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | WorkloadNetworkSegmentsDeleteSegment200Response\n  | WorkloadNetworkSegmentsDeleteSegment202Response\n  | WorkloadNetworkSegmentsDeleteSegment204Response\n  | WorkloadNetworkSegmentsDeleteSegmentDefaultResponse\n  | WorkloadNetworkSegmentsDeleteSegmentLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      segmentId,\n    )\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteSegmentDeserialize(\n  result:\n    | WorkloadNetworkSegmentsDeleteSegment200Response\n    | WorkloadNetworkSegmentsDeleteSegment202Response\n    | WorkloadNetworkSegmentsDeleteSegment204Response\n    | WorkloadNetworkSegmentsDeleteSegmentDefaultResponse\n    | WorkloadNetworkSegmentsDeleteSegmentLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as WorkloadNetworkSegmentsDeleteSegmentLogicalResponse;\n  return;\n}\n\n/** Delete a WorkloadNetworkSegment */\nexport function deleteSegment(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  segmentId: string,\n  options: WorkloadNetworkSegmentsDeleteSegmentOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _deleteSegmentDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _deleteSegmentSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        segmentId,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n"]}