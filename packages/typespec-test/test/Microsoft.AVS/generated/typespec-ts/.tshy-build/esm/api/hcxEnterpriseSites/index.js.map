{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/hcxEnterpriseSites/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HcxEnterpriseSiteListResult,\n  HcxEnterpriseSite,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { buildPagedAsyncIterator } from \"../pagingHelpers.js\";\nimport {\n  isUnexpected,\n  AVSContext as Client,\n  HcxEnterpriseSitesCreateOrUpdate200Response,\n  HcxEnterpriseSitesCreateOrUpdate201Response,\n  HcxEnterpriseSitesCreateOrUpdateDefaultResponse,\n  HcxEnterpriseSitesDelete200Response,\n  HcxEnterpriseSitesDelete204Response,\n  HcxEnterpriseSitesDeleteDefaultResponse,\n  HcxEnterpriseSitesGet200Response,\n  HcxEnterpriseSitesGetDefaultResponse,\n  HcxEnterpriseSitesListByPrivateCloud200Response,\n  HcxEnterpriseSitesListByPrivateCloudDefaultResponse,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@azure-rest/core-client\";\nimport {\n  HcxEnterpriseSitesListByPrivateCloudOptionalParams,\n  HcxEnterpriseSitesGetOptionalParams,\n  HcxEnterpriseSitesCreateOrUpdateOptionalParams,\n  HcxEnterpriseSitesDeleteOptionalParams,\n} from \"../../models/options.js\";\n\nexport function _listByPrivateCloudSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: HcxEnterpriseSitesListByPrivateCloudOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | HcxEnterpriseSitesListByPrivateCloud200Response\n  | HcxEnterpriseSitesListByPrivateCloudDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listByPrivateCloudDeserialize(\n  result:\n    | HcxEnterpriseSitesListByPrivateCloud200Response\n    | HcxEnterpriseSitesListByPrivateCloudDefaultResponse,\n): Promise<HcxEnterpriseSiteListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      id: p[\"id\"],\n      name: p[\"name\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            provisioningState: p.properties?.[\"provisioningState\"],\n            activationKey: p.properties?.[\"activationKey\"],\n            status: p.properties?.[\"status\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List HcxEnterpriseSite resources by PrivateCloud */\nexport function listByPrivateCloud(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: HcxEnterpriseSitesListByPrivateCloudOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<HcxEnterpriseSite> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByPrivateCloudSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    _listByPrivateCloudDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  options: HcxEnterpriseSitesGetOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  HcxEnterpriseSitesGet200Response | HcxEnterpriseSitesGetDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      hcxEnterpriseSiteName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getDeserialize(\n  result:\n    | HcxEnterpriseSitesGet200Response\n    | HcxEnterpriseSitesGetDefaultResponse,\n): Promise<HcxEnterpriseSite> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n          activationKey: result.body.properties?.[\"activationKey\"],\n          status: result.body.properties?.[\"status\"],\n        },\n  };\n}\n\n/** Get a HcxEnterpriseSite */\nexport async function get(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  options: HcxEnterpriseSitesGetOptionalParams = { requestOptions: {} },\n): Promise<HcxEnterpriseSite> {\n  const result = await _getSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    hcxEnterpriseSiteName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  hcxEnterpriseSite: HcxEnterpriseSite,\n  options: HcxEnterpriseSitesCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | HcxEnterpriseSitesCreateOrUpdate200Response\n  | HcxEnterpriseSitesCreateOrUpdate201Response\n  | HcxEnterpriseSitesCreateOrUpdateDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      hcxEnterpriseSiteName,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      body: { properties: !hcxEnterpriseSite.properties ? undefined : {} },\n    });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result:\n    | HcxEnterpriseSitesCreateOrUpdate200Response\n    | HcxEnterpriseSitesCreateOrUpdate201Response\n    | HcxEnterpriseSitesCreateOrUpdateDefaultResponse,\n): Promise<HcxEnterpriseSite> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n          activationKey: result.body.properties?.[\"activationKey\"],\n          status: result.body.properties?.[\"status\"],\n        },\n  };\n}\n\n/** Create a HcxEnterpriseSite */\nexport async function createOrUpdate(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  hcxEnterpriseSite: HcxEnterpriseSite,\n  options: HcxEnterpriseSitesCreateOrUpdateOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<HcxEnterpriseSite> {\n  const result = await _createOrUpdateSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    hcxEnterpriseSiteName,\n    hcxEnterpriseSite,\n    options,\n  );\n  return _createOrUpdateDeserialize(result);\n}\n\nexport function _$deleteSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  options: HcxEnterpriseSitesDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | HcxEnterpriseSitesDelete200Response\n  | HcxEnterpriseSitesDelete204Response\n  | HcxEnterpriseSitesDeleteDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n      hcxEnterpriseSiteName,\n    )\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(\n  result:\n    | HcxEnterpriseSitesDelete200Response\n    | HcxEnterpriseSitesDelete204Response\n    | HcxEnterpriseSitesDeleteDefaultResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return;\n}\n\n/** Delete a HcxEnterpriseSite */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport async function $delete(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  hcxEnterpriseSiteName: string,\n  options: HcxEnterpriseSitesDeleteOptionalParams = { requestOptions: {} },\n): Promise<void> {\n  const result = await _$deleteSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    hcxEnterpriseSiteName,\n    options,\n  );\n  return _$deleteDeserialize(result);\n}\n"]}