{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/workloadNetworkGateways/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,qBAAqB,EACrB,GAAG,GACJ,MAAM,4CAA4C,CAAC;AAuBpD,MAAM,UAAU,0BAA0B,CAAC,OAAmB;IAC5D,OAAO;QACL,qBAAqB,EAAE,CACrB,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAAoE,EACpE,EAAE,CACF,qBAAqB,CACnB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,SAAiB,EACjB,OAAkD,EAClD,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,SAAS,EACT,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,oCAAoC,CAClD,OAAmB;IAEnB,OAAO;QACL,GAAG,0BAA0B,CAAC,OAAO,CAAC;KACvC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { WorkloadNetworkGateway } from \"../../models/models.js\";\nimport {\n  listByWorkloadNetwork,\n  get,\n} from \"../../api/workloadNetworkGateways/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport {\n  WorkloadNetworkGatewaysListByWorkloadNetworkOptionalParams,\n  WorkloadNetworkGatewaysGetOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface WorkloadNetworkGatewaysOperations {\n  listByWorkloadNetwork: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: WorkloadNetworkGatewaysListByWorkloadNetworkOptionalParams,\n  ) => PagedAsyncIterableIterator<WorkloadNetworkGateway>;\n  get: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    gatewayId: string,\n    options?: WorkloadNetworkGatewaysGetOptionalParams,\n  ) => Promise<WorkloadNetworkGateway>;\n}\n\nexport function getWorkloadNetworkGateways(context: AVSContext) {\n  return {\n    listByWorkloadNetwork: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: WorkloadNetworkGatewaysListByWorkloadNetworkOptionalParams,\n    ) =>\n      listByWorkloadNetwork(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      gatewayId: string,\n      options?: WorkloadNetworkGatewaysGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        gatewayId,\n        options,\n      ),\n  };\n}\n\nexport function getWorkloadNetworkGatewaysOperations(\n  context: AVSContext,\n): WorkloadNetworkGatewaysOperations {\n  return {\n    ...getWorkloadNetworkGateways(context),\n  };\n}\n"]}