{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/workloadNetworks/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,MAAM,qCAAqC,CAAC;AAsB9E,MAAM,UAAU,mBAAmB,CAAC,OAAmB;IACrD,OAAO;QACL,GAAG,EAAE,CACH,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C,EAC3C,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,kBAAkB,EAAE,CAClB,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAA0D,EAC1D,EAAE,CACF,kBAAkB,CAChB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B,CAC3C,OAAmB;IAEnB,OAAO;QACL,GAAG,mBAAmB,CAAC,OAAO,CAAC;KAChC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { WorkloadNetwork } from \"../../models/models.js\";\nimport { get, listByPrivateCloud } from \"../../api/workloadNetworks/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport {\n  WorkloadNetworksGetOptionalParams,\n  WorkloadNetworksListByPrivateCloudOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface WorkloadNetworksOperations {\n  get: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: WorkloadNetworksGetOptionalParams,\n  ) => Promise<WorkloadNetwork>;\n  listByPrivateCloud: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: WorkloadNetworksListByPrivateCloudOptionalParams,\n  ) => PagedAsyncIterableIterator<WorkloadNetwork>;\n}\n\nexport function getWorkloadNetworks(context: AVSContext) {\n  return {\n    get: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: WorkloadNetworksGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    listByPrivateCloud: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: WorkloadNetworksListByPrivateCloudOptionalParams,\n    ) =>\n      listByPrivateCloud(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n  };\n}\n\nexport function getWorkloadNetworksOperations(\n  context: AVSContext,\n): WorkloadNetworksOperations {\n  return {\n    ...getWorkloadNetworks(context),\n  };\n}\n"]}