{"version":3,"file":"pagingTypes.js","sourceRoot":"","sources":["../../../src/models/pagingTypes.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Options for the byPage method\n */\nexport interface PageSettings {\n  /**\n   * A reference to a specific page to start iterating from.\n   */\n  continuationToken?: string;\n}\n\n/**\n * An interface that describes a page of results.\n */\nexport type ContinuablePage<TElement, TPage = TElement[]> = TPage & {\n  /**\n   * The token that keeps track of where to continue the iterator\n   */\n  continuationToken?: string;\n};\n\n/**\n * An interface that allows async iterable iteration both to completion and by page.\n */\nexport interface PagedAsyncIterableIterator<\n  TElement,\n  TPage = TElement[],\n  TPageSettings extends PageSettings = PageSettings,\n> {\n  /**\n   * The next method, part of the iteration protocol\n   */\n  next(): Promise<IteratorResult<TElement>>;\n  /**\n   * The connection to the async iterator, part of the iteration protocol\n   */\n  [Symbol.asyncIterator](): PagedAsyncIterableIterator<\n    TElement,\n    TPage,\n    TPageSettings\n  >;\n  /**\n   * Return an AsyncIterableIterator that works a page at a time\n   */\n  byPage: (\n    settings?: TPageSettings,\n  ) => AsyncIterableIterator<ContinuablePage<TElement, TPage>>;\n}\n\n/**\n * An interface that describes how to communicate with the service.\n */\nexport interface PagedResult<\n  TElement,\n  TPage = TElement[],\n  TPageSettings extends PageSettings = PageSettings,\n> {\n  /**\n   * Link to the first page of results.\n   */\n  firstPageLink?: string;\n  /**\n   * A method that returns a page of results.\n   */\n  getPage: (\n    pageLink?: string,\n  ) => Promise<{ page: TPage; nextPageLink?: string } | undefined>;\n  /**\n   * a function to implement the `byPage` method on the paged async iterator.\n   */\n  byPage?: (\n    settings?: TPageSettings,\n  ) => AsyncIterableIterator<ContinuablePage<TElement, TPage>>;\n\n  /**\n   * A function to extract elements from a page.\n   */\n  toElements?: (page: TPage) => TElement[];\n}\n\n/**\n * Options for the paging helper\n */\nexport interface BuildPagedAsyncIteratorOptions {\n  itemName?: string;\n  nextLinkName?: string;\n}\n"]}