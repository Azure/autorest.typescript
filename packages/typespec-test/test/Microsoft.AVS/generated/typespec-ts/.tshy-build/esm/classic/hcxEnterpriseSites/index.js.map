{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/hcxEnterpriseSites/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,kBAAkB,EAClB,GAAG,EACH,cAAc,EACd,OAAO,GACR,MAAM,uCAAuC,CAAC;AA8C/C,MAAM,UAAU,qBAAqB,CACnC,OAAmB,EACnB,cAAsB;IAEtB,OAAO;QACL,kBAAkB,EAAE,CAClB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4D,EAC5D,EAAE,CACF,kBAAkB,CAChB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,gBAAwB,EACxB,qBAA6B,EAC7B,OAA6C,EAC7C,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,qBAAqB,EACrB,OAAO,CACR;QACH,cAAc,EAAE,CACd,iBAAyB,EACzB,gBAAwB,EACxB,qBAA6B,EAC7B,iBAAoC,EACpC,OAAwD,EACxD,EAAE,CACF,cAAc,CACZ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,qBAAqB,EACrB,iBAAiB,EACjB,OAAO,CACR;QACH,MAAM,EAAE,CACN,iBAAyB,EACzB,gBAAwB,EACxB,qBAA6B,EAC7B,OAAgD,EAChD,EAAE,CACF,OAAO,CACL,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,qBAAqB,EACrB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,+BAA+B,CAC7C,OAAmB,EACnB,cAAsB;IAEtB,OAAO;QACL,GAAG,qBAAqB,CAAC,OAAO,EAAE,cAAc,CAAC;KAClD,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { HcxEnterpriseSite } from \"../../models/models.js\";\nimport {\n  listByPrivateCloud,\n  get,\n  createOrUpdate,\n  $delete,\n} from \"../../api/hcxEnterpriseSites/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport {\n  HcxEnterpriseSitesListByPrivateCloudOptionalParams,\n  HcxEnterpriseSitesGetOptionalParams,\n  HcxEnterpriseSitesCreateOrUpdateOptionalParams,\n  HcxEnterpriseSitesDeleteOptionalParams,\n} from \"../../models/options.js\";\n\n/** Interface representing a HcxEnterpriseSites operations. */\nexport interface HcxEnterpriseSitesOperations {\n  /** List HcxEnterpriseSite resources by PrivateCloud */\n  listByPrivateCloud: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: HcxEnterpriseSitesListByPrivateCloudOptionalParams,\n  ) => PagedAsyncIterableIterator<HcxEnterpriseSite>;\n  /** Get a HcxEnterpriseSite */\n  get: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    hcxEnterpriseSiteName: string,\n    options?: HcxEnterpriseSitesGetOptionalParams,\n  ) => Promise<HcxEnterpriseSite>;\n  /** Create a HcxEnterpriseSite */\n  createOrUpdate: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    hcxEnterpriseSiteName: string,\n    hcxEnterpriseSite: HcxEnterpriseSite,\n    options?: HcxEnterpriseSitesCreateOrUpdateOptionalParams,\n  ) => Promise<HcxEnterpriseSite>;\n  /** Delete a HcxEnterpriseSite */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    hcxEnterpriseSiteName: string,\n    options?: HcxEnterpriseSitesDeleteOptionalParams,\n  ) => Promise<void>;\n}\n\nexport function getHcxEnterpriseSites(\n  context: AVSContext,\n  subscriptionId: string,\n) {\n  return {\n    listByPrivateCloud: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: HcxEnterpriseSitesListByPrivateCloudOptionalParams,\n    ) =>\n      listByPrivateCloud(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      hcxEnterpriseSiteName: string,\n      options?: HcxEnterpriseSitesGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        hcxEnterpriseSiteName,\n        options,\n      ),\n    createOrUpdate: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      hcxEnterpriseSiteName: string,\n      hcxEnterpriseSite: HcxEnterpriseSite,\n      options?: HcxEnterpriseSitesCreateOrUpdateOptionalParams,\n    ) =>\n      createOrUpdate(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        hcxEnterpriseSiteName,\n        hcxEnterpriseSite,\n        options,\n      ),\n    delete: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      hcxEnterpriseSiteName: string,\n      options?: HcxEnterpriseSitesDeleteOptionalParams,\n    ) =>\n      $delete(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        hcxEnterpriseSiteName,\n        options,\n      ),\n  };\n}\n\nexport function getHcxEnterpriseSitesOperations(\n  context: AVSContext,\n  subscriptionId: string,\n): HcxEnterpriseSitesOperations {\n  return {\n    ...getHcxEnterpriseSites(context, subscriptionId),\n  };\n}\n"]}