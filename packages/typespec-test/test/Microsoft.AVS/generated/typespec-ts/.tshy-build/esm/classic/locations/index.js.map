{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/locations/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,sBAAsB,EACtB,sBAAsB,GACvB,MAAM,8BAA8B,CAAC;AAoBtC,MAAM,UAAU,YAAY,CAAC,OAAmB;IAC9C,OAAO;QACL,sBAAsB,EAAE,CACtB,cAAsB,EACtB,QAAgB,EAChB,GAAS,EACT,OAAuD,EACvD,EAAE,CACF,sBAAsB,CAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,CAAC;QACzE,sBAAsB,EAAE,CACtB,cAAsB,EACtB,QAAgB,EAChB,OAAuD,EACvD,EAAE,CAAC,sBAAsB,CAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,CAAC;KACxE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,OAAmB;IAEnB,OAAO;QACL,GAAG,YAAY,CAAC,OAAO,CAAC;KACzB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { Sku, Trial, Quota } from \"../../models/models.js\";\nimport {\n  checkTrialAvailability,\n  checkQuotaAvailability,\n} from \"../../api/locations/index.js\";\nimport {\n  LocationsCheckTrialAvailabilityOptionalParams,\n  LocationsCheckQuotaAvailabilityOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface LocationsOperations {\n  checkTrialAvailability: (\n    subscriptionId: string,\n    location: string,\n    sku?: Sku,\n    options?: LocationsCheckTrialAvailabilityOptionalParams,\n  ) => Promise<Trial>;\n  checkQuotaAvailability: (\n    subscriptionId: string,\n    location: string,\n    options?: LocationsCheckQuotaAvailabilityOptionalParams,\n  ) => Promise<Quota>;\n}\n\nexport function getLocations(context: AVSContext) {\n  return {\n    checkTrialAvailability: (\n      subscriptionId: string,\n      location: string,\n      sku?: Sku,\n      options?: LocationsCheckTrialAvailabilityOptionalParams,\n    ) =>\n      checkTrialAvailability(context, subscriptionId, location, sku, options),\n    checkQuotaAvailability: (\n      subscriptionId: string,\n      location: string,\n      options?: LocationsCheckQuotaAvailabilityOptionalParams,\n    ) => checkQuotaAvailability(context, subscriptionId, location, options),\n  };\n}\n\nexport function getLocationsOperations(\n  context: AVSContext,\n): LocationsOperations {\n  return {\n    ...getLocations(context),\n  };\n}\n"]}