{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/scriptCmdlets/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EAAE,mBAAmB,EAAE,GAAG,EAAE,MAAM,kCAAkC,CAAC;AA0B5E,MAAM,UAAU,gBAAgB,CAAC,OAAmB,EAAE,cAAsB;IAC1E,OAAO;QACL,mBAAmB,EAAE,CACnB,iBAAyB,EACzB,gBAAwB,EACxB,iBAAyB,EACzB,OAAwD,EACxD,EAAE,CACF,mBAAmB,CACjB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwC,EACxC,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,0BAA0B,CACxC,OAAmB,EACnB,cAAsB;IAEtB,OAAO;QACL,GAAG,gBAAgB,CAAC,OAAO,EAAE,cAAc,CAAC;KAC7C,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { ScriptCmdlet } from \"../../models/models.js\";\nimport { listByScriptPackage, get } from \"../../api/scriptCmdlets/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport {\n  ScriptCmdletsListByScriptPackageOptionalParams,\n  ScriptCmdletsGetOptionalParams,\n} from \"../../models/options.js\";\n\n/** Interface representing a ScriptCmdlets operations. */\nexport interface ScriptCmdletsOperations {\n  /** List ScriptCmdlet resources by ScriptPackage */\n  listByScriptPackage: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptPackageName: string,\n    options?: ScriptCmdletsListByScriptPackageOptionalParams,\n  ) => PagedAsyncIterableIterator<ScriptCmdlet>;\n  /** Get a ScriptCmdlet */\n  get: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptPackageName: string,\n    scriptCmdletName: string,\n    options?: ScriptCmdletsGetOptionalParams,\n  ) => Promise<ScriptCmdlet>;\n}\n\nexport function getScriptCmdlets(context: AVSContext, subscriptionId: string) {\n  return {\n    listByScriptPackage: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptPackageName: string,\n      options?: ScriptCmdletsListByScriptPackageOptionalParams,\n    ) =>\n      listByScriptPackage(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptPackageName,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptPackageName: string,\n      scriptCmdletName: string,\n      options?: ScriptCmdletsGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptPackageName,\n        scriptCmdletName,\n        options,\n      ),\n  };\n}\n\nexport function getScriptCmdletsOperations(\n  context: AVSContext,\n  subscriptionId: string,\n): ScriptCmdletsOperations {\n  return {\n    ...getScriptCmdlets(context, subscriptionId),\n  };\n}\n"]}