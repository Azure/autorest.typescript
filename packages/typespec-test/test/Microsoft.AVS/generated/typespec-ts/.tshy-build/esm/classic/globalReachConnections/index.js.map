{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/globalReachConnections/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAIlC,OAAO,EACL,kBAAkB,EAClB,GAAG,EACH,cAAc,EACd,OAAO,GACR,MAAM,2CAA2C,CAAC;AAyCnD,MAAM,UAAU,yBAAyB,CAAC,OAAmB;IAC3D,OAAO;QACL,kBAAkB,EAAE,CAClB,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAAgE,EAChE,EAAE,CACF,kBAAkB,CAChB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,yBAAiC,EACjC,OAAiD,EACjD,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,yBAAyB,EACzB,OAAO,CACR;QACH,cAAc,EAAE,CACd,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,yBAAiC,EACjC,qBAA4C,EAC5C,OAA4D,EAC5D,EAAE,CACF,cAAc,CACZ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,yBAAyB,EACzB,qBAAqB,EACrB,OAAO,CACR;QACH,MAAM,EAAE,CACN,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,yBAAiC,EACjC,OAAoD,EACpD,EAAE,CACF,OAAO,CACL,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,yBAAyB,EACzB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,mCAAmC,CACjD,OAAmB;IAEnB,OAAO;QACL,GAAG,yBAAyB,CAAC,OAAO,CAAC;KACtC,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport { GlobalReachConnection } from \"../../models/models.js\";\nimport {\n  listByPrivateCloud,\n  get,\n  createOrUpdate,\n  $delete,\n} from \"../../api/globalReachConnections/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  GlobalReachConnectionsListByPrivateCloudOptionalParams,\n  GlobalReachConnectionsGetOptionalParams,\n  GlobalReachConnectionsCreateOrUpdateOptionalParams,\n  GlobalReachConnectionsDeleteOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface GlobalReachConnectionsOperations {\n  listByPrivateCloud: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: GlobalReachConnectionsListByPrivateCloudOptionalParams,\n  ) => PagedAsyncIterableIterator<GlobalReachConnection>;\n  get: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    globalReachConnectionName: string,\n    options?: GlobalReachConnectionsGetOptionalParams,\n  ) => Promise<GlobalReachConnection>;\n  createOrUpdate: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    globalReachConnectionName: string,\n    globalReachConnection: GlobalReachConnection,\n    options?: GlobalReachConnectionsCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<GlobalReachConnection>, GlobalReachConnection>;\n  delete: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    globalReachConnectionName: string,\n    options?: GlobalReachConnectionsDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n}\n\nexport function getGlobalReachConnections(context: AVSContext) {\n  return {\n    listByPrivateCloud: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: GlobalReachConnectionsListByPrivateCloudOptionalParams,\n    ) =>\n      listByPrivateCloud(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      globalReachConnectionName: string,\n      options?: GlobalReachConnectionsGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        globalReachConnectionName,\n        options,\n      ),\n    createOrUpdate: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      globalReachConnectionName: string,\n      globalReachConnection: GlobalReachConnection,\n      options?: GlobalReachConnectionsCreateOrUpdateOptionalParams,\n    ) =>\n      createOrUpdate(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        globalReachConnectionName,\n        globalReachConnection,\n        options,\n      ),\n    delete: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      globalReachConnectionName: string,\n      options?: GlobalReachConnectionsDeleteOptionalParams,\n    ) =>\n      $delete(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        globalReachConnectionName,\n        options,\n      ),\n  };\n}\n\nexport function getGlobalReachConnectionsOperations(\n  context: AVSContext,\n): GlobalReachConnectionsOperations {\n  return {\n    ...getGlobalReachConnections(context),\n  };\n}\n"]}