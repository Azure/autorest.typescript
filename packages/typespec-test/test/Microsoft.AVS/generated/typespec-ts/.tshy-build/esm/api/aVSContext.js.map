{"version":3,"file":"aVSContext.js","sourceRoot":"","sources":["../../../src/api/aVSContext.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAKlC,OAAO,SAAS,MAAM,kBAAkB,CAAC;AAUzC,gCAAgC;AAChC,MAAM,UAAU,SAAS,CACvB,UAA2B,EAC3B,UAAmC,EAAE;IAErC,MAAM,iBAAiB,GAAG,OAAO,EAAE,gBAAgB,EAAE,eAAe,CAAC;IACrE,MAAM,eAAe,GAAG,iBAAiB;QACvC,CAAC,CAAC,GAAG,iBAAiB,eAAe;QACrC,CAAC,CAAC,cAAc,CAAC;IAEnB,MAAM,aAAa,GAAG,SAAS,CAAC,UAAU,EAAE;QAC1C,GAAG,OAAO;QACV,gBAAgB,EAAE,EAAE,eAAe,EAAE;KACtC,CAAC,CAAC;IACH,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { ClientOptions } from \"@azure-rest/core-client\";\nimport { AVSContext } from \"../rest/index.js\";\nimport getClient from \"../rest/index.js\";\n\n/** Optional parameters for the client. */\nexport interface AVSClientOptionalParams extends ClientOptions {\n  /** The API version to use for this operation. */\n  apiVersion?: string;\n}\n\nexport { AVSContext } from \"../rest/index.js\";\n\n/** Azure VMware Solution API */\nexport function createAVS(\n  credential: TokenCredential,\n  options: AVSClientOptionalParams = {},\n): AVSContext {\n  const prefixFromOptions = options?.userAgentOptions?.userAgentPrefix;\n  const userAgentPrefix = prefixFromOptions\n    ? `${prefixFromOptions} azsdk-js-api`\n    : \"azsdk-js-api\";\n\n  const clientContext = getClient(credential, {\n    ...options,\n    userAgentOptions: { userAgentPrefix },\n  });\n  return clientContext;\n}\n"]}