{"version":3,"file":"responses.js","sourceRoot":"","sources":["../../../src/rest/responses.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RawHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { HttpResponse } from \"@azure-rest/core-client\";\nimport {\n  OperationListResultOutput,\n  ErrorResponseOutput,\n  TrialOutput,\n  QuotaOutput,\n  PrivateCloudListOutput,\n  PrivateCloudOutput,\n  AdminCredentialsOutput,\n  ClusterListOutput,\n  ClusterOutput,\n  ClusterZoneListOutput,\n  DatastoreListOutput,\n  DatastoreOutput,\n  HcxEnterpriseSiteListOutput,\n  HcxEnterpriseSiteOutput,\n  ExpressRouteAuthorizationListOutput,\n  ExpressRouteAuthorizationOutput,\n  GlobalReachConnectionListOutput,\n  GlobalReachConnectionOutput,\n  WorkloadNetworkOutput,\n  WorkloadNetworkListOutput,\n  WorkloadNetworkSegmentsListOutput,\n  WorkloadNetworkSegmentOutput,\n  WorkloadNetworkDhcpListOutput,\n  WorkloadNetworkDhcpOutput,\n  WorkloadNetworkGatewayListOutput,\n  WorkloadNetworkGatewayOutput,\n  WorkloadNetworkPortMirroringListOutput,\n  WorkloadNetworkPortMirroringOutput,\n  WorkloadNetworkVMGroupsListOutput,\n  WorkloadNetworkVMGroupOutput,\n  WorkloadNetworkVirtualMachinesListOutput,\n  WorkloadNetworkVirtualMachineOutput,\n  WorkloadNetworkDnsServicesListOutput,\n  WorkloadNetworkDnsServiceOutput,\n  WorkloadNetworkDnsZonesListOutput,\n  WorkloadNetworkDnsZoneOutput,\n  WorkloadNetworkPublicIPsListOutput,\n  WorkloadNetworkPublicIPOutput,\n  CloudLinkListOutput,\n  CloudLinkOutput,\n  AddonListOutput,\n  AddonOutput,\n  VirtualMachinesListOutput,\n  VirtualMachineOutput,\n  PlacementPoliciesListOutput,\n  PlacementPolicyOutput,\n  ScriptPackagesListOutput,\n  ScriptPackageOutput,\n  ScriptCmdletsListOutput,\n  ScriptCmdletOutput,\n  ScriptExecutionsListOutput,\n  ScriptExecutionOutput,\n  IscsiPathListResultOutput,\n  IscsiPathOutput,\n} from \"./outputModels.js\";\n\n/** Azure operation completed successfully. */\nexport interface OperationsList200Response extends HttpResponse {\n  status: \"200\";\n  body: OperationListResultOutput;\n}\n\nexport interface OperationsListDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface LocationsCheckTrialAvailability200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: TrialOutput;\n}\n\nexport interface LocationsCheckTrialAvailabilityDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface LocationsCheckQuotaAvailability200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: QuotaOutput;\n}\n\nexport interface LocationsCheckQuotaAvailabilityDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PrivateCloudsListByResourceGroup200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudListOutput;\n}\n\nexport interface PrivateCloudsListByResourceGroupDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PrivateCloudsListInSubscription200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudListOutput;\n}\n\nexport interface PrivateCloudsListInSubscriptionDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PrivateCloudsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudOutput;\n}\n\nexport interface PrivateCloudsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'PrivateCloud' update operation succeeded */\nexport interface PrivateCloudsCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudOutput;\n}\n\nexport interface PrivateCloudsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'PrivateCloud' create operation succeeded */\nexport interface PrivateCloudsCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: PrivateCloudOutput;\n  headers: RawHttpHeaders & PrivateCloudsCreateOrUpdate201Headers;\n}\n\nexport interface PrivateCloudsCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface PrivateCloudsCreateOrUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PrivateCloudsUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: PrivateCloudOutput;\n}\n\nexport interface PrivateCloudsUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n}\n\n/** The request has succeeded and a new resource has been created as a result. */\nexport interface PrivateCloudsUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: PrivateCloudOutput;\n  headers: RawHttpHeaders & PrivateCloudsUpdate201Headers;\n}\n\nexport interface PrivateCloudsUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface PrivateCloudsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface PrivateCloudsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface PrivateCloudsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & PrivateCloudsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface PrivateCloudsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface PrivateCloudsDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface PrivateCloudsDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface PrivateCloudsRotateVcenterPassword202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource operation accepted. */\nexport interface PrivateCloudsRotateVcenterPassword202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & PrivateCloudsRotateVcenterPassword202Headers;\n}\n\n/** Action completed successfully. */\nexport interface PrivateCloudsRotateVcenterPassword204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface PrivateCloudsRotateVcenterPasswordDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running rotateVcenterPassword operation */\nexport interface PrivateCloudsRotateVcenterPasswordLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface PrivateCloudsRotateNsxtPassword202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource operation accepted. */\nexport interface PrivateCloudsRotateNsxtPassword202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & PrivateCloudsRotateNsxtPassword202Headers;\n}\n\n/** Action completed successfully. */\nexport interface PrivateCloudsRotateNsxtPassword204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface PrivateCloudsRotateNsxtPasswordDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running rotateNsxtPassword operation */\nexport interface PrivateCloudsRotateNsxtPasswordLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface PrivateCloudsListAdminCredentials200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: AdminCredentialsOutput;\n}\n\nexport interface PrivateCloudsListAdminCredentialsDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ClustersListByPrivateCloud200Response extends HttpResponse {\n  status: \"200\";\n  body: ClusterListOutput;\n}\n\nexport interface ClustersListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ClustersGet200Response extends HttpResponse {\n  status: \"200\";\n  body: ClusterOutput;\n}\n\nexport interface ClustersGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'Cluster' update operation succeeded */\nexport interface ClustersCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: ClusterOutput;\n}\n\nexport interface ClustersCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'Cluster' create operation succeeded */\nexport interface ClustersCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: ClusterOutput;\n  headers: RawHttpHeaders & ClustersCreateOrUpdate201Headers;\n}\n\nexport interface ClustersCreateOrUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface ClustersCreateOrUpdateLogicalResponse extends HttpResponse {\n  status: \"200\";\n  body: ClusterOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ClustersUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: ClusterOutput;\n}\n\nexport interface ClustersUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n}\n\n/** The request has succeeded and a new resource has been created as a result. */\nexport interface ClustersUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: ClusterOutput;\n  headers: RawHttpHeaders & ClustersUpdate201Headers;\n}\n\nexport interface ClustersUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface ClustersDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface ClustersDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface ClustersDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & ClustersDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface ClustersDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface ClustersDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface ClustersDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface ClustersListZones200Response extends HttpResponse {\n  status: \"200\";\n  body: ClusterZoneListOutput;\n}\n\nexport interface ClustersListZonesDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface DatastoresListByCluster200Response extends HttpResponse {\n  status: \"200\";\n  body: DatastoreListOutput;\n}\n\nexport interface DatastoresListByClusterDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface DatastoresGet200Response extends HttpResponse {\n  status: \"200\";\n  body: DatastoreOutput;\n}\n\nexport interface DatastoresGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'Datastore' update operation succeeded */\nexport interface DatastoresCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: DatastoreOutput;\n}\n\nexport interface DatastoresCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'Datastore' create operation succeeded */\nexport interface DatastoresCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: DatastoreOutput;\n  headers: RawHttpHeaders & DatastoresCreateOrUpdate201Headers;\n}\n\nexport interface DatastoresCreateOrUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface DatastoresCreateOrUpdateLogicalResponse extends HttpResponse {\n  status: \"200\";\n  body: DatastoreOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface DatastoresDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface DatastoresDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface DatastoresDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & DatastoresDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface DatastoresDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface DatastoresDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface DatastoresDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface HcxEnterpriseSitesListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: HcxEnterpriseSiteListOutput;\n}\n\nexport interface HcxEnterpriseSitesListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface HcxEnterpriseSitesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: HcxEnterpriseSiteOutput;\n}\n\nexport interface HcxEnterpriseSitesGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'HcxEnterpriseSite' update operation succeeded */\nexport interface HcxEnterpriseSitesCreateOrUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: HcxEnterpriseSiteOutput;\n}\n\n/** Resource 'HcxEnterpriseSite' create operation succeeded */\nexport interface HcxEnterpriseSitesCreateOrUpdate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: HcxEnterpriseSiteOutput;\n}\n\nexport interface HcxEnterpriseSitesCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface HcxEnterpriseSitesDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\n/** Resource does not exist. */\nexport interface HcxEnterpriseSitesDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface HcxEnterpriseSitesDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface AuthorizationsListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ExpressRouteAuthorizationListOutput;\n}\n\nexport interface AuthorizationsListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface AuthorizationsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: ExpressRouteAuthorizationOutput;\n}\n\nexport interface AuthorizationsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'ExpressRouteAuthorization' update operation succeeded */\nexport interface AuthorizationsCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: ExpressRouteAuthorizationOutput;\n}\n\nexport interface AuthorizationsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'ExpressRouteAuthorization' create operation succeeded */\nexport interface AuthorizationsCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: ExpressRouteAuthorizationOutput;\n  headers: RawHttpHeaders & AuthorizationsCreateOrUpdate201Headers;\n}\n\nexport interface AuthorizationsCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface AuthorizationsCreateOrUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: ExpressRouteAuthorizationOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface AuthorizationsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface AuthorizationsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface AuthorizationsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & AuthorizationsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface AuthorizationsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface AuthorizationsDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface AuthorizationsDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface GlobalReachConnectionsListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: GlobalReachConnectionListOutput;\n}\n\nexport interface GlobalReachConnectionsListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface GlobalReachConnectionsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: GlobalReachConnectionOutput;\n}\n\nexport interface GlobalReachConnectionsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'GlobalReachConnection' update operation succeeded */\nexport interface GlobalReachConnectionsCreateOrUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: GlobalReachConnectionOutput;\n}\n\nexport interface GlobalReachConnectionsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'GlobalReachConnection' create operation succeeded */\nexport interface GlobalReachConnectionsCreateOrUpdate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: GlobalReachConnectionOutput;\n  headers: RawHttpHeaders & GlobalReachConnectionsCreateOrUpdate201Headers;\n}\n\nexport interface GlobalReachConnectionsCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface GlobalReachConnectionsCreateOrUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: GlobalReachConnectionOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface GlobalReachConnectionsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface GlobalReachConnectionsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface GlobalReachConnectionsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & GlobalReachConnectionsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface GlobalReachConnectionsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface GlobalReachConnectionsDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface GlobalReachConnectionsDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworksGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkOutput;\n}\n\nexport interface WorkloadNetworksGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworksListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkListOutput;\n}\n\nexport interface WorkloadNetworksListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkSegmentsListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentsListOutput;\n}\n\nexport interface WorkloadNetworkSegmentsListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkSegmentsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentOutput;\n}\n\nexport interface WorkloadNetworkSegmentsGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkSegment' update operation succeeded */\nexport interface WorkloadNetworkSegmentsCreate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentOutput;\n}\n\nexport interface WorkloadNetworkSegmentsCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkSegment' create operation succeeded */\nexport interface WorkloadNetworkSegmentsCreate201Response extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkSegmentOutput;\n  headers: RawHttpHeaders & WorkloadNetworkSegmentsCreate201Headers;\n}\n\nexport interface WorkloadNetworkSegmentsCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkSegmentsCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkSegmentsUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentOutput;\n}\n\nexport interface WorkloadNetworkSegmentsUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkSegmentsUpdate202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkSegmentsUpdate202Headers;\n}\n\nexport interface WorkloadNetworkSegmentsUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkSegmentsUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkSegmentOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkSegmentsDeleteSegment200Response\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkSegmentsDeleteSegment202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkSegmentsDeleteSegment202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkSegmentsDeleteSegment202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkSegmentsDeleteSegment204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkSegmentsDeleteSegmentDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running deleteSegment operation */\nexport interface WorkloadNetworkSegmentsDeleteSegmentLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDhcpConfigurationsListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpListOutput;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDhcpConfigurationsGet200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpOutput;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkDhcp' update operation succeeded */\nexport interface WorkloadNetworkDhcpConfigurationsCreate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpOutput;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkDhcp' create operation succeeded */\nexport interface WorkloadNetworkDhcpConfigurationsCreate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkDhcpOutput;\n  headers: RawHttpHeaders & WorkloadNetworkDhcpConfigurationsCreate201Headers;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkDhcpConfigurationsCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDhcpConfigurationsUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpOutput;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkDhcpConfigurationsUpdate202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDhcpConfigurationsUpdate202Headers;\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkDhcpConfigurationsUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDhcpOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkDhcpConfigurationsDelete200Response\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkDhcpConfigurationsDelete202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDhcpConfigurationsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkDhcpConfigurationsDelete204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkDhcpConfigurationsDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkDhcpConfigurationsDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkGatewaysListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkGatewayListOutput;\n}\n\nexport interface WorkloadNetworkGatewaysListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkGatewaysGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkGatewayOutput;\n}\n\nexport interface WorkloadNetworkGatewaysGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkPortMirroringProfilesListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringListOutput;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkPortMirroringProfilesGet200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringOutput;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkPortMirroring' update operation succeeded */\nexport interface WorkloadNetworkPortMirroringProfilesCreate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringOutput;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkPortMirroring' create operation succeeded */\nexport interface WorkloadNetworkPortMirroringProfilesCreate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkPortMirroringOutput;\n  headers: RawHttpHeaders &\n    WorkloadNetworkPortMirroringProfilesCreate201Headers;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkPortMirroringProfilesCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkPortMirroringProfilesUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringOutput;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkPortMirroringProfilesUpdate202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders &\n    WorkloadNetworkPortMirroringProfilesUpdate202Headers;\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkPortMirroringProfilesUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPortMirroringOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkPortMirroringProfilesDelete200Response\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkPortMirroringProfilesDelete202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders &\n    WorkloadNetworkPortMirroringProfilesDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkPortMirroringProfilesDelete204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkPortMirroringProfilesDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkPortMirroringProfilesDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkVmGroupsListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupsListOutput;\n}\n\nexport interface WorkloadNetworkVmGroupsListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkVmGroupsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupOutput;\n}\n\nexport interface WorkloadNetworkVmGroupsGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkVMGroup' update operation succeeded */\nexport interface WorkloadNetworkVmGroupsCreate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupOutput;\n}\n\nexport interface WorkloadNetworkVmGroupsCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkVMGroup' create operation succeeded */\nexport interface WorkloadNetworkVmGroupsCreate201Response extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkVMGroupOutput;\n  headers: RawHttpHeaders & WorkloadNetworkVmGroupsCreate201Headers;\n}\n\nexport interface WorkloadNetworkVmGroupsCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkVmGroupsCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkVmGroupsUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupOutput;\n}\n\nexport interface WorkloadNetworkVmGroupsUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkVmGroupsUpdate202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkVmGroupsUpdate202Headers;\n}\n\nexport interface WorkloadNetworkVmGroupsUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkVmGroupsUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVMGroupOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkVmGroupsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkVmGroupsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkVmGroupsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkVmGroupsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkVmGroupsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkVmGroupsDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkVmGroupsDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkVirtualMachinesListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVirtualMachinesListOutput;\n}\n\nexport interface WorkloadNetworkVirtualMachinesListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkVirtualMachinesGet200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkVirtualMachineOutput;\n}\n\nexport interface WorkloadNetworkVirtualMachinesGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsServicesListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServicesListOutput;\n}\n\nexport interface WorkloadNetworkDnsServicesListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsServicesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServiceOutput;\n}\n\nexport interface WorkloadNetworkDnsServicesGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkDnsService' update operation succeeded */\nexport interface WorkloadNetworkDnsServicesCreate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServiceOutput;\n}\n\nexport interface WorkloadNetworkDnsServicesCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkDnsService' create operation succeeded */\nexport interface WorkloadNetworkDnsServicesCreate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkDnsServiceOutput;\n  headers: RawHttpHeaders & WorkloadNetworkDnsServicesCreate201Headers;\n}\n\nexport interface WorkloadNetworkDnsServicesCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkDnsServicesCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServiceOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsServicesUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServiceOutput;\n}\n\nexport interface WorkloadNetworkDnsServicesUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkDnsServicesUpdate202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDnsServicesUpdate202Headers;\n}\n\nexport interface WorkloadNetworkDnsServicesUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkDnsServicesUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsServiceOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkDnsServicesDelete200Response\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkDnsServicesDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkDnsServicesDelete202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDnsServicesDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkDnsServicesDelete204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkDnsServicesDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkDnsServicesDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsZonesListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZonesListOutput;\n}\n\nexport interface WorkloadNetworkDnsZonesListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsZonesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZoneOutput;\n}\n\nexport interface WorkloadNetworkDnsZonesGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkDnsZone' update operation succeeded */\nexport interface WorkloadNetworkDnsZonesCreate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZoneOutput;\n}\n\nexport interface WorkloadNetworkDnsZonesCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkDnsZone' create operation succeeded */\nexport interface WorkloadNetworkDnsZonesCreate201Response extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkDnsZoneOutput;\n  headers: RawHttpHeaders & WorkloadNetworkDnsZonesCreate201Headers;\n}\n\nexport interface WorkloadNetworkDnsZonesCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkDnsZonesCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZoneOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkDnsZonesUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZoneOutput;\n}\n\nexport interface WorkloadNetworkDnsZonesUpdate202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource update request accepted. */\nexport interface WorkloadNetworkDnsZonesUpdate202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDnsZonesUpdate202Headers;\n}\n\nexport interface WorkloadNetworkDnsZonesUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running update operation */\nexport interface WorkloadNetworkDnsZonesUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkDnsZoneOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkDnsZonesDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkDnsZonesDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkDnsZonesDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkDnsZonesDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkDnsZonesDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkDnsZonesDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkDnsZonesDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkPublicIpsListByWorkloadNetwork200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPublicIPsListOutput;\n}\n\nexport interface WorkloadNetworkPublicIpsListByWorkloadNetworkDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface WorkloadNetworkPublicIpsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPublicIPOutput;\n}\n\nexport interface WorkloadNetworkPublicIpsGetDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'WorkloadNetworkPublicIP' update operation succeeded */\nexport interface WorkloadNetworkPublicIpsCreate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPublicIPOutput;\n}\n\nexport interface WorkloadNetworkPublicIpsCreate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'WorkloadNetworkPublicIP' create operation succeeded */\nexport interface WorkloadNetworkPublicIpsCreate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: WorkloadNetworkPublicIPOutput;\n  headers: RawHttpHeaders & WorkloadNetworkPublicIpsCreate201Headers;\n}\n\nexport interface WorkloadNetworkPublicIpsCreateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running create operation */\nexport interface WorkloadNetworkPublicIpsCreateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: WorkloadNetworkPublicIPOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface WorkloadNetworkPublicIpsDelete200Response\n  extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface WorkloadNetworkPublicIpsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface WorkloadNetworkPublicIpsDelete202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & WorkloadNetworkPublicIpsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface WorkloadNetworkPublicIpsDelete204Response\n  extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface WorkloadNetworkPublicIpsDeleteDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface WorkloadNetworkPublicIpsDeleteLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface CloudLinksListByPrivateCloud200Response extends HttpResponse {\n  status: \"200\";\n  body: CloudLinkListOutput;\n}\n\nexport interface CloudLinksListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface CloudLinksGet200Response extends HttpResponse {\n  status: \"200\";\n  body: CloudLinkOutput;\n}\n\nexport interface CloudLinksGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'CloudLink' update operation succeeded */\nexport interface CloudLinksCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: CloudLinkOutput;\n}\n\nexport interface CloudLinksCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'CloudLink' create operation succeeded */\nexport interface CloudLinksCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: CloudLinkOutput;\n  headers: RawHttpHeaders & CloudLinksCreateOrUpdate201Headers;\n}\n\nexport interface CloudLinksCreateOrUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface CloudLinksCreateOrUpdateLogicalResponse extends HttpResponse {\n  status: \"200\";\n  body: CloudLinkOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface CloudLinksDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface CloudLinksDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface CloudLinksDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & CloudLinksDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface CloudLinksDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface CloudLinksDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface CloudLinksDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface AddonsListByPrivateCloud200Response extends HttpResponse {\n  status: \"200\";\n  body: AddonListOutput;\n}\n\nexport interface AddonsListByPrivateCloudDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface AddonsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: AddonOutput;\n}\n\nexport interface AddonsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'Addon' update operation succeeded */\nexport interface AddonsCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: AddonOutput;\n}\n\nexport interface AddonsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'Addon' create operation succeeded */\nexport interface AddonsCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: AddonOutput;\n  headers: RawHttpHeaders & AddonsCreateOrUpdate201Headers;\n}\n\nexport interface AddonsCreateOrUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface AddonsCreateOrUpdateLogicalResponse extends HttpResponse {\n  status: \"200\";\n  body: AddonOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface AddonsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface AddonsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface AddonsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & AddonsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface AddonsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface AddonsDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface AddonsDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface VirtualMachinesListByCluster200Response extends HttpResponse {\n  status: \"200\";\n  body: VirtualMachinesListOutput;\n}\n\nexport interface VirtualMachinesListByClusterDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface VirtualMachinesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: VirtualMachineOutput;\n}\n\nexport interface VirtualMachinesGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\nexport interface VirtualMachinesRestrictMovement202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource operation accepted. */\nexport interface VirtualMachinesRestrictMovement202Response\n  extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & VirtualMachinesRestrictMovement202Headers;\n}\n\nexport interface VirtualMachinesRestrictMovementDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running restrictMovement operation */\nexport interface VirtualMachinesRestrictMovementLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface PlacementPoliciesListByCluster200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: PlacementPoliciesListOutput;\n}\n\nexport interface PlacementPoliciesListByClusterDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PlacementPoliciesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: PlacementPolicyOutput;\n}\n\nexport interface PlacementPoliciesGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'PlacementPolicy' update operation succeeded */\nexport interface PlacementPoliciesCreateOrUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: PlacementPolicyOutput;\n}\n\nexport interface PlacementPoliciesCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'PlacementPolicy' create operation succeeded */\nexport interface PlacementPoliciesCreateOrUpdate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: PlacementPolicyOutput;\n  headers: RawHttpHeaders & PlacementPoliciesCreateOrUpdate201Headers;\n}\n\nexport interface PlacementPoliciesCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface PlacementPoliciesCreateOrUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: PlacementPolicyOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface PlacementPoliciesUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: PlacementPolicyOutput;\n}\n\nexport interface PlacementPoliciesUpdate202Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n}\n\n/** The request has been accepted for processing, but processing has not yet completed. */\nexport interface PlacementPoliciesUpdate202Response extends HttpResponse {\n  status: \"202\";\n  body: PlacementPolicyOutput;\n  headers: RawHttpHeaders & PlacementPoliciesUpdate202Headers;\n}\n\nexport interface PlacementPoliciesUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface PlacementPoliciesDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface PlacementPoliciesDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface PlacementPoliciesDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & PlacementPoliciesDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface PlacementPoliciesDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface PlacementPoliciesDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface PlacementPoliciesDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptPackagesListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptPackagesListOutput;\n}\n\nexport interface ScriptPackagesListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptPackagesGet200Response extends HttpResponse {\n  status: \"200\";\n  body: ScriptPackageOutput;\n}\n\nexport interface ScriptPackagesGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptCmdletsListByScriptPackage200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptCmdletsListOutput;\n}\n\nexport interface ScriptCmdletsListByScriptPackageDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptCmdletsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: ScriptCmdletOutput;\n}\n\nexport interface ScriptCmdletsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptExecutionsListByPrivateCloud200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptExecutionsListOutput;\n}\n\nexport interface ScriptExecutionsListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptExecutionsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: ScriptExecutionOutput;\n}\n\nexport interface ScriptExecutionsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'ScriptExecution' update operation succeeded */\nexport interface ScriptExecutionsCreateOrUpdate200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptExecutionOutput;\n}\n\nexport interface ScriptExecutionsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'ScriptExecution' create operation succeeded */\nexport interface ScriptExecutionsCreateOrUpdate201Response\n  extends HttpResponse {\n  status: \"201\";\n  body: ScriptExecutionOutput;\n  headers: RawHttpHeaders & ScriptExecutionsCreateOrUpdate201Headers;\n}\n\nexport interface ScriptExecutionsCreateOrUpdateDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface ScriptExecutionsCreateOrUpdateLogicalResponse\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptExecutionOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface ScriptExecutionsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface ScriptExecutionsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface ScriptExecutionsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & ScriptExecutionsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface ScriptExecutionsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface ScriptExecutionsDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface ScriptExecutionsDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n\n/** Azure operation completed successfully. */\nexport interface ScriptExecutionsGetExecutionLogs200Response\n  extends HttpResponse {\n  status: \"200\";\n  body: ScriptExecutionOutput;\n}\n\nexport interface ScriptExecutionsGetExecutionLogsDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface IscsiPathsListByPrivateCloud200Response extends HttpResponse {\n  status: \"200\";\n  body: IscsiPathListResultOutput;\n}\n\nexport interface IscsiPathsListByPrivateCloudDefaultResponse\n  extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Azure operation completed successfully. */\nexport interface IscsiPathsGet200Response extends HttpResponse {\n  status: \"200\";\n  body: IscsiPathOutput;\n}\n\nexport interface IscsiPathsGetDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** Resource 'IscsiPath' update operation succeeded */\nexport interface IscsiPathsCreateOrUpdate200Response extends HttpResponse {\n  status: \"200\";\n  body: IscsiPathOutput;\n}\n\nexport interface IscsiPathsCreateOrUpdate201Headers {\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource 'IscsiPath' create operation succeeded */\nexport interface IscsiPathsCreateOrUpdate201Response extends HttpResponse {\n  status: \"201\";\n  body: IscsiPathOutput;\n  headers: RawHttpHeaders & IscsiPathsCreateOrUpdate201Headers;\n}\n\nexport interface IscsiPathsCreateOrUpdateDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running createOrUpdate operation */\nexport interface IscsiPathsCreateOrUpdateLogicalResponse extends HttpResponse {\n  status: \"200\";\n  body: IscsiPathOutput;\n}\n\n/** Resource deleted successfully. */\nexport interface IscsiPathsDelete200Response extends HttpResponse {\n  status: \"200\";\n}\n\nexport interface IscsiPathsDelete202Headers {\n  /** The Location header contains the URL where the status of the long running operation can be checked. */\n  location?: string;\n  /** The Retry-After header can indicate how long the client should wait before polling the operation status. */\n  \"retry-after\"?: number;\n}\n\n/** Resource deletion accepted. */\nexport interface IscsiPathsDelete202Response extends HttpResponse {\n  status: \"202\";\n  headers: RawHttpHeaders & IscsiPathsDelete202Headers;\n}\n\n/** Resource does not exist. */\nexport interface IscsiPathsDelete204Response extends HttpResponse {\n  status: \"204\";\n}\n\nexport interface IscsiPathsDeleteDefaultResponse extends HttpResponse {\n  status: string;\n  body: ErrorResponseOutput;\n}\n\n/** The final response for long-running delete operation */\nexport interface IscsiPathsDeleteLogicalResponse extends HttpResponse {\n  status: \"200\";\n}\n"]}