{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../src/models/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { serializeRecord } from \"../helpers/serializerHelpers.js\";\nimport {\n  IscsiPath as IscsiPathRest,\n  IscsiPathProperties as IscsiPathPropertiesRest,\n  ScriptExecution as ScriptExecutionRest,\n  ScriptExecutionProperties as ScriptExecutionPropertiesRest,\n  ScriptExecutionParameter as ScriptExecutionParameterRest,\n  ScriptSecureStringExecutionParameter as ScriptSecureStringExecutionParameterRest,\n  ScriptStringExecutionParameter as ScriptStringExecutionParameterRest,\n  PSCredentialExecutionParameter as PSCredentialExecutionParameterRest,\n  PlacementPolicy as PlacementPolicyRest,\n  PlacementPolicyProperties as PlacementPolicyPropertiesRest,\n  VmVmPlacementPolicyProperties as VmVmPlacementPolicyPropertiesRest,\n  VmHostPlacementPolicyProperties as VmHostPlacementPolicyPropertiesRest,\n  PlacementPolicyUpdate as PlacementPolicyUpdateRest,\n  PlacementPolicyUpdateProperties as PlacementPolicyUpdatePropertiesRest,\n  VirtualMachineRestrictMovement as VirtualMachineRestrictMovementRest,\n  Addon as AddonRest,\n  AddonProperties as AddonPropertiesRest,\n  AddonSrmProperties as AddonSrmPropertiesRest,\n  AddonVrProperties as AddonVrPropertiesRest,\n  AddonHcxProperties as AddonHcxPropertiesRest,\n  AddonArcProperties as AddonArcPropertiesRest,\n  CloudLink as CloudLinkRest,\n  CloudLinkProperties as CloudLinkPropertiesRest,\n  WorkloadNetworkPublicIP as WorkloadNetworkPublicIPRest,\n  WorkloadNetworkPublicIPProperties as WorkloadNetworkPublicIPPropertiesRest,\n  WorkloadNetworkDnsZone as WorkloadNetworkDnsZoneRest,\n  WorkloadNetworkDnsZoneProperties as WorkloadNetworkDnsZonePropertiesRest,\n  WorkloadNetworkDnsService as WorkloadNetworkDnsServiceRest,\n  WorkloadNetworkDnsServiceProperties as WorkloadNetworkDnsServicePropertiesRest,\n  WorkloadNetworkVMGroup as WorkloadNetworkVMGroupRest,\n  WorkloadNetworkVMGroupProperties as WorkloadNetworkVMGroupPropertiesRest,\n  WorkloadNetworkPortMirroring as WorkloadNetworkPortMirroringRest,\n  WorkloadNetworkPortMirroringProperties as WorkloadNetworkPortMirroringPropertiesRest,\n  WorkloadNetworkDhcp as WorkloadNetworkDhcpRest,\n  WorkloadNetworkDhcpEntity as WorkloadNetworkDhcpEntityRest,\n  WorkloadNetworkDhcpServer as WorkloadNetworkDhcpServerRest,\n  WorkloadNetworkDhcpRelay as WorkloadNetworkDhcpRelayRest,\n  WorkloadNetworkSegment as WorkloadNetworkSegmentRest,\n  WorkloadNetworkSegmentProperties as WorkloadNetworkSegmentPropertiesRest,\n  WorkloadNetworkSegmentSubnet as WorkloadNetworkSegmentSubnetRest,\n  GlobalReachConnection as GlobalReachConnectionRest,\n  GlobalReachConnectionProperties as GlobalReachConnectionPropertiesRest,\n  ExpressRouteAuthorization as ExpressRouteAuthorizationRest,\n  ExpressRouteAuthorizationProperties as ExpressRouteAuthorizationPropertiesRest,\n  HcxEnterpriseSite as HcxEnterpriseSiteRest,\n  Datastore as DatastoreRest,\n  DatastoreProperties as DatastorePropertiesRest,\n  NetAppVolume as NetAppVolumeRest,\n  DiskPoolVolume as DiskPoolVolumeRest,\n  ElasticSanVolume as ElasticSanVolumeRest,\n  Cluster as ClusterRest,\n  ClusterProperties as ClusterPropertiesRest,\n  Sku as SkuRest,\n  ClusterUpdate as ClusterUpdateRest,\n  ClusterUpdateProperties as ClusterUpdatePropertiesRest,\n  TrackedResource as TrackedResourceRest,\n  PrivateCloud as PrivateCloudRest,\n  PrivateCloudProperties as PrivateCloudPropertiesRest,\n  ManagementCluster as ManagementClusterRest,\n  IdentitySource as IdentitySourceRest,\n  AvailabilityProperties as AvailabilityPropertiesRest,\n  Encryption as EncryptionRest,\n  EncryptionKeyVaultProperties as EncryptionKeyVaultPropertiesRest,\n  SystemAssignedServiceIdentity as SystemAssignedServiceIdentityRest,\n  PrivateCloudUpdate as PrivateCloudUpdateRest,\n  PrivateCloudUpdateProperties as PrivateCloudUpdatePropertiesRest,\n} from \"../rest/index.js\";\n\n/** The response of a IscsiPath list operation. */\nexport interface _IscsiPathListResult {\n  /** The IscsiPath items on this page */\n  value: IscsiPath[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /** Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} */\n  readonly id?: string;\n  /** The name of the resource */\n  readonly name?: string;\n  /** The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\" */\n  readonly type?: string;\n  /** Azure Resource Manager metadata containing createdBy and modifiedBy information. */\n  readonly systemData?: SystemData;\n}\n\nexport function resourceSerializer(item: Resource) {\n  return item as any;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The kind of entity that created the resource. */\nexport type CreatedByType = \"User\" | \"Application\" | \"ManagedIdentity\" | \"Key\";\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\nexport function proxyResourceSerializer(item: ProxyResource) {\n  return item as any;\n}\n\n/** An iSCSI path resource */\nexport interface IscsiPath extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: IscsiPathProperties;\n}\n\nexport function iscsiPathSerializer(item: IscsiPath): IscsiPathRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : iscsiPathPropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of an iSCSI path resource */\nexport interface IscsiPathProperties {\n  /** The state of the iSCSI path provisioning */\n  readonly provisioningState?: IscsiPathProvisioningState;\n  /** CIDR Block for iSCSI path. */\n  networkBlock: string;\n}\n\nexport function iscsiPathPropertiesSerializer(\n  item: IscsiPathProperties,\n): IscsiPathPropertiesRest {\n  return {\n    networkBlock: item[\"networkBlock\"],\n  };\n}\n\n/** The provisioning state of a resource type. */\nexport type ResourceProvisioningState = \"Succeeded\" | \"Failed\" | \"Canceled\";\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /** The error code. */\n  readonly code?: string;\n  /** The error message. */\n  readonly message?: string;\n  /** The error target. */\n  readonly target?: string;\n  /** The error details. */\n  readonly details?: ErrorDetail[];\n  /** The error additional info. */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /** The additional info type. */\n  readonly type?: string;\n  /** The additional info. */\n  readonly info?: Record<string, any>;\n}\n\n/** The response of a ScriptExecution list operation. */\nexport interface _ScriptExecutionsList {\n  /** The ScriptExecution items on this page */\n  value: ScriptExecution[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** An instance of a script executed by a user - custom or AVS */\nexport interface ScriptExecution extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ScriptExecutionProperties;\n}\n\nexport function scriptExecutionSerializer(\n  item: ScriptExecution,\n): ScriptExecutionRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : scriptExecutionPropertiesSerializer(item.properties),\n  };\n}\n\n/** Properties of a user-invoked script */\nexport interface ScriptExecutionProperties {\n  /** A reference to the script cmdlet resource if user is running a AVS script */\n  scriptCmdletId?: string;\n  /** Parameters the script will accept */\n  parameters?: ScriptExecutionParameterUnion[];\n  /**\n   * Parameters that will be hidden/not visible to ARM, such as passwords and\n   * credentials\n   */\n  hiddenParameters?: ScriptExecutionParameterUnion[];\n  /**\n   * Error message if the script was able to run, but if the script itself had\n   * errors or powershell threw an exception\n   */\n  failureReason?: string;\n  /** Time limit for execution */\n  timeout: string;\n  /** Time to live for the resource. If not provided, will be available for 60 days */\n  retention?: string;\n  /** Time the script execution was submitted */\n  readonly submittedAt?: Date;\n  /** Time the script execution was started */\n  readonly startedAt?: Date;\n  /** Time the script execution was finished */\n  readonly finishedAt?: Date;\n  /** The state of the script execution resource */\n  readonly provisioningState?: ScriptExecutionProvisioningState;\n  /** Standard output stream from the powershell execution */\n  output?: string[];\n  /** User-defined dictionary. */\n  namedOutputs?: Record<string, Record<string, any>>;\n  /** Standard information out stream from the powershell execution */\n  readonly information?: string[];\n  /** Standard warning out stream from the powershell execution */\n  readonly warnings?: string[];\n  /** Standard error output stream from the powershell execution */\n  readonly errors?: string[];\n}\n\nexport function scriptExecutionPropertiesSerializer(\n  item: ScriptExecutionProperties,\n): ScriptExecutionPropertiesRest {\n  return {\n    scriptCmdletId: item[\"scriptCmdletId\"],\n    parameters: item[\"parameters\"],\n    hiddenParameters: item[\"hiddenParameters\"],\n    failureReason: item[\"failureReason\"],\n    timeout: item[\"timeout\"],\n    retention: item[\"retention\"],\n    output: item[\"output\"],\n    namedOutputs: !item.namedOutputs\n      ? item.namedOutputs\n      : (serializeRecord(item.namedOutputs as any) as any),\n  };\n}\n\n/** The arguments passed in to the execution */\nexport interface ScriptExecutionParameter {\n  /** the discriminator possible values: SecureValue, Value, Credential */\n  type: ScriptExecutionParameterType;\n  /** The parameter name */\n  name: string;\n}\n\nexport function scriptExecutionParameterUnionSerializer(\n  item: ScriptExecutionParameterUnion,\n) {\n  switch (item.type) {\n    case \"SecureValue\":\n      return scriptSecureStringExecutionParameterSerializer(\n        item as ScriptSecureStringExecutionParameter,\n      );\n\n    case \"Value\":\n      return scriptStringExecutionParameterSerializer(\n        item as ScriptStringExecutionParameter,\n      );\n\n    case \"Credential\":\n      return pSCredentialExecutionParameterSerializer(\n        item as PSCredentialExecutionParameter,\n      );\n\n    default:\n      return scriptExecutionParameterSerializer(item);\n  }\n}\n\nexport function scriptExecutionParameterSerializer(\n  item: ScriptExecutionParameterUnion,\n): ScriptExecutionParameterRest {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n  };\n}\n\n/** a plain text value execution parameter */\nexport interface ScriptSecureStringExecutionParameter\n  extends ScriptExecutionParameter {\n  /** A secure value for the passed parameter, not to be stored in logs */\n  secureValue?: string;\n  /** The type of execution parameter */\n  type: \"SecureValue\";\n}\n\nexport function scriptSecureStringExecutionParameterSerializer(\n  item: ScriptSecureStringExecutionParameter,\n): ScriptSecureStringExecutionParameterRest {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n    secureValue: item[\"secureValue\"],\n  };\n}\n\n/** a plain text value execution parameter */\nexport interface ScriptStringExecutionParameter\n  extends ScriptExecutionParameter {\n  /** The value for the passed parameter */\n  value?: string;\n  /** The type of execution parameter */\n  type: \"Value\";\n}\n\nexport function scriptStringExecutionParameterSerializer(\n  item: ScriptStringExecutionParameter,\n): ScriptStringExecutionParameterRest {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n    value: item[\"value\"],\n  };\n}\n\n/** a powershell credential object */\nexport interface PSCredentialExecutionParameter\n  extends ScriptExecutionParameter {\n  /** username for login */\n  username?: string;\n  /** password for login */\n  password?: string;\n  /** The type of execution parameter */\n  type: \"Credential\";\n}\n\nexport function pSCredentialExecutionParameterSerializer(\n  item: PSCredentialExecutionParameter,\n): PSCredentialExecutionParameterRest {\n  return {\n    type: item[\"type\"],\n    name: item[\"name\"],\n    username: item[\"username\"],\n    password: item[\"password\"],\n  };\n}\n\n/** script execution parameter type */\nexport type ScriptExecutionParameterType =\n  | \"Value\"\n  | \"SecureValue\"\n  | \"Credential\";\n/** Script Output Stream type */\nexport type ScriptOutputStreamType =\n  | \"Information\"\n  | \"Warning\"\n  | \"Output\"\n  | \"Error\";\n\n/** The response of a ScriptCmdlet list operation. */\nexport interface _ScriptCmdletsList {\n  /** The ScriptCmdlet items on this page */\n  value: ScriptCmdlet[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A cmdlet available for script execution */\nexport interface ScriptCmdlet extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ScriptCmdletProperties;\n}\n\n/** Properties of a pre-canned script */\nexport interface ScriptCmdletProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: ScriptCmdletProvisioningState;\n  /** Description of the scripts functionality */\n  readonly description?: string;\n  /** Recommended time limit for execution */\n  readonly timeout?: string;\n  /** Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers */\n  readonly audience?: ScriptCmdletAudience;\n  /** Parameters the script will accept */\n  readonly parameters?: ScriptParameter[];\n}\n\n/** Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers */\nexport type ScriptCmdletAudience = \"Automation\" | \"Any\";\n\n/** An parameter that the script will accept */\nexport interface ScriptParameter {\n  /**\n   * The type of parameter the script is expecting. psCredential is a\n   * PSCredentialObject\n   */\n  readonly type?: ScriptParameterTypes;\n  /** The parameter name that the script will expect a parameter value for */\n  name?: string;\n  /** User friendly description of the parameter */\n  readonly description?: string;\n  /**\n   * Should this parameter be visible to arm and passed in the parameters argument\n   * when executing\n   */\n  readonly visibility?: VisibilityParameterEnum;\n  /** Is this parameter required or optional */\n  readonly optional?: OptionalParamEnum;\n}\n\n/** Script Parameter types */\nexport type ScriptParameterTypes =\n  | \"String\"\n  | \"SecureString\"\n  | \"Credential\"\n  | \"Int\"\n  | \"Bool\"\n  | \"Float\";\n/** Visibility Parameter */\nexport type VisibilityParameterEnum = \"Visible\" | \"Hidden\";\n/** Optional Param */\nexport type OptionalParamEnum = \"Optional\" | \"Required\";\n\n/** The response of a ScriptPackage list operation. */\nexport interface _ScriptPackagesList {\n  /** The ScriptPackage items on this page */\n  value: ScriptPackage[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** Script Package resources available for execution */\nexport interface ScriptPackage extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ScriptPackageProperties;\n}\n\n/** Properties of a Script Package subresource */\nexport interface ScriptPackageProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: ScriptPackageProvisioningState;\n  /** User friendly description of the package */\n  readonly description?: string;\n  /** Module version */\n  readonly version?: string;\n  /** Company that created and supports the package */\n  readonly company?: string;\n  /** Link to support by the package vendor */\n  readonly uri?: string;\n}\n\n/** The response of a PlacementPolicy list operation. */\nexport interface _PlacementPoliciesList {\n  /** The PlacementPolicy items on this page */\n  value: PlacementPolicy[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A vSphere Distributed Resource Scheduler (DRS) placement policy */\nexport interface PlacementPolicy extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: PlacementPolicyPropertiesUnion;\n}\n\nexport function placementPolicySerializer(\n  item: PlacementPolicy,\n): PlacementPolicyRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : placementPolicyPropertiesUnionSerializer(item.properties),\n  };\n}\n\n/** Abstract placement policy properties */\nexport interface PlacementPolicyProperties {\n  /** the discriminator possible values: VmVm, VmHost */\n  type: PlacementPolicyType;\n  /** Whether the placement policy is enabled or disabled */\n  state?: PlacementPolicyState;\n  /** Display name of the placement policy */\n  displayName?: string;\n  /** The provisioning state */\n  readonly provisioningState?: PlacementPolicyProvisioningState;\n}\n\nexport function placementPolicyPropertiesUnionSerializer(\n  item: PlacementPolicyPropertiesUnion,\n) {\n  switch (item.type) {\n    case \"VmVm\":\n      return vmVmPlacementPolicyPropertiesSerializer(\n        item as VmVmPlacementPolicyProperties,\n      );\n\n    case \"VmHost\":\n      return vmHostPlacementPolicyPropertiesSerializer(\n        item as VmHostPlacementPolicyProperties,\n      );\n\n    default:\n      return placementPolicyPropertiesSerializer(item);\n  }\n}\n\nexport function placementPolicyPropertiesSerializer(\n  item: PlacementPolicyPropertiesUnion,\n): PlacementPolicyPropertiesRest {\n  return {\n    ...placementPolicyPropertiesUnionSerializer(item),\n  };\n}\n\n/** VM-VM placement policy properties */\nexport interface VmVmPlacementPolicyProperties\n  extends PlacementPolicyProperties {\n  /** Virtual machine members list */\n  vmMembers: string[];\n  /** placement policy affinity type */\n  affinityType: AffinityType;\n  /** placement policy type */\n  type: \"VmVm\";\n}\n\nexport function vmVmPlacementPolicyPropertiesSerializer(\n  item: VmVmPlacementPolicyProperties,\n): VmVmPlacementPolicyPropertiesRest {\n  return {\n    type: item[\"type\"],\n    state: item[\"state\"],\n    displayName: item[\"displayName\"],\n    vmMembers: item[\"vmMembers\"],\n    affinityType: item[\"affinityType\"],\n  };\n}\n\n/** Affinity type */\nexport type AffinityType = \"Affinity\" | \"AntiAffinity\";\n\n/** VM-Host placement policy properties */\nexport interface VmHostPlacementPolicyProperties\n  extends PlacementPolicyProperties {\n  /** Virtual machine members list */\n  vmMembers: string[];\n  /** Host members list */\n  hostMembers: string[];\n  /** placement policy affinity type */\n  affinityType: AffinityType;\n  /** vm-host placement policy affinity strength (should/must) */\n  affinityStrength?: AffinityStrength;\n  /** placement policy azure hybrid benefit opt-in type */\n  azureHybridBenefitType?: AzureHybridBenefitType;\n  /** placement policy type */\n  type: \"VmHost\";\n}\n\nexport function vmHostPlacementPolicyPropertiesSerializer(\n  item: VmHostPlacementPolicyProperties,\n): VmHostPlacementPolicyPropertiesRest {\n  return {\n    type: item[\"type\"],\n    state: item[\"state\"],\n    displayName: item[\"displayName\"],\n    vmMembers: item[\"vmMembers\"],\n    hostMembers: item[\"hostMembers\"],\n    affinityType: item[\"affinityType\"],\n    affinityStrength: item[\"affinityStrength\"],\n    azureHybridBenefitType: item[\"azureHybridBenefitType\"],\n  };\n}\n\n/** Affinity Strength */\nexport type AffinityStrength = \"Should\" | \"Must\";\n/** Azure Hybrid Benefit type */\nexport type AzureHybridBenefitType = \"SqlHost\" | \"None\";\n/** Placement Policy type */\nexport type PlacementPolicyType = \"VmVm\" | \"VmHost\";\n/** Placement Policy state */\nexport type PlacementPolicyState = \"Enabled\" | \"Disabled\";\n\n/** An update of a DRS placement policy resource */\nexport interface PlacementPolicyUpdate {\n  /** The properties of a placement policy resource that may be updated */\n  properties?: PlacementPolicyUpdateProperties;\n}\n\nexport function placementPolicyUpdateSerializer(\n  item: PlacementPolicyUpdate,\n): PlacementPolicyUpdateRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : placementPolicyUpdatePropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a placement policy resource that may be updated */\nexport interface PlacementPolicyUpdateProperties {\n  /** Whether the placement policy is enabled or disabled */\n  state?: PlacementPolicyState;\n  /** Virtual machine members list */\n  vmMembers?: string[];\n  /** Host members list */\n  hostMembers?: string[];\n  /** vm-host placement policy affinity strength (should/must) */\n  affinityStrength?: AffinityStrength;\n  /** placement policy azure hybrid benefit opt-in type */\n  azureHybridBenefitType?: AzureHybridBenefitType;\n}\n\nexport function placementPolicyUpdatePropertiesSerializer(\n  item: PlacementPolicyUpdateProperties,\n): PlacementPolicyUpdatePropertiesRest {\n  return {\n    state: item[\"state\"],\n    vmMembers: item[\"vmMembers\"],\n    hostMembers: item[\"hostMembers\"],\n    affinityStrength: item[\"affinityStrength\"],\n    azureHybridBenefitType: item[\"azureHybridBenefitType\"],\n  };\n}\n\n/** The response of a VirtualMachine list operation. */\nexport interface _VirtualMachinesList {\n  /** The VirtualMachine items on this page */\n  value: VirtualMachine[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** Virtual Machine */\nexport interface VirtualMachine extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: VirtualMachineProperties;\n}\n\n/** Virtual Machine Properties */\nexport interface VirtualMachineProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: VirtualMachineProvisioningState;\n  /** Display name of the VM. */\n  readonly displayName?: string;\n  /** Virtual machine managed object reference id */\n  readonly moRefId?: string;\n  /** Path to virtual machine's folder starting from datacenter virtual machine folder */\n  readonly folderPath?: string;\n  /** Whether VM DRS-driven movement is restricted (enabled) or not (disabled) */\n  readonly restrictMovement?: VirtualMachineRestrictMovementState;\n}\n\n/** Virtual Machine Restrict Movement state */\nexport type VirtualMachineRestrictMovementState = \"Enabled\" | \"Disabled\";\n\n/** Set VM DRS-driven movement to restricted (enabled) or not (disabled) */\nexport interface VirtualMachineRestrictMovement {\n  /** Whether VM DRS-driven movement is restricted (enabled) or not (disabled) */\n  restrictMovement?: VirtualMachineRestrictMovementState;\n}\n\nexport function virtualMachineRestrictMovementSerializer(\n  item: VirtualMachineRestrictMovement,\n): VirtualMachineRestrictMovementRest {\n  return {\n    restrictMovement: item[\"restrictMovement\"],\n  };\n}\n\n/** The response of a Addon list operation. */\nexport interface _AddonList {\n  /** The Addon items on this page */\n  value: Addon[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** An addon resource */\nexport interface Addon extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: AddonPropertiesUnion;\n}\n\nexport function addonSerializer(item: Addon): AddonRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : addonPropertiesUnionSerializer(item.properties),\n  };\n}\n\n/** The properties of an addon */\nexport interface AddonProperties {\n  /** the discriminator possible values: SRM, VR, HCX, Arc */\n  addonType: AddonType;\n  /** The state of the addon provisioning */\n  readonly provisioningState?: AddonProvisioningState;\n}\n\nexport function addonPropertiesUnionSerializer(item: AddonPropertiesUnion) {\n  switch (item.addonType) {\n    case \"SRM\":\n      return addonSrmPropertiesSerializer(item as AddonSrmProperties);\n\n    case \"VR\":\n      return addonVrPropertiesSerializer(item as AddonVrProperties);\n\n    case \"HCX\":\n      return addonHcxPropertiesSerializer(item as AddonHcxProperties);\n\n    case \"Arc\":\n      return addonArcPropertiesSerializer(item as AddonArcProperties);\n\n    default:\n      return addonPropertiesSerializer(item);\n  }\n}\n\nexport function addonPropertiesSerializer(\n  item: AddonPropertiesUnion,\n): AddonPropertiesRest {\n  return {\n    addonType: item[\"addonType\"],\n  };\n}\n\n/** The properties of a Site Recovery Manager (SRM) addon */\nexport interface AddonSrmProperties extends AddonProperties {\n  /** The Site Recovery Manager (SRM) license */\n  licenseKey?: string;\n  /** The type of private cloud addon */\n  addonType: \"SRM\";\n}\n\nexport function addonSrmPropertiesSerializer(\n  item: AddonSrmProperties,\n): AddonSrmPropertiesRest {\n  return {\n    addonType: item[\"addonType\"],\n    licenseKey: item[\"licenseKey\"],\n  };\n}\n\n/** The properties of a vSphere Replication (VR) addon */\nexport interface AddonVrProperties extends AddonProperties {\n  /** The vSphere Replication Server (VRS) count */\n  vrsCount: number;\n  /** The type of private cloud addon */\n  addonType: \"VR\";\n}\n\nexport function addonVrPropertiesSerializer(\n  item: AddonVrProperties,\n): AddonVrPropertiesRest {\n  return {\n    addonType: item[\"addonType\"],\n    vrsCount: item[\"vrsCount\"],\n  };\n}\n\n/** The properties of an HCX addon */\nexport interface AddonHcxProperties extends AddonProperties {\n  /** The HCX offer, example VMware MaaS Cloud Provider (Enterprise) */\n  offer: string;\n  /** The type of private cloud addon */\n  addonType: \"HCX\";\n}\n\nexport function addonHcxPropertiesSerializer(\n  item: AddonHcxProperties,\n): AddonHcxPropertiesRest {\n  return {\n    addonType: item[\"addonType\"],\n    offer: item[\"offer\"],\n  };\n}\n\n/** The properties of an Arc addon */\nexport interface AddonArcProperties extends AddonProperties {\n  /** The VMware vCenter resource ID */\n  vCenter?: string;\n  /** The type of private cloud addon */\n  addonType: \"Arc\";\n}\n\nexport function addonArcPropertiesSerializer(\n  item: AddonArcProperties,\n): AddonArcPropertiesRest {\n  return {\n    addonType: item[\"addonType\"],\n    vCenter: item[\"vCenter\"],\n  };\n}\n\n/** Addon type */\nexport type AddonType = \"SRM\" | \"VR\" | \"HCX\" | \"Arc\";\n\n/** The response of a CloudLink list operation. */\nexport interface _CloudLinkList {\n  /** The CloudLink items on this page */\n  value: CloudLink[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A cloud link resource */\nexport interface CloudLink extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: CloudLinkProperties;\n}\n\nexport function cloudLinkSerializer(item: CloudLink): CloudLinkRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : cloudLinkPropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a cloud link. */\nexport interface CloudLinkProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: CloudLinkProvisioningState;\n  /** The state of the cloud link. */\n  readonly status?: CloudLinkStatus;\n  /** Identifier of the other private cloud participating in the link. */\n  linkedCloud?: string;\n}\n\nexport function cloudLinkPropertiesSerializer(\n  item: CloudLinkProperties,\n): CloudLinkPropertiesRest {\n  return {\n    linkedCloud: item[\"linkedCloud\"],\n  };\n}\n\n/** Cloud Link status */\nexport type CloudLinkStatus =\n  | \"Active\"\n  | \"Building\"\n  | \"Deleting\"\n  | \"Failed\"\n  | \"Disconnected\";\n\n/** The response of a WorkloadNetworkPublicIP list operation. */\nexport interface _WorkloadNetworkPublicIPsList {\n  /** The WorkloadNetworkPublicIP items on this page */\n  value: WorkloadNetworkPublicIP[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX Public IP Block */\nexport interface WorkloadNetworkPublicIP extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkPublicIPProperties;\n}\n\nexport function workloadNetworkPublicIPSerializer(\n  item: WorkloadNetworkPublicIP,\n): WorkloadNetworkPublicIPRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkPublicIPPropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX Public IP Block Properties */\nexport interface WorkloadNetworkPublicIPProperties {\n  /** Display name of the Public IP Block. */\n  displayName?: string;\n  /** Number of Public IPs requested. */\n  numberOfPublicIPs?: number;\n  /** CIDR Block of the Public IP Block. */\n  readonly publicIPBlock?: string;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkPublicIPProvisioningState;\n}\n\nexport function workloadNetworkPublicIPPropertiesSerializer(\n  item: WorkloadNetworkPublicIPProperties,\n): WorkloadNetworkPublicIPPropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    numberOfPublicIPs: item[\"numberOfPublicIPs\"],\n  };\n}\n\n/** The response of a WorkloadNetworkDnsZone list operation. */\nexport interface _WorkloadNetworkDnsZonesList {\n  /** The WorkloadNetworkDnsZone items on this page */\n  value: WorkloadNetworkDnsZone[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX DNS Zone */\nexport interface WorkloadNetworkDnsZone extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkDnsZoneProperties;\n}\n\nexport function workloadNetworkDnsZoneSerializer(\n  item: WorkloadNetworkDnsZone,\n): WorkloadNetworkDnsZoneRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkDnsZonePropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX DNS Zone Properties */\nexport interface WorkloadNetworkDnsZoneProperties {\n  /** Display name of the DNS Zone. */\n  displayName?: string;\n  /** Domain names of the DNS Zone. */\n  domain?: string[];\n  /** DNS Server IP array of the DNS Zone. */\n  dnsServerIps?: string[];\n  /** Source IP of the DNS Zone. */\n  sourceIp?: string;\n  /** Number of DNS Services using the DNS zone. */\n  dnsServices?: number;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkDnsZoneProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkDnsZonePropertiesSerializer(\n  item: WorkloadNetworkDnsZoneProperties,\n): WorkloadNetworkDnsZonePropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    domain: item[\"domain\"],\n    dnsServerIps: item[\"dnsServerIps\"],\n    sourceIp: item[\"sourceIp\"],\n    dnsServices: item[\"dnsServices\"],\n    revision: item[\"revision\"],\n  };\n}\n\n/** The response of a WorkloadNetworkDnsService list operation. */\nexport interface _WorkloadNetworkDnsServicesList {\n  /** The WorkloadNetworkDnsService items on this page */\n  value: WorkloadNetworkDnsService[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX DNS Service */\nexport interface WorkloadNetworkDnsService extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkDnsServiceProperties;\n}\n\nexport function workloadNetworkDnsServiceSerializer(\n  item: WorkloadNetworkDnsService,\n): WorkloadNetworkDnsServiceRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkDnsServicePropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX DNS Service Properties */\nexport interface WorkloadNetworkDnsServiceProperties {\n  /** Display name of the DNS Service. */\n  displayName?: string;\n  /** DNS service IP of the DNS Service. */\n  dnsServiceIp?: string;\n  /** Default DNS zone of the DNS Service. */\n  defaultDnsZone?: string;\n  /** FQDN zones of the DNS Service. */\n  fqdnZones?: string[];\n  /** DNS Service log level. */\n  logLevel?: DnsServiceLogLevelEnum;\n  /** DNS Service status. */\n  readonly status?: DnsServiceStatusEnum;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkDnsServiceProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkDnsServicePropertiesSerializer(\n  item: WorkloadNetworkDnsServiceProperties,\n): WorkloadNetworkDnsServicePropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    dnsServiceIp: item[\"dnsServiceIp\"],\n    defaultDnsZone: item[\"defaultDnsZone\"],\n    fqdnZones: item[\"fqdnZones\"],\n    logLevel: item[\"logLevel\"],\n    revision: item[\"revision\"],\n  };\n}\n\n/** DNS service log level */\nexport type DnsServiceLogLevelEnum =\n  | \"DEBUG\"\n  | \"INFO\"\n  | \"WARNING\"\n  | \"ERROR\"\n  | \"FATAL\";\n/** DNS service status */\nexport type DnsServiceStatusEnum = \"SUCCESS\" | \"FAILURE\";\n\n/** The response of a WorkloadNetworkVirtualMachine list operation. */\nexport interface _WorkloadNetworkVirtualMachinesList {\n  /** The WorkloadNetworkVirtualMachine items on this page */\n  value: WorkloadNetworkVirtualMachine[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX Virtual Machine */\nexport interface WorkloadNetworkVirtualMachine extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkVirtualMachineProperties;\n}\n\n/** NSX Virtual Machine Properties */\nexport interface WorkloadNetworkVirtualMachineProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: WorkloadNetworkProvisioningState;\n  /** Display name of the VM. */\n  displayName?: string;\n  /** Virtual machine type. */\n  readonly vmType?: VMTypeEnum;\n}\n\n/** VM type */\nexport type VMTypeEnum = \"REGULAR\" | \"EDGE\" | \"SERVICE\";\n\n/** The response of a WorkloadNetworkVMGroup list operation. */\nexport interface _WorkloadNetworkVMGroupsList {\n  /** The WorkloadNetworkVMGroup items on this page */\n  value: WorkloadNetworkVMGroup[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX VM Group */\nexport interface WorkloadNetworkVMGroup extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkVMGroupProperties;\n}\n\nexport function workloadNetworkVMGroupSerializer(\n  item: WorkloadNetworkVMGroup,\n): WorkloadNetworkVMGroupRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkVMGroupPropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX VM Group Properties */\nexport interface WorkloadNetworkVMGroupProperties {\n  /** Display name of the VM group. */\n  displayName?: string;\n  /** Virtual machine members of this group. */\n  members?: string[];\n  /** VM Group status. */\n  readonly status?: VMGroupStatusEnum;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkVMGroupProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkVMGroupPropertiesSerializer(\n  item: WorkloadNetworkVMGroupProperties,\n): WorkloadNetworkVMGroupPropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    members: item[\"members\"],\n    revision: item[\"revision\"],\n  };\n}\n\n/** VM group status */\nexport type VMGroupStatusEnum = \"SUCCESS\" | \"FAILURE\";\n\n/** The response of a WorkloadNetworkPortMirroring list operation. */\nexport interface _WorkloadNetworkPortMirroringList {\n  /** The WorkloadNetworkPortMirroring items on this page */\n  value: WorkloadNetworkPortMirroring[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX Port Mirroring */\nexport interface WorkloadNetworkPortMirroring extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkPortMirroringProperties;\n}\n\nexport function workloadNetworkPortMirroringSerializer(\n  item: WorkloadNetworkPortMirroring,\n): WorkloadNetworkPortMirroringRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkPortMirroringPropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX Port Mirroring Properties */\nexport interface WorkloadNetworkPortMirroringProperties {\n  /** Display name of the port mirroring profile. */\n  displayName?: string;\n  /** Direction of port mirroring profile. */\n  direction?: PortMirroringDirectionEnum;\n  /** Source VM Group. */\n  source?: string;\n  /** Destination VM Group. */\n  destination?: string;\n  /** Port Mirroring Status. */\n  readonly status?: PortMirroringStatusEnum;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkPortMirroringProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkPortMirroringPropertiesSerializer(\n  item: WorkloadNetworkPortMirroringProperties,\n): WorkloadNetworkPortMirroringPropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    direction: item[\"direction\"],\n    source: item[\"source\"],\n    destination: item[\"destination\"],\n    revision: item[\"revision\"],\n  };\n}\n\n/** Port Mirroring Direction */\nexport type PortMirroringDirectionEnum = \"INGRESS\" | \"EGRESS\" | \"BIDIRECTIONAL\";\n/** Port Mirroring status */\nexport type PortMirroringStatusEnum = \"SUCCESS\" | \"FAILURE\";\n\n/** The response of a WorkloadNetworkGateway list operation. */\nexport interface _WorkloadNetworkGatewayList {\n  /** The WorkloadNetworkGateway items on this page */\n  value: WorkloadNetworkGateway[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX Gateway. */\nexport interface WorkloadNetworkGateway extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkGatewayProperties;\n}\n\n/** Properties of a NSX Gateway. */\nexport interface WorkloadNetworkGatewayProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: WorkloadNetworkProvisioningState;\n  /** Display name of the DHCP entity. */\n  displayName?: string;\n  /** NSX Gateway Path. */\n  readonly path?: string;\n}\n\n/** The response of a WorkloadNetworkDhcp list operation. */\nexport interface _WorkloadNetworkDhcpList {\n  /** The WorkloadNetworkDhcp items on this page */\n  value: WorkloadNetworkDhcp[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX DHCP */\nexport interface WorkloadNetworkDhcp extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkDhcpEntityUnion;\n}\n\nexport function workloadNetworkDhcpSerializer(\n  item: WorkloadNetworkDhcp,\n): WorkloadNetworkDhcpRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkDhcpEntityUnionSerializer(item.properties),\n  };\n}\n\n/**\n * Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to\n * inherit from\n */\nexport interface WorkloadNetworkDhcpEntity {\n  /** the discriminator possible values: SERVER, RELAY */\n  dhcpType: DhcpTypeEnum;\n  /** Display name of the DHCP entity. */\n  displayName?: string;\n  /** NSX Segments consuming DHCP. */\n  readonly segments?: string[];\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkDhcpProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkDhcpEntityUnionSerializer(\n  item: WorkloadNetworkDhcpEntityUnion,\n) {\n  switch (item.dhcpType) {\n    case \"SERVER\":\n      return workloadNetworkDhcpServerSerializer(\n        item as WorkloadNetworkDhcpServer,\n      );\n\n    case \"RELAY\":\n      return workloadNetworkDhcpRelaySerializer(\n        item as WorkloadNetworkDhcpRelay,\n      );\n\n    default:\n      return workloadNetworkDhcpEntitySerializer(item);\n  }\n}\n\nexport function workloadNetworkDhcpEntitySerializer(\n  item: WorkloadNetworkDhcpEntityUnion,\n): WorkloadNetworkDhcpEntityRest {\n  return {\n    dhcpType: item[\"dhcpType\"],\n    displayName: item[\"displayName\"],\n    revision: item[\"revision\"],\n  };\n}\n\n/** NSX DHCP Server */\nexport interface WorkloadNetworkDhcpServer extends WorkloadNetworkDhcpEntity {\n  /** DHCP Server Address. */\n  serverAddress?: string;\n  /** DHCP Server Lease Time. */\n  leaseTime?: number;\n  /** Type of DHCP: SERVER or RELAY. */\n  dhcpType: \"SERVER\";\n}\n\nexport function workloadNetworkDhcpServerSerializer(\n  item: WorkloadNetworkDhcpServer,\n): WorkloadNetworkDhcpServerRest {\n  return {\n    dhcpType: item[\"dhcpType\"],\n    displayName: item[\"displayName\"],\n    revision: item[\"revision\"],\n    serverAddress: item[\"serverAddress\"],\n    leaseTime: item[\"leaseTime\"],\n  };\n}\n\n/** NSX DHCP Relay */\nexport interface WorkloadNetworkDhcpRelay extends WorkloadNetworkDhcpEntity {\n  /** DHCP Relay Addresses. Max 3. */\n  serverAddresses?: string[];\n  /** Type of DHCP: SERVER or RELAY. */\n  dhcpType: \"RELAY\";\n}\n\nexport function workloadNetworkDhcpRelaySerializer(\n  item: WorkloadNetworkDhcpRelay,\n): WorkloadNetworkDhcpRelayRest {\n  return {\n    dhcpType: item[\"dhcpType\"],\n    displayName: item[\"displayName\"],\n    revision: item[\"revision\"],\n    serverAddresses: item[\"serverAddresses\"],\n  };\n}\n\n/** Type of DHCP: SERVER or RELAY. */\nexport type DhcpTypeEnum = \"SERVER\" | \"RELAY\";\n\n/** The response of a WorkloadNetworkSegment list operation. */\nexport interface _WorkloadNetworkSegmentsList {\n  /** The WorkloadNetworkSegment items on this page */\n  value: WorkloadNetworkSegment[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** NSX Segment */\nexport interface WorkloadNetworkSegment extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkSegmentProperties;\n}\n\nexport function workloadNetworkSegmentSerializer(\n  item: WorkloadNetworkSegment,\n): WorkloadNetworkSegmentRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : workloadNetworkSegmentPropertiesSerializer(item.properties),\n  };\n}\n\n/** NSX Segment Properties */\nexport interface WorkloadNetworkSegmentProperties {\n  /** Display name of the segment. */\n  displayName?: string;\n  /** Gateway which to connect segment to. */\n  connectedGateway?: string;\n  /** Subnet which to connect segment to. */\n  subnet?: WorkloadNetworkSegmentSubnet;\n  /** Port Vif which segment is associated with. */\n  readonly portVif?: WorkloadNetworkSegmentPortVif[];\n  /** Segment status. */\n  readonly status?: SegmentStatusEnum;\n  /** The provisioning state */\n  readonly provisioningState?: WorkloadNetworkSegmentProvisioningState;\n  /** NSX revision number. */\n  revision?: number;\n}\n\nexport function workloadNetworkSegmentPropertiesSerializer(\n  item: WorkloadNetworkSegmentProperties,\n): WorkloadNetworkSegmentPropertiesRest {\n  return {\n    displayName: item[\"displayName\"],\n    connectedGateway: item[\"connectedGateway\"],\n    subnet: !item.subnet\n      ? item.subnet\n      : workloadNetworkSegmentSubnetSerializer(item.subnet),\n    revision: item[\"revision\"],\n  };\n}\n\n/** Subnet configuration for segment */\nexport interface WorkloadNetworkSegmentSubnet {\n  /** DHCP Range assigned for subnet. */\n  dhcpRanges?: string[];\n  /** Gateway address. */\n  gatewayAddress?: string;\n}\n\nexport function workloadNetworkSegmentSubnetSerializer(\n  item: WorkloadNetworkSegmentSubnet,\n): WorkloadNetworkSegmentSubnetRest {\n  return {\n    dhcpRanges: item[\"dhcpRanges\"],\n    gatewayAddress: item[\"gatewayAddress\"],\n  };\n}\n\n/** Ports and any VIF attached to segment. */\nexport interface WorkloadNetworkSegmentPortVif {\n  /** Name of port or VIF attached to segment. */\n  portName?: string;\n}\n\n/** Segment status */\nexport type SegmentStatusEnum = \"SUCCESS\" | \"FAILURE\";\n\n/** Workload Network */\nexport interface WorkloadNetwork extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: WorkloadNetworkProperties;\n}\n\n/** The properties of a workload network */\nexport interface WorkloadNetworkProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: WorkloadNetworkProvisioningState;\n}\n\n/** The response of a WorkloadNetwork list operation. */\nexport interface _WorkloadNetworkList {\n  /** The WorkloadNetwork items on this page */\n  value: WorkloadNetwork[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** The response of a GlobalReachConnection list operation. */\nexport interface _GlobalReachConnectionList {\n  /** The GlobalReachConnection items on this page */\n  value: GlobalReachConnection[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A global reach connection resource */\nexport interface GlobalReachConnection extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: GlobalReachConnectionProperties;\n}\n\nexport function globalReachConnectionSerializer(\n  item: GlobalReachConnection,\n): GlobalReachConnectionRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : globalReachConnectionPropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a global reach connection */\nexport interface GlobalReachConnectionProperties {\n  /** The state of the  ExpressRoute Circuit Authorization provisioning */\n  readonly provisioningState?: GlobalReachConnectionProvisioningState;\n  /**\n   * The network used for global reach carved out from the original network block\n   * provided for the private cloud\n   */\n  readonly addressPrefix?: string;\n  /**\n   * Authorization key from the peer express route used for the global reach\n   * connection\n   */\n  authorizationKey?: string;\n  /** The connection status of the global reach connection */\n  readonly circuitConnectionStatus?: GlobalReachConnectionStatus;\n  /**\n   * Identifier of the ExpressRoute Circuit to peer with in the global reach\n   * connection\n   */\n  peerExpressRouteCircuit?: string;\n  /**\n   * The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\n   * global reach connection\n   */\n  expressRouteId?: string;\n}\n\nexport function globalReachConnectionPropertiesSerializer(\n  item: GlobalReachConnectionProperties,\n): GlobalReachConnectionPropertiesRest {\n  return {\n    authorizationKey: item[\"authorizationKey\"],\n    peerExpressRouteCircuit: item[\"peerExpressRouteCircuit\"],\n    expressRouteId: item[\"expressRouteId\"],\n  };\n}\n\n/** Global Reach Connection status */\nexport type GlobalReachConnectionStatus =\n  | \"Connected\"\n  | \"Connecting\"\n  | \"Disconnected\";\n\n/** The response of a ExpressRouteAuthorization list operation. */\nexport interface _ExpressRouteAuthorizationList {\n  /** The ExpressRouteAuthorization items on this page */\n  value: ExpressRouteAuthorization[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** ExpressRoute Circuit Authorization */\nexport interface ExpressRouteAuthorization extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ExpressRouteAuthorizationProperties;\n}\n\nexport function expressRouteAuthorizationSerializer(\n  item: ExpressRouteAuthorization,\n): ExpressRouteAuthorizationRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : expressRouteAuthorizationPropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of an ExpressRoute Circuit Authorization resource */\nexport interface ExpressRouteAuthorizationProperties {\n  /** The state of the ExpressRoute Circuit Authorization provisioning */\n  readonly provisioningState?: ExpressRouteAuthorizationProvisioningState;\n  /** The ID of the ExpressRoute Circuit Authorization */\n  readonly expressRouteAuthorizationId?: string;\n  /** The key of the ExpressRoute Circuit Authorization */\n  readonly expressRouteAuthorizationKey?: string;\n  /** The ID of the ExpressRoute Circuit */\n  expressRouteId?: string;\n}\n\nexport function expressRouteAuthorizationPropertiesSerializer(\n  item: ExpressRouteAuthorizationProperties,\n): ExpressRouteAuthorizationPropertiesRest {\n  return {\n    expressRouteId: item[\"expressRouteId\"],\n  };\n}\n\n/** The response of a HcxEnterpriseSite list operation. */\nexport interface _HcxEnterpriseSiteList {\n  /** The HcxEnterpriseSite items on this page */\n  value: HcxEnterpriseSite[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** An HCX Enterprise Site resource */\nexport interface HcxEnterpriseSite extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: HcxEnterpriseSiteProperties;\n}\n\nexport function hcxEnterpriseSiteSerializer(\n  item: HcxEnterpriseSite,\n): HcxEnterpriseSiteRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : hcxEnterpriseSitePropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of an HCX Enterprise Site */\nexport interface HcxEnterpriseSiteProperties {\n  /** The provisioning state of the resource. */\n  readonly provisioningState?: HcxEnterpriseSiteProvisioningState;\n  /** The activation key */\n  readonly activationKey?: string;\n  /** The status of the HCX Enterprise Site */\n  readonly status?: HcxEnterpriseSiteStatus;\n}\n\nexport function hcxEnterpriseSitePropertiesSerializer(\n  item: HcxEnterpriseSiteProperties,\n) {\n  return item as any;\n}\n\n/** HCX Enterprise Site status */\nexport type HcxEnterpriseSiteStatus =\n  | \"Available\"\n  | \"Consumed\"\n  | \"Deactivated\"\n  | \"Deleted\";\n\n/** The response of a Datastore list operation. */\nexport interface _DatastoreList {\n  /** The Datastore items on this page */\n  value: Datastore[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A datastore resource */\nexport interface Datastore extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: DatastoreProperties;\n}\n\nexport function datastoreSerializer(item: Datastore): DatastoreRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : datastorePropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a datastore */\nexport interface DatastoreProperties {\n  /** The state of the datastore provisioning */\n  readonly provisioningState?: DatastoreProvisioningState;\n  /** An Azure NetApp Files volume */\n  netAppVolume?: NetAppVolume;\n  /** An iSCSI volume */\n  diskPoolVolume?: DiskPoolVolume;\n  /** An Elastic SAN volume */\n  elasticSanVolume?: ElasticSanVolume;\n  /** The operational status of the datastore */\n  readonly status?: DatastoreStatus;\n}\n\nexport function datastorePropertiesSerializer(\n  item: DatastoreProperties,\n): DatastorePropertiesRest {\n  return {\n    netAppVolume: !item.netAppVolume\n      ? item.netAppVolume\n      : netAppVolumeSerializer(item.netAppVolume),\n    diskPoolVolume: !item.diskPoolVolume\n      ? item.diskPoolVolume\n      : diskPoolVolumeSerializer(item.diskPoolVolume),\n    elasticSanVolume: !item.elasticSanVolume\n      ? item.elasticSanVolume\n      : elasticSanVolumeSerializer(item.elasticSanVolume),\n  };\n}\n\n/** An Azure NetApp Files volume from Microsoft.NetApp provider */\nexport interface NetAppVolume {\n  /** Azure resource ID of the NetApp volume */\n  id: string;\n}\n\nexport function netAppVolumeSerializer(item: NetAppVolume): NetAppVolumeRest {\n  return {\n    id: item[\"id\"],\n  };\n}\n\n/** An iSCSI volume from Microsoft.StoragePool provider */\nexport interface DiskPoolVolume {\n  /** Azure resource ID of the iSCSI target */\n  targetId: string;\n  /** Name of the LUN to be used for datastore */\n  lunName: string;\n  /**\n   * Mode that describes whether the LUN has to be mounted as a datastore or\n   * attached as a LUN\n   */\n  mountOption?: MountOptionEnum;\n  /** Device path */\n  readonly path?: string;\n}\n\nexport function diskPoolVolumeSerializer(\n  item: DiskPoolVolume,\n): DiskPoolVolumeRest {\n  return {\n    targetId: item[\"targetId\"],\n    lunName: item[\"lunName\"],\n    mountOption: item[\"mountOption\"],\n  };\n}\n\n/** mount option */\nexport type MountOptionEnum = \"MOUNT\" | \"ATTACH\";\n\n/** An Elastic SAN volume from Microsoft.ElasticSan provider */\nexport interface ElasticSanVolume {\n  /** Azure resource ID of the Elastic SAN Volume */\n  targetId: string;\n}\n\nexport function elasticSanVolumeSerializer(\n  item: ElasticSanVolume,\n): ElasticSanVolumeRest {\n  return {\n    targetId: item[\"targetId\"],\n  };\n}\n\n/** datastore status */\nexport type DatastoreStatus =\n  | \"Unknown\"\n  | \"Accessible\"\n  | \"Inaccessible\"\n  | \"Attached\"\n  | \"Detached\"\n  | \"LostCommunication\"\n  | \"DeadOrError\";\n\n/** The response of a Cluster list operation. */\nexport interface _ClusterList {\n  /** The Cluster items on this page */\n  value: Cluster[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** A cluster resource */\nexport interface Cluster extends ProxyResource {\n  /** The resource-specific properties for this resource. */\n  properties?: ClusterProperties;\n  /** The SKU (Stock Keeping Unit) assigned to this resource. */\n  sku: Sku;\n}\n\nexport function clusterSerializer(item: Cluster): ClusterRest {\n  return {\n    properties: !item.properties\n      ? item.properties\n      : clusterPropertiesSerializer(item.properties),\n    sku: skuSerializer(item.sku),\n  };\n}\n\n/** The properties of a cluster */\nexport interface ClusterProperties {\n  /** The cluster size */\n  clusterSize?: number;\n  /** The state of the cluster provisioning */\n  readonly provisioningState?: ClusterProvisioningState;\n  /** The identity */\n  readonly clusterId?: number;\n  /** The hosts */\n  hosts?: string[];\n  /** Name of the vsan datastore associated with the cluster */\n  vsanDatastoreName?: string;\n}\n\nexport function clusterPropertiesSerializer(\n  item: ClusterProperties,\n): ClusterPropertiesRest {\n  return {\n    clusterSize: item[\"clusterSize\"],\n    hosts: item[\"hosts\"],\n    vsanDatastoreName: item[\"vsanDatastoreName\"],\n  };\n}\n\n/** The resource model definition representing SKU */\nexport interface Sku {\n  /** The name of the SKU. Ex - P3. It is typically a letter+number code */\n  name: string;\n  /** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */\n  tier?: SkuTier;\n  /** The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. */\n  size?: string;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */\n  capacity?: number;\n}\n\nexport function skuSerializer(item: Sku): SkuRest {\n  return {\n    name: item[\"name\"],\n    tier: item[\"tier\"],\n    size: item[\"size\"],\n    family: item[\"family\"],\n    capacity: item[\"capacity\"],\n  };\n}\n\n/** This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT. */\nexport type SkuTier = \"Free\" | \"Basic\" | \"Standard\" | \"Premium\";\n\n/** An update of a cluster resource */\nexport interface ClusterUpdate {\n  /** The SKU (Stock Keeping Unit) assigned to this resource. */\n  sku?: Sku;\n  /** The properties of a cluster resource that may be updated */\n  properties?: ClusterUpdateProperties;\n}\n\nexport function clusterUpdateSerializer(\n  item: ClusterUpdate,\n): ClusterUpdateRest {\n  return {\n    sku: !item.sku ? item.sku : skuSerializer(item.sku),\n    properties: !item.properties\n      ? item.properties\n      : clusterUpdatePropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a cluster that may be updated */\nexport interface ClusterUpdateProperties {\n  /** The cluster size */\n  clusterSize?: number;\n  /** The hosts */\n  hosts?: string[];\n}\n\nexport function clusterUpdatePropertiesSerializer(\n  item: ClusterUpdateProperties,\n): ClusterUpdatePropertiesRest {\n  return {\n    clusterSize: item[\"clusterSize\"],\n    hosts: item[\"hosts\"],\n  };\n}\n\n/** List of all zones and associated hosts for a cluster */\nexport interface ClusterZoneList {\n  /** Zone and associated hosts info */\n  zones?: ClusterZone[];\n}\n\n/** Zone and associated hosts info */\nexport interface ClusterZone {\n  /** List of hosts belonging to the availability zone in a cluster */\n  readonly hosts?: string[];\n  /** Availability zone identifier */\n  readonly zone?: string;\n}\n\n/** The response of a PrivateCloud list operation. */\nexport interface _PrivateCloudList {\n  /** The PrivateCloud items on this page */\n  value: PrivateCloud[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\nexport function trackedResourceSerializer(\n  item: TrackedResource,\n): TrackedResourceRest {\n  return {\n    tags: !item.tags ? item.tags : (serializeRecord(item.tags as any) as any),\n    location: item[\"location\"],\n  };\n}\n\n/** A private cloud resource */\nexport interface PrivateCloud extends TrackedResource {\n  /** The resource-specific properties for this resource. */\n  properties?: PrivateCloudProperties;\n  /** The SKU (Stock Keeping Unit) assigned to this resource. */\n  sku: Sku;\n  /** The managed service identities assigned to this resource. */\n  identity?: SystemAssignedServiceIdentity;\n}\n\nexport function privateCloudSerializer(item: PrivateCloud): PrivateCloudRest {\n  return {\n    tags: !item.tags ? item.tags : (serializeRecord(item.tags as any) as any),\n    location: item[\"location\"],\n    properties: !item.properties\n      ? item.properties\n      : privateCloudPropertiesSerializer(item.properties),\n    sku: skuSerializer(item.sku),\n    identity: !item.identity\n      ? item.identity\n      : systemAssignedServiceIdentitySerializer(item.identity),\n  };\n}\n\n/** The properties of a private cloud resource */\nexport interface PrivateCloudProperties {\n  /** The default cluster used for management */\n  managementCluster: ManagementCluster;\n  /** Connectivity to internet is enabled or disabled */\n  internet?: InternetEnum;\n  /** vCenter Single Sign On Identity Sources */\n  identitySources?: IdentitySource[];\n  /** Properties describing how the cloud is distributed across availability zones */\n  availability?: AvailabilityProperties;\n  /** Customer managed key encryption, can be enabled or disabled */\n  encryption?: Encryption;\n  /**\n   * Array of additional networks noncontiguous with networkBlock. Networks must be\n   * unique and non-overlapping across VNet in your subscription, on-premise, and\n   * this privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n   * (A.B.C.D/X).\n   */\n  extendedNetworkBlocks?: string[];\n  /** The provisioning state */\n  readonly provisioningState?: PrivateCloudProvisioningState;\n  /** An ExpressRoute Circuit */\n  circuit?: Circuit;\n  /** The endpoints */\n  readonly endpoints?: Endpoints;\n  /**\n   * The block of addresses should be unique across VNet in your subscription as\n   * well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\n   * A,B,C,D are between 0 and 255, and X is between 0 and 22\n   */\n  networkBlock: string;\n  /** Network used to access vCenter Server and NSX-T Manager */\n  readonly managementNetwork?: string;\n  /** Used for virtual machine cold migration, cloning, and snapshot migration */\n  readonly provisioningNetwork?: string;\n  /** Used for live migration of virtual machines */\n  readonly vmotionNetwork?: string;\n  /** Optionally, set the vCenter admin password when the private cloud is created */\n  vcenterPassword?: string;\n  /** Optionally, set the NSX-T Manager password when the private cloud is created */\n  nsxtPassword?: string;\n  /** Thumbprint of the vCenter Server SSL certificate */\n  readonly vcenterCertificateThumbprint?: string;\n  /** Thumbprint of the NSX-T Manager SSL certificate */\n  readonly nsxtCertificateThumbprint?: string;\n  /** Array of cloud link IDs from other clouds that connect to this one */\n  readonly externalCloudLinks?: string[];\n  /**\n   * A secondary expressRoute circuit from a separate AZ. Only present in a\n   * stretched private cloud\n   */\n  secondaryCircuit?: Circuit;\n  /**\n   * Flag to indicate whether the private cloud has the quota for provisioned NSX\n   * Public IP count raised from 64 to 1024\n   */\n  readonly nsxPublicIpQuotaRaised?: NsxPublicIpQuotaRaisedEnum;\n  /** Azure resource ID of the virtual network */\n  virtualNetworkId?: string;\n  /** The type of DNS zone to use. */\n  dnsZoneType?: DnsZoneType;\n}\n\nexport function privateCloudPropertiesSerializer(\n  item: PrivateCloudProperties,\n): PrivateCloudPropertiesRest {\n  return {\n    managementCluster: managementClusterSerializer(item.managementCluster),\n    internet: item[\"internet\"],\n    identitySources:\n      item[\"identitySources\"] === undefined\n        ? item[\"identitySources\"]\n        : item[\"identitySources\"].map(identitySourceSerializer),\n    availability: !item.availability\n      ? item.availability\n      : availabilityPropertiesSerializer(item.availability),\n    encryption: !item.encryption\n      ? item.encryption\n      : encryptionSerializer(item.encryption),\n    extendedNetworkBlocks: item[\"extendedNetworkBlocks\"],\n    circuit: !item.circuit ? item.circuit : circuitSerializer(item.circuit),\n    networkBlock: item[\"networkBlock\"],\n    vcenterPassword: item[\"vcenterPassword\"],\n    nsxtPassword: item[\"nsxtPassword\"],\n    secondaryCircuit: !item.secondaryCircuit\n      ? item.secondaryCircuit\n      : circuitSerializer(item.secondaryCircuit),\n    virtualNetworkId: item[\"virtualNetworkId\"],\n    dnsZoneType: item[\"dnsZoneType\"],\n  };\n}\n\n/** The properties of a management cluster */\nexport interface ManagementCluster {\n  /** The cluster size */\n  clusterSize?: number;\n  /** The state of the cluster provisioning */\n  readonly provisioningState?: ClusterProvisioningState;\n  /** The identity */\n  readonly clusterId?: number;\n  /** The hosts */\n  hosts?: string[];\n  /** Name of the vsan datastore associated with the cluster */\n  vsanDatastoreName?: string;\n}\n\nexport function managementClusterSerializer(\n  item: ManagementCluster,\n): ManagementClusterRest {\n  return {\n    clusterSize: item[\"clusterSize\"],\n    hosts: item[\"hosts\"],\n    vsanDatastoreName: item[\"vsanDatastoreName\"],\n  };\n}\n\n/** Whether internet is enabled or disabled */\nexport type InternetEnum = \"Enabled\" | \"Disabled\";\n\n/** vCenter Single Sign On Identity Source */\nexport interface IdentitySource {\n  /** The name of the identity source */\n  name?: string;\n  /** The domain's NetBIOS name */\n  alias?: string;\n  /** The domain's dns name */\n  domain?: string;\n  /** The base distinguished name for users */\n  baseUserDN?: string;\n  /** The base distinguished name for groups */\n  baseGroupDN?: string;\n  /** Primary server URL */\n  primaryServer?: string;\n  /** Secondary server URL */\n  secondaryServer?: string;\n  /** Protect LDAP communication using SSL certificate (LDAPS) */\n  ssl?: SslEnum;\n  /**\n   * The ID of an Active Directory user with a minimum of read-only access to Base\n   * DN for users and group\n   */\n  username?: string;\n  /**\n   * The password of the Active Directory user with a minimum of read-only access to\n   * Base DN for users and groups.\n   */\n  password?: string;\n}\n\nexport function identitySourceSerializer(\n  item: IdentitySource,\n): IdentitySourceRest {\n  return {\n    name: item[\"name\"],\n    alias: item[\"alias\"],\n    domain: item[\"domain\"],\n    baseUserDN: item[\"baseUserDN\"],\n    baseGroupDN: item[\"baseGroupDN\"],\n    primaryServer: item[\"primaryServer\"],\n    secondaryServer: item[\"secondaryServer\"],\n    ssl: item[\"ssl\"],\n    username: item[\"username\"],\n    password: item[\"password\"],\n  };\n}\n\n/** Whether SSL is enabled or disabled */\nexport type SslEnum = \"Enabled\" | \"Disabled\";\n\n/** The properties describing private cloud availability zone distribution */\nexport interface AvailabilityProperties {\n  /** The availability strategy for the private cloud */\n  strategy?: AvailabilityStrategy;\n  /** The primary availability zone for the private cloud */\n  zone?: number;\n  /** The secondary availability zone for the private cloud */\n  secondaryZone?: number;\n}\n\nexport function availabilityPropertiesSerializer(\n  item: AvailabilityProperties,\n): AvailabilityPropertiesRest {\n  return {\n    strategy: item[\"strategy\"],\n    zone: item[\"zone\"],\n    secondaryZone: item[\"secondaryZone\"],\n  };\n}\n\n/** Whether the private clouds is available in a single zone or two zones */\nexport type AvailabilityStrategy = \"SingleZone\" | \"DualZone\";\n\n/** The properties of customer managed encryption key */\nexport interface Encryption {\n  /** Status of customer managed encryption key */\n  status?: EncryptionState;\n  /** The key vault where the encryption key is stored */\n  keyVaultProperties?: EncryptionKeyVaultProperties;\n}\n\nexport function encryptionSerializer(item: Encryption): EncryptionRest {\n  return {\n    status: item[\"status\"],\n    keyVaultProperties: !item.keyVaultProperties\n      ? item.keyVaultProperties\n      : encryptionKeyVaultPropertiesSerializer(item.keyVaultProperties),\n  };\n}\n\n/** Whether encryption is enabled or disabled */\nexport type EncryptionState = \"Enabled\" | \"Disabled\";\n\n/** An Encryption Key */\nexport interface EncryptionKeyVaultProperties {\n  /** The name of the key. */\n  keyName?: string;\n  /** The version of the key. */\n  keyVersion?: string;\n  /** The auto-detected version of the key if versionType is auto-detected. */\n  readonly autoDetectedKeyVersion?: string;\n  /** The URL of the vault. */\n  keyVaultUrl?: string;\n  /** The state of key provided */\n  readonly keyState?: EncryptionKeyStatus;\n  /** Property of the key if user provided or auto detected */\n  readonly versionType?: EncryptionVersionType;\n}\n\nexport function encryptionKeyVaultPropertiesSerializer(\n  item: EncryptionKeyVaultProperties,\n): EncryptionKeyVaultPropertiesRest {\n  return {\n    keyName: item[\"keyName\"],\n    keyVersion: item[\"keyVersion\"],\n    keyVaultUrl: item[\"keyVaultUrl\"],\n  };\n}\n\n/** Whether the the encryption key is connected or access denied */\nexport type EncryptionKeyStatus = \"Connected\" | \"AccessDenied\";\n/** Whether the encryption version is fixed or auto-detected */\nexport type EncryptionVersionType = \"Fixed\" | \"AutoDetected\";\n\n/** An ExpressRoute Circuit */\nexport interface Circuit {\n  /** CIDR of primary subnet */\n  readonly primarySubnet?: string;\n  /** CIDR of secondary subnet */\n  readonly secondarySubnet?: string;\n  /** Identifier of the ExpressRoute Circuit (Microsoft Colo only) */\n  readonly expressRouteID?: string;\n  /** ExpressRoute Circuit private peering identifier */\n  readonly expressRoutePrivatePeeringID?: string;\n}\n\nexport function circuitSerializer(item: Circuit) {\n  return item as any;\n}\n\n/** Endpoint addresses */\nexport interface Endpoints {\n  /** Endpoint FQDN for the NSX-T Data Center manager */\n  readonly nsxtManager?: string;\n  /** Endpoint FQDN for Virtual Center Server Appliance */\n  readonly vcsa?: string;\n  /** Endpoint FQDN for the HCX Cloud Manager */\n  readonly hcxCloudManager?: string;\n  /** Endpoint IP for the NSX-T Data Center manager */\n  readonly nsxtManagerIp?: string;\n  /** Endpoint IP for Virtual Center Server Appliance */\n  readonly vcenterIp?: string;\n  /** Endpoint IP for the HCX Cloud Manager */\n  readonly hcxCloudManagerIp?: string;\n}\n\n/** NSX public IP quota raised */\nexport type NsxPublicIpQuotaRaisedEnum = \"Enabled\" | \"Disabled\";\n/** The type of DNS zone. */\nexport type DnsZoneType = \"Public\" | \"Private\";\n\n/** Managed service identity (either system assigned, or none) */\nexport interface SystemAssignedServiceIdentity {\n  /** The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity. */\n  readonly principalId?: string;\n  /** The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity. */\n  readonly tenantId?: string;\n  /** The type of managed identity assigned to this resource. */\n  type: SystemAssignedServiceIdentityType;\n}\n\nexport function systemAssignedServiceIdentitySerializer(\n  item: SystemAssignedServiceIdentity,\n): SystemAssignedServiceIdentityRest {\n  return {\n    type: item[\"type\"],\n  };\n}\n\n/** Type of managed service identity (either system assigned, or none). */\nexport type SystemAssignedServiceIdentityType = \"None\" | \"SystemAssigned\";\n\n/** An update to a private cloud resource */\nexport interface PrivateCloudUpdate {\n  /** Resource tags. */\n  tags?: Record<string, string>;\n  /** The SKU (Stock Keeping Unit) assigned to this resource. */\n  sku?: Sku;\n  /** The managed service identities assigned to this resource. */\n  identity?: SystemAssignedServiceIdentity;\n  /** The updatable properties of a private cloud resource */\n  properties?: PrivateCloudUpdateProperties;\n}\n\nexport function privateCloudUpdateSerializer(\n  item: PrivateCloudUpdate,\n): PrivateCloudUpdateRest {\n  return {\n    tags: !item.tags ? item.tags : (serializeRecord(item.tags as any) as any),\n    sku: !item.sku ? item.sku : skuSerializer(item.sku),\n    identity: !item.identity\n      ? item.identity\n      : systemAssignedServiceIdentitySerializer(item.identity),\n    properties: !item.properties\n      ? item.properties\n      : privateCloudUpdatePropertiesSerializer(item.properties),\n  };\n}\n\n/** The properties of a private cloud resource that may be updated */\nexport interface PrivateCloudUpdateProperties {\n  /** The default cluster used for management */\n  managementCluster?: ManagementCluster;\n  /** Connectivity to internet is enabled or disabled */\n  internet?: InternetEnum;\n  /** vCenter Single Sign On Identity Sources */\n  identitySources?: IdentitySource[];\n  /** Properties describing how the cloud is distributed across availability zones */\n  availability?: AvailabilityProperties;\n  /** Customer managed key encryption, can be enabled or disabled */\n  encryption?: Encryption;\n  /**\n   * Array of additional networks noncontiguous with networkBlock. Networks must be\n   * unique and non-overlapping across VNet in your subscription, on-premise, and\n   * this privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n   * (A.B.C.D/X).\n   */\n  extendedNetworkBlocks?: string[];\n  /** The type of DNS zone to use. */\n  dnsZoneType?: DnsZoneType;\n}\n\nexport function privateCloudUpdatePropertiesSerializer(\n  item: PrivateCloudUpdateProperties,\n): PrivateCloudUpdatePropertiesRest {\n  return {\n    managementCluster: !item.managementCluster\n      ? item.managementCluster\n      : managementClusterSerializer(item.managementCluster),\n    internet: item[\"internet\"],\n    identitySources:\n      item[\"identitySources\"] === undefined\n        ? item[\"identitySources\"]\n        : item[\"identitySources\"].map(identitySourceSerializer),\n    availability: !item.availability\n      ? item.availability\n      : availabilityPropertiesSerializer(item.availability),\n    encryption: !item.encryption\n      ? item.encryption\n      : encryptionSerializer(item.encryption),\n    extendedNetworkBlocks: item[\"extendedNetworkBlocks\"],\n    dnsZoneType: item[\"dnsZoneType\"],\n  };\n}\n\n/** Administrative credentials for accessing vCenter and NSX-T */\nexport interface AdminCredentials {\n  /** NSX-T Manager username */\n  readonly nsxtUsername?: string;\n  /** NSX-T Manager password */\n  readonly nsxtPassword?: string;\n  /** vCenter admin username */\n  readonly vcenterUsername?: string;\n  /** vCenter admin password */\n  readonly vcenterPassword?: string;\n}\n\n/** Subscription trial availability */\nexport interface Trial {\n  /** Trial status */\n  readonly status?: TrialStatus;\n  /** Number of trial hosts available */\n  readonly availableHosts?: number;\n}\n\n/** trial status */\nexport type TrialStatus = \"TrialAvailable\" | \"TrialUsed\" | \"TrialDisabled\";\n\n/** Subscription quotas */\nexport interface Quota {\n  /** Remaining hosts quota by sku type */\n  readonly hostsRemaining?: Record<string, number>;\n  /** Host quota is active for current subscription */\n  readonly quotaEnabled?: QuotaEnabled;\n}\n\n/** quota enabled */\nexport type QuotaEnabled = \"Enabled\" | \"Disabled\";\n\n/** A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results. */\nexport interface _OperationListResult {\n  /** The Operation items on this page */\n  value: Operation[];\n  /** The link to the next page of items */\n  nextLink?: string;\n}\n\n/** Details of a REST API operation, returned from the Resource Provider Operations API */\nexport interface Operation {\n  /** The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\" */\n  readonly name?: string;\n  /** Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for Azure Resource Manager/control-plane operations. */\n  readonly isDataAction?: boolean;\n  /** Localized display information for this particular operation. */\n  display?: OperationDisplay;\n  /** The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\" */\n  readonly origin?: Origin;\n  /** Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs. */\n  actionType?: ActionType;\n}\n\n/** Localized display information for and operation. */\nexport interface OperationDisplay {\n  /** The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\". */\n  provider?: string;\n  /** The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\". */\n  resource?: string;\n  /** The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\". */\n  operation?: string;\n  /** The short, localized friendly description of the operation; suitable for tool tips and detailed views. */\n  description?: string;\n}\n\n/** The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\" */\nexport type Origin = \"user\" | \"system\" | \"user,system\";\n/** Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs. */\nexport type ActionType = \"Internal\";\n/** Azure VMware Solution API versions. */\nexport type Versions = \"2023-09-01\";\n/** Alias for IscsiPathProvisioningState */\nexport type IscsiPathProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Pending\"\n  | \"Building\"\n  | \"Deleting\"\n  | \"Updating\";\n/** Alias for ScriptExecutionParameterUnion */\nexport type ScriptExecutionParameterUnion =\n  | ScriptSecureStringExecutionParameter\n  | ScriptStringExecutionParameter\n  | PSCredentialExecutionParameter\n  | ScriptExecutionParameter;\n/** Alias for ScriptExecutionProvisioningState */\nexport type ScriptExecutionProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Pending\"\n  | \"Running\"\n  | \"Cancelling\"\n  | \"Cancelled\"\n  | \"Deleting\";\n/** Alias for ScriptCmdletProvisioningState */\nexport type ScriptCmdletProvisioningState = string | ResourceProvisioningState;\n/** Alias for ScriptPackageProvisioningState */\nexport type ScriptPackageProvisioningState = string | ResourceProvisioningState;\n/** Alias for PlacementPolicyPropertiesUnion */\nexport type PlacementPolicyPropertiesUnion =\n  | VmVmPlacementPolicyProperties\n  | VmHostPlacementPolicyProperties\n  | PlacementPolicyProperties;\n/** Alias for WorkloadNetworkProvisioningState */\nexport type WorkloadNetworkProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Building\"\n  | \"Deleting\"\n  | \"Updating\";\n/** Alias for PlacementPolicyProvisioningState */\nexport type PlacementPolicyProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for VirtualMachineProvisioningState */\nexport type VirtualMachineProvisioningState =\n  | string\n  | ResourceProvisioningState;\n/** Alias for AddonPropertiesUnion */\nexport type AddonPropertiesUnion =\n  | AddonSrmProperties\n  | AddonVrProperties\n  | AddonHcxProperties\n  | AddonArcProperties\n  | AddonProperties;\n/** Alias for AddonProvisioningState */\nexport type AddonProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Cancelled\"\n  | \"Building\"\n  | \"Deleting\"\n  | \"Updating\";\n/** Alias for CloudLinkProvisioningState */\nexport type CloudLinkProvisioningState = string | ResourceProvisioningState;\n/** Alias for WorkloadNetworkPublicIPProvisioningState */\nexport type WorkloadNetworkPublicIPProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkDnsZoneProvisioningState */\nexport type WorkloadNetworkDnsZoneProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkDnsServiceProvisioningState */\nexport type WorkloadNetworkDnsServiceProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkVMGroupProvisioningState */\nexport type WorkloadNetworkVMGroupProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkPortMirroringProvisioningState */\nexport type WorkloadNetworkPortMirroringProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkDhcpEntityUnion */\nexport type WorkloadNetworkDhcpEntityUnion =\n  | WorkloadNetworkDhcpServer\n  | WorkloadNetworkDhcpRelay\n  | WorkloadNetworkDhcpEntity;\n/** Alias for WorkloadNetworkDhcpProvisioningState */\nexport type WorkloadNetworkDhcpProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for WorkloadNetworkSegmentProvisioningState */\nexport type WorkloadNetworkSegmentProvisioningState =\n  | string\n  | WorkloadNetworkProvisioningState;\n/** Alias for GlobalReachConnectionProvisioningState */\nexport type GlobalReachConnectionProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Updating\";\n/** Alias for ExpressRouteAuthorizationProvisioningState */\nexport type ExpressRouteAuthorizationProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Updating\";\n/** Alias for HcxEnterpriseSiteProvisioningState */\nexport type HcxEnterpriseSiteProvisioningState =\n  | string\n  | ResourceProvisioningState;\n/** Alias for DatastoreProvisioningState */\nexport type DatastoreProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Cancelled\"\n  | \"Pending\"\n  | \"Creating\"\n  | \"Updating\"\n  | \"Deleting\";\n/** Alias for ClusterProvisioningState */\nexport type ClusterProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Cancelled\"\n  | \"Deleting\"\n  | \"Updating\";\n/** Alias for PrivateCloudProvisioningState */\nexport type PrivateCloudProvisioningState =\n  | string\n  | ResourceProvisioningState\n  | \"Cancelled\"\n  | \"Pending\"\n  | \"Building\"\n  | \"Deleting\"\n  | \"Updating\";\n"]}