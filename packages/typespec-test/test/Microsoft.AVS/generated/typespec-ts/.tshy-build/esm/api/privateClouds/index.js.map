{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/privateClouds/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getLongRunningPoller } from \"../pollingHelpers.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  PrivateCloudListResult,\n  PrivateCloud,\n  PrivateCloudUpdate,\n  AdminCredentials,\n} from \"../../models/models.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { buildPagedAsyncIterator } from \"../pagingHelpers.js\";\nimport {\n  isUnexpected,\n  AVSContext as Client,\n  PrivateCloudsCreateOrUpdate200Response,\n  PrivateCloudsCreateOrUpdate201Response,\n  PrivateCloudsCreateOrUpdateDefaultResponse,\n  PrivateCloudsCreateOrUpdateLogicalResponse,\n  PrivateCloudsDelete200Response,\n  PrivateCloudsDelete202Response,\n  PrivateCloudsDelete204Response,\n  PrivateCloudsDeleteDefaultResponse,\n  PrivateCloudsDeleteLogicalResponse,\n  PrivateCloudsGet200Response,\n  PrivateCloudsGetDefaultResponse,\n  PrivateCloudsListAdminCredentials200Response,\n  PrivateCloudsListAdminCredentialsDefaultResponse,\n  PrivateCloudsListByResourceGroup200Response,\n  PrivateCloudsListByResourceGroupDefaultResponse,\n  PrivateCloudsListInSubscription200Response,\n  PrivateCloudsListInSubscriptionDefaultResponse,\n  PrivateCloudsRotateNsxtPassword202Response,\n  PrivateCloudsRotateNsxtPassword204Response,\n  PrivateCloudsRotateNsxtPasswordDefaultResponse,\n  PrivateCloudsRotateNsxtPasswordLogicalResponse,\n  PrivateCloudsRotateVcenterPassword202Response,\n  PrivateCloudsRotateVcenterPassword204Response,\n  PrivateCloudsRotateVcenterPasswordDefaultResponse,\n  PrivateCloudsRotateVcenterPasswordLogicalResponse,\n  PrivateCloudsUpdate200Response,\n  PrivateCloudsUpdate201Response,\n  PrivateCloudsUpdateDefaultResponse,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@azure-rest/core-client\";\nimport {\n  PrivateCloudsListByResourceGroupOptionalParams,\n  PrivateCloudsListInSubscriptionOptionalParams,\n  PrivateCloudsGetOptionalParams,\n  PrivateCloudsCreateOrUpdateOptionalParams,\n  PrivateCloudsUpdateOptionalParams,\n  PrivateCloudsDeleteOptionalParams,\n  PrivateCloudsRotateVcenterPasswordOptionalParams,\n  PrivateCloudsRotateNsxtPasswordOptionalParams,\n  PrivateCloudsListAdminCredentialsOptionalParams,\n} from \"../../models/options.js\";\n\nexport function _listByResourceGroupSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  options: PrivateCloudsListByResourceGroupOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | PrivateCloudsListByResourceGroup200Response\n  | PrivateCloudsListByResourceGroupDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds\",\n      subscriptionId,\n      resourceGroupName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listByResourceGroupDeserialize(\n  result:\n    | PrivateCloudsListByResourceGroup200Response\n    | PrivateCloudsListByResourceGroupDefaultResponse,\n): Promise<PrivateCloudListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      location: p[\"location\"],\n      tags: p[\"tags\"],\n      id: p[\"id\"],\n      name: p[\"name\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            managementCluster: {\n              clusterSize: p.properties?.managementCluster[\"clusterSize\"],\n              provisioningState:\n                p.properties?.managementCluster[\"provisioningState\"],\n              clusterId: p.properties?.managementCluster[\"clusterId\"],\n              hosts: p.properties?.managementCluster[\"hosts\"],\n              vsanDatastoreName:\n                p.properties?.managementCluster[\"vsanDatastoreName\"],\n            },\n            internet: p.properties?.[\"internet\"],\n            identitySources:\n              p.properties?.[\"identitySources\"] === undefined\n                ? p.properties?.[\"identitySources\"]\n                : p.properties?.[\"identitySources\"].map((p) => ({\n                    name: p[\"name\"],\n                    alias: p[\"alias\"],\n                    domain: p[\"domain\"],\n                    baseUserDN: p[\"baseUserDN\"],\n                    baseGroupDN: p[\"baseGroupDN\"],\n                    primaryServer: p[\"primaryServer\"],\n                    secondaryServer: p[\"secondaryServer\"],\n                    ssl: p[\"ssl\"],\n                    username: p[\"username\"],\n                    password: p[\"password\"],\n                  })),\n            availability: !p.properties?.availability\n              ? undefined\n              : {\n                  strategy: p.properties?.availability?.[\"strategy\"],\n                  zone: p.properties?.availability?.[\"zone\"],\n                  secondaryZone: p.properties?.availability?.[\"secondaryZone\"],\n                },\n            encryption: !p.properties?.encryption\n              ? undefined\n              : {\n                  status: p.properties?.encryption?.[\"status\"],\n                  keyVaultProperties: !p.properties?.encryption\n                    ?.keyVaultProperties\n                    ? undefined\n                    : {\n                        keyName:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyName\"\n                          ],\n                        keyVersion:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyVersion\"\n                          ],\n                        autoDetectedKeyVersion:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"autoDetectedKeyVersion\"\n                          ],\n                        keyVaultUrl:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyVaultUrl\"\n                          ],\n                        keyState:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyState\"\n                          ],\n                        versionType:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"versionType\"\n                          ],\n                      },\n                },\n            extendedNetworkBlocks: p.properties?.[\"extendedNetworkBlocks\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n            circuit: !p.properties?.circuit\n              ? undefined\n              : {\n                  primarySubnet: p.properties?.circuit?.[\"primarySubnet\"],\n                  secondarySubnet: p.properties?.circuit?.[\"secondarySubnet\"],\n                  expressRouteID: p.properties?.circuit?.[\"expressRouteID\"],\n                  expressRoutePrivatePeeringID:\n                    p.properties?.circuit?.[\"expressRoutePrivatePeeringID\"],\n                },\n            endpoints: !p.properties?.endpoints\n              ? undefined\n              : {\n                  nsxtManager: p.properties?.endpoints?.[\"nsxtManager\"],\n                  vcsa: p.properties?.endpoints?.[\"vcsa\"],\n                  hcxCloudManager: p.properties?.endpoints?.[\"hcxCloudManager\"],\n                  nsxtManagerIp: p.properties?.endpoints?.[\"nsxtManagerIp\"],\n                  vcenterIp: p.properties?.endpoints?.[\"vcenterIp\"],\n                  hcxCloudManagerIp:\n                    p.properties?.endpoints?.[\"hcxCloudManagerIp\"],\n                },\n            networkBlock: p.properties?.[\"networkBlock\"],\n            managementNetwork: p.properties?.[\"managementNetwork\"],\n            provisioningNetwork: p.properties?.[\"provisioningNetwork\"],\n            vmotionNetwork: p.properties?.[\"vmotionNetwork\"],\n            vcenterPassword: p.properties?.[\"vcenterPassword\"],\n            nsxtPassword: p.properties?.[\"nsxtPassword\"],\n            vcenterCertificateThumbprint:\n              p.properties?.[\"vcenterCertificateThumbprint\"],\n            nsxtCertificateThumbprint:\n              p.properties?.[\"nsxtCertificateThumbprint\"],\n            externalCloudLinks: p.properties?.[\"externalCloudLinks\"],\n            secondaryCircuit: !p.properties?.secondaryCircuit\n              ? undefined\n              : {\n                  primarySubnet:\n                    p.properties?.secondaryCircuit?.[\"primarySubnet\"],\n                  secondarySubnet:\n                    p.properties?.secondaryCircuit?.[\"secondarySubnet\"],\n                  expressRouteID:\n                    p.properties?.secondaryCircuit?.[\"expressRouteID\"],\n                  expressRoutePrivatePeeringID:\n                    p.properties?.secondaryCircuit?.[\n                      \"expressRoutePrivatePeeringID\"\n                    ],\n                },\n            nsxPublicIpQuotaRaised: p.properties?.[\"nsxPublicIpQuotaRaised\"],\n            virtualNetworkId: p.properties?.[\"virtualNetworkId\"],\n            dnsZoneType: p.properties?.[\"dnsZoneType\"],\n          },\n      sku: {\n        name: p.sku[\"name\"],\n        tier: p.sku[\"tier\"],\n        size: p.sku[\"size\"],\n        family: p.sku[\"family\"],\n        capacity: p.sku[\"capacity\"],\n      },\n      identity: !p.identity\n        ? undefined\n        : {\n            tenantId: p.identity?.[\"tenantId\"],\n            principalId: p.identity?.[\"principalId\"],\n            type: p.identity?.[\"type\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List PrivateCloud resources by resource group */\nexport function listByResourceGroup(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  options: PrivateCloudsListByResourceGroupOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<PrivateCloud> {\n  return buildPagedAsyncIterator(\n    context,\n    () =>\n      _listByResourceGroupSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        options,\n      ),\n    _listByResourceGroupDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _listInSubscriptionSend(\n  context: Client,\n  subscriptionId: string,\n  options: PrivateCloudsListInSubscriptionOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | PrivateCloudsListInSubscription200Response\n  | PrivateCloudsListInSubscriptionDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds\",\n      subscriptionId,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listInSubscriptionDeserialize(\n  result:\n    | PrivateCloudsListInSubscription200Response\n    | PrivateCloudsListInSubscriptionDefaultResponse,\n): Promise<PrivateCloudListResult> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    value: result.body[\"value\"].map((p) => ({\n      location: p[\"location\"],\n      tags: p[\"tags\"],\n      id: p[\"id\"],\n      name: p[\"name\"],\n      type: p[\"type\"],\n      systemData: !p.systemData\n        ? undefined\n        : {\n            createdBy: p.systemData?.[\"createdBy\"],\n            createdByType: p.systemData?.[\"createdByType\"],\n            createdAt:\n              p.systemData?.[\"createdAt\"] !== undefined\n                ? new Date(p.systemData?.[\"createdAt\"])\n                : undefined,\n            lastModifiedBy: p.systemData?.[\"lastModifiedBy\"],\n            lastModifiedByType: p.systemData?.[\"lastModifiedByType\"],\n            lastModifiedAt:\n              p.systemData?.[\"lastModifiedAt\"] !== undefined\n                ? new Date(p.systemData?.[\"lastModifiedAt\"])\n                : undefined,\n          },\n      properties: !p.properties\n        ? undefined\n        : {\n            managementCluster: {\n              clusterSize: p.properties?.managementCluster[\"clusterSize\"],\n              provisioningState:\n                p.properties?.managementCluster[\"provisioningState\"],\n              clusterId: p.properties?.managementCluster[\"clusterId\"],\n              hosts: p.properties?.managementCluster[\"hosts\"],\n              vsanDatastoreName:\n                p.properties?.managementCluster[\"vsanDatastoreName\"],\n            },\n            internet: p.properties?.[\"internet\"],\n            identitySources:\n              p.properties?.[\"identitySources\"] === undefined\n                ? p.properties?.[\"identitySources\"]\n                : p.properties?.[\"identitySources\"].map((p) => ({\n                    name: p[\"name\"],\n                    alias: p[\"alias\"],\n                    domain: p[\"domain\"],\n                    baseUserDN: p[\"baseUserDN\"],\n                    baseGroupDN: p[\"baseGroupDN\"],\n                    primaryServer: p[\"primaryServer\"],\n                    secondaryServer: p[\"secondaryServer\"],\n                    ssl: p[\"ssl\"],\n                    username: p[\"username\"],\n                    password: p[\"password\"],\n                  })),\n            availability: !p.properties?.availability\n              ? undefined\n              : {\n                  strategy: p.properties?.availability?.[\"strategy\"],\n                  zone: p.properties?.availability?.[\"zone\"],\n                  secondaryZone: p.properties?.availability?.[\"secondaryZone\"],\n                },\n            encryption: !p.properties?.encryption\n              ? undefined\n              : {\n                  status: p.properties?.encryption?.[\"status\"],\n                  keyVaultProperties: !p.properties?.encryption\n                    ?.keyVaultProperties\n                    ? undefined\n                    : {\n                        keyName:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyName\"\n                          ],\n                        keyVersion:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyVersion\"\n                          ],\n                        autoDetectedKeyVersion:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"autoDetectedKeyVersion\"\n                          ],\n                        keyVaultUrl:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyVaultUrl\"\n                          ],\n                        keyState:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"keyState\"\n                          ],\n                        versionType:\n                          p.properties?.encryption?.keyVaultProperties?.[\n                            \"versionType\"\n                          ],\n                      },\n                },\n            extendedNetworkBlocks: p.properties?.[\"extendedNetworkBlocks\"],\n            provisioningState: p.properties?.[\"provisioningState\"],\n            circuit: !p.properties?.circuit\n              ? undefined\n              : {\n                  primarySubnet: p.properties?.circuit?.[\"primarySubnet\"],\n                  secondarySubnet: p.properties?.circuit?.[\"secondarySubnet\"],\n                  expressRouteID: p.properties?.circuit?.[\"expressRouteID\"],\n                  expressRoutePrivatePeeringID:\n                    p.properties?.circuit?.[\"expressRoutePrivatePeeringID\"],\n                },\n            endpoints: !p.properties?.endpoints\n              ? undefined\n              : {\n                  nsxtManager: p.properties?.endpoints?.[\"nsxtManager\"],\n                  vcsa: p.properties?.endpoints?.[\"vcsa\"],\n                  hcxCloudManager: p.properties?.endpoints?.[\"hcxCloudManager\"],\n                  nsxtManagerIp: p.properties?.endpoints?.[\"nsxtManagerIp\"],\n                  vcenterIp: p.properties?.endpoints?.[\"vcenterIp\"],\n                  hcxCloudManagerIp:\n                    p.properties?.endpoints?.[\"hcxCloudManagerIp\"],\n                },\n            networkBlock: p.properties?.[\"networkBlock\"],\n            managementNetwork: p.properties?.[\"managementNetwork\"],\n            provisioningNetwork: p.properties?.[\"provisioningNetwork\"],\n            vmotionNetwork: p.properties?.[\"vmotionNetwork\"],\n            vcenterPassword: p.properties?.[\"vcenterPassword\"],\n            nsxtPassword: p.properties?.[\"nsxtPassword\"],\n            vcenterCertificateThumbprint:\n              p.properties?.[\"vcenterCertificateThumbprint\"],\n            nsxtCertificateThumbprint:\n              p.properties?.[\"nsxtCertificateThumbprint\"],\n            externalCloudLinks: p.properties?.[\"externalCloudLinks\"],\n            secondaryCircuit: !p.properties?.secondaryCircuit\n              ? undefined\n              : {\n                  primarySubnet:\n                    p.properties?.secondaryCircuit?.[\"primarySubnet\"],\n                  secondarySubnet:\n                    p.properties?.secondaryCircuit?.[\"secondarySubnet\"],\n                  expressRouteID:\n                    p.properties?.secondaryCircuit?.[\"expressRouteID\"],\n                  expressRoutePrivatePeeringID:\n                    p.properties?.secondaryCircuit?.[\n                      \"expressRoutePrivatePeeringID\"\n                    ],\n                },\n            nsxPublicIpQuotaRaised: p.properties?.[\"nsxPublicIpQuotaRaised\"],\n            virtualNetworkId: p.properties?.[\"virtualNetworkId\"],\n            dnsZoneType: p.properties?.[\"dnsZoneType\"],\n          },\n      sku: {\n        name: p.sku[\"name\"],\n        tier: p.sku[\"tier\"],\n        size: p.sku[\"size\"],\n        family: p.sku[\"family\"],\n        capacity: p.sku[\"capacity\"],\n      },\n      identity: !p.identity\n        ? undefined\n        : {\n            tenantId: p.identity?.[\"tenantId\"],\n            principalId: p.identity?.[\"principalId\"],\n            type: p.identity?.[\"type\"],\n          },\n    })),\n    nextLink: result.body[\"nextLink\"],\n  };\n}\n\n/** List PrivateCloud resources by subscription ID */\nexport function listInSubscription(\n  context: Client,\n  subscriptionId: string,\n  options: PrivateCloudsListInSubscriptionOptionalParams = {\n    requestOptions: {},\n  },\n): PagedAsyncIterableIterator<PrivateCloud> {\n  return buildPagedAsyncIterator(\n    context,\n    () => _listInSubscriptionSend(context, subscriptionId, options),\n    _listInSubscriptionDeserialize,\n    { itemName: \"value\", nextLinkName: \"nextLink\" },\n  );\n}\n\nexport function _getSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsGetOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  PrivateCloudsGet200Response | PrivateCloudsGetDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getDeserialize(\n  result: PrivateCloudsGet200Response | PrivateCloudsGetDefaultResponse,\n): Promise<PrivateCloud> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          managementCluster: {\n            clusterSize:\n              result.body.properties?.managementCluster[\"clusterSize\"],\n            provisioningState:\n              result.body.properties?.managementCluster[\"provisioningState\"],\n            clusterId: result.body.properties?.managementCluster[\"clusterId\"],\n            hosts: result.body.properties?.managementCluster[\"hosts\"],\n            vsanDatastoreName:\n              result.body.properties?.managementCluster[\"vsanDatastoreName\"],\n          },\n          internet: result.body.properties?.[\"internet\"],\n          identitySources:\n            result.body.properties?.[\"identitySources\"] === undefined\n              ? result.body.properties?.[\"identitySources\"]\n              : result.body.properties?.[\"identitySources\"].map((p) => ({\n                  name: p[\"name\"],\n                  alias: p[\"alias\"],\n                  domain: p[\"domain\"],\n                  baseUserDN: p[\"baseUserDN\"],\n                  baseGroupDN: p[\"baseGroupDN\"],\n                  primaryServer: p[\"primaryServer\"],\n                  secondaryServer: p[\"secondaryServer\"],\n                  ssl: p[\"ssl\"],\n                  username: p[\"username\"],\n                  password: p[\"password\"],\n                })),\n          availability: !result.body.properties?.availability\n            ? undefined\n            : {\n                strategy: result.body.properties?.availability?.[\"strategy\"],\n                zone: result.body.properties?.availability?.[\"zone\"],\n                secondaryZone:\n                  result.body.properties?.availability?.[\"secondaryZone\"],\n              },\n          encryption: !result.body.properties?.encryption\n            ? undefined\n            : {\n                status: result.body.properties?.encryption?.[\"status\"],\n                keyVaultProperties: !result.body.properties?.encryption\n                  ?.keyVaultProperties\n                  ? undefined\n                  : {\n                      keyName:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyName\"],\n                      keyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVersion\"],\n                      autoDetectedKeyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"autoDetectedKeyVersion\"],\n                      keyVaultUrl:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVaultUrl\"],\n                      keyState:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyState\"],\n                      versionType:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"versionType\"],\n                    },\n              },\n          extendedNetworkBlocks:\n            result.body.properties?.[\"extendedNetworkBlocks\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n          circuit: !result.body.properties?.circuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.circuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.circuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.circuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.circuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          endpoints: !result.body.properties?.endpoints\n            ? undefined\n            : {\n                nsxtManager: result.body.properties?.endpoints?.[\"nsxtManager\"],\n                vcsa: result.body.properties?.endpoints?.[\"vcsa\"],\n                hcxCloudManager:\n                  result.body.properties?.endpoints?.[\"hcxCloudManager\"],\n                nsxtManagerIp:\n                  result.body.properties?.endpoints?.[\"nsxtManagerIp\"],\n                vcenterIp: result.body.properties?.endpoints?.[\"vcenterIp\"],\n                hcxCloudManagerIp:\n                  result.body.properties?.endpoints?.[\"hcxCloudManagerIp\"],\n              },\n          networkBlock: result.body.properties?.[\"networkBlock\"],\n          managementNetwork: result.body.properties?.[\"managementNetwork\"],\n          provisioningNetwork: result.body.properties?.[\"provisioningNetwork\"],\n          vmotionNetwork: result.body.properties?.[\"vmotionNetwork\"],\n          vcenterPassword: result.body.properties?.[\"vcenterPassword\"],\n          nsxtPassword: result.body.properties?.[\"nsxtPassword\"],\n          vcenterCertificateThumbprint:\n            result.body.properties?.[\"vcenterCertificateThumbprint\"],\n          nsxtCertificateThumbprint:\n            result.body.properties?.[\"nsxtCertificateThumbprint\"],\n          externalCloudLinks: result.body.properties?.[\"externalCloudLinks\"],\n          secondaryCircuit: !result.body.properties?.secondaryCircuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.secondaryCircuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.secondaryCircuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          nsxPublicIpQuotaRaised:\n            result.body.properties?.[\"nsxPublicIpQuotaRaised\"],\n          virtualNetworkId: result.body.properties?.[\"virtualNetworkId\"],\n          dnsZoneType: result.body.properties?.[\"dnsZoneType\"],\n        },\n    sku: {\n      name: result.body.sku[\"name\"],\n      tier: result.body.sku[\"tier\"],\n      size: result.body.sku[\"size\"],\n      family: result.body.sku[\"family\"],\n      capacity: result.body.sku[\"capacity\"],\n    },\n    identity: !result.body.identity\n      ? undefined\n      : {\n          tenantId: result.body.identity?.[\"tenantId\"],\n          principalId: result.body.identity?.[\"principalId\"],\n          type: result.body.identity?.[\"type\"],\n        },\n  };\n}\n\n/** Get a PrivateCloud */\nexport async function get(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsGetOptionalParams = { requestOptions: {} },\n): Promise<PrivateCloud> {\n  const result = await _getSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    options,\n  );\n  return _getDeserialize(result);\n}\n\nexport function _createOrUpdateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  privateCloud: PrivateCloud,\n  options: PrivateCloudsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | PrivateCloudsCreateOrUpdate200Response\n  | PrivateCloudsCreateOrUpdate201Response\n  | PrivateCloudsCreateOrUpdateDefaultResponse\n  | PrivateCloudsCreateOrUpdateLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .put({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        location: privateCloud[\"location\"],\n        tags: privateCloud[\"tags\"],\n        properties: !privateCloud.properties\n          ? undefined\n          : {\n              managementCluster: {\n                clusterSize:\n                  privateCloud.properties?.managementCluster[\"clusterSize\"],\n                hosts: privateCloud.properties?.managementCluster[\"hosts\"],\n                vsanDatastoreName:\n                  privateCloud.properties?.managementCluster[\n                    \"vsanDatastoreName\"\n                  ],\n              },\n              internet: privateCloud.properties?.[\"internet\"],\n              identitySources:\n                privateCloud.properties?.[\"identitySources\"] === undefined\n                  ? privateCloud.properties?.[\"identitySources\"]\n                  : privateCloud.properties?.[\"identitySources\"].map((p) => ({\n                      name: p[\"name\"],\n                      alias: p[\"alias\"],\n                      domain: p[\"domain\"],\n                      baseUserDN: p[\"baseUserDN\"],\n                      baseGroupDN: p[\"baseGroupDN\"],\n                      primaryServer: p[\"primaryServer\"],\n                      secondaryServer: p[\"secondaryServer\"],\n                      ssl: p[\"ssl\"],\n                      username: p[\"username\"],\n                      password: p[\"password\"],\n                    })),\n              availability: !privateCloud.properties?.availability\n                ? undefined\n                : {\n                    strategy:\n                      privateCloud.properties?.availability?.[\"strategy\"],\n                    zone: privateCloud.properties?.availability?.[\"zone\"],\n                    secondaryZone:\n                      privateCloud.properties?.availability?.[\"secondaryZone\"],\n                  },\n              encryption: !privateCloud.properties?.encryption\n                ? undefined\n                : {\n                    status: privateCloud.properties?.encryption?.[\"status\"],\n                    keyVaultProperties: !privateCloud.properties?.encryption\n                      ?.keyVaultProperties\n                      ? undefined\n                      : {\n                          keyName:\n                            privateCloud.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyName\"],\n                          keyVersion:\n                            privateCloud.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyVersion\"],\n                          keyVaultUrl:\n                            privateCloud.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyVaultUrl\"],\n                        },\n                  },\n              extendedNetworkBlocks:\n                privateCloud.properties?.[\"extendedNetworkBlocks\"],\n              circuit: !privateCloud.properties?.circuit ? undefined : {},\n              networkBlock: privateCloud.properties?.[\"networkBlock\"],\n              vcenterPassword: privateCloud.properties?.[\"vcenterPassword\"],\n              nsxtPassword: privateCloud.properties?.[\"nsxtPassword\"],\n              secondaryCircuit: !privateCloud.properties?.secondaryCircuit\n                ? undefined\n                : {},\n              virtualNetworkId: privateCloud.properties?.[\"virtualNetworkId\"],\n              dnsZoneType: privateCloud.properties?.[\"dnsZoneType\"],\n            },\n        sku: {\n          name: privateCloud.sku[\"name\"],\n          tier: privateCloud.sku[\"tier\"],\n          size: privateCloud.sku[\"size\"],\n          family: privateCloud.sku[\"family\"],\n          capacity: privateCloud.sku[\"capacity\"],\n        },\n        identity: !privateCloud.identity\n          ? undefined\n          : { type: privateCloud.identity?.[\"type\"] },\n      },\n    });\n}\n\nexport async function _createOrUpdateDeserialize(\n  result:\n    | PrivateCloudsCreateOrUpdate200Response\n    | PrivateCloudsCreateOrUpdate201Response\n    | PrivateCloudsCreateOrUpdateDefaultResponse\n    | PrivateCloudsCreateOrUpdateLogicalResponse,\n): Promise<PrivateCloud> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as PrivateCloudsCreateOrUpdateLogicalResponse;\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          managementCluster: {\n            clusterSize:\n              result.body.properties?.managementCluster[\"clusterSize\"],\n            provisioningState:\n              result.body.properties?.managementCluster[\"provisioningState\"],\n            clusterId: result.body.properties?.managementCluster[\"clusterId\"],\n            hosts: result.body.properties?.managementCluster[\"hosts\"],\n            vsanDatastoreName:\n              result.body.properties?.managementCluster[\"vsanDatastoreName\"],\n          },\n          internet: result.body.properties?.[\"internet\"],\n          identitySources:\n            result.body.properties?.[\"identitySources\"] === undefined\n              ? result.body.properties?.[\"identitySources\"]\n              : result.body.properties?.[\"identitySources\"].map((p) => ({\n                  name: p[\"name\"],\n                  alias: p[\"alias\"],\n                  domain: p[\"domain\"],\n                  baseUserDN: p[\"baseUserDN\"],\n                  baseGroupDN: p[\"baseGroupDN\"],\n                  primaryServer: p[\"primaryServer\"],\n                  secondaryServer: p[\"secondaryServer\"],\n                  ssl: p[\"ssl\"],\n                  username: p[\"username\"],\n                  password: p[\"password\"],\n                })),\n          availability: !result.body.properties?.availability\n            ? undefined\n            : {\n                strategy: result.body.properties?.availability?.[\"strategy\"],\n                zone: result.body.properties?.availability?.[\"zone\"],\n                secondaryZone:\n                  result.body.properties?.availability?.[\"secondaryZone\"],\n              },\n          encryption: !result.body.properties?.encryption\n            ? undefined\n            : {\n                status: result.body.properties?.encryption?.[\"status\"],\n                keyVaultProperties: !result.body.properties?.encryption\n                  ?.keyVaultProperties\n                  ? undefined\n                  : {\n                      keyName:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyName\"],\n                      keyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVersion\"],\n                      autoDetectedKeyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"autoDetectedKeyVersion\"],\n                      keyVaultUrl:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVaultUrl\"],\n                      keyState:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyState\"],\n                      versionType:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"versionType\"],\n                    },\n              },\n          extendedNetworkBlocks:\n            result.body.properties?.[\"extendedNetworkBlocks\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n          circuit: !result.body.properties?.circuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.circuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.circuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.circuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.circuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          endpoints: !result.body.properties?.endpoints\n            ? undefined\n            : {\n                nsxtManager: result.body.properties?.endpoints?.[\"nsxtManager\"],\n                vcsa: result.body.properties?.endpoints?.[\"vcsa\"],\n                hcxCloudManager:\n                  result.body.properties?.endpoints?.[\"hcxCloudManager\"],\n                nsxtManagerIp:\n                  result.body.properties?.endpoints?.[\"nsxtManagerIp\"],\n                vcenterIp: result.body.properties?.endpoints?.[\"vcenterIp\"],\n                hcxCloudManagerIp:\n                  result.body.properties?.endpoints?.[\"hcxCloudManagerIp\"],\n              },\n          networkBlock: result.body.properties?.[\"networkBlock\"],\n          managementNetwork: result.body.properties?.[\"managementNetwork\"],\n          provisioningNetwork: result.body.properties?.[\"provisioningNetwork\"],\n          vmotionNetwork: result.body.properties?.[\"vmotionNetwork\"],\n          vcenterPassword: result.body.properties?.[\"vcenterPassword\"],\n          nsxtPassword: result.body.properties?.[\"nsxtPassword\"],\n          vcenterCertificateThumbprint:\n            result.body.properties?.[\"vcenterCertificateThumbprint\"],\n          nsxtCertificateThumbprint:\n            result.body.properties?.[\"nsxtCertificateThumbprint\"],\n          externalCloudLinks: result.body.properties?.[\"externalCloudLinks\"],\n          secondaryCircuit: !result.body.properties?.secondaryCircuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.secondaryCircuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.secondaryCircuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          nsxPublicIpQuotaRaised:\n            result.body.properties?.[\"nsxPublicIpQuotaRaised\"],\n          virtualNetworkId: result.body.properties?.[\"virtualNetworkId\"],\n          dnsZoneType: result.body.properties?.[\"dnsZoneType\"],\n        },\n    sku: {\n      name: result.body.sku[\"name\"],\n      tier: result.body.sku[\"tier\"],\n      size: result.body.sku[\"size\"],\n      family: result.body.sku[\"family\"],\n      capacity: result.body.sku[\"capacity\"],\n    },\n    identity: !result.body.identity\n      ? undefined\n      : {\n          tenantId: result.body.identity?.[\"tenantId\"],\n          principalId: result.body.identity?.[\"principalId\"],\n          type: result.body.identity?.[\"type\"],\n        },\n  };\n}\n\n/** Create a PrivateCloud */\nexport function createOrUpdate(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  privateCloud: PrivateCloud,\n  options: PrivateCloudsCreateOrUpdateOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<PrivateCloud>, PrivateCloud> {\n  return getLongRunningPoller(context, _createOrUpdateDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _createOrUpdateSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        privateCloud,\n        options,\n      ),\n  }) as PollerLike<OperationState<PrivateCloud>, PrivateCloud>;\n}\n\nexport function _updateSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  privateCloudUpdate: PrivateCloudUpdate,\n  options: PrivateCloudsUpdateOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | PrivateCloudsUpdate200Response\n  | PrivateCloudsUpdate201Response\n  | PrivateCloudsUpdateDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .patch({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        tags: privateCloudUpdate[\"tags\"],\n        sku: !privateCloudUpdate.sku\n          ? undefined\n          : {\n              name: privateCloudUpdate.sku?.[\"name\"],\n              tier: privateCloudUpdate.sku?.[\"tier\"],\n              size: privateCloudUpdate.sku?.[\"size\"],\n              family: privateCloudUpdate.sku?.[\"family\"],\n              capacity: privateCloudUpdate.sku?.[\"capacity\"],\n            },\n        identity: !privateCloudUpdate.identity\n          ? undefined\n          : { type: privateCloudUpdate.identity?.[\"type\"] },\n        properties: !privateCloudUpdate.properties\n          ? undefined\n          : {\n              managementCluster: !privateCloudUpdate.properties\n                ?.managementCluster\n                ? undefined\n                : {\n                    clusterSize:\n                      privateCloudUpdate.properties?.managementCluster?.[\n                        \"clusterSize\"\n                      ],\n                    hosts:\n                      privateCloudUpdate.properties?.managementCluster?.[\n                        \"hosts\"\n                      ],\n                    vsanDatastoreName:\n                      privateCloudUpdate.properties?.managementCluster?.[\n                        \"vsanDatastoreName\"\n                      ],\n                  },\n              internet: privateCloudUpdate.properties?.[\"internet\"],\n              identitySources:\n                privateCloudUpdate.properties?.[\"identitySources\"] === undefined\n                  ? privateCloudUpdate.properties?.[\"identitySources\"]\n                  : privateCloudUpdate.properties?.[\"identitySources\"].map(\n                      (p) => ({\n                        name: p[\"name\"],\n                        alias: p[\"alias\"],\n                        domain: p[\"domain\"],\n                        baseUserDN: p[\"baseUserDN\"],\n                        baseGroupDN: p[\"baseGroupDN\"],\n                        primaryServer: p[\"primaryServer\"],\n                        secondaryServer: p[\"secondaryServer\"],\n                        ssl: p[\"ssl\"],\n                        username: p[\"username\"],\n                        password: p[\"password\"],\n                      }),\n                    ),\n              availability: !privateCloudUpdate.properties?.availability\n                ? undefined\n                : {\n                    strategy:\n                      privateCloudUpdate.properties?.availability?.[\"strategy\"],\n                    zone: privateCloudUpdate.properties?.availability?.[\"zone\"],\n                    secondaryZone:\n                      privateCloudUpdate.properties?.availability?.[\n                        \"secondaryZone\"\n                      ],\n                  },\n              encryption: !privateCloudUpdate.properties?.encryption\n                ? undefined\n                : {\n                    status:\n                      privateCloudUpdate.properties?.encryption?.[\"status\"],\n                    keyVaultProperties: !privateCloudUpdate.properties\n                      ?.encryption?.keyVaultProperties\n                      ? undefined\n                      : {\n                          keyName:\n                            privateCloudUpdate.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyName\"],\n                          keyVersion:\n                            privateCloudUpdate.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyVersion\"],\n                          keyVaultUrl:\n                            privateCloudUpdate.properties?.encryption\n                              ?.keyVaultProperties?.[\"keyVaultUrl\"],\n                        },\n                  },\n              extendedNetworkBlocks:\n                privateCloudUpdate.properties?.[\"extendedNetworkBlocks\"],\n              dnsZoneType: privateCloudUpdate.properties?.[\"dnsZoneType\"],\n            },\n      },\n    });\n}\n\nexport async function _updateDeserialize(\n  result:\n    | PrivateCloudsUpdate200Response\n    | PrivateCloudsUpdate201Response\n    | PrivateCloudsUpdateDefaultResponse,\n): Promise<PrivateCloud> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    location: result.body[\"location\"],\n    tags: result.body[\"tags\"],\n    id: result.body[\"id\"],\n    name: result.body[\"name\"],\n    type: result.body[\"type\"],\n    systemData: !result.body.systemData\n      ? undefined\n      : {\n          createdBy: result.body.systemData?.[\"createdBy\"],\n          createdByType: result.body.systemData?.[\"createdByType\"],\n          createdAt:\n            result.body.systemData?.[\"createdAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"createdAt\"])\n              : undefined,\n          lastModifiedBy: result.body.systemData?.[\"lastModifiedBy\"],\n          lastModifiedByType: result.body.systemData?.[\"lastModifiedByType\"],\n          lastModifiedAt:\n            result.body.systemData?.[\"lastModifiedAt\"] !== undefined\n              ? new Date(result.body.systemData?.[\"lastModifiedAt\"])\n              : undefined,\n        },\n    properties: !result.body.properties\n      ? undefined\n      : {\n          managementCluster: {\n            clusterSize:\n              result.body.properties?.managementCluster[\"clusterSize\"],\n            provisioningState:\n              result.body.properties?.managementCluster[\"provisioningState\"],\n            clusterId: result.body.properties?.managementCluster[\"clusterId\"],\n            hosts: result.body.properties?.managementCluster[\"hosts\"],\n            vsanDatastoreName:\n              result.body.properties?.managementCluster[\"vsanDatastoreName\"],\n          },\n          internet: result.body.properties?.[\"internet\"],\n          identitySources:\n            result.body.properties?.[\"identitySources\"] === undefined\n              ? result.body.properties?.[\"identitySources\"]\n              : result.body.properties?.[\"identitySources\"].map((p) => ({\n                  name: p[\"name\"],\n                  alias: p[\"alias\"],\n                  domain: p[\"domain\"],\n                  baseUserDN: p[\"baseUserDN\"],\n                  baseGroupDN: p[\"baseGroupDN\"],\n                  primaryServer: p[\"primaryServer\"],\n                  secondaryServer: p[\"secondaryServer\"],\n                  ssl: p[\"ssl\"],\n                  username: p[\"username\"],\n                  password: p[\"password\"],\n                })),\n          availability: !result.body.properties?.availability\n            ? undefined\n            : {\n                strategy: result.body.properties?.availability?.[\"strategy\"],\n                zone: result.body.properties?.availability?.[\"zone\"],\n                secondaryZone:\n                  result.body.properties?.availability?.[\"secondaryZone\"],\n              },\n          encryption: !result.body.properties?.encryption\n            ? undefined\n            : {\n                status: result.body.properties?.encryption?.[\"status\"],\n                keyVaultProperties: !result.body.properties?.encryption\n                  ?.keyVaultProperties\n                  ? undefined\n                  : {\n                      keyName:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyName\"],\n                      keyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVersion\"],\n                      autoDetectedKeyVersion:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"autoDetectedKeyVersion\"],\n                      keyVaultUrl:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyVaultUrl\"],\n                      keyState:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"keyState\"],\n                      versionType:\n                        result.body.properties?.encryption\n                          ?.keyVaultProperties?.[\"versionType\"],\n                    },\n              },\n          extendedNetworkBlocks:\n            result.body.properties?.[\"extendedNetworkBlocks\"],\n          provisioningState: result.body.properties?.[\"provisioningState\"],\n          circuit: !result.body.properties?.circuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.circuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.circuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.circuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.circuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          endpoints: !result.body.properties?.endpoints\n            ? undefined\n            : {\n                nsxtManager: result.body.properties?.endpoints?.[\"nsxtManager\"],\n                vcsa: result.body.properties?.endpoints?.[\"vcsa\"],\n                hcxCloudManager:\n                  result.body.properties?.endpoints?.[\"hcxCloudManager\"],\n                nsxtManagerIp:\n                  result.body.properties?.endpoints?.[\"nsxtManagerIp\"],\n                vcenterIp: result.body.properties?.endpoints?.[\"vcenterIp\"],\n                hcxCloudManagerIp:\n                  result.body.properties?.endpoints?.[\"hcxCloudManagerIp\"],\n              },\n          networkBlock: result.body.properties?.[\"networkBlock\"],\n          managementNetwork: result.body.properties?.[\"managementNetwork\"],\n          provisioningNetwork: result.body.properties?.[\"provisioningNetwork\"],\n          vmotionNetwork: result.body.properties?.[\"vmotionNetwork\"],\n          vcenterPassword: result.body.properties?.[\"vcenterPassword\"],\n          nsxtPassword: result.body.properties?.[\"nsxtPassword\"],\n          vcenterCertificateThumbprint:\n            result.body.properties?.[\"vcenterCertificateThumbprint\"],\n          nsxtCertificateThumbprint:\n            result.body.properties?.[\"nsxtCertificateThumbprint\"],\n          externalCloudLinks: result.body.properties?.[\"externalCloudLinks\"],\n          secondaryCircuit: !result.body.properties?.secondaryCircuit\n            ? undefined\n            : {\n                primarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"primarySubnet\"],\n                secondarySubnet:\n                  result.body.properties?.secondaryCircuit?.[\"secondarySubnet\"],\n                expressRouteID:\n                  result.body.properties?.secondaryCircuit?.[\"expressRouteID\"],\n                expressRoutePrivatePeeringID:\n                  result.body.properties?.secondaryCircuit?.[\n                    \"expressRoutePrivatePeeringID\"\n                  ],\n              },\n          nsxPublicIpQuotaRaised:\n            result.body.properties?.[\"nsxPublicIpQuotaRaised\"],\n          virtualNetworkId: result.body.properties?.[\"virtualNetworkId\"],\n          dnsZoneType: result.body.properties?.[\"dnsZoneType\"],\n        },\n    sku: {\n      name: result.body.sku[\"name\"],\n      tier: result.body.sku[\"tier\"],\n      size: result.body.sku[\"size\"],\n      family: result.body.sku[\"family\"],\n      capacity: result.body.sku[\"capacity\"],\n    },\n    identity: !result.body.identity\n      ? undefined\n      : {\n          tenantId: result.body.identity?.[\"tenantId\"],\n          principalId: result.body.identity?.[\"principalId\"],\n          type: result.body.identity?.[\"type\"],\n        },\n  };\n}\n\n/** Update a PrivateCloud */\nexport async function update(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  privateCloudUpdate: PrivateCloudUpdate,\n  options: PrivateCloudsUpdateOptionalParams = { requestOptions: {} },\n): Promise<PrivateCloud> {\n  const result = await _updateSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    privateCloudUpdate,\n    options,\n  );\n  return _updateDeserialize(result);\n}\n\nexport function _$deleteSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsDeleteOptionalParams = { requestOptions: {} },\n): StreamableMethod<\n  | PrivateCloudsDelete200Response\n  | PrivateCloudsDelete202Response\n  | PrivateCloudsDelete204Response\n  | PrivateCloudsDeleteDefaultResponse\n  | PrivateCloudsDeleteLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _$deleteDeserialize(\n  result:\n    | PrivateCloudsDelete200Response\n    | PrivateCloudsDelete202Response\n    | PrivateCloudsDelete204Response\n    | PrivateCloudsDeleteDefaultResponse\n    | PrivateCloudsDeleteLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as PrivateCloudsDeleteLogicalResponse;\n  return;\n}\n\n/** Delete a PrivateCloud */\n/**\n *  @fixme delete is a reserved word that cannot be used as an operation name.\n *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n *         to the operation to override the generated name.\n */\nexport function $delete(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsDeleteOptionalParams = { requestOptions: {} },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _$deleteDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _$deleteSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _rotateVcenterPasswordSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsRotateVcenterPasswordOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | PrivateCloudsRotateVcenterPassword202Response\n  | PrivateCloudsRotateVcenterPassword204Response\n  | PrivateCloudsRotateVcenterPasswordDefaultResponse\n  | PrivateCloudsRotateVcenterPasswordLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _rotateVcenterPasswordDeserialize(\n  result:\n    | PrivateCloudsRotateVcenterPassword202Response\n    | PrivateCloudsRotateVcenterPassword204Response\n    | PrivateCloudsRotateVcenterPasswordDefaultResponse\n    | PrivateCloudsRotateVcenterPasswordLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as PrivateCloudsRotateVcenterPasswordLogicalResponse;\n  return;\n}\n\n/** Rotate the vCenter password */\nexport function rotateVcenterPassword(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsRotateVcenterPasswordOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _rotateVcenterPasswordDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _rotateVcenterPasswordSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _rotateNsxtPasswordSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsRotateNsxtPasswordOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | PrivateCloudsRotateNsxtPassword202Response\n  | PrivateCloudsRotateNsxtPassword204Response\n  | PrivateCloudsRotateNsxtPasswordDefaultResponse\n  | PrivateCloudsRotateNsxtPasswordLogicalResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _rotateNsxtPasswordDeserialize(\n  result:\n    | PrivateCloudsRotateNsxtPassword202Response\n    | PrivateCloudsRotateNsxtPassword204Response\n    | PrivateCloudsRotateNsxtPasswordDefaultResponse\n    | PrivateCloudsRotateNsxtPasswordLogicalResponse,\n): Promise<void> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  result = result as PrivateCloudsRotateNsxtPasswordLogicalResponse;\n  return;\n}\n\n/** Rotate the NSX-T Manager password */\nexport function rotateNsxtPassword(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsRotateNsxtPasswordOptionalParams = {\n    requestOptions: {},\n  },\n): PollerLike<OperationState<void>, void> {\n  return getLongRunningPoller(context, _rotateNsxtPasswordDeserialize, {\n    updateIntervalInMs: options?.updateIntervalInMs,\n    abortSignal: options?.abortSignal,\n    getInitialResponse: () =>\n      _rotateNsxtPasswordSend(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n  }) as PollerLike<OperationState<void>, void>;\n}\n\nexport function _listAdminCredentialsSend(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsListAdminCredentialsOptionalParams = {\n    requestOptions: {},\n  },\n): StreamableMethod<\n  | PrivateCloudsListAdminCredentials200Response\n  | PrivateCloudsListAdminCredentialsDefaultResponse\n> {\n  return context\n    .path(\n      \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials\",\n      subscriptionId,\n      resourceGroupName,\n      privateCloudName,\n    )\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listAdminCredentialsDeserialize(\n  result:\n    | PrivateCloudsListAdminCredentials200Response\n    | PrivateCloudsListAdminCredentialsDefaultResponse,\n): Promise<AdminCredentials> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    nsxtUsername: result.body[\"nsxtUsername\"],\n    nsxtPassword: result.body[\"nsxtPassword\"],\n    vcenterUsername: result.body[\"vcenterUsername\"],\n    vcenterPassword: result.body[\"vcenterPassword\"],\n  };\n}\n\n/** List the admin credentials for the private cloud */\nexport async function listAdminCredentials(\n  context: Client,\n  subscriptionId: string,\n  resourceGroupName: string,\n  privateCloudName: string,\n  options: PrivateCloudsListAdminCredentialsOptionalParams = {\n    requestOptions: {},\n  },\n): Promise<AdminCredentials> {\n  const result = await _listAdminCredentialsSend(\n    context,\n    subscriptionId,\n    resourceGroupName,\n    privateCloudName,\n    options,\n  );\n  return _listAdminCredentialsDeserialize(result);\n}\n"]}