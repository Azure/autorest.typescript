{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/workloadNetworkPortMirroringProfiles/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAOlC,OAAO,EACL,qBAAqB,EACrB,GAAG,EACH,MAAM,EACN,MAAM,EACN,OAAO,GACR,MAAM,yDAAyD,CAAC;AAwDjE,MAAM,UAAU,uCAAuC,CAAC,OAAmB;IACzE,OAAO;QACL,qBAAqB,EAAE,CACrB,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAAiF,EACjF,EAAE,CACF,qBAAqB,CACnB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,eAAuB,EACvB,OAA+D,EAC/D,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,eAAe,EACf,OAAO,CACR;QACH,MAAM,EAAE,CACN,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,eAAuB,EACvB,4BAA0D,EAC1D,OAAkE,EAClE,EAAE,CACF,MAAM,CACJ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,eAAe,EACf,4BAA4B,EAC5B,OAAO,CACR;QACH,MAAM,EAAE,CACN,cAAsB,EACtB,iBAAyB,EACzB,gBAAwB,EACxB,eAAuB,EACvB,4BAAgE,EAChE,OAAkE,EAClE,EAAE,CACF,MAAM,CACJ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,eAAe,EACf,4BAA4B,EAC5B,OAAO,CACR;QACH,MAAM,EAAE,CACN,cAAsB,EACtB,iBAAyB,EACzB,eAAuB,EACvB,gBAAwB,EACxB,OAAkE,EAClE,EAAE,CACF,OAAO,CACL,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,gBAAgB,EAChB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,iDAAiD,CAC/D,OAAmB;IAEnB,OAAO;QACL,GAAG,uCAAuC,CAAC,OAAO,CAAC;KACpD,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport {\n  WorkloadNetworkPortMirroring,\n  WorkloadNetworkPortMirroringUpdate,\n} from \"../../models/models.js\";\nimport {\n  listByWorkloadNetwork,\n  get,\n  create,\n  update,\n  $delete,\n} from \"../../api/workloadNetworkPortMirroringProfiles/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  WorkloadNetworkPortMirroringProfilesListByWorkloadNetworkOptionalParams,\n  WorkloadNetworkPortMirroringProfilesGetOptionalParams,\n  WorkloadNetworkPortMirroringProfilesCreateOptionalParams,\n  WorkloadNetworkPortMirroringProfilesUpdateOptionalParams,\n  WorkloadNetworkPortMirroringProfilesDeleteOptionalParams,\n} from \"../../models/options.js\";\n\nexport interface WorkloadNetworkPortMirroringProfilesOperations {\n  listByWorkloadNetwork: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: WorkloadNetworkPortMirroringProfilesListByWorkloadNetworkOptionalParams,\n  ) => PagedAsyncIterableIterator<WorkloadNetworkPortMirroring>;\n  get: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    portMirroringId: string,\n    options?: WorkloadNetworkPortMirroringProfilesGetOptionalParams,\n  ) => Promise<WorkloadNetworkPortMirroring>;\n  create: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    portMirroringId: string,\n    workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,\n    options?: WorkloadNetworkPortMirroringProfilesCreateOptionalParams,\n  ) => PollerLike<\n    OperationState<WorkloadNetworkPortMirroring>,\n    WorkloadNetworkPortMirroring\n  >;\n  update: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    privateCloudName: string,\n    portMirroringId: string,\n    workloadNetworkPortMirroring: WorkloadNetworkPortMirroringUpdate,\n    options?: WorkloadNetworkPortMirroringProfilesUpdateOptionalParams,\n  ) => PollerLike<\n    OperationState<WorkloadNetworkPortMirroring>,\n    WorkloadNetworkPortMirroring\n  >;\n  delete: (\n    subscriptionId: string,\n    resourceGroupName: string,\n    portMirroringId: string,\n    privateCloudName: string,\n    options?: WorkloadNetworkPortMirroringProfilesDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n}\n\nexport function getWorkloadNetworkPortMirroringProfiles(context: AVSContext) {\n  return {\n    listByWorkloadNetwork: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: WorkloadNetworkPortMirroringProfilesListByWorkloadNetworkOptionalParams,\n    ) =>\n      listByWorkloadNetwork(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      portMirroringId: string,\n      options?: WorkloadNetworkPortMirroringProfilesGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        portMirroringId,\n        options,\n      ),\n    create: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      portMirroringId: string,\n      workloadNetworkPortMirroring: WorkloadNetworkPortMirroring,\n      options?: WorkloadNetworkPortMirroringProfilesCreateOptionalParams,\n    ) =>\n      create(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        portMirroringId,\n        workloadNetworkPortMirroring,\n        options,\n      ),\n    update: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      privateCloudName: string,\n      portMirroringId: string,\n      workloadNetworkPortMirroring: WorkloadNetworkPortMirroringUpdate,\n      options?: WorkloadNetworkPortMirroringProfilesUpdateOptionalParams,\n    ) =>\n      update(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        portMirroringId,\n        workloadNetworkPortMirroring,\n        options,\n      ),\n    delete: (\n      subscriptionId: string,\n      resourceGroupName: string,\n      portMirroringId: string,\n      privateCloudName: string,\n      options?: WorkloadNetworkPortMirroringProfilesDeleteOptionalParams,\n    ) =>\n      $delete(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        portMirroringId,\n        privateCloudName,\n        options,\n      ),\n  };\n}\n\nexport function getWorkloadNetworkPortMirroringProfilesOperations(\n  context: AVSContext,\n): WorkloadNetworkPortMirroringProfilesOperations {\n  return {\n    ...getWorkloadNetworkPortMirroringProfiles(context),\n  };\n}\n"]}