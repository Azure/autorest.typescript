{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/scriptExecutions/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAOlC,OAAO,EACL,kBAAkB,EAClB,GAAG,EACH,cAAc,EACd,OAAO,EACP,gBAAgB,GACjB,MAAM,qCAAqC,CAAC;AAwD7C,MAAM,UAAU,mBAAmB,CACjC,OAAmB,EACnB,cAAsB;IAEtB,OAAO;QACL,kBAAkB,EAAE,CAClB,iBAAyB,EACzB,gBAAwB,EACxB,OAA0D,EAC1D,EAAE,CACF,kBAAkB,CAChB,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR;QACH,GAAG,EAAE,CACH,iBAAyB,EACzB,gBAAwB,EACxB,mBAA2B,EAC3B,OAA2C,EAC3C,EAAE,CACF,GAAG,CACD,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,OAAO,CACR;QACH,cAAc,EAAE,CACd,iBAAyB,EACzB,gBAAwB,EACxB,mBAA2B,EAC3B,eAAgC,EAChC,OAAsD,EACtD,EAAE,CACF,cAAc,CACZ,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,eAAe,EACf,OAAO,CACR;QACH,MAAM,EAAE,CACN,iBAAyB,EACzB,gBAAwB,EACxB,mBAA2B,EAC3B,OAA8C,EAC9C,EAAE,CACF,OAAO,CACL,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,OAAO,CACR;QACH,gBAAgB,EAAE,CAChB,iBAAyB,EACzB,gBAAwB,EACxB,mBAA2B,EAC3B,sBAAiD,EACjD,OAAwD,EACxD,EAAE,CACF,gBAAgB,CACd,OAAO,EACP,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,mBAAmB,EACnB,sBAAsB,EACtB,OAAO,CACR;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,6BAA6B,CAC3C,OAAmB,EACnB,cAAsB;IAEtB,OAAO;QACL,GAAG,mBAAmB,CAAC,OAAO,EAAE,cAAc,CAAC;KAChD,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AVSContext } from \"../../api/aVSContext.js\";\nimport {\n  ScriptExecution,\n  ScriptOutputStreamType,\n} from \"../../models/models.js\";\nimport {\n  listByPrivateCloud,\n  get,\n  createOrUpdate,\n  $delete,\n  getExecutionLogs,\n} from \"../../api/scriptExecutions/index.js\";\nimport { PagedAsyncIterableIterator } from \"../../models/pagingTypes.js\";\nimport { PollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  ScriptExecutionsListByPrivateCloudOptionalParams,\n  ScriptExecutionsGetOptionalParams,\n  ScriptExecutionsCreateOrUpdateOptionalParams,\n  ScriptExecutionsDeleteOptionalParams,\n  ScriptExecutionsGetExecutionLogsOptionalParams,\n} from \"../../models/options.js\";\n\n/** Interface representing a ScriptExecutions operations. */\nexport interface ScriptExecutionsOperations {\n  /** List ScriptExecution resources by PrivateCloud */\n  listByPrivateCloud: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    options?: ScriptExecutionsListByPrivateCloudOptionalParams,\n  ) => PagedAsyncIterableIterator<ScriptExecution>;\n  /** Get a ScriptExecution */\n  get: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptExecutionName: string,\n    options?: ScriptExecutionsGetOptionalParams,\n  ) => Promise<ScriptExecution>;\n  /** Create a ScriptExecution */\n  createOrUpdate: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptExecutionName: string,\n    scriptExecution: ScriptExecution,\n    options?: ScriptExecutionsCreateOrUpdateOptionalParams,\n  ) => PollerLike<OperationState<ScriptExecution>, ScriptExecution>;\n  /** Delete a ScriptExecution */\n  /**\n   *  @fixme delete is a reserved word that cannot be used as an operation name.\n   *         Please add @clientName(\"clientName\") or @clientName(\"<JS-Specific-Name>\", \"javascript\")\n   *         to the operation to override the generated name.\n   */\n  delete: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptExecutionName: string,\n    options?: ScriptExecutionsDeleteOptionalParams,\n  ) => PollerLike<OperationState<void>, void>;\n  /** Return the logs for a script execution resource */\n  getExecutionLogs: (\n    resourceGroupName: string,\n    privateCloudName: string,\n    scriptExecutionName: string,\n    scriptOutputStreamType?: ScriptOutputStreamType[],\n    options?: ScriptExecutionsGetExecutionLogsOptionalParams,\n  ) => Promise<ScriptExecution>;\n}\n\nexport function getScriptExecutions(\n  context: AVSContext,\n  subscriptionId: string,\n) {\n  return {\n    listByPrivateCloud: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      options?: ScriptExecutionsListByPrivateCloudOptionalParams,\n    ) =>\n      listByPrivateCloud(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        options,\n      ),\n    get: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptExecutionName: string,\n      options?: ScriptExecutionsGetOptionalParams,\n    ) =>\n      get(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptExecutionName,\n        options,\n      ),\n    createOrUpdate: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptExecutionName: string,\n      scriptExecution: ScriptExecution,\n      options?: ScriptExecutionsCreateOrUpdateOptionalParams,\n    ) =>\n      createOrUpdate(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptExecutionName,\n        scriptExecution,\n        options,\n      ),\n    delete: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptExecutionName: string,\n      options?: ScriptExecutionsDeleteOptionalParams,\n    ) =>\n      $delete(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptExecutionName,\n        options,\n      ),\n    getExecutionLogs: (\n      resourceGroupName: string,\n      privateCloudName: string,\n      scriptExecutionName: string,\n      scriptOutputStreamType?: ScriptOutputStreamType[],\n      options?: ScriptExecutionsGetExecutionLogsOptionalParams,\n    ) =>\n      getExecutionLogs(\n        context,\n        subscriptionId,\n        resourceGroupName,\n        privateCloudName,\n        scriptExecutionName,\n        scriptOutputStreamType,\n        options,\n      ),\n  };\n}\n\nexport function getScriptExecutionsOperations(\n  context: AVSContext,\n  subscriptionId: string,\n): ScriptExecutionsOperations {\n  return {\n    ...getScriptExecutions(context, subscriptionId),\n  };\n}\n"]}