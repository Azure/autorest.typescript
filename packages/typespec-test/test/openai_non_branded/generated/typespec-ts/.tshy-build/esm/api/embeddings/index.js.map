{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/embeddings/index.ts"],"names":[],"mappings":"AAAA,kCAAkC;AAMlC,OAAO,EAGL,YAAY,GAEb,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAEL,mCAAmC,EACnC,eAAe,GAChB,MAAM,2BAA2B,CAAC;AAGnC,MAAM,UAAU,WAAW,CACzB,OAAe,EACf,SAAiC,EACjC,UAAmC,EAAE,cAAc,EAAE,EAAE,EAAE;IAIzD,OAAO,OAAO;SACX,IAAI,CAAC,aAAa,CAAC;SACnB,IAAI,CAAC;QACJ,GAAG,mCAAmC,CAAC,OAAO,CAAC;QAC/C,IAAI,EAAE;YACJ,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC;YACzB,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC;YACzB,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC;SACxB;KACF,CAAC,CAAC;AACP,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,MAAqE;IAErE,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACpC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;YACjB,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC;YACnB,SAAS,EAAE,CAAC,CAAC,WAAW,CAAC;SAC1B,CAAC,CAAC;QACH,KAAK,EAAE;YACL,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;YAChD,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;SAC/C;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM,CAC1B,OAAe,EACf,SAAiC,EACjC,UAAmC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEzD,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC9D,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC","sourcesContent":["// Licensed under the MIT license.\n\nimport {\n  CreateEmbeddingRequest,\n  CreateEmbeddingResponse,\n} from \"../../models/models.js\";\nimport {\n  EmbeddingsCreate200Response,\n  EmbeddingsCreateDefaultResponse,\n  isUnexpected,\n  OpenAIContext as Client,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@typespec/ts-http-runtime\";\nimport { EmbeddingsCreateOptions } from \"../../models/options.js\";\n\nexport function _createSend(\n  context: Client,\n  embedding: CreateEmbeddingRequest,\n  options: EmbeddingsCreateOptions = { requestOptions: {} },\n): StreamableMethod<\n  EmbeddingsCreate200Response | EmbeddingsCreateDefaultResponse\n> {\n  return context\n    .path(\"/embeddings\")\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        model: embedding[\"model\"],\n        input: embedding[\"input\"],\n        user: embedding[\"user\"],\n      },\n    });\n}\n\nexport async function _createDeserialize(\n  result: EmbeddingsCreate200Response | EmbeddingsCreateDefaultResponse,\n): Promise<CreateEmbeddingResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    object: result.body[\"object\"],\n    model: result.body[\"model\"],\n    data: result.body[\"data\"].map((p) => ({\n      index: p[\"index\"],\n      object: p[\"object\"],\n      embedding: p[\"embedding\"],\n    })),\n    usage: {\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\nexport async function create(\n  context: Client,\n  embedding: CreateEmbeddingRequest,\n  options: EmbeddingsCreateOptions = { requestOptions: {} },\n): Promise<CreateEmbeddingResponse> {\n  const result = await _createSend(context, embedding, options);\n  return _createDeserialize(result);\n}\n"]}