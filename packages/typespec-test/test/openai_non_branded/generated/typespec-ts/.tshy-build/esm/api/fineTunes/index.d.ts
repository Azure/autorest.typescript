import { CreateFineTuneRequest, FineTune, ListFineTunesResponse, ListFineTuneEventsResponse } from "../../models/models.js";
import { FineTunesCancel200Response, FineTunesCancelDefaultResponse, FineTunesCreate200Response, FineTunesCreateDefaultResponse, FineTunesList200Response, FineTunesListDefaultResponse, FineTunesListEvents200Response, FineTunesListEventsDefaultResponse, FineTunesRetrieve200Response, FineTunesRetrieveDefaultResponse, OpenAIContext as Client } from "../../rest/index.js";
import { StreamableMethod } from "@typespec/ts-http-runtime";
import { FineTunesCreateOptions, FineTunesListOptions, FineTunesRetrieveOptions, FineTunesListEventsOptions, FineTunesCancelOptions } from "../../models/options.js";
export declare function _createSend(context: Client, fineTune: CreateFineTuneRequest, options?: FineTunesCreateOptions): StreamableMethod<FineTunesCreate200Response | FineTunesCreateDefaultResponse>;
export declare function _createDeserialize(result: FineTunesCreate200Response | FineTunesCreateDefaultResponse): Promise<FineTune>;
export declare function create(context: Client, fineTune: CreateFineTuneRequest, options?: FineTunesCreateOptions): Promise<FineTune>;
export declare function _listSend(context: Client, options?: FineTunesListOptions): StreamableMethod<FineTunesList200Response | FineTunesListDefaultResponse>;
export declare function _listDeserialize(result: FineTunesList200Response | FineTunesListDefaultResponse): Promise<ListFineTunesResponse>;
export declare function list(context: Client, options?: FineTunesListOptions): Promise<ListFineTunesResponse>;
export declare function _retrieveSend(context: Client, fineTuneId: string, options?: FineTunesRetrieveOptions): StreamableMethod<FineTunesRetrieve200Response | FineTunesRetrieveDefaultResponse>;
export declare function _retrieveDeserialize(result: FineTunesRetrieve200Response | FineTunesRetrieveDefaultResponse): Promise<FineTune>;
export declare function retrieve(context: Client, fineTuneId: string, options?: FineTunesRetrieveOptions): Promise<FineTune>;
export declare function _listEventsSend(context: Client, fineTuneId: string, options?: FineTunesListEventsOptions): StreamableMethod<FineTunesListEvents200Response | FineTunesListEventsDefaultResponse>;
export declare function _listEventsDeserialize(result: FineTunesListEvents200Response | FineTunesListEventsDefaultResponse): Promise<ListFineTuneEventsResponse>;
export declare function listEvents(context: Client, fineTuneId: string, options?: FineTunesListEventsOptions): Promise<ListFineTuneEventsResponse>;
export declare function _cancelSend(context: Client, fineTuneId: string, options?: FineTunesCancelOptions): StreamableMethod<FineTunesCancel200Response | FineTunesCancelDefaultResponse>;
export declare function _cancelDeserialize(result: FineTunesCancel200Response | FineTunesCancelDefaultResponse): Promise<FineTune>;
export declare function cancel(context: Client, fineTuneId: string, options?: FineTunesCancelOptions): Promise<FineTune>;
//# sourceMappingURL=index.d.ts.map