{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/classic/fineTunes/index.ts"],"names":[],"mappings":"AAAA,kCAAkC;AASlC,OAAO,EACL,MAAM,EACN,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,MAAM,GACP,MAAM,8BAA8B,CAAC;AA6BtC,MAAM,UAAU,YAAY,CAAC,OAAsB;IACjD,OAAO;QACL,MAAM,EAAE,CACN,QAA+B,EAC/B,OAAgC,EAChC,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;QACvC,IAAI,EAAE,CAAC,OAA8B,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;QAChE,QAAQ,EAAE,CAAC,UAAkB,EAAE,OAAkC,EAAE,EAAE,CACnE,QAAQ,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;QACxC,UAAU,EAAE,CAAC,UAAkB,EAAE,OAAoC,EAAE,EAAE,CACvE,UAAU,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;QAC1C,MAAM,EAAE,CAAC,UAAkB,EAAE,OAAgC,EAAE,EAAE,CAC/D,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC;KACvC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,OAAsB;IAEtB,OAAO;QACL,GAAG,YAAY,CAAC,OAAO,CAAC;KACzB,CAAC;AACJ,CAAC","sourcesContent":["// Licensed under the MIT license.\n\nimport { OpenAIContext } from \"../../api/OpenAIContext.js\";\nimport {\n  CreateFineTuneRequest,\n  FineTune,\n  ListFineTunesResponse,\n  ListFineTuneEventsResponse,\n} from \"../../models/models.js\";\nimport {\n  create,\n  list,\n  retrieve,\n  listEvents,\n  cancel,\n} from \"../../api/fineTunes/index.js\";\nimport {\n  FineTunesCreateOptions,\n  FineTunesListOptions,\n  FineTunesRetrieveOptions,\n  FineTunesListEventsOptions,\n  FineTunesCancelOptions,\n} from \"../../models/options.js\";\n\nexport interface FineTunesOperations {\n  create: (\n    fineTune: CreateFineTuneRequest,\n    options?: FineTunesCreateOptions,\n  ) => Promise<FineTune>;\n  list: (options?: FineTunesListOptions) => Promise<ListFineTunesResponse>;\n  retrieve: (\n    fineTuneId: string,\n    options?: FineTunesRetrieveOptions,\n  ) => Promise<FineTune>;\n  listEvents: (\n    fineTuneId: string,\n    options?: FineTunesListEventsOptions,\n  ) => Promise<ListFineTuneEventsResponse>;\n  cancel: (\n    fineTuneId: string,\n    options?: FineTunesCancelOptions,\n  ) => Promise<FineTune>;\n}\n\nexport function getFineTunes(context: OpenAIContext) {\n  return {\n    create: (\n      fineTune: CreateFineTuneRequest,\n      options?: FineTunesCreateOptions,\n    ) => create(context, fineTune, options),\n    list: (options?: FineTunesListOptions) => list(context, options),\n    retrieve: (fineTuneId: string, options?: FineTunesRetrieveOptions) =>\n      retrieve(context, fineTuneId, options),\n    listEvents: (fineTuneId: string, options?: FineTunesListEventsOptions) =>\n      listEvents(context, fineTuneId, options),\n    cancel: (fineTuneId: string, options?: FineTunesCancelOptions) =>\n      cancel(context, fineTuneId, options),\n  };\n}\n\nexport function getFineTunesOperations(\n  context: OpenAIContext,\n): FineTunesOperations {\n  return {\n    ...getFineTunes(context),\n  };\n}\n"]}