{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/files/index.ts"],"names":[],"mappings":"AAAA,kCAAkC;AAQlC,OAAO,EAWL,YAAY,GAEb,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAEL,mCAAmC,EACnC,kBAAkB,EAClB,eAAe,GAChB,MAAM,2BAA2B,CAAC;AASnC,MAAM,UAAU,SAAS,CACvB,OAAe,EACf,UAA4B,EAAE,cAAc,EAAE,EAAE,EAAE;IAElD,OAAO,OAAO;SACX,IAAI,CAAC,QAAQ,CAAC;SACd,GAAG,CAAC,EAAE,GAAG,mCAAmC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CACpC,MAAuD;IAEvD,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACpC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;YACX,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC;YACnB,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;YACjB,SAAS,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YACnC,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC;YACvB,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC;YACrB,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC;YACnB,aAAa,EAAE,CAAC,CAAC,gBAAgB,CAAC;SACnC,CAAC,CAAC;KACJ,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,IAAI,CACxB,OAAe,EACf,UAA4B,EAAE,cAAc,EAAE,EAAE,EAAE;IAElD,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACjD,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,OAAe,EACf,IAAuB,EACvB,UAA8B,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpD,OAAO,OAAO;SACX,IAAI,CAAC,QAAQ,CAAC;SACd,IAAI,CAAC;QACJ,GAAG,mCAAmC,CAAC,OAAO,CAAC;QAC/C,WAAW,EAAG,OAAO,CAAC,WAAmB,IAAI,qBAAqB;QAClE,IAAI,EAAE;YACJ,IAAI,EAAE,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC;YAChD,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;SACzB;KACF,CAAC,CAAC;AACP,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,MAA2D;IAE3D,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,SAAS,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACjC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC/B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAC7C,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM,CAC1B,OAAe,EACf,IAAuB,EACvB,UAA8B,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpD,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzD,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,UAAU,aAAa,CAC3B,OAAe,EACf,MAAc,EACd,UAAgC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEtD,OAAO,OAAO;SACX,IAAI,CAAC,wBAAwB,EAAE,MAAM,CAAC;SACtC,IAAI,CAAC,EAAE,GAAG,mCAAmC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC/D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,MAA+D;IAE/D,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,SAAS,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACjC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAC/B,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAC7C,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ,CAC5B,OAAe,EACf,MAAc,EACd,UAAgC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEtD,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7D,OAAO,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACtC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAClC,OAAe,EACf,MAAc,EACd,UAAuC,EAAE,cAAc,EAAE,EAAE,EAAE;IAI7D,OAAO,OAAO;SACX,IAAI,CAAC,wBAAwB,EAAE,MAAM,CAAC;SACtC,MAAM,CAAC,EAAE,GAAG,mCAAmC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACjE,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAC/C,MAA6E;IAE7E,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;KAChC,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,OAAe,EACf,MAAc,EACd,UAAuC,EAAE,cAAc,EAAE,EAAE,EAAE;IAE7D,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACpE,OAAO,2BAA2B,CAAC,MAAM,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,aAAa,CAC3B,OAAe,EACf,MAAc,EACd,UAAgC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEtD,OAAO,OAAO;SACX,IAAI,CAAC,gCAAgC,EAAE,MAAM,CAAC;SAC9C,GAAG,CAAC,EAAE,GAAG,mCAAmC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB,CACxC,MAA+D;IAE/D,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO,MAAM,CAAC,IAAI,CAAC;AACrB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,QAAQ,CAC5B,OAAe,EACf,MAAc,EACd,UAAgC,EAAE,cAAc,EAAE,EAAE,EAAE;IAEtD,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC7D,OAAO,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACtC,CAAC","sourcesContent":["// Licensed under the MIT license.\n\nimport {\n  OpenAIFile,\n  ListFilesResponse,\n  CreateFileRequest,\n  DeleteFileResponse,\n} from \"../../models/models.js\";\nimport {\n  FilesCreate200Response,\n  FilesCreateDefaultResponse,\n  FilesDeleteOperation200Response,\n  FilesDeleteOperationDefaultResponse,\n  FilesDownload200Response,\n  FilesDownloadDefaultResponse,\n  FilesList200Response,\n  FilesListDefaultResponse,\n  FilesRetrieve200Response,\n  FilesRetrieveDefaultResponse,\n  isUnexpected,\n  OpenAIContext as Client,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  uint8ArrayToString,\n  createRestError,\n} from \"@typespec/ts-http-runtime\";\nimport {\n  FilesListOptions,\n  FilesCreateOptions,\n  FilesRetrieveOptions,\n  FilesDeleteOperationOptions,\n  FilesDownloadOptions,\n} from \"../../models/options.js\";\n\nexport function _listSend(\n  context: Client,\n  options: FilesListOptions = { requestOptions: {} },\n): StreamableMethod<FilesList200Response | FilesListDefaultResponse> {\n  return context\n    .path(\"/files\")\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listDeserialize(\n  result: FilesList200Response | FilesListDefaultResponse,\n): Promise<ListFilesResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    object: result.body[\"object\"],\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      object: p[\"object\"],\n      bytes: p[\"bytes\"],\n      createdAt: new Date(p[\"createdAt\"]),\n      filename: p[\"filename\"],\n      purpose: p[\"purpose\"],\n      status: p[\"status\"],\n      statusDetails: p[\"status_details\"],\n    })),\n  };\n}\n\nexport async function list(\n  context: Client,\n  options: FilesListOptions = { requestOptions: {} },\n): Promise<ListFilesResponse> {\n  const result = await _listSend(context, options);\n  return _listDeserialize(result);\n}\n\nexport function _createSend(\n  context: Client,\n  file: CreateFileRequest,\n  options: FilesCreateOptions = { requestOptions: {} },\n): StreamableMethod<FilesCreate200Response | FilesCreateDefaultResponse> {\n  return context\n    .path(\"/files\")\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      contentType: (options.contentType as any) ?? \"multipart/form-data\",\n      body: {\n        file: uint8ArrayToString(file[\"file\"], \"base64\"),\n        purpose: file[\"purpose\"],\n      },\n    });\n}\n\nexport async function _createDeserialize(\n  result: FilesCreate200Response | FilesCreateDefaultResponse,\n): Promise<OpenAIFile> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    object: result.body[\"object\"],\n    bytes: result.body[\"bytes\"],\n    createdAt: new Date(result.body[\"createdAt\"]),\n    filename: result.body[\"filename\"],\n    purpose: result.body[\"purpose\"],\n    status: result.body[\"status\"],\n    statusDetails: result.body[\"status_details\"],\n  };\n}\n\nexport async function create(\n  context: Client,\n  file: CreateFileRequest,\n  options: FilesCreateOptions = { requestOptions: {} },\n): Promise<OpenAIFile> {\n  const result = await _createSend(context, file, options);\n  return _createDeserialize(result);\n}\n\nexport function _retrieveSend(\n  context: Client,\n  fileId: string,\n  options: FilesRetrieveOptions = { requestOptions: {} },\n): StreamableMethod<FilesRetrieve200Response | FilesRetrieveDefaultResponse> {\n  return context\n    .path(\"/files/files/{file_id}\", fileId)\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _retrieveDeserialize(\n  result: FilesRetrieve200Response | FilesRetrieveDefaultResponse,\n): Promise<OpenAIFile> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    object: result.body[\"object\"],\n    bytes: result.body[\"bytes\"],\n    createdAt: new Date(result.body[\"createdAt\"]),\n    filename: result.body[\"filename\"],\n    purpose: result.body[\"purpose\"],\n    status: result.body[\"status\"],\n    statusDetails: result.body[\"status_details\"],\n  };\n}\n\nexport async function retrieve(\n  context: Client,\n  fileId: string,\n  options: FilesRetrieveOptions = { requestOptions: {} },\n): Promise<OpenAIFile> {\n  const result = await _retrieveSend(context, fileId, options);\n  return _retrieveDeserialize(result);\n}\n\nexport function _deleteOperationSend(\n  context: Client,\n  fileId: string,\n  options: FilesDeleteOperationOptions = { requestOptions: {} },\n): StreamableMethod<\n  FilesDeleteOperation200Response | FilesDeleteOperationDefaultResponse\n> {\n  return context\n    .path(\"/files/files/{file_id}\", fileId)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteOperationDeserialize(\n  result: FilesDeleteOperation200Response | FilesDeleteOperationDefaultResponse,\n): Promise<DeleteFileResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    object: result.body[\"object\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\nexport async function deleteOperation(\n  context: Client,\n  fileId: string,\n  options: FilesDeleteOperationOptions = { requestOptions: {} },\n): Promise<DeleteFileResponse> {\n  const result = await _deleteOperationSend(context, fileId, options);\n  return _deleteOperationDeserialize(result);\n}\n\nexport function _downloadSend(\n  context: Client,\n  fileId: string,\n  options: FilesDownloadOptions = { requestOptions: {} },\n): StreamableMethod<FilesDownload200Response | FilesDownloadDefaultResponse> {\n  return context\n    .path(\"/files/files/{file_id}/content\", fileId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _downloadDeserialize(\n  result: FilesDownload200Response | FilesDownloadDefaultResponse,\n): Promise<string> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return result.body;\n}\n\nexport async function download(\n  context: Client,\n  fileId: string,\n  options: FilesDownloadOptions = { requestOptions: {} },\n): Promise<string> {\n  const result = await _downloadSend(context, fileId, options);\n  return _downloadDeserialize(result);\n}\n"]}