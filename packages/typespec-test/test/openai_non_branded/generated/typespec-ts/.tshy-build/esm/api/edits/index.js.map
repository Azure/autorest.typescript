{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/edits/index.ts"],"names":[],"mappings":"AAAA,kCAAkC;AAGlC,OAAO,EAGL,YAAY,GAEb,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAEL,mCAAmC,EACnC,eAAe,GAChB,MAAM,2BAA2B,CAAC;AAGnC,MAAM,UAAU,WAAW,CACzB,OAAe,EACf,IAAuB,EACvB,UAA8B,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpD,OAAO,OAAO;SACX,IAAI,CAAC,QAAQ,CAAC;SACd,IAAI,CAAC;QACJ,GAAG,mCAAmC,CAAC,OAAO,CAAC;QAC/C,IAAI,EAAE;YACJ,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;YACpB,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC;YACpB,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;YAChC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;YACZ,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC;YAChC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;SACpB;KACF,CAAC,CAAC;AACP,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,MAA2D;IAE3D,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,OAAO;QACL,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC1C,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;YACf,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;YACjB,YAAY,EAAE,CAAC,CAAC,eAAe,CAAC;SACjC,CAAC,CAAC;QACH,KAAK,EAAE;YACL,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;YAChD,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;YACxD,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;SAC/C;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,MAAM,CAC1B,OAAe,EACf,IAAuB,EACvB,UAA8B,EAAE,cAAc,EAAE,EAAE,EAAE;IAEpD,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzD,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC","sourcesContent":["// Licensed under the MIT license.\n\nimport { CreateEditRequest, CreateEditResponse } from \"../../models/models.js\";\nimport {\n  EditsCreate200Response,\n  EditsCreateDefaultResponse,\n  isUnexpected,\n  OpenAIContext as Client,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@typespec/ts-http-runtime\";\nimport { EditsCreateOptions } from \"../../models/options.js\";\n\nexport function _createSend(\n  context: Client,\n  edit: CreateEditRequest,\n  options: EditsCreateOptions = { requestOptions: {} },\n): StreamableMethod<EditsCreate200Response | EditsCreateDefaultResponse> {\n  return context\n    .path(\"/edits\")\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        model: edit[\"model\"],\n        input: edit[\"input\"],\n        instruction: edit[\"instruction\"],\n        n: edit[\"n\"],\n        temperature: edit[\"temperature\"],\n        top_p: edit[\"topP\"],\n      },\n    });\n}\n\nexport async function _createDeserialize(\n  result: EditsCreate200Response | EditsCreateDefaultResponse,\n): Promise<CreateEditResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    object: result.body[\"object\"],\n    created: new Date(result.body[\"created\"]),\n    choices: result.body[\"choices\"].map((p) => ({\n      text: p[\"text\"],\n      index: p[\"index\"],\n      finishReason: p[\"finish_reason\"],\n    })),\n    usage: {\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      completionTokens: result.body.usage[\"completion_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\nexport async function create(\n  context: Client,\n  edit: CreateEditRequest,\n  options: EditsCreateOptions = { requestOptions: {} },\n): Promise<CreateEditResponse> {\n  const result = await _createSend(context, edit, options);\n  return _createDeserialize(result);\n}\n"]}