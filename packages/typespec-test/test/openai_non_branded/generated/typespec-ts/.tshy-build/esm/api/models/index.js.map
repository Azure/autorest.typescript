{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/models/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed under the MIT license.\n\nimport {\n  ListModelsResponse,\n  Model,\n  DeleteModelResponse,\n} from \"../../models/models.js\";\nimport {\n  isUnexpected,\n  ModelsDeleteOperation200Response,\n  ModelsDeleteOperationDefaultResponse,\n  ModelsList200Response,\n  ModelsListDefaultResponse,\n  ModelsRetrieve200Response,\n  ModelsRetrieveDefaultResponse,\n  OpenAIContext as Client,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@typespec/ts-http-runtime\";\nimport {\n  ModelsListOptions,\n  ModelsRetrieveOptions,\n  ModelsDeleteOperationOptions,\n} from \"../../models/options.js\";\n\nexport function _listSend(\n  context: Client,\n  options: ModelsListOptions = { requestOptions: {} },\n): StreamableMethod<ModelsList200Response | ModelsListDefaultResponse> {\n  return context\n    .path(\"/models\")\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _listDeserialize(\n  result: ModelsList200Response | ModelsListDefaultResponse,\n): Promise<ListModelsResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    object: result.body[\"object\"],\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      object: p[\"object\"],\n      created: new Date(p[\"created\"]),\n      ownedBy: p[\"owned_by\"],\n    })),\n  };\n}\n\nexport async function list(\n  context: Client,\n  options: ModelsListOptions = { requestOptions: {} },\n): Promise<ListModelsResponse> {\n  const result = await _listSend(context, options);\n  return _listDeserialize(result);\n}\n\nexport function _retrieveSend(\n  context: Client,\n  model: string,\n  options: ModelsRetrieveOptions = { requestOptions: {} },\n): StreamableMethod<ModelsRetrieve200Response | ModelsRetrieveDefaultResponse> {\n  return context\n    .path(\"/models/{model}\", model)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _retrieveDeserialize(\n  result: ModelsRetrieve200Response | ModelsRetrieveDefaultResponse,\n): Promise<Model> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    object: result.body[\"object\"],\n    created: new Date(result.body[\"created\"]),\n    ownedBy: result.body[\"owned_by\"],\n  };\n}\n\nexport async function retrieve(\n  context: Client,\n  model: string,\n  options: ModelsRetrieveOptions = { requestOptions: {} },\n): Promise<Model> {\n  const result = await _retrieveSend(context, model, options);\n  return _retrieveDeserialize(result);\n}\n\nexport function _deleteOperationSend(\n  context: Client,\n  model: string,\n  options: ModelsDeleteOperationOptions = { requestOptions: {} },\n): StreamableMethod<\n  ModelsDeleteOperation200Response | ModelsDeleteOperationDefaultResponse\n> {\n  return context\n    .path(\"/models/{model}\", model)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteOperationDeserialize(\n  result:\n    | ModelsDeleteOperation200Response\n    | ModelsDeleteOperationDefaultResponse,\n): Promise<DeleteModelResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    object: result.body[\"object\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\nexport async function deleteOperation(\n  context: Client,\n  model: string,\n  options: ModelsDeleteOperationOptions = { requestOptions: {} },\n): Promise<DeleteModelResponse> {\n  const result = await _deleteOperationSend(context, model, options);\n  return _deleteOperationDeserialize(result);\n}\n"]}