{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/api/moderations/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Licensed under the MIT license.\n\nimport {\n  CreateModerationRequest,\n  CreateModerationResponse,\n} from \"../../models/models.js\";\nimport {\n  isUnexpected,\n  ModerationsCreate200Response,\n  ModerationsCreateDefaultResponse,\n  OpenAIContext as Client,\n} from \"../../rest/index.js\";\nimport {\n  StreamableMethod,\n  operationOptionsToRequestParameters,\n  createRestError,\n} from \"@typespec/ts-http-runtime\";\nimport { ModerationsCreateOptions } from \"../../models/options.js\";\n\nexport function _createSend(\n  context: Client,\n  content: CreateModerationRequest,\n  options: ModerationsCreateOptions = { requestOptions: {} },\n): StreamableMethod<\n  ModerationsCreate200Response | ModerationsCreateDefaultResponse\n> {\n  return context\n    .path(\"/moderations\")\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: { input: content[\"input\"], model: content[\"model\"] },\n    });\n}\n\nexport async function _createDeserialize(\n  result: ModerationsCreate200Response | ModerationsCreateDefaultResponse,\n): Promise<CreateModerationResponse> {\n  if (isUnexpected(result)) {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    model: result.body[\"model\"],\n    results: result.body[\"results\"].map((p) => ({\n      flagged: p[\"flagged\"],\n      categories: {\n        hate: p.categories[\"hate\"],\n        \"hate/threatening\": p.categories[\"hate/threatening\"],\n        harassment: p.categories[\"harassment\"],\n        \"harassment/threatening\": p.categories[\"harassment/threatening\"],\n        selfHarm: p.categories[\"self-harm\"],\n        \"selfHarm/intent\": p.categories[\"self-harm/intent\"],\n        \"selfHarm/instructive\": p.categories[\"self-harm/instructive\"],\n        sexual: p.categories[\"sexual\"],\n        \"sexual/minors\": p.categories[\"sexual/minors\"],\n        violence: p.categories[\"violence\"],\n        \"violence/graphic\": p.categories[\"violence/graphic\"],\n      },\n      categoryScores: {\n        hate: p.category_scores[\"hate\"],\n        \"hate/threatening\": p.category_scores[\"hate/threatening\"],\n        harassment: p.category_scores[\"harassment\"],\n        \"harassment/threatening\": p.category_scores[\"harassment/threatening\"],\n        selfHarm: p.category_scores[\"self-harm\"],\n        \"selfHarm/intent\": p.category_scores[\"self-harm/intent\"],\n        \"selfHarm/instructive\": p.category_scores[\"self-harm/instructive\"],\n        sexual: p.category_scores[\"sexual\"],\n        \"sexual/minors\": p.category_scores[\"sexual/minors\"],\n        violence: p.category_scores[\"violence\"],\n        \"violence/graphic\": p.category_scores[\"violence/graphic\"],\n      },\n    })),\n  };\n}\n\nexport async function create(\n  context: Client,\n  content: CreateModerationRequest,\n  options: ModerationsCreateOptions = { requestOptions: {} },\n): Promise<CreateModerationResponse> {\n  const result = await _createSend(context, content, options);\n  return _createDeserialize(result);\n}\n"]}