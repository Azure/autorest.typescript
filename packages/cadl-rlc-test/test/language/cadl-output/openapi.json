{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Analyze Text Authoring",
    "version": "202ÃŸ2-05-15-preview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "required": true,
        "description": "The endpoint to use.",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "tags": [],
  "paths": {
    "/authoring/analyze-text/projects": {
      "get": {
        "operationId": "Projects_ListProjects",
        "description": "Lists the existing projects.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Project"
                  },
                  "x-ms-identifiers": [],
                  "x-cadl-name": "Project[]",
                  "description": "The Project items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-cadl-name": "Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Project items",
              "required": [
                "value"
              ],
              "x-cadl-name": "Azure.Core.Foundations.CustomPage<Project, (anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}": {
      "patch": {
        "operationId": "Projects_CreateOrUpdate",
        "description": "Creates a new project or updates an existing one.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "projectKind": {
                  "$ref": "#/definitions/ProjectKind",
                  "description": "The project kind."
                },
                "storageInputContainerName": {
                  "type": "string",
                  "description": "The storage container name."
                },
                "settings": {
                  "$ref": "#/definitions/ProjectSettings",
                  "description": "The project settings."
                },
                "multilingual": {
                  "type": "boolean",
                  "description": "Whether the project would be used for multiple languages or not."
                },
                "description": {
                  "type": "string",
                  "description": "The project description."
                },
                "language": {
                  "type": "string",
                  "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
                }
              },
              "description": "The template for adding optional properties.",
              "x-cadl-name": "Azure.Core.Foundations.ResourceCreateOrUpdateModel<Project>"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "projectName": {
                  "type": "string",
                  "description": "The project name.",
                  "readOnly": true
                },
                "projectKind": {
                  "$ref": "#/definitions/ProjectKind",
                  "description": "The project kind."
                },
                "storageInputContainerName": {
                  "type": "string",
                  "description": "The storage container name."
                },
                "settings": {
                  "$ref": "#/definitions/ProjectSettings",
                  "description": "The project settings."
                },
                "multilingual": {
                  "type": "boolean",
                  "description": "Whether the project would be used for multiple languages or not."
                },
                "description": {
                  "type": "string",
                  "description": "The project description."
                },
                "language": {
                  "type": "string",
                  "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project creation datetime.",
                  "readOnly": true
                },
                "lastModifiedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last modification datetime.",
                  "readOnly": true
                },
                "lastTrainedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last training datetime.",
                  "readOnly": true
                },
                "lastDeployedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last deployment datetime.",
                  "readOnly": true
                }
              },
              "required": [
                "projectName",
                "projectKind",
                "storageInputContainerName",
                "language",
                "createdDateTime",
                "lastModifiedDateTime",
                "lastTrainedDateTime",
                "lastDeployedDateTime"
              ],
              "x-cadl-name": "Azure.Core.Foundations.ResourceOkResponse<Azure.Core.(anonymous model)>"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "projectName": {
                  "type": "string",
                  "description": "The project name.",
                  "readOnly": true
                },
                "projectKind": {
                  "$ref": "#/definitions/ProjectKind",
                  "description": "The project kind."
                },
                "storageInputContainerName": {
                  "type": "string",
                  "description": "The storage container name."
                },
                "settings": {
                  "$ref": "#/definitions/ProjectSettings",
                  "description": "The project settings."
                },
                "multilingual": {
                  "type": "boolean",
                  "description": "Whether the project would be used for multiple languages or not."
                },
                "description": {
                  "type": "string",
                  "description": "The project description."
                },
                "language": {
                  "type": "string",
                  "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
                },
                "createdDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project creation datetime.",
                  "readOnly": true
                },
                "lastModifiedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last modification datetime.",
                  "readOnly": true
                },
                "lastTrainedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last training datetime.",
                  "readOnly": true
                },
                "lastDeployedDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Represents the project last deployment datetime.",
                  "readOnly": true
                }
              },
              "description": "A  resource was successfully created.",
              "required": [
                "projectName",
                "projectKind",
                "storageInputContainerName",
                "language",
                "createdDateTime",
                "lastModifiedDateTime",
                "lastTrainedDateTime",
                "lastDeployedDateTime"
              ],
              "x-cadl-name": "Azure.Core.Foundations.ResourceCreatedResponse<Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/merge-patch+json"
        ]
      },
      "get": {
        "operationId": "Projects_Get",
        "description": "Gets the details of a project.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Projects_Delete",
        "description": "Deletes a project.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                }
              },
              "required": [
                "id",
                "status"
              ],
              "x-cadl-name": "Azure.Core.Foundations.AcceptedResponse<Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}:export": {
      "post": {
        "operationId": "Projects_Export",
        "description": "Triggers a job to export a project's data.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ExportParams"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}:importx": {
      "post": {
        "operationId": "Projects_Importx",
        "description": "Triggers a job to export a project's data.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}:train": {
      "post": {
        "operationId": "Projects_Train",
        "description": "Triggers a training job for a project.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The body of the request.",
            "schema": {
              "$ref": "#/definitions/TrainingJobOptions"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments": {
      "get": {
        "operationId": "Deployments_ListDeployments",
        "description": "Lists the existing deployments.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Deployment"
                  },
                  "x-ms-identifiers": [],
                  "x-cadl-name": "Deployment[]",
                  "description": "The Deployment items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-cadl-name": "Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Deployment items",
              "required": [
                "value"
              ],
              "x-cadl-name": "Azure.Core.Foundations.CustomPage<Deployment, {}>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "Deployments_GetDeployment",
        "description": "Gets the details of a deployment.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "description": "The name of the deployment.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Deployments_DeployProject",
        "description": "Creates a new deployment or replaces an existing one.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "description": "The name of the deployment.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the deployment.",
                  "readOnly": true
                }
              },
              "required": [
                "name"
              ],
              "x-cadl-name": "Azure.Core.Foundations.ResourceOkResponse<Azure.Core.(anonymous model)>"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the deployment.",
                  "readOnly": true
                }
              },
              "description": "A  resource was successfully created.",
              "required": [
                "name"
              ],
              "x-cadl-name": "Azure.Core.Foundations.ResourceCreatedResponse<Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Deployments_DeleteDeployment",
        "description": "Deletes a project deployment.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "description": "The name of the deployment.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the operation."
                },
                "status": {
                  "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
                  "description": "The status of the operation"
                },
                "error": {
                  "$ref": "#/definitions/Azure.Core.Foundations.Error",
                  "description": "Error object that describes the error when status is \"Failed\"."
                }
              },
              "required": [
                "id",
                "status"
              ],
              "x-cadl-name": "Azure.Core.Foundations.AcceptedResponse<Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}/jobs/{jobId}": {
      "get": {
        "operationId": "Jobs_GetDeploymentStatus",
        "description": "Gets the status of an existing deployment job.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "description": "The name of the deployment.",
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments/{deploymentName}/swap/jobs/{jobId}": {
      "get": {
        "operationId": "Jobs_GetSwapDeploymentsStatus",
        "description": "Gets the status of an existing swap deployment job.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "description": "The name of the deployment.",
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SwapDeploymentsJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/{projectName}/deployments:swap": {
      "post": {
        "operationId": "Deployments_SwapDeployments",
        "description": "Swaps two existing deployments with each other.",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "description": "The project name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SwapDeploymentsParams"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/authoring/analyze-text/projects/global/languages": {
      "get": {
        "operationId": "Global_GetSupportedLanguages",
        "description": "Gets the supported languages.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSupportedLanguage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/authoring/analyze-text/projects/global/training-config-versions": {
      "get": {
        "operationId": "Global_ListTrainingConfigVersions",
        "description": "Lists training configuration versions.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTrainingConfigVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true
      }
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the deployment.",
          "readOnly": true
        }
      },
      "description": "The details of a project deployment.",
      "required": [
        "name"
      ]
    },
    "DeploymentJob": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job.",
          "readOnly": true
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The the last date time the job was updated.",
          "readOnly": true
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobWarning"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "JobWarning[]",
          "description": "The warnings that were encountered while executing the job."
        },
        "errors": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The errors encountered while executing the job."
        },
        "id": {
          "type": "string",
          "description": "The job ID.",
          "readOnly": true
        }
      },
      "description": "The details of a deployment job.",
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "warnings",
        "errors",
        "id"
      ]
    },
    "Endpoint": {
      "type": "string",
      "description": "The endpoint to use."
    },
    "ExportParams": {
      "type": "object",
      "properties": {},
      "description": "Export parameters."
    },
    "ExportedProject": {
      "type": "object",
      "properties": {},
      "description": "The details of an exported project."
    },
    "Job": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job.",
          "readOnly": true
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The the last date time the job was updated.",
          "readOnly": true
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobWarning"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "JobWarning[]",
          "description": "The warnings that were encountered while executing the job."
        },
        "errors": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The errors encountered while executing the job."
        }
      },
      "description": "The details about a job.",
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "warnings",
        "errors"
      ]
    },
    "JobStatus": {
      "type": "string",
      "description": "Represents the job status.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed",
        "cancelled",
        "cancelling",
        "partiallyCompleted"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": false
      }
    },
    "JobWarning": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The warning code."
        },
        "message": {
          "type": "string",
          "description": "The warning message."
        }
      },
      "description": "Represents a warning that was encountered while executing the request.",
      "required": [
        "code",
        "message"
      ]
    },
    "PagedSupportedLanguage": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedLanguage"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SupportedLanguage[]",
          "description": "The SupportedLanguage items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "A collection of SupportedLanguage resources.",
      "required": [
        "value"
      ]
    },
    "PagedTrainingConfigVersion": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrainingConfigVersion"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "TrainingConfigVersion[]",
          "description": "The TrainingConfigVersion items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "A collection of TrainingConfigVersion resources.",
      "required": [
        "value"
      ]
    },
    "Project": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "The project name.",
          "readOnly": true
        },
        "projectKind": {
          "$ref": "#/definitions/ProjectKind",
          "description": "The project kind."
        },
        "storageInputContainerName": {
          "type": "string",
          "description": "The storage container name."
        },
        "settings": {
          "$ref": "#/definitions/ProjectSettings",
          "description": "The project settings."
        },
        "multilingual": {
          "type": "boolean",
          "description": "Whether the project would be used for multiple languages or not."
        },
        "description": {
          "type": "string",
          "description": "The project description."
        },
        "language": {
          "type": "string",
          "description": "The project language. This is BCP-47 representation of a language. For example, use \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project creation datetime.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last modification datetime.",
          "readOnly": true
        },
        "lastTrainedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last training datetime.",
          "readOnly": true
        },
        "lastDeployedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Represents the project last deployment datetime.",
          "readOnly": true
        }
      },
      "description": "The details of a project.",
      "required": [
        "projectName",
        "projectKind",
        "storageInputContainerName",
        "language",
        "createdDateTime",
        "lastModifiedDateTime",
        "lastTrainedDateTime",
        "lastDeployedDateTime"
      ]
    },
    "ProjectKind": {
      "type": "string",
      "description": "Represents the project kind.",
      "enum": [
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "CustomEntityRecognition"
      ],
      "x-ms-enum": {
        "name": "ProjectKind",
        "modelAsString": false,
        "values": [
          {
            "name": "CustomSingleLabelClassification",
            "value": "CustomSingleLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file will have only one label. For example, file 1 is classified as A and file 2 is classified as B."
          },
          {
            "name": "CustomMultiLabelClassification",
            "value": "CustomMultiLabelClassification",
            "description": "For building a classification model to classify text using your own data. Each file can have one or many labels. For example, file 1 is classified as A, B, and C and file 2 is classified as B and C."
          },
          {
            "name": "CustomEntityRecognition",
            "value": "CustomEntityRecognition",
            "description": "For building an extraction model to identify your domain categories using your own data."
          }
        ]
      }
    },
    "ProjectSettings": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Represents the settings used to define the project behavior."
    },
    "SupportedLanguage": {
      "type": "object",
      "properties": {
        "languageName": {
          "type": "string",
          "description": "The language name."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code. This is BCP-47 representation of a language. For example, \"en\" for English, \"en-gb\" for English (UK), \"es\" for Spanish etc."
        }
      },
      "description": "Represents a supported language.",
      "required": [
        "languageName",
        "languageCode"
      ]
    },
    "SwapDeploymentsJob": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job ID."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date time of the job.",
          "readOnly": true
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The the last date time the job was updated.",
          "readOnly": true
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date time of the job.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The job status."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobWarning"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "JobWarning[]",
          "description": "The warnings that were encountered while executing the job."
        },
        "errors": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The errors encountered while executing the job."
        },
        "id": {
          "type": "string",
          "description": "The job ID.",
          "readOnly": true
        }
      },
      "description": "The details of a swap deployments job.",
      "required": [
        "jobId",
        "createdDateTime",
        "lastUpdatedDateTime",
        "expirationDateTime",
        "status",
        "warnings",
        "errors",
        "id"
      ]
    },
    "SwapDeploymentsOptions": {
      "type": "object",
      "properties": {
        "firstDeploymentName": {
          "type": "string",
          "description": "Represents the first deployment name."
        },
        "secondDeploymentName": {
          "type": "string",
          "description": "Represents the second deployment name."
        }
      },
      "description": "Swap deployment options.",
      "required": [
        "firstDeploymentName",
        "secondDeploymentName"
      ]
    },
    "SwapDeploymentsParams": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/SwapDeploymentsOptions",
          "description": "The body schema of the operation."
        }
      },
      "description": "Swap deployment parameters.",
      "required": [
        "body"
      ]
    },
    "TrainingConfigVersion": {
      "type": "object",
      "properties": {
        "trainingConfigVersion": {
          "type": "string",
          "description": "Represents the version of the config."
        },
        "modelExpirationDate": {
          "type": "string",
          "format": "date",
          "description": "Represents the training config version expiration date."
        }
      },
      "description": "Represents a training config version.",
      "required": [
        "trainingConfigVersion",
        "modelExpirationDate"
      ]
    },
    "TrainingJobOptions": {
      "type": "object",
      "properties": {
        "modelLabel": {
          "type": "string",
          "description": "The model label."
        }
      },
      "description": "Training job parameters.",
      "required": [
        "modelLabel"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "required": false,
      "description": "The maximum number of result items per page.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "required": false,
      "description": "The number of result items to skip.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "required": false,
      "description": "The number of result items to return.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ExportParams": {
      "name": "projectFileVersion",
      "in": "query",
      "required": true,
      "description": "The project file version.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SwapDeploymentsParams": {
      "name": "body",
      "in": "body",
      "required": true,
      "description": "The body schema of the operation.",
      "schema": {
        "$ref": "#/definitions/SwapDeploymentsOptions"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
