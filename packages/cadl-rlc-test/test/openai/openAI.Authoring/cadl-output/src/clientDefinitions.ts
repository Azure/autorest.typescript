// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import {
  ListDeploymentsParameters,
  CreateDeploymentParameters,
  GetDeploymentParameters,
  UpdateDeploymentParameters,
  DeleteDeploymentParameters,
  ListFilesParameters,
  UploadFileParameters,
  GetFileParameters,
  DeleteFileParameters,
  GetFileContentParameters,
  ImportFileParameters,
  ListFineTunesParameters,
  CreateFineTuneParameters,
  GetFineTuneParameters,
  DeleteFineTuneParameters,
  ListFineTuneEventsParameters,
  CancelFineTuneParameters,
  ListModelsParameters,
  GetModelParameters,
} from "./parameters";
import {
  ListDeployments200Response,
  ListDeploymentsDefaultResponse,
  CreateDeployment201Response,
  CreateDeploymentDefaultResponse,
  GetDeployment200Response,
  GetDeploymentDefaultResponse,
  UpdateDeployment200Response,
  UpdateDeployment201Response,
  UpdateDeploymentDefaultResponse,
  DeleteDeployment204Response,
  DeleteDeploymentDefaultResponse,
  ListFiles200Response,
  ListFilesDefaultResponse,
  UploadFile201Response,
  UploadFileDefaultResponse,
  GetFile200Response,
  GetFileDefaultResponse,
  DeleteFile204Response,
  DeleteFileDefaultResponse,
  GetFileContent200Response,
  GetFileContentDefaultResponse,
  ImportFile201Response,
  ImportFileDefaultResponse,
  ListFineTunes200Response,
  ListFineTunesDefaultResponse,
  CreateFineTune201Response,
  CreateFineTuneDefaultResponse,
  GetFineTune200Response,
  GetFineTuneDefaultResponse,
  DeleteFineTune204Response,
  DeleteFineTuneDefaultResponse,
  ListFineTuneEvents200Response,
  ListFineTuneEventsDefaultResponse,
  CancelFineTune200Response,
  CancelFineTuneDefaultResponse,
  ListModels200Response,
  ListModelsDefaultResponse,
  GetModel200Response,
  GetModelDefaultResponse,
} from "./responses";
import { Client, StreamableMethod } from "@azure-rest/core-client";

export interface ListDeployments {
  /** Gets the list of deployments owned by the Azure OpenAI resource. */
  get(
    options?: ListDeploymentsParameters
  ): StreamableMethod<
    ListDeployments200Response | ListDeploymentsDefaultResponse
  >;
  /**
   * Creates a new deployment for the Azure OpenAI resource according to the given
   * specification.
   */
  post(
    options?: CreateDeploymentParameters
  ): StreamableMethod<
    CreateDeployment201Response | CreateDeploymentDefaultResponse
  >;
}

export interface GetDeployment {
  /** Gets details for a single deployment specified by the given deployment_id. */
  get(
    options?: GetDeploymentParameters
  ): StreamableMethod<GetDeployment200Response | GetDeploymentDefaultResponse>;
  /** Updates the mutable details of the deployment with the given deployment_id. */
  patch(
    options: UpdateDeploymentParameters
  ): StreamableMethod<
    | UpdateDeployment200Response
    | UpdateDeployment201Response
    | UpdateDeploymentDefaultResponse
  >;
  /** Deletes the deployment specified by the given deployment_id. */
  delete(
    options?: DeleteDeploymentParameters
  ): StreamableMethod<
    DeleteDeployment204Response | DeleteDeploymentDefaultResponse
  >;
}

export interface ListFiles {
  /**
   * Gets a list of all files owned by the Azure OpenAI resource.
   * These include user uploaded content like files with purpose "fine-tune" for training or
   * validation of fine-tunes models
   * as well as files that are generated by the
   * service such as "fine-tune-results" which contains various metrics for the
   * corresponding fine-tune job.
   */
  get(
    options?: ListFilesParameters
  ): StreamableMethod<ListFiles200Response | ListFilesDefaultResponse>;
  /**
   * Creates a new file entity by uploading data from a local machine. Uploaded
   * files can, for example, be used for training or evaluating fine-tuned models.
   */
  post(
    options?: UploadFileParameters
  ): StreamableMethod<UploadFile201Response | UploadFileDefaultResponse>;
}

export interface GetFile {
  /**
   * Gets details for a single file specified by the given file_id including status,
   * size, purpose, etc.
   */
  get(
    options?: GetFileParameters
  ): StreamableMethod<GetFile200Response | GetFileDefaultResponse>;
  /**
   * Deletes the file with the given file_id.
   * Deletion is also allowed if a file
   * was used, e.g., as training file in a fine-tune job.
   */
  delete(
    options?: DeleteFileParameters
  ): StreamableMethod<DeleteFile204Response | DeleteFileDefaultResponse>;
}

export interface GetFileContent {
  /**
   * Gets the content of the file specified by the given file_id.
   * Files can be user
   * uploaded content or generated by the service like result metrics of a fine-tune
   * job.
   */
  get(
    options?: GetFileContentParameters
  ): StreamableMethod<
    GetFileContent200Response | GetFileContentDefaultResponse
  >;
}

export interface ImportFile {
  /**
   * Creates a new file entity by importing data from a provided url. Uploaded files
   * can, for example, be used for training or evaluating fine-tuned models.
   */
  post(
    options: ImportFileParameters
  ): StreamableMethod<ImportFile201Response | ImportFileDefaultResponse>;
}

export interface ListFineTunes {
  /**
   * Gets a list of all fine-tune jobs owned by the Azure OpenAI resource.
   * The details that are returned for each fine-tune job contain besides its
   * identifier the base model, training and validation files, hyper parameters,
   * time stamps, status and events. Events are created when the job status
   * changes, e.g. running or complete, and when results are uploaded.
   */
  get(
    options?: ListFineTunesParameters
  ): StreamableMethod<ListFineTunes200Response | ListFineTunesDefaultResponse>;
  /**
   * Creates a job that fine-tunes a specified model from a given training
   * file.
   * Response includes details of the enqueued job including job status and
   * hyper parameters.
   * The name of the fine-tuned model is added to the response
   * once complete.
   */
  post(
    options?: CreateFineTuneParameters
  ): StreamableMethod<
    CreateFineTune201Response | CreateFineTuneDefaultResponse
  >;
}

export interface GetFineTune {
  /**
   * Gets details for a single fine-tune job specified by the given
   * fine_tune_id.
   * The details contain the base model, training and validation
   * files, hyper parameters, time stamps, status and events.
   * Events are created
   * when the job status changes, e.g. running or complete, and when results are
   * uploaded.
   */
  get(
    options?: GetFineTuneParameters
  ): StreamableMethod<GetFineTune200Response | GetFineTuneDefaultResponse>;
  /** Deletes the fine-tune job specified by the given fine_tune_id. */
  delete(
    options?: DeleteFineTuneParameters
  ): StreamableMethod<
    DeleteFineTune204Response | DeleteFineTuneDefaultResponse
  >;
}

export interface ListFineTuneEvents {
  /**
   * List events for the fine-tune job specified by the given fine_tune_id.
   * Events are created when the job status changes, e.g. running or
   * complete, and when results are uploaded.
   */
  get(
    options: ListFineTuneEventsParameters
  ): StreamableMethod<
    ListFineTuneEvents200Response | ListFineTuneEventsDefaultResponse
  >;
}

export interface CancelFineTune {
  /** Cancels the processing of the fine-tune job specified by the given fine_tune_id. */
  post(
    options?: CancelFineTuneParameters
  ): StreamableMethod<
    CancelFineTune200Response | CancelFineTuneDefaultResponse
  >;
}

export interface ListModels {
  /**
   * Gets a list of all models that are accessible by the Azure OpenAI
   * resource.
   * These include base models as well as all successfully completed
   * fine-tuned models owned by the Azure OpenAI resource.
   */
  get(
    options?: ListModelsParameters
  ): StreamableMethod<ListModels200Response | ListModelsDefaultResponse>;
}

export interface GetModel {
  /** Gets details for the model specified by the given model_id. */
  get(
    options?: GetModelParameters
  ): StreamableMethod<GetModel200Response | GetModelDefaultResponse>;
}

export interface Routes {
  /** Resource for '/deployments' has methods for the following verbs: get, post */
  (path: "/deployments"): ListDeployments;
  /** Resource for '/deployments/\{deploymentId\}' has methods for the following verbs: get, patch, delete */
  (path: "/deployments/{deploymentId}", deploymentId: string): GetDeployment;
  /** Resource for '/files' has methods for the following verbs: get, post */
  (path: "/files"): ListFiles;
  /** Resource for '/files/\{fileId\}' has methods for the following verbs: get, delete */
  (path: "/files/{fileId}", fileId: string): GetFile;
  /** Resource for '/files/\{fileId\}:content' has methods for the following verbs: get */
  (path: "/files/{fileId}:content", fileId: string): GetFileContent;
  /** Resource for '/files/import' has methods for the following verbs: post */
  (path: "/files/import"): ImportFile;
  /** Resource for '/fine-tunes' has methods for the following verbs: get, post */
  (path: "/fine-tunes"): ListFineTunes;
  /** Resource for '/fine-tunes/\{fineTuneId\}' has methods for the following verbs: get, delete */
  (path: "/fine-tunes/{fineTuneId}", fineTuneId: string): GetFineTune;
  /** Resource for '/fine-tunes/\{fineTuneId\}:listFineTuneEvents' has methods for the following verbs: get */
  (
    path: "/fine-tunes/{fineTuneId}:listFineTuneEvents",
    fineTuneId: string
  ): ListFineTuneEvents;
  /** Resource for '/fine-tunes/\{fineTuneId\}:cancel' has methods for the following verbs: post */
  (path: "/fine-tunes/{fineTuneId}:cancel", fineTuneId: string): CancelFineTune;
  /** Resource for '/models' has methods for the following verbs: get */
  (path: "/models"): ListModels;
  /** Resource for '/models/\{model_id\}' has methods for the following verbs: get */
  (path: "/models/{model_id}", modelId: string): GetModel;
}

export type OpenAIAuthoringRestClient = Client & {
  path: Routes;
};
