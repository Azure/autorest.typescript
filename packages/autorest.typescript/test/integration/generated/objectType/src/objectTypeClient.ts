/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreClient from "@azure/core-client";
import * as Parameters from "./models/parameters";
import {
  ObjectTypeClientOptionalParams,
  GetOptionalParams,
  GetResponse,
  PutOptionalParams,
} from "./models";

export class ObjectTypeClient extends coreClient.ServiceClient {
  $host: string;

  /**
   * Initializes a new instance of the ObjectTypeClient class.
   * @param options The parameter options
   */
  constructor(options?: ObjectTypeClientOptionalParams) {
    // Initializing default values for options
    if (!options) {
      options = {};
    }
    const defaults: ObjectTypeClientOptionalParams = {
      requestContentType: "application/json; charset=utf-8",
    };

    const packageDetails = `azsdk-js-object-type/1.0.0-preview1`;
    const userAgentPrefix =
      options.userAgentOptions && options.userAgentOptions.userAgentPrefix
        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
        : `${packageDetails}`;

    const optionsWithDefaults = {
      ...defaults,
      ...options,
      userAgentOptions: {
        userAgentPrefix,
      },
      endpoint: options.endpoint ?? options.baseUri ?? "http://localhost:3000",
    };
    super(optionsWithDefaults);

    // Assigning values to Constant parameters
    this.$host = options.$host || "http://localhost:3000";
  }

  /**
   * Basic get that returns an object. Returns object { 'message': 'An object was successfully returned'
   * }
   * @param options The options parameters.
   */
  get(options?: GetOptionalParams): Promise<GetResponse> {
    return this.sendOperationRequest({ options }, getOperationSpec);
  }

  /**
   * Basic put that puts an object. Pass in {'foo': 'bar'} to get a 200 and anything else to get an
   * object error.
   * @param putObject Pass in {'foo': 'bar'} for a 200, anything else for an object error
   * @param options The options parameters.
   */
  put(
    putObject: Record<string, unknown>,
    options?: PutOptionalParams,
  ): Promise<void> {
    return this.sendOperationRequest({ putObject, options }, putOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer({}, /* isXml */ false);

const getOperationSpec: coreClient.OperationSpec = {
  path: "/objectType/get",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "any" } } },
      },
    },
    default: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "any" } } },
      },
    },
  },
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer,
};
const putOperationSpec: coreClient.OperationSpec = {
  path: "/objectType/put",
  httpMethod: "PUT",
  responses: {
    200: {},
    default: {
      bodyMapper: {
        type: { name: "Dictionary", value: { type: { name: "any" } } },
      },
    },
  },
  requestBody: Parameters.putObject,
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept, Parameters.contentType],
  mediaType: "json",
  serializer,
};
