/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  IntGetNullOptionalParams,
  IntGetNullResponse,
  IntGetInvalidOptionalParams,
  IntGetInvalidResponse,
  IntGetOverflowInt32OptionalParams,
  IntGetOverflowInt32Response,
  IntGetUnderflowInt32OptionalParams,
  IntGetUnderflowInt32Response,
  IntGetOverflowInt64OptionalParams,
  IntGetOverflowInt64Response,
  IntGetUnderflowInt64OptionalParams,
  IntGetUnderflowInt64Response,
  IntPutMax32OptionalParams,
  IntPutMax64OptionalParams,
  IntPutMin32OptionalParams,
  IntPutMin64OptionalParams,
  IntGetUnixTimeOptionalParams,
  IntGetUnixTimeResponse,
  IntPutUnixTimeDateOptionalParams,
  IntGetInvalidUnixTimeOptionalParams,
  IntGetInvalidUnixTimeResponse,
  IntGetNullUnixTimeOptionalParams,
  IntGetNullUnixTimeResponse,
} from "../models";

/** Interface representing a Int. */
export interface Int {
  /**
   * Get null Int value
   * @param options The options parameters.
   */
  getNull(options?: IntGetNullOptionalParams): Promise<IntGetNullResponse>;
  /**
   * Get invalid Int value
   * @param options The options parameters.
   */
  getInvalid(
    options?: IntGetInvalidOptionalParams,
  ): Promise<IntGetInvalidResponse>;
  /**
   * Get overflow Int32 value
   * @param options The options parameters.
   */
  getOverflowInt32(
    options?: IntGetOverflowInt32OptionalParams,
  ): Promise<IntGetOverflowInt32Response>;
  /**
   * Get underflow Int32 value
   * @param options The options parameters.
   */
  getUnderflowInt32(
    options?: IntGetUnderflowInt32OptionalParams,
  ): Promise<IntGetUnderflowInt32Response>;
  /**
   * Get overflow Int64 value
   * @param options The options parameters.
   */
  getOverflowInt64(
    options?: IntGetOverflowInt64OptionalParams,
  ): Promise<IntGetOverflowInt64Response>;
  /**
   * Get underflow Int64 value
   * @param options The options parameters.
   */
  getUnderflowInt64(
    options?: IntGetUnderflowInt64OptionalParams,
  ): Promise<IntGetUnderflowInt64Response>;
  /**
   * Put max int32 value
   * @param intBody int body
   * @param options The options parameters.
   */
  putMax32(intBody: number, options?: IntPutMax32OptionalParams): Promise<void>;
  /**
   * Put max int64 value
   * @param intBody int body
   * @param options The options parameters.
   */
  putMax64(intBody: number, options?: IntPutMax64OptionalParams): Promise<void>;
  /**
   * Put min int32 value
   * @param intBody int body
   * @param options The options parameters.
   */
  putMin32(intBody: number, options?: IntPutMin32OptionalParams): Promise<void>;
  /**
   * Put min int64 value
   * @param intBody int body
   * @param options The options parameters.
   */
  putMin64(intBody: number, options?: IntPutMin64OptionalParams): Promise<void>;
  /**
   * Get datetime encoded as Unix time value
   * @param options The options parameters.
   */
  getUnixTime(
    options?: IntGetUnixTimeOptionalParams,
  ): Promise<IntGetUnixTimeResponse>;
  /**
   * Put datetime encoded as Unix time
   * @param intBody int body
   * @param options The options parameters.
   */
  putUnixTimeDate(
    intBody: Date,
    options?: IntPutUnixTimeDateOptionalParams,
  ): Promise<void>;
  /**
   * Get invalid Unix time value
   * @param options The options parameters.
   */
  getInvalidUnixTime(
    options?: IntGetInvalidUnixTimeOptionalParams,
  ): Promise<IntGetInvalidUnixTimeResponse>;
  /**
   * Get null Unix time value
   * @param options The options parameters.
   */
  getNullUnixTime(
    options?: IntGetNullUnixTimeOptionalParams,
  ): Promise<IntGetNullUnixTimeResponse>;
}
