/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  NumberGetNullOptionalParams,
  NumberGetNullResponse,
  NumberGetInvalidFloatOptionalParams,
  NumberGetInvalidFloatResponse,
  NumberGetInvalidDoubleOptionalParams,
  NumberGetInvalidDoubleResponse,
  NumberGetInvalidDecimalOptionalParams,
  NumberGetInvalidDecimalResponse,
  NumberPutBigFloatOptionalParams,
  NumberGetBigFloatOptionalParams,
  NumberGetBigFloatResponse,
  NumberPutBigDoubleOptionalParams,
  NumberGetBigDoubleOptionalParams,
  NumberGetBigDoubleResponse,
  NumberPutBigDoublePositiveDecimalOptionalParams,
  NumberGetBigDoublePositiveDecimalOptionalParams,
  NumberGetBigDoublePositiveDecimalResponse,
  NumberPutBigDoubleNegativeDecimalOptionalParams,
  NumberGetBigDoubleNegativeDecimalOptionalParams,
  NumberGetBigDoubleNegativeDecimalResponse,
  NumberPutBigDecimalOptionalParams,
  NumberGetBigDecimalOptionalParams,
  NumberGetBigDecimalResponse,
  NumberPutBigDecimalPositiveDecimalOptionalParams,
  NumberGetBigDecimalPositiveDecimalOptionalParams,
  NumberGetBigDecimalPositiveDecimalResponse,
  NumberPutBigDecimalNegativeDecimalOptionalParams,
  NumberGetBigDecimalNegativeDecimalOptionalParams,
  NumberGetBigDecimalNegativeDecimalResponse,
  NumberPutSmallFloatOptionalParams,
  NumberGetSmallFloatOptionalParams,
  NumberGetSmallFloatResponse,
  NumberPutSmallDoubleOptionalParams,
  NumberGetSmallDoubleOptionalParams,
  NumberGetSmallDoubleResponse,
  NumberPutSmallDecimalOptionalParams,
  NumberGetSmallDecimalOptionalParams,
  NumberGetSmallDecimalResponse,
} from "../models";

/** Interface representing a NumberOperations. */
export interface NumberOperations {
  /**
   * Get null Number value
   * @param options The options parameters.
   */
  getNull(
    options?: NumberGetNullOptionalParams,
  ): Promise<NumberGetNullResponse>;
  /**
   * Get invalid float Number value
   * @param options The options parameters.
   */
  getInvalidFloat(
    options?: NumberGetInvalidFloatOptionalParams,
  ): Promise<NumberGetInvalidFloatResponse>;
  /**
   * Get invalid double Number value
   * @param options The options parameters.
   */
  getInvalidDouble(
    options?: NumberGetInvalidDoubleOptionalParams,
  ): Promise<NumberGetInvalidDoubleResponse>;
  /**
   * Get invalid decimal Number value
   * @param options The options parameters.
   */
  getInvalidDecimal(
    options?: NumberGetInvalidDecimalOptionalParams,
  ): Promise<NumberGetInvalidDecimalResponse>;
  /**
   * Put big float value 3.402823e+20
   * @param numberBody number body
   * @param options The options parameters.
   */
  putBigFloat(
    numberBody: number,
    options?: NumberPutBigFloatOptionalParams,
  ): Promise<void>;
  /**
   * Get big float value 3.402823e+20
   * @param options The options parameters.
   */
  getBigFloat(
    options?: NumberGetBigFloatOptionalParams,
  ): Promise<NumberGetBigFloatResponse>;
  /**
   * Put big double value 2.5976931e+101
   * @param numberBody number body
   * @param options The options parameters.
   */
  putBigDouble(
    numberBody: number,
    options?: NumberPutBigDoubleOptionalParams,
  ): Promise<void>;
  /**
   * Get big double value 2.5976931e+101
   * @param options The options parameters.
   */
  getBigDouble(
    options?: NumberGetBigDoubleOptionalParams,
  ): Promise<NumberGetBigDoubleResponse>;
  /**
   * Put big double value 99999999.99
   * @param options The options parameters.
   */
  putBigDoublePositiveDecimal(
    options?: NumberPutBigDoublePositiveDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get big double value 99999999.99
   * @param options The options parameters.
   */
  getBigDoublePositiveDecimal(
    options?: NumberGetBigDoublePositiveDecimalOptionalParams,
  ): Promise<NumberGetBigDoublePositiveDecimalResponse>;
  /**
   * Put big double value -99999999.99
   * @param options The options parameters.
   */
  putBigDoubleNegativeDecimal(
    options?: NumberPutBigDoubleNegativeDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get big double value -99999999.99
   * @param options The options parameters.
   */
  getBigDoubleNegativeDecimal(
    options?: NumberGetBigDoubleNegativeDecimalOptionalParams,
  ): Promise<NumberGetBigDoubleNegativeDecimalResponse>;
  /**
   * Put big decimal value 2.5976931e+101
   * @param numberBody number body
   * @param options The options parameters.
   */
  putBigDecimal(
    numberBody: number,
    options?: NumberPutBigDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get big decimal value 2.5976931e+101
   * @param options The options parameters.
   */
  getBigDecimal(
    options?: NumberGetBigDecimalOptionalParams,
  ): Promise<NumberGetBigDecimalResponse>;
  /**
   * Put big decimal value 99999999.99
   * @param options The options parameters.
   */
  putBigDecimalPositiveDecimal(
    options?: NumberPutBigDecimalPositiveDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get big decimal value 99999999.99
   * @param options The options parameters.
   */
  getBigDecimalPositiveDecimal(
    options?: NumberGetBigDecimalPositiveDecimalOptionalParams,
  ): Promise<NumberGetBigDecimalPositiveDecimalResponse>;
  /**
   * Put big decimal value -99999999.99
   * @param options The options parameters.
   */
  putBigDecimalNegativeDecimal(
    options?: NumberPutBigDecimalNegativeDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get big decimal value -99999999.99
   * @param options The options parameters.
   */
  getBigDecimalNegativeDecimal(
    options?: NumberGetBigDecimalNegativeDecimalOptionalParams,
  ): Promise<NumberGetBigDecimalNegativeDecimalResponse>;
  /**
   * Put small float value 3.402823e-20
   * @param numberBody number body
   * @param options The options parameters.
   */
  putSmallFloat(
    numberBody: number,
    options?: NumberPutSmallFloatOptionalParams,
  ): Promise<void>;
  /**
   * Get big double value 3.402823e-20
   * @param options The options parameters.
   */
  getSmallFloat(
    options?: NumberGetSmallFloatOptionalParams,
  ): Promise<NumberGetSmallFloatResponse>;
  /**
   * Put small double value 2.5976931e-101
   * @param numberBody number body
   * @param options The options parameters.
   */
  putSmallDouble(
    numberBody: number,
    options?: NumberPutSmallDoubleOptionalParams,
  ): Promise<void>;
  /**
   * Get big double value 2.5976931e-101
   * @param options The options parameters.
   */
  getSmallDouble(
    options?: NumberGetSmallDoubleOptionalParams,
  ): Promise<NumberGetSmallDoubleResponse>;
  /**
   * Put small decimal value 2.5976931e-101
   * @param numberBody number body
   * @param options The options parameters.
   */
  putSmallDecimal(
    numberBody: number,
    options?: NumberPutSmallDecimalOptionalParams,
  ): Promise<void>;
  /**
   * Get small decimal value 2.5976931e-101
   * @param options The options parameters.
   */
  getSmallDecimal(
    options?: NumberGetSmallDecimalOptionalParams,
  ): Promise<NumberGetSmallDecimalResponse>;
}
