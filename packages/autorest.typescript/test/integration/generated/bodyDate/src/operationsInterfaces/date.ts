/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  DateGetNullOptionalParams,
  DateGetNullResponse,
  DateGetInvalidDateOptionalParams,
  DateGetInvalidDateResponse,
  DateGetOverflowDateOptionalParams,
  DateGetOverflowDateResponse,
  DateGetUnderflowDateOptionalParams,
  DateGetUnderflowDateResponse,
  DatePutMaxDateOptionalParams,
  DateGetMaxDateOptionalParams,
  DateGetMaxDateResponse,
  DatePutMinDateOptionalParams,
  DateGetMinDateOptionalParams,
  DateGetMinDateResponse,
} from "../models";

/** Interface representing a DateOperations. */
export interface DateOperations {
  /**
   * Get null date value
   * @param options The options parameters.
   */
  getNull(options?: DateGetNullOptionalParams): Promise<DateGetNullResponse>;
  /**
   * Get invalid date value
   * @param options The options parameters.
   */
  getInvalidDate(
    options?: DateGetInvalidDateOptionalParams,
  ): Promise<DateGetInvalidDateResponse>;
  /**
   * Get overflow date value
   * @param options The options parameters.
   */
  getOverflowDate(
    options?: DateGetOverflowDateOptionalParams,
  ): Promise<DateGetOverflowDateResponse>;
  /**
   * Get underflow date value
   * @param options The options parameters.
   */
  getUnderflowDate(
    options?: DateGetUnderflowDateOptionalParams,
  ): Promise<DateGetUnderflowDateResponse>;
  /**
   * Put max date value 9999-12-31
   * @param dateBody date body
   * @param options The options parameters.
   */
  putMaxDate(
    dateBody: Date,
    options?: DatePutMaxDateOptionalParams,
  ): Promise<void>;
  /**
   * Get max date value 9999-12-31
   * @param options The options parameters.
   */
  getMaxDate(
    options?: DateGetMaxDateOptionalParams,
  ): Promise<DateGetMaxDateResponse>;
  /**
   * Put min date value 0000-01-01
   * @param dateBody date body
   * @param options The options parameters.
   */
  putMinDate(
    dateBody: Date,
    options?: DatePutMinDateOptionalParams,
  ): Promise<void>;
  /**
   * Get min date value 0000-01-01
   * @param options The options parameters.
   */
  getMinDate(
    options?: DateGetMinDateOptionalParams,
  ): Promise<DateGetMinDateResponse>;
}
