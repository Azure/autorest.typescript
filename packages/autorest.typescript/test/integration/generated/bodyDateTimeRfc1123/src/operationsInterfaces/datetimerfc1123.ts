/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  Datetimerfc1123GetNullOptionalParams,
  Datetimerfc1123GetNullResponse,
  Datetimerfc1123GetInvalidOptionalParams,
  Datetimerfc1123GetInvalidResponse,
  Datetimerfc1123GetOverflowOptionalParams,
  Datetimerfc1123GetOverflowResponse,
  Datetimerfc1123GetUnderflowOptionalParams,
  Datetimerfc1123GetUnderflowResponse,
  Datetimerfc1123PutUtcMaxDateTimeOptionalParams,
  Datetimerfc1123GetUtcLowercaseMaxDateTimeOptionalParams,
  Datetimerfc1123GetUtcLowercaseMaxDateTimeResponse,
  Datetimerfc1123GetUtcUppercaseMaxDateTimeOptionalParams,
  Datetimerfc1123GetUtcUppercaseMaxDateTimeResponse,
  Datetimerfc1123PutUtcMinDateTimeOptionalParams,
  Datetimerfc1123GetUtcMinDateTimeOptionalParams,
  Datetimerfc1123GetUtcMinDateTimeResponse,
} from "../models";

/** Interface representing a Datetimerfc1123. */
export interface Datetimerfc1123 {
  /**
   * Get null datetime value
   * @param options The options parameters.
   */
  getNull(
    options?: Datetimerfc1123GetNullOptionalParams,
  ): Promise<Datetimerfc1123GetNullResponse>;
  /**
   * Get invalid datetime value
   * @param options The options parameters.
   */
  getInvalid(
    options?: Datetimerfc1123GetInvalidOptionalParams,
  ): Promise<Datetimerfc1123GetInvalidResponse>;
  /**
   * Get overflow datetime value
   * @param options The options parameters.
   */
  getOverflow(
    options?: Datetimerfc1123GetOverflowOptionalParams,
  ): Promise<Datetimerfc1123GetOverflowResponse>;
  /**
   * Get underflow datetime value
   * @param options The options parameters.
   */
  getUnderflow(
    options?: Datetimerfc1123GetUnderflowOptionalParams,
  ): Promise<Datetimerfc1123GetUnderflowResponse>;
  /**
   * Put max datetime value Fri, 31 Dec 9999 23:59:59 GMT
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putUtcMaxDateTime(
    datetimeBody: Date,
    options?: Datetimerfc1123PutUtcMaxDateTimeOptionalParams,
  ): Promise<void>;
  /**
   * Get max datetime value fri, 31 dec 9999 23:59:59 gmt
   * @param options The options parameters.
   */
  getUtcLowercaseMaxDateTime(
    options?: Datetimerfc1123GetUtcLowercaseMaxDateTimeOptionalParams,
  ): Promise<Datetimerfc1123GetUtcLowercaseMaxDateTimeResponse>;
  /**
   * Get max datetime value FRI, 31 DEC 9999 23:59:59 GMT
   * @param options The options parameters.
   */
  getUtcUppercaseMaxDateTime(
    options?: Datetimerfc1123GetUtcUppercaseMaxDateTimeOptionalParams,
  ): Promise<Datetimerfc1123GetUtcUppercaseMaxDateTimeResponse>;
  /**
   * Put min datetime value Mon, 1 Jan 0001 00:00:00 GMT
   * @param datetimeBody datetime body
   * @param options The options parameters.
   */
  putUtcMinDateTime(
    datetimeBody: Date,
    options?: Datetimerfc1123PutUtcMinDateTimeOptionalParams,
  ): Promise<void>;
  /**
   * Get min datetime value Mon, 1 Jan 0001 00:00:00 GMT
   * @param options The options parameters.
   */
  getUtcMinDateTime(
    options?: Datetimerfc1123GetUtcMinDateTimeOptionalParams,
  ): Promise<Datetimerfc1123GetUtcMinDateTimeResponse>;
}
