/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  SubscriptionInMethodPostMethodLocalValidOptionalParams,
  SubscriptionInMethodPostMethodLocalNullOptionalParams,
  SubscriptionInMethodPostPathLocalValidOptionalParams,
  SubscriptionInMethodPostSwaggerLocalValidOptionalParams,
} from "../models";

/** Interface representing a SubscriptionInMethod. */
export interface SubscriptionInMethod {
  /**
   * POST method with subscriptionId modeled in the method.  pass in subscription id =
   * '1234-5678-9012-3456' to succeed
   * @param subscriptionId This should appear as a method parameter, use value '1234-5678-9012-3456'
   * @param options The options parameters.
   */
  postMethodLocalValid(
    subscriptionId: string,
    options?: SubscriptionInMethodPostMethodLocalValidOptionalParams,
  ): Promise<void>;
  /**
   * POST method with subscriptionId modeled in the method.  pass in subscription id = null, client-side
   * validation should prevent you from making this call
   * @param subscriptionId This should appear as a method parameter, use value null, client-side
   *                       validation should prvenet the call
   * @param options The options parameters.
   */
  postMethodLocalNull(
    subscriptionId: string,
    options?: SubscriptionInMethodPostMethodLocalNullOptionalParams,
  ): Promise<void>;
  /**
   * POST method with subscriptionId modeled in the method.  pass in subscription id =
   * '1234-5678-9012-3456' to succeed
   * @param subscriptionId Should appear as a method parameter -use value '1234-5678-9012-3456'
   * @param options The options parameters.
   */
  postPathLocalValid(
    subscriptionId: string,
    options?: SubscriptionInMethodPostPathLocalValidOptionalParams,
  ): Promise<void>;
  /**
   * POST method with subscriptionId modeled in the method.  pass in subscription id =
   * '1234-5678-9012-3456' to succeed
   * @param subscriptionId The subscriptionId, which appears in the path, the value is always
   *                       '1234-5678-9012-3456'
   * @param options The options parameters.
   */
  postSwaggerLocalValid(
    subscriptionId: string,
    options?: SubscriptionInMethodPostSwaggerLocalValidOptionalParams,
  ): Promise<void>;
}
