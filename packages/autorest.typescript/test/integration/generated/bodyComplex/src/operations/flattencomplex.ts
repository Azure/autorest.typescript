/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import type { Flattencomplex } from "../operationsInterfaces/index.js";
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers.js";
import * as Parameters from "../models/parameters.js";
import type { BodyComplexClient } from "../bodyComplexClient.js";
import type {
  FlattencomplexGetValidOptionalParams,
  FlattencomplexGetValidResponse,
} from "../models/index.js";

/** Class containing Flattencomplex operations. */
export class FlattencomplexImpl implements Flattencomplex {
  private readonly client: BodyComplexClient;

  /**
   * Initialize a new instance of the class Flattencomplex class.
   * @param client Reference to the service client
   */
  constructor(client: BodyComplexClient) {
    this.client = client;
  }

  /** @param options The options parameters. */
  getValid(
    options?: FlattencomplexGetValidOptionalParams,
  ): Promise<FlattencomplexGetValidResponse> {
    return this.client.sendOperationRequest({ options }, getValidOperationSpec);
  }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);

const getValidOperationSpec: coreClient.OperationSpec = {
  path: "/complex/flatten/valid",
  httpMethod: "GET",
  responses: {
    200: {
      bodyMapper: Mappers.MyBaseType,
    },
  },
  urlParameters: [Parameters.$host],
  headerParameters: [Parameters.accept],
  serializer,
};
