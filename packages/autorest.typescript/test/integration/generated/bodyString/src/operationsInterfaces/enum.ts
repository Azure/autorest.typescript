/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  EnumGetNotExpandableOptionalParams,
  EnumGetNotExpandableResponse,
  Colors,
  EnumPutNotExpandableOptionalParams,
  EnumGetReferencedOptionalParams,
  EnumGetReferencedResponse,
  EnumPutReferencedOptionalParams,
  EnumGetReferencedConstantOptionalParams,
  EnumGetReferencedConstantResponse,
  RefColorConstant,
  EnumPutReferencedConstantOptionalParams,
} from "../models";

/** Interface representing a Enum. */
export interface Enum {
  /**
   * Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'.
   * @param options The options parameters.
   */
  getNotExpandable(
    options?: EnumGetNotExpandableOptionalParams,
  ): Promise<EnumGetNotExpandableResponse>;
  /**
   * Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'
   * @param stringBody string body
   * @param options The options parameters.
   */
  putNotExpandable(
    stringBody: Colors,
    options?: EnumPutNotExpandableOptionalParams,
  ): Promise<void>;
  /**
   * Get enum value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'.
   * @param options The options parameters.
   */
  getReferenced(
    options?: EnumGetReferencedOptionalParams,
  ): Promise<EnumGetReferencedResponse>;
  /**
   * Sends value 'red color' from enumeration of 'red color', 'green-color', 'blue_color'
   * @param enumStringBody enum string body
   * @param options The options parameters.
   */
  putReferenced(
    enumStringBody: Colors,
    options?: EnumPutReferencedOptionalParams,
  ): Promise<void>;
  /**
   * Get value 'green-color' from the constant.
   * @param options The options parameters.
   */
  getReferencedConstant(
    options?: EnumGetReferencedConstantOptionalParams,
  ): Promise<EnumGetReferencedConstantResponse>;
  /**
   * Sends value 'green-color' from a constant
   * @param enumStringBody enum string body
   * @param options The options parameters.
   */
  putReferencedConstant(
    enumStringBody: RefColorConstant,
    options?: EnumPutReferencedConstantOptionalParams,
  ): Promise<void>;
}
