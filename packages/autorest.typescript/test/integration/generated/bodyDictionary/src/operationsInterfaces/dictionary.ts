/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  DictionaryGetNullOptionalParams,
  DictionaryGetNullResponse,
  DictionaryGetEmptyOptionalParams,
  DictionaryGetEmptyResponse,
  DictionaryPutEmptyOptionalParams,
  DictionaryGetNullValueOptionalParams,
  DictionaryGetNullValueResponse,
  DictionaryGetNullKeyOptionalParams,
  DictionaryGetNullKeyResponse,
  DictionaryGetEmptyStringKeyOptionalParams,
  DictionaryGetEmptyStringKeyResponse,
  DictionaryGetInvalidOptionalParams,
  DictionaryGetInvalidResponse,
  DictionaryGetBooleanTfftOptionalParams,
  DictionaryGetBooleanTfftResponse,
  DictionaryPutBooleanTfftOptionalParams,
  DictionaryGetBooleanInvalidNullOptionalParams,
  DictionaryGetBooleanInvalidNullResponse,
  DictionaryGetBooleanInvalidStringOptionalParams,
  DictionaryGetBooleanInvalidStringResponse,
  DictionaryGetIntegerValidOptionalParams,
  DictionaryGetIntegerValidResponse,
  DictionaryPutIntegerValidOptionalParams,
  DictionaryGetIntInvalidNullOptionalParams,
  DictionaryGetIntInvalidNullResponse,
  DictionaryGetIntInvalidStringOptionalParams,
  DictionaryGetIntInvalidStringResponse,
  DictionaryGetLongValidOptionalParams,
  DictionaryGetLongValidResponse,
  DictionaryPutLongValidOptionalParams,
  DictionaryGetLongInvalidNullOptionalParams,
  DictionaryGetLongInvalidNullResponse,
  DictionaryGetLongInvalidStringOptionalParams,
  DictionaryGetLongInvalidStringResponse,
  DictionaryGetFloatValidOptionalParams,
  DictionaryGetFloatValidResponse,
  DictionaryPutFloatValidOptionalParams,
  DictionaryGetFloatInvalidNullOptionalParams,
  DictionaryGetFloatInvalidNullResponse,
  DictionaryGetFloatInvalidStringOptionalParams,
  DictionaryGetFloatInvalidStringResponse,
  DictionaryGetDoubleValidOptionalParams,
  DictionaryGetDoubleValidResponse,
  DictionaryPutDoubleValidOptionalParams,
  DictionaryGetDoubleInvalidNullOptionalParams,
  DictionaryGetDoubleInvalidNullResponse,
  DictionaryGetDoubleInvalidStringOptionalParams,
  DictionaryGetDoubleInvalidStringResponse,
  DictionaryGetStringValidOptionalParams,
  DictionaryGetStringValidResponse,
  DictionaryPutStringValidOptionalParams,
  DictionaryGetStringWithNullOptionalParams,
  DictionaryGetStringWithNullResponse,
  DictionaryGetStringWithInvalidOptionalParams,
  DictionaryGetStringWithInvalidResponse,
  DictionaryGetDateValidOptionalParams,
  DictionaryGetDateValidResponse,
  DictionaryPutDateValidOptionalParams,
  DictionaryGetDateInvalidNullOptionalParams,
  DictionaryGetDateInvalidNullResponse,
  DictionaryGetDateInvalidCharsOptionalParams,
  DictionaryGetDateInvalidCharsResponse,
  DictionaryGetDateTimeValidOptionalParams,
  DictionaryGetDateTimeValidResponse,
  DictionaryPutDateTimeValidOptionalParams,
  DictionaryGetDateTimeInvalidNullOptionalParams,
  DictionaryGetDateTimeInvalidNullResponse,
  DictionaryGetDateTimeInvalidCharsOptionalParams,
  DictionaryGetDateTimeInvalidCharsResponse,
  DictionaryGetDateTimeRfc1123ValidOptionalParams,
  DictionaryGetDateTimeRfc1123ValidResponse,
  DictionaryPutDateTimeRfc1123ValidOptionalParams,
  DictionaryGetDurationValidOptionalParams,
  DictionaryGetDurationValidResponse,
  DictionaryPutDurationValidOptionalParams,
  DictionaryGetByteValidOptionalParams,
  DictionaryGetByteValidResponse,
  DictionaryPutByteValidOptionalParams,
  DictionaryGetByteInvalidNullOptionalParams,
  DictionaryGetByteInvalidNullResponse,
  DictionaryGetBase64UrlOptionalParams,
  DictionaryGetBase64UrlResponse,
  DictionaryGetComplexNullOptionalParams,
  DictionaryGetComplexNullResponse,
  DictionaryGetComplexEmptyOptionalParams,
  DictionaryGetComplexEmptyResponse,
  DictionaryGetComplexItemNullOptionalParams,
  DictionaryGetComplexItemNullResponse,
  DictionaryGetComplexItemEmptyOptionalParams,
  DictionaryGetComplexItemEmptyResponse,
  DictionaryGetComplexValidOptionalParams,
  DictionaryGetComplexValidResponse,
  Widget,
  DictionaryPutComplexValidOptionalParams,
  DictionaryGetArrayNullOptionalParams,
  DictionaryGetArrayNullResponse,
  DictionaryGetArrayEmptyOptionalParams,
  DictionaryGetArrayEmptyResponse,
  DictionaryGetArrayItemNullOptionalParams,
  DictionaryGetArrayItemNullResponse,
  DictionaryGetArrayItemEmptyOptionalParams,
  DictionaryGetArrayItemEmptyResponse,
  DictionaryGetArrayValidOptionalParams,
  DictionaryGetArrayValidResponse,
  DictionaryPutArrayValidOptionalParams,
  DictionaryGetDictionaryNullOptionalParams,
  DictionaryGetDictionaryNullResponse,
  DictionaryGetDictionaryEmptyOptionalParams,
  DictionaryGetDictionaryEmptyResponse,
  DictionaryGetDictionaryItemNullOptionalParams,
  DictionaryGetDictionaryItemNullResponse,
  DictionaryGetDictionaryItemEmptyOptionalParams,
  DictionaryGetDictionaryItemEmptyResponse,
  DictionaryGetDictionaryValidOptionalParams,
  DictionaryGetDictionaryValidResponse,
  DictionaryPutDictionaryValidOptionalParams,
} from "../models";

/** Interface representing a Dictionary. */
export interface Dictionary {
  /**
   * Get null dictionary value
   * @param options The options parameters.
   */
  getNull(
    options?: DictionaryGetNullOptionalParams,
  ): Promise<DictionaryGetNullResponse>;
  /**
   * Get empty dictionary value {}
   * @param options The options parameters.
   */
  getEmpty(
    options?: DictionaryGetEmptyOptionalParams,
  ): Promise<DictionaryGetEmptyResponse>;
  /**
   * Set dictionary value empty {}
   * @param arrayBody The empty dictionary value {}
   * @param options The options parameters.
   */
  putEmpty(
    arrayBody: { [propertyName: string]: string },
    options?: DictionaryPutEmptyOptionalParams,
  ): Promise<void>;
  /**
   * Get Dictionary with null value
   * @param options The options parameters.
   */
  getNullValue(
    options?: DictionaryGetNullValueOptionalParams,
  ): Promise<DictionaryGetNullValueResponse>;
  /**
   * Get Dictionary with null key
   * @param options The options parameters.
   */
  getNullKey(
    options?: DictionaryGetNullKeyOptionalParams,
  ): Promise<DictionaryGetNullKeyResponse>;
  /**
   * Get Dictionary with key as empty string
   * @param options The options parameters.
   */
  getEmptyStringKey(
    options?: DictionaryGetEmptyStringKeyOptionalParams,
  ): Promise<DictionaryGetEmptyStringKeyResponse>;
  /**
   * Get invalid Dictionary value
   * @param options The options parameters.
   */
  getInvalid(
    options?: DictionaryGetInvalidOptionalParams,
  ): Promise<DictionaryGetInvalidResponse>;
  /**
   * Get boolean dictionary value {"0": true, "1": false, "2": false, "3": true }
   * @param options The options parameters.
   */
  getBooleanTfft(
    options?: DictionaryGetBooleanTfftOptionalParams,
  ): Promise<DictionaryGetBooleanTfftResponse>;
  /**
   * Set dictionary value empty {"0": true, "1": false, "2": false, "3": true }
   * @param arrayBody The dictionary value {"0": true, "1": false, "2": false, "3": true }
   * @param options The options parameters.
   */
  putBooleanTfft(
    arrayBody: { [propertyName: string]: boolean },
    options?: DictionaryPutBooleanTfftOptionalParams,
  ): Promise<void>;
  /**
   * Get boolean dictionary value {"0": true, "1": null, "2": false }
   * @param options The options parameters.
   */
  getBooleanInvalidNull(
    options?: DictionaryGetBooleanInvalidNullOptionalParams,
  ): Promise<DictionaryGetBooleanInvalidNullResponse>;
  /**
   * Get boolean dictionary value '{"0": true, "1": "boolean", "2": false}'
   * @param options The options parameters.
   */
  getBooleanInvalidString(
    options?: DictionaryGetBooleanInvalidStringOptionalParams,
  ): Promise<DictionaryGetBooleanInvalidStringResponse>;
  /**
   * Get integer dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param options The options parameters.
   */
  getIntegerValid(
    options?: DictionaryGetIntegerValidOptionalParams,
  ): Promise<DictionaryGetIntegerValidResponse>;
  /**
   * Set dictionary value empty {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param arrayBody The dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param options The options parameters.
   */
  putIntegerValid(
    arrayBody: { [propertyName: string]: number },
    options?: DictionaryPutIntegerValidOptionalParams,
  ): Promise<void>;
  /**
   * Get integer dictionary value {"0": 1, "1": null, "2": 0}
   * @param options The options parameters.
   */
  getIntInvalidNull(
    options?: DictionaryGetIntInvalidNullOptionalParams,
  ): Promise<DictionaryGetIntInvalidNullResponse>;
  /**
   * Get integer dictionary value {"0": 1, "1": "integer", "2": 0}
   * @param options The options parameters.
   */
  getIntInvalidString(
    options?: DictionaryGetIntInvalidStringOptionalParams,
  ): Promise<DictionaryGetIntInvalidStringResponse>;
  /**
   * Get integer dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param options The options parameters.
   */
  getLongValid(
    options?: DictionaryGetLongValidOptionalParams,
  ): Promise<DictionaryGetLongValidResponse>;
  /**
   * Set dictionary value empty {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param arrayBody The dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
   * @param options The options parameters.
   */
  putLongValid(
    arrayBody: { [propertyName: string]: number },
    options?: DictionaryPutLongValidOptionalParams,
  ): Promise<void>;
  /**
   * Get long dictionary value {"0": 1, "1": null, "2": 0}
   * @param options The options parameters.
   */
  getLongInvalidNull(
    options?: DictionaryGetLongInvalidNullOptionalParams,
  ): Promise<DictionaryGetLongInvalidNullResponse>;
  /**
   * Get long dictionary value {"0": 1, "1": "integer", "2": 0}
   * @param options The options parameters.
   */
  getLongInvalidString(
    options?: DictionaryGetLongInvalidStringOptionalParams,
  ): Promise<DictionaryGetLongInvalidStringResponse>;
  /**
   * Get float dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param options The options parameters.
   */
  getFloatValid(
    options?: DictionaryGetFloatValidOptionalParams,
  ): Promise<DictionaryGetFloatValidResponse>;
  /**
   * Set dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param arrayBody The dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param options The options parameters.
   */
  putFloatValid(
    arrayBody: { [propertyName: string]: number },
    options?: DictionaryPutFloatValidOptionalParams,
  ): Promise<void>;
  /**
   * Get float dictionary value {"0": 0.0, "1": null, "2": 1.2e20}
   * @param options The options parameters.
   */
  getFloatInvalidNull(
    options?: DictionaryGetFloatInvalidNullOptionalParams,
  ): Promise<DictionaryGetFloatInvalidNullResponse>;
  /**
   * Get boolean dictionary value {"0": 1.0, "1": "number", "2": 0.0}
   * @param options The options parameters.
   */
  getFloatInvalidString(
    options?: DictionaryGetFloatInvalidStringOptionalParams,
  ): Promise<DictionaryGetFloatInvalidStringResponse>;
  /**
   * Get float dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param options The options parameters.
   */
  getDoubleValid(
    options?: DictionaryGetDoubleValidOptionalParams,
  ): Promise<DictionaryGetDoubleValidResponse>;
  /**
   * Set dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param arrayBody The dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
   * @param options The options parameters.
   */
  putDoubleValid(
    arrayBody: { [propertyName: string]: number },
    options?: DictionaryPutDoubleValidOptionalParams,
  ): Promise<void>;
  /**
   * Get float dictionary value {"0": 0.0, "1": null, "2": 1.2e20}
   * @param options The options parameters.
   */
  getDoubleInvalidNull(
    options?: DictionaryGetDoubleInvalidNullOptionalParams,
  ): Promise<DictionaryGetDoubleInvalidNullResponse>;
  /**
   * Get boolean dictionary value {"0": 1.0, "1": "number", "2": 0.0}
   * @param options The options parameters.
   */
  getDoubleInvalidString(
    options?: DictionaryGetDoubleInvalidStringOptionalParams,
  ): Promise<DictionaryGetDoubleInvalidStringResponse>;
  /**
   * Get string dictionary value {"0": "foo1", "1": "foo2", "2": "foo3"}
   * @param options The options parameters.
   */
  getStringValid(
    options?: DictionaryGetStringValidOptionalParams,
  ): Promise<DictionaryGetStringValidResponse>;
  /**
   * Set dictionary value {"0": "foo1", "1": "foo2", "2": "foo3"}
   * @param arrayBody The dictionary value {"0": "foo1", "1": "foo2", "2": "foo3"}
   * @param options The options parameters.
   */
  putStringValid(
    arrayBody: { [propertyName: string]: string },
    options?: DictionaryPutStringValidOptionalParams,
  ): Promise<void>;
  /**
   * Get string dictionary value {"0": "foo", "1": null, "2": "foo2"}
   * @param options The options parameters.
   */
  getStringWithNull(
    options?: DictionaryGetStringWithNullOptionalParams,
  ): Promise<DictionaryGetStringWithNullResponse>;
  /**
   * Get string dictionary value {"0": "foo", "1": 123, "2": "foo2"}
   * @param options The options parameters.
   */
  getStringWithInvalid(
    options?: DictionaryGetStringWithInvalidOptionalParams,
  ): Promise<DictionaryGetStringWithInvalidResponse>;
  /**
   * Get integer dictionary value {"0": "2000-12-01", "1": "1980-01-02", "2": "1492-10-12"}
   * @param options The options parameters.
   */
  getDateValid(
    options?: DictionaryGetDateValidOptionalParams,
  ): Promise<DictionaryGetDateValidResponse>;
  /**
   * Set dictionary value  {"0": "2000-12-01", "1": "1980-01-02", "2": "1492-10-12"}
   * @param arrayBody The dictionary value {"0": "2000-12-01", "1": "1980-01-02", "2": "1492-10-12"}
   * @param options The options parameters.
   */
  putDateValid(
    arrayBody: { [propertyName: string]: Date },
    options?: DictionaryPutDateValidOptionalParams,
  ): Promise<void>;
  /**
   * Get date dictionary value {"0": "2012-01-01", "1": null, "2": "1776-07-04"}
   * @param options The options parameters.
   */
  getDateInvalidNull(
    options?: DictionaryGetDateInvalidNullOptionalParams,
  ): Promise<DictionaryGetDateInvalidNullResponse>;
  /**
   * Get date dictionary value {"0": "2011-03-22", "1": "date"}
   * @param options The options parameters.
   */
  getDateInvalidChars(
    options?: DictionaryGetDateInvalidCharsOptionalParams,
  ): Promise<DictionaryGetDateInvalidCharsResponse>;
  /**
   * Get date-time dictionary value {"0": "2000-12-01t00:00:01z", "1": "1980-01-02T00:11:35+01:00", "2":
   * "1492-10-12T10:15:01-08:00"}
   * @param options The options parameters.
   */
  getDateTimeValid(
    options?: DictionaryGetDateTimeValidOptionalParams,
  ): Promise<DictionaryGetDateTimeValidResponse>;
  /**
   * Set dictionary value  {"0": "2000-12-01t00:00:01z", "1": "1980-01-02T00:11:35+01:00", "2":
   * "1492-10-12T10:15:01-08:00"}
   * @param arrayBody The dictionary value {"0": "2000-12-01t00:00:01z", "1":
   *                  "1980-01-02T00:11:35+01:00", "2": "1492-10-12T10:15:01-08:00"}
   * @param options The options parameters.
   */
  putDateTimeValid(
    arrayBody: { [propertyName: string]: Date },
    options?: DictionaryPutDateTimeValidOptionalParams,
  ): Promise<void>;
  /**
   * Get date dictionary value {"0": "2000-12-01t00:00:01z", "1": null}
   * @param options The options parameters.
   */
  getDateTimeInvalidNull(
    options?: DictionaryGetDateTimeInvalidNullOptionalParams,
  ): Promise<DictionaryGetDateTimeInvalidNullResponse>;
  /**
   * Get date dictionary value {"0": "2000-12-01t00:00:01z", "1": "date-time"}
   * @param options The options parameters.
   */
  getDateTimeInvalidChars(
    options?: DictionaryGetDateTimeInvalidCharsOptionalParams,
  ): Promise<DictionaryGetDateTimeInvalidCharsResponse>;
  /**
   * Get date-time-rfc1123 dictionary value {"0": "Fri, 01 Dec 2000 00:00:01 GMT", "1": "Wed, 02 Jan 1980
   * 00:11:35 GMT", "2": "Wed, 12 Oct 1492 10:15:01 GMT"}
   * @param options The options parameters.
   */
  getDateTimeRfc1123Valid(
    options?: DictionaryGetDateTimeRfc1123ValidOptionalParams,
  ): Promise<DictionaryGetDateTimeRfc1123ValidResponse>;
  /**
   * Set dictionary value empty {"0": "Fri, 01 Dec 2000 00:00:01 GMT", "1": "Wed, 02 Jan 1980 00:11:35
   * GMT", "2": "Wed, 12 Oct 1492 10:15:01 GMT"}
   * @param arrayBody The dictionary value {"0": "Fri, 01 Dec 2000 00:00:01 GMT", "1": "Wed, 02 Jan 1980
   *                  00:11:35 GMT", "2": "Wed, 12 Oct 1492 10:15:01 GMT"}
   * @param options The options parameters.
   */
  putDateTimeRfc1123Valid(
    arrayBody: { [propertyName: string]: Date },
    options?: DictionaryPutDateTimeRfc1123ValidOptionalParams,
  ): Promise<void>;
  /**
   * Get duration dictionary value {"0": "P123DT22H14M12.011S", "1": "P5DT1H0M0S"}
   * @param options The options parameters.
   */
  getDurationValid(
    options?: DictionaryGetDurationValidOptionalParams,
  ): Promise<DictionaryGetDurationValidResponse>;
  /**
   * Set dictionary value  {"0": "P123DT22H14M12.011S", "1": "P5DT1H0M0S"}
   * @param arrayBody The dictionary value {"0": "P123DT22H14M12.011S", "1": "P5DT1H0M0S"}
   * @param options The options parameters.
   */
  putDurationValid(
    arrayBody: { [propertyName: string]: string },
    options?: DictionaryPutDurationValidOptionalParams,
  ): Promise<void>;
  /**
   * Get byte dictionary value {"0": hex(FF FF FF FA), "1": hex(01 02 03), "2": hex (25, 29, 43)} with
   * each item encoded in base64
   * @param options The options parameters.
   */
  getByteValid(
    options?: DictionaryGetByteValidOptionalParams,
  ): Promise<DictionaryGetByteValidResponse>;
  /**
   * Put the dictionary value {"0": hex(FF FF FF FA), "1": hex(01 02 03), "2": hex (25, 29, 43)} with
   * each elementencoded in base 64
   * @param arrayBody The dictionary value {"0": hex(FF FF FF FA), "1": hex(01 02 03), "2": hex (25, 29,
   *                  43)} with each elementencoded in base 64
   * @param options The options parameters.
   */
  putByteValid(
    arrayBody: { [propertyName: string]: Uint8Array },
    options?: DictionaryPutByteValidOptionalParams,
  ): Promise<void>;
  /**
   * Get byte dictionary value {"0": hex(FF FF FF FA), "1": null} with the first item base64 encoded
   * @param options The options parameters.
   */
  getByteInvalidNull(
    options?: DictionaryGetByteInvalidNullOptionalParams,
  ): Promise<DictionaryGetByteInvalidNullResponse>;
  /**
   * Get base64url dictionary value {"0": "a string that gets encoded with base64url", "1": "test
   * string", "2": "Lorem ipsum"}
   * @param options The options parameters.
   */
  getBase64Url(
    options?: DictionaryGetBase64UrlOptionalParams,
  ): Promise<DictionaryGetBase64UrlResponse>;
  /**
   * Get dictionary of complex type null value
   * @param options The options parameters.
   */
  getComplexNull(
    options?: DictionaryGetComplexNullOptionalParams,
  ): Promise<DictionaryGetComplexNullResponse>;
  /**
   * Get empty dictionary of complex type {}
   * @param options The options parameters.
   */
  getComplexEmpty(
    options?: DictionaryGetComplexEmptyOptionalParams,
  ): Promise<DictionaryGetComplexEmptyResponse>;
  /**
   * Get dictionary of complex type with null item {"0": {"integer": 1, "string": "2"}, "1": null, "2":
   * {"integer": 5, "string": "6"}}
   * @param options The options parameters.
   */
  getComplexItemNull(
    options?: DictionaryGetComplexItemNullOptionalParams,
  ): Promise<DictionaryGetComplexItemNullResponse>;
  /**
   * Get dictionary of complex type with empty item {"0": {"integer": 1, "string": "2"}, "1:" {}, "2":
   * {"integer": 5, "string": "6"}}
   * @param options The options parameters.
   */
  getComplexItemEmpty(
    options?: DictionaryGetComplexItemEmptyOptionalParams,
  ): Promise<DictionaryGetComplexItemEmptyResponse>;
  /**
   * Get dictionary of complex type with {"0": {"integer": 1, "string": "2"}, "1": {"integer": 3,
   * "string": "4"}, "2": {"integer": 5, "string": "6"}}
   * @param options The options parameters.
   */
  getComplexValid(
    options?: DictionaryGetComplexValidOptionalParams,
  ): Promise<DictionaryGetComplexValidResponse>;
  /**
   * Put an dictionary of complex type with values {"0": {"integer": 1, "string": "2"}, "1": {"integer":
   * 3, "string": "4"}, "2": {"integer": 5, "string": "6"}}
   * @param arrayBody Dictionary of complex type with {"0": {"integer": 1, "string": "2"}, "1":
   *                  {"integer": 3, "string": "4"}, "2": {"integer": 5, "string": "6"}}
   * @param options The options parameters.
   */
  putComplexValid(
    arrayBody: { [propertyName: string]: Widget },
    options?: DictionaryPutComplexValidOptionalParams,
  ): Promise<void>;
  /**
   * Get a null array
   * @param options The options parameters.
   */
  getArrayNull(
    options?: DictionaryGetArrayNullOptionalParams,
  ): Promise<DictionaryGetArrayNullResponse>;
  /**
   * Get an empty dictionary {}
   * @param options The options parameters.
   */
  getArrayEmpty(
    options?: DictionaryGetArrayEmptyOptionalParams,
  ): Promise<DictionaryGetArrayEmptyResponse>;
  /**
   * Get an dictionary of array of strings {"0": ["1", "2", "3"], "1": null, "2": ["7", "8", "9"]}
   * @param options The options parameters.
   */
  getArrayItemNull(
    options?: DictionaryGetArrayItemNullOptionalParams,
  ): Promise<DictionaryGetArrayItemNullResponse>;
  /**
   * Get an array of array of strings [{"0": ["1", "2", "3"], "1": [], "2": ["7", "8", "9"]}
   * @param options The options parameters.
   */
  getArrayItemEmpty(
    options?: DictionaryGetArrayItemEmptyOptionalParams,
  ): Promise<DictionaryGetArrayItemEmptyResponse>;
  /**
   * Get an array of array of strings {"0": ["1", "2", "3"], "1": ["4", "5", "6"], "2": ["7", "8", "9"]}
   * @param options The options parameters.
   */
  getArrayValid(
    options?: DictionaryGetArrayValidOptionalParams,
  ): Promise<DictionaryGetArrayValidResponse>;
  /**
   * Put An array of array of strings {"0": ["1", "2", "3"], "1": ["4", "5", "6"], "2": ["7", "8", "9"]}
   * @param arrayBody An array of array of strings {"0": ["1", "2", "3"], "1": ["4", "5", "6"], "2":
   *                  ["7", "8", "9"]}
   * @param options The options parameters.
   */
  putArrayValid(
    arrayBody: { [propertyName: string]: string[] },
    options?: DictionaryPutArrayValidOptionalParams,
  ): Promise<void>;
  /**
   * Get an dictionaries of dictionaries with value null
   * @param options The options parameters.
   */
  getDictionaryNull(
    options?: DictionaryGetDictionaryNullOptionalParams,
  ): Promise<DictionaryGetDictionaryNullResponse>;
  /**
   * Get an dictionaries of dictionaries of type <string, string> with value {}
   * @param options The options parameters.
   */
  getDictionaryEmpty(
    options?: DictionaryGetDictionaryEmptyOptionalParams,
  ): Promise<DictionaryGetDictionaryEmptyResponse>;
  /**
   * Get an dictionaries of dictionaries of type <string, string> with value {"0": {"1": "one", "2":
   * "two", "3": "three"}, "1": null, "2": {"7": "seven", "8": "eight", "9": "nine"}}
   * @param options The options parameters.
   */
  getDictionaryItemNull(
    options?: DictionaryGetDictionaryItemNullOptionalParams,
  ): Promise<DictionaryGetDictionaryItemNullResponse>;
  /**
   * Get an dictionaries of dictionaries of type <string, string> with value {"0": {"1": "one", "2":
   * "two", "3": "three"}, "1": {}, "2": {"7": "seven", "8": "eight", "9": "nine"}}
   * @param options The options parameters.
   */
  getDictionaryItemEmpty(
    options?: DictionaryGetDictionaryItemEmptyOptionalParams,
  ): Promise<DictionaryGetDictionaryItemEmptyResponse>;
  /**
   * Get an dictionaries of dictionaries of type <string, string> with value {"0": {"1": "one", "2":
   * "two", "3": "three"}, "1": {"4": "four", "5": "five", "6": "six"}, "2": {"7": "seven", "8": "eight",
   * "9": "nine"}}
   * @param options The options parameters.
   */
  getDictionaryValid(
    options?: DictionaryGetDictionaryValidOptionalParams,
  ): Promise<DictionaryGetDictionaryValidResponse>;
  /**
   * Get an dictionaries of dictionaries of type <string, string> with value {"0": {"1": "one", "2":
   * "two", "3": "three"}, "1": {"4": "four", "5": "five", "6": "six"}, "2": {"7": "seven", "8": "eight",
   * "9": "nine"}}
   * @param arrayBody An dictionaries of dictionaries of type <string, string> with value {"0": {"1":
   *                  "one", "2": "two", "3": "three"}, "1": {"4": "four", "5": "five", "6": "six"}, "2": {"7": "seven",
   *                  "8": "eight", "9": "nine"}}
   * @param options The options parameters.
   */
  putDictionaryValid(
    arrayBody: { [propertyName: string]: { [propertyName: string]: string } },
    options?: DictionaryPutDictionaryValidOptionalParams,
  ): Promise<void>;
}
