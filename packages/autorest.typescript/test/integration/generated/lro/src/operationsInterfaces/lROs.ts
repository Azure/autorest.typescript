/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LROsPut200SucceededOptionalParams,
  LROsPut200SucceededResponse,
  LROsPatch200SucceededIgnoreHeadersOptionalParams,
  LROsPatch200SucceededIgnoreHeadersResponse,
  LROsPatch201RetryWithAsyncHeaderOptionalParams,
  LROsPatch201RetryWithAsyncHeaderResponse,
  LROsPatch202RetryWithAsyncAndLocationHeaderOptionalParams,
  LROsPatch202RetryWithAsyncAndLocationHeaderResponse,
  LROsPut201SucceededOptionalParams,
  LROsPut201SucceededResponse,
  LROsPost202ListOptionalParams,
  LROsPost202ListResponse,
  LROsPut200SucceededNoStateOptionalParams,
  LROsPut200SucceededNoStateResponse,
  LROsPut202Retry200OptionalParams,
  LROsPut202Retry200Response,
  LROsPut201CreatingSucceeded200OptionalParams,
  LROsPut201CreatingSucceeded200Response,
  LROsPut200UpdatingSucceeded204OptionalParams,
  LROsPut200UpdatingSucceeded204Response,
  LROsPut201CreatingFailed200OptionalParams,
  LROsPut201CreatingFailed200Response,
  LROsPut200Acceptedcanceled200OptionalParams,
  LROsPut200Acceptedcanceled200Response,
  LROsPutNoHeaderInRetryOptionalParams,
  LROsPutNoHeaderInRetryResponse,
  LROsPutAsyncRetrySucceededOptionalParams,
  LROsPutAsyncRetrySucceededResponse,
  LROsPutAsyncNoRetrySucceededOptionalParams,
  LROsPutAsyncNoRetrySucceededResponse,
  LROsPutAsyncRetryFailedOptionalParams,
  LROsPutAsyncRetryFailedResponse,
  LROsPutAsyncNoRetrycanceledOptionalParams,
  LROsPutAsyncNoRetrycanceledResponse,
  LROsPutAsyncNoHeaderInRetryOptionalParams,
  LROsPutAsyncNoHeaderInRetryResponse,
  LROsPutNonResourceOptionalParams,
  LROsPutNonResourceResponse,
  LROsPutAsyncNonResourceOptionalParams,
  LROsPutAsyncNonResourceResponse,
  LROsPutSubResourceOptionalParams,
  LROsPutSubResourceResponse,
  LROsPutAsyncSubResourceOptionalParams,
  LROsPutAsyncSubResourceResponse,
  LROsDeleteProvisioning202Accepted200SucceededOptionalParams,
  LROsDeleteProvisioning202Accepted200SucceededResponse,
  LROsDeleteProvisioning202DeletingFailed200OptionalParams,
  LROsDeleteProvisioning202DeletingFailed200Response,
  LROsDeleteProvisioning202Deletingcanceled200OptionalParams,
  LROsDeleteProvisioning202Deletingcanceled200Response,
  LROsDelete204SucceededOptionalParams,
  LROsDelete202Retry200OptionalParams,
  LROsDelete202Retry200Response,
  LROsDelete202NoRetry204OptionalParams,
  LROsDelete202NoRetry204Response,
  LROsDeleteNoHeaderInRetryOptionalParams,
  LROsDeleteNoHeaderInRetryResponse,
  LROsDeleteAsyncNoHeaderInRetryOptionalParams,
  LROsDeleteAsyncNoHeaderInRetryResponse,
  LROsDeleteAsyncRetrySucceededOptionalParams,
  LROsDeleteAsyncRetrySucceededResponse,
  LROsDeleteAsyncNoRetrySucceededOptionalParams,
  LROsDeleteAsyncNoRetrySucceededResponse,
  LROsDeleteAsyncRetryFailedOptionalParams,
  LROsDeleteAsyncRetryFailedResponse,
  LROsDeleteAsyncRetrycanceledOptionalParams,
  LROsDeleteAsyncRetrycanceledResponse,
  LROsPost200WithPayloadOptionalParams,
  LROsPost200WithPayloadResponse,
  LROsPost202Retry200OptionalParams,
  LROsPost202Retry200Response,
  LROsPost202NoRetry204OptionalParams,
  LROsPost202NoRetry204Response,
  LROsPostDoubleHeadersFinalLocationGetOptionalParams,
  LROsPostDoubleHeadersFinalLocationGetResponse,
  LROsPostDoubleHeadersFinalAzureHeaderGetOptionalParams,
  LROsPostDoubleHeadersFinalAzureHeaderGetResponse,
  LROsPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams,
  LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse,
  LROsPostAsyncRetrySucceededOptionalParams,
  LROsPostAsyncRetrySucceededResponse,
  LROsPostAsyncNoRetrySucceededOptionalParams,
  LROsPostAsyncNoRetrySucceededResponse,
  LROsPostAsyncRetryFailedOptionalParams,
  LROsPostAsyncRetryFailedResponse,
  LROsPostAsyncRetrycanceledOptionalParams,
  LROsPostAsyncRetrycanceledResponse,
} from "../models";

/** Interface representing a LROs. */
export interface LROs {
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200Succeeded(
    options?: LROsPut200SucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut200SucceededResponse>,
      LROsPut200SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededAndWait(
    options?: LROsPut200SucceededOptionalParams,
  ): Promise<LROsPut200SucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request with location header. We
   * should not have any subsequent calls after receiving this first response.
   * @param options The options parameters.
   */
  beginPatch200SucceededIgnoreHeaders(
    options?: LROsPatch200SucceededIgnoreHeadersOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPatch200SucceededIgnoreHeadersResponse>,
      LROsPatch200SucceededIgnoreHeadersResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request with location header. We
   * should not have any subsequent calls after receiving this first response.
   * @param options The options parameters.
   */
  beginPatch200SucceededIgnoreHeadersAndWait(
    options?: LROsPatch200SucceededIgnoreHeadersOptionalParams,
  ): Promise<LROsPatch200SucceededIgnoreHeadersResponse>;
  /**
   * Long running patch request, service returns a 201 to the initial request with async header.
   * @param options The options parameters.
   */
  beginPatch201RetryWithAsyncHeader(
    options?: LROsPatch201RetryWithAsyncHeaderOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPatch201RetryWithAsyncHeaderResponse>,
      LROsPatch201RetryWithAsyncHeaderResponse
    >
  >;
  /**
   * Long running patch request, service returns a 201 to the initial request with async header.
   * @param options The options parameters.
   */
  beginPatch201RetryWithAsyncHeaderAndWait(
    options?: LROsPatch201RetryWithAsyncHeaderOptionalParams,
  ): Promise<LROsPatch201RetryWithAsyncHeaderResponse>;
  /**
   * Long running patch request, service returns a 202 to the initial request with async and location
   * header.
   * @param options The options parameters.
   */
  beginPatch202RetryWithAsyncAndLocationHeader(
    options?: LROsPatch202RetryWithAsyncAndLocationHeaderOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPatch202RetryWithAsyncAndLocationHeaderResponse>,
      LROsPatch202RetryWithAsyncAndLocationHeaderResponse
    >
  >;
  /**
   * Long running patch request, service returns a 202 to the initial request with async and location
   * header.
   * @param options The options parameters.
   */
  beginPatch202RetryWithAsyncAndLocationHeaderAndWait(
    options?: LROsPatch202RetryWithAsyncAndLocationHeaderOptionalParams,
  ): Promise<LROsPatch202RetryWithAsyncAndLocationHeaderResponse>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut201Succeeded(
    options?: LROsPut201SucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut201SucceededResponse>,
      LROsPut201SucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut201SucceededAndWait(
    options?: LROsPut201SucceededOptionalParams,
  ): Promise<LROsPut201SucceededResponse>;
  /**
   * Long running put request, service returns a 202 with empty body to first request, returns a 200 with
   * body [{ 'id': '100', 'name': 'foo' }].
   * @param options The options parameters.
   */
  beginPost202List(
    options?: LROsPost202ListOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPost202ListResponse>,
      LROsPost202ListResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 with empty body to first request, returns a 200 with
   * body [{ 'id': '100', 'name': 'foo' }].
   * @param options The options parameters.
   */
  beginPost202ListAndWait(
    options?: LROsPost202ListOptionalParams,
  ): Promise<LROsPost202ListResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that does not
   * contain ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededNoState(
    options?: LROsPut200SucceededNoStateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut200SucceededNoStateResponse>,
      LROsPut200SucceededNoStateResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that does not
   * contain ProvisioningState=’Succeeded’.
   * @param options The options parameters.
   */
  beginPut200SucceededNoStateAndWait(
    options?: LROsPut200SucceededNoStateOptionalParams,
  ): Promise<LROsPut200SucceededNoStateResponse>;
  /**
   * Long running put request, service returns a 202 to the initial request, with a location header that
   * points to a polling URL that returns a 200 and an entity that doesn't contains ProvisioningState
   * @param options The options parameters.
   */
  beginPut202Retry200(
    options?: LROsPut202Retry200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut202Retry200Response>,
      LROsPut202Retry200Response
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request, with a location header that
   * points to a polling URL that returns a 200 and an entity that doesn't contains ProvisioningState
   * @param options The options parameters.
   */
  beginPut202Retry200AndWait(
    options?: LROsPut202Retry200OptionalParams,
  ): Promise<LROsPut202Retry200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200(
    options?: LROsPut201CreatingSucceeded200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut201CreatingSucceeded200Response>,
      LROsPut201CreatingSucceeded200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200AndWait(
    options?: LROsPut201CreatingSucceeded200OptionalParams,
  ): Promise<LROsPut201CreatingSucceeded200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut200UpdatingSucceeded204(
    options?: LROsPut200UpdatingSucceeded204OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut200UpdatingSucceeded204Response>,
      LROsPut200UpdatingSucceeded204Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Updating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut200UpdatingSucceeded204AndWait(
    options?: LROsPut200UpdatingSucceeded204OptionalParams,
  ): Promise<LROsPut200UpdatingSucceeded204Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginPut201CreatingFailed200(
    options?: LROsPut201CreatingFailed200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut201CreatingFailed200Response>,
      LROsPut201CreatingFailed200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Created’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginPut201CreatingFailed200AndWait(
    options?: LROsPut201CreatingFailed200OptionalParams,
  ): Promise<LROsPut201CreatingFailed200Response>;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginPut200Acceptedcanceled200(
    options?: LROsPut200Acceptedcanceled200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPut200Acceptedcanceled200Response>,
      LROsPut200Acceptedcanceled200Response
    >
  >;
  /**
   * Long running put request, service returns a 201 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’ with
   * ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginPut200Acceptedcanceled200AndWait(
    options?: LROsPut200Acceptedcanceled200OptionalParams,
  ): Promise<LROsPut200Acceptedcanceled200Response>;
  /**
   * Long running put request, service returns a 202 to the initial request with location header.
   * Subsequent calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginPutNoHeaderInRetry(
    options?: LROsPutNoHeaderInRetryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutNoHeaderInRetryResponse>,
      LROsPutNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with location header.
   * Subsequent calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginPutNoHeaderInRetryAndWait(
    options?: LROsPutNoHeaderInRetryOptionalParams,
  ): Promise<LROsPutNoHeaderInRetryResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceeded(
    options?: LROsPutAsyncRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncRetrySucceededResponse>,
      LROsPutAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceededAndWait(
    options?: LROsPutAsyncRetrySucceededOptionalParams,
  ): Promise<LROsPutAsyncRetrySucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrySucceeded(
    options?: LROsPutAsyncNoRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncNoRetrySucceededResponse>,
      LROsPutAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrySucceededAndWait(
    options?: LROsPutAsyncNoRetrySucceededOptionalParams,
  ): Promise<LROsPutAsyncNoRetrySucceededResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetryFailed(
    options?: LROsPutAsyncRetryFailedOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncRetryFailedResponse>,
      LROsPutAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetryFailedAndWait(
    options?: LROsPutAsyncRetryFailedOptionalParams,
  ): Promise<LROsPutAsyncRetryFailedResponse>;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrycanceled(
    options?: LROsPutAsyncNoRetrycanceledOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncNoRetrycanceledResponse>,
      LROsPutAsyncNoRetrycanceledResponse
    >
  >;
  /**
   * Long running put request, service returns a 200 to the initial request, with an entity that contains
   * ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation header for
   * operation status
   * @param options The options parameters.
   */
  beginPutAsyncNoRetrycanceledAndWait(
    options?: LROsPutAsyncNoRetrycanceledOptionalParams,
  ): Promise<LROsPutAsyncNoRetrycanceledResponse>;
  /**
   * Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation
   * header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginPutAsyncNoHeaderInRetry(
    options?: LROsPutAsyncNoHeaderInRetryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncNoHeaderInRetryResponse>,
      LROsPutAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running put request, service returns a 202 to the initial request with Azure-AsyncOperation
   * header. Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginPutAsyncNoHeaderInRetryAndWait(
    options?: LROsPutAsyncNoHeaderInRetryOptionalParams,
  ): Promise<LROsPutAsyncNoHeaderInRetryResponse>;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutNonResource(
    options?: LROsPutNonResourceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutNonResourceResponse>,
      LROsPutNonResourceResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutNonResourceAndWait(
    options?: LROsPutNonResourceOptionalParams,
  ): Promise<LROsPutNonResourceResponse>;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutAsyncNonResource(
    options?: LROsPutAsyncNonResourceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncNonResourceResponse>,
      LROsPutAsyncNonResourceResponse
    >
  >;
  /**
   * Long running put request with non resource.
   * @param options The options parameters.
   */
  beginPutAsyncNonResourceAndWait(
    options?: LROsPutAsyncNonResourceOptionalParams,
  ): Promise<LROsPutAsyncNonResourceResponse>;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutSubResource(
    options?: LROsPutSubResourceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutSubResourceResponse>,
      LROsPutSubResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutSubResourceAndWait(
    options?: LROsPutSubResourceOptionalParams,
  ): Promise<LROsPutSubResourceResponse>;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutAsyncSubResource(
    options?: LROsPutAsyncSubResourceOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPutAsyncSubResourceResponse>,
      LROsPutAsyncSubResourceResponse
    >
  >;
  /**
   * Long running put request with sub resource.
   * @param options The options parameters.
   */
  beginPutAsyncSubResourceAndWait(
    options?: LROsPutAsyncSubResourceOptionalParams,
  ): Promise<LROsPutAsyncSubResourceResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200Succeeded(
    options?: LROsDeleteProvisioning202Accepted200SucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteProvisioning202Accepted200SucceededResponse>,
      LROsDeleteProvisioning202Accepted200SucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Accepted’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Accepted200SucceededAndWait(
    options?: LROsDeleteProvisioning202Accepted200SucceededOptionalParams,
  ): Promise<LROsDeleteProvisioning202Accepted200SucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202DeletingFailed200(
    options?: LROsDeleteProvisioning202DeletingFailed200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteProvisioning202DeletingFailed200Response>,
      LROsDeleteProvisioning202DeletingFailed200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Failed’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202DeletingFailed200AndWait(
    options?: LROsDeleteProvisioning202DeletingFailed200OptionalParams,
  ): Promise<LROsDeleteProvisioning202DeletingFailed200Response>;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Deletingcanceled200(
    options?: LROsDeleteProvisioning202Deletingcanceled200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteProvisioning202Deletingcanceled200Response>,
      LROsDeleteProvisioning202Deletingcanceled200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a ‘200’
   * with ProvisioningState=’Canceled’
   * @param options The options parameters.
   */
  beginDeleteProvisioning202Deletingcanceled200AndWait(
    options?: LROsDeleteProvisioning202Deletingcanceled200OptionalParams,
  ): Promise<LROsDeleteProvisioning202Deletingcanceled200Response>;
  /**
   * Long running delete succeeds and returns right away
   * @param options The options parameters.
   */
  beginDelete204Succeeded(
    options?: LROsDelete204SucceededOptionalParams,
  ): Promise<SimplePollerLike<OperationState<void>, void>>;
  /**
   * Long running delete succeeds and returns right away
   * @param options The options parameters.
   */
  beginDelete204SucceededAndWait(
    options?: LROsDelete204SucceededOptionalParams,
  ): Promise<void>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200(
    options?: LROsDelete202Retry200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDelete202Retry200Response>,
      LROsDelete202Retry200Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202Retry200AndWait(
    options?: LROsDelete202Retry200OptionalParams,
  ): Promise<LROsDelete202Retry200Response>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202NoRetry204(
    options?: LROsDelete202NoRetry204OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDelete202NoRetry204Response>,
      LROsDelete202NoRetry204Response
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Polls return this value
   * until the last poll returns a ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginDelete202NoRetry204AndWait(
    options?: LROsDelete202NoRetry204OptionalParams,
  ): Promise<LROsDelete202NoRetry204Response>;
  /**
   * Long running delete request, service returns a location header in the initial request. Subsequent
   * calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginDeleteNoHeaderInRetry(
    options?: LROsDeleteNoHeaderInRetryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteNoHeaderInRetryResponse>,
      LROsDeleteNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns a location header in the initial request. Subsequent
   * calls to operation status do not contain location header.
   * @param options The options parameters.
   */
  beginDeleteNoHeaderInRetryAndWait(
    options?: LROsDeleteNoHeaderInRetryOptionalParams,
  ): Promise<LROsDeleteNoHeaderInRetryResponse>;
  /**
   * Long running delete request, service returns an Azure-AsyncOperation header in the initial request.
   * Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginDeleteAsyncNoHeaderInRetry(
    options?: LROsDeleteAsyncNoHeaderInRetryOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteAsyncNoHeaderInRetryResponse>,
      LROsDeleteAsyncNoHeaderInRetryResponse
    >
  >;
  /**
   * Long running delete request, service returns an Azure-AsyncOperation header in the initial request.
   * Subsequent calls to operation status do not contain Azure-AsyncOperation header.
   * @param options The options parameters.
   */
  beginDeleteAsyncNoHeaderInRetryAndWait(
    options?: LROsDeleteAsyncNoHeaderInRetryOptionalParams,
  ): Promise<LROsDeleteAsyncNoHeaderInRetryResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrySucceeded(
    options?: LROsDeleteAsyncRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteAsyncRetrySucceededResponse>,
      LROsDeleteAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrySucceededAndWait(
    options?: LROsDeleteAsyncRetrySucceededOptionalParams,
  ): Promise<LROsDeleteAsyncRetrySucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncNoRetrySucceeded(
    options?: LROsDeleteAsyncNoRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteAsyncNoRetrySucceededResponse>,
      LROsDeleteAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncNoRetrySucceededAndWait(
    options?: LROsDeleteAsyncNoRetrySucceededOptionalParams,
  ): Promise<LROsDeleteAsyncNoRetrySucceededResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetryFailed(
    options?: LROsDeleteAsyncRetryFailedOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteAsyncRetryFailedResponse>,
      LROsDeleteAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetryFailedAndWait(
    options?: LROsDeleteAsyncRetryFailedOptionalParams,
  ): Promise<LROsDeleteAsyncRetryFailedResponse>;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrycanceled(
    options?: LROsDeleteAsyncRetrycanceledOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsDeleteAsyncRetrycanceledResponse>,
      LROsDeleteAsyncRetrycanceledResponse
    >
  >;
  /**
   * Long running delete request, service returns a 202 to the initial request. Poll the endpoint
   * indicated in the Azure-AsyncOperation header for operation status
   * @param options The options parameters.
   */
  beginDeleteAsyncRetrycanceledAndWait(
    options?: LROsDeleteAsyncRetrycanceledOptionalParams,
  ): Promise<LROsDeleteAsyncRetrycanceledResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header.
   * Poll returns a 200 with a response body after success.
   * @param options The options parameters.
   */
  beginPost200WithPayload(
    options?: LROsPost200WithPayloadOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPost200WithPayloadResponse>,
      LROsPost200WithPayloadResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header.
   * Poll returns a 200 with a response body after success.
   * @param options The options parameters.
   */
  beginPost200WithPayloadAndWait(
    options?: LROsPost200WithPayloadOptionalParams,
  ): Promise<LROsPost200WithPayloadResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' and
   * 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200(
    options?: LROsPost202Retry200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPost202Retry200Response>,
      LROsPost202Retry200Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' and
   * 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200AndWait(
    options?: LROsPost202Retry200OptionalParams,
  ): Promise<LROsPost202Retry200Response>;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header, 204
   * with noresponse body after success
   * @param options The options parameters.
   */
  beginPost202NoRetry204(
    options?: LROsPost202NoRetry204OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPost202NoRetry204Response>,
      LROsPost202NoRetry204Response
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with 'Location' header, 204
   * with noresponse body after success
   * @param options The options parameters.
   */
  beginPost202NoRetry204AndWait(
    options?: LROsPost202NoRetry204OptionalParams,
  ): Promise<LROsPost202NoRetry204Response>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should poll Location to get the final object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalLocationGet(
    options?: LROsPostDoubleHeadersFinalLocationGetOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostDoubleHeadersFinalLocationGetResponse>,
      LROsPostDoubleHeadersFinalLocationGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should poll Location to get the final object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalLocationGetAndWait(
    options?: LROsPostDoubleHeadersFinalLocationGetOptionalParams,
  ): Promise<LROsPostDoubleHeadersFinalLocationGetResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGet(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostDoubleHeadersFinalAzureHeaderGetResponse>,
      LROsPostDoubleHeadersFinalAzureHeaderGetResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetAndWait(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetOptionalParams,
  ): Promise<LROsPostDoubleHeadersFinalAzureHeaderGetResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object if you support initial Autorest behavior.
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetDefault(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse>,
      LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request with both Location and
   * Azure-Async header. Poll Azure-Async and it's success. Should NOT poll Location to get the final
   * object if you support initial Autorest behavior.
   * @param options The options parameters.
   */
  beginPostDoubleHeadersFinalAzureHeaderGetDefaultAndWait(
    options?: LROsPostDoubleHeadersFinalAzureHeaderGetDefaultOptionalParams,
  ): Promise<LROsPostDoubleHeadersFinalAzureHeaderGetDefaultResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceeded(
    options?: LROsPostAsyncRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostAsyncRetrySucceededResponse>,
      LROsPostAsyncRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceededAndWait(
    options?: LROsPostAsyncRetrySucceededOptionalParams,
  ): Promise<LROsPostAsyncRetrySucceededResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncNoRetrySucceeded(
    options?: LROsPostAsyncNoRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostAsyncNoRetrySucceededResponse>,
      LROsPostAsyncNoRetrySucceededResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncNoRetrySucceededAndWait(
    options?: LROsPostAsyncNoRetrySucceededOptionalParams,
  ): Promise<LROsPostAsyncNoRetrySucceededResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetryFailed(
    options?: LROsPostAsyncRetryFailedOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostAsyncRetryFailedResponse>,
      LROsPostAsyncRetryFailedResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetryFailedAndWait(
    options?: LROsPostAsyncRetryFailedOptionalParams,
  ): Promise<LROsPostAsyncRetryFailedResponse>;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrycanceled(
    options?: LROsPostAsyncRetrycanceledOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsPostAsyncRetrycanceledResponse>,
      LROsPostAsyncRetrycanceledResponse
    >
  >;
  /**
   * Long running post request, service returns a 202 to the initial request, with an entity that
   * contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrycanceledAndWait(
    options?: LROsPostAsyncRetrycanceledOptionalParams,
  ): Promise<LROsPostAsyncRetrycanceledResponse>;
}
