/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  LROsCustomHeaderPutAsyncRetrySucceededOptionalParams,
  LROsCustomHeaderPutAsyncRetrySucceededResponse,
  LROsCustomHeaderPut201CreatingSucceeded200OptionalParams,
  LROsCustomHeaderPut201CreatingSucceeded200Response,
  LROsCustomHeaderPost202Retry200OptionalParams,
  LROsCustomHeaderPost202Retry200Response,
  LROsCustomHeaderPostAsyncRetrySucceededOptionalParams,
  LROsCustomHeaderPostAsyncRetrySucceededResponse,
} from "../models";

/** Interface representing a LROsCustomHeader. */
export interface LROsCustomHeader {
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running put request, service returns a 200 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceeded(
    options?: LROsCustomHeaderPutAsyncRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsCustomHeaderPutAsyncRetrySucceededResponse>,
      LROsCustomHeaderPutAsyncRetrySucceededResponse
    >
  >;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running put request, service returns a 200 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPutAsyncRetrySucceededAndWait(
    options?: LROsCustomHeaderPutAsyncRetrySucceededOptionalParams,
  ): Promise<LROsCustomHeaderPutAsyncRetrySucceededResponse>;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running put request, service returns a 201 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a
   * ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200(
    options?: LROsCustomHeaderPut201CreatingSucceeded200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsCustomHeaderPut201CreatingSucceeded200Response>,
      LROsCustomHeaderPut201CreatingSucceeded200Response
    >
  >;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running put request, service returns a 201 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’.  Polls return this value until the last poll returns a
   * ‘200’ with ProvisioningState=’Succeeded’
   * @param options The options parameters.
   */
  beginPut201CreatingSucceeded200AndWait(
    options?: LROsCustomHeaderPut201CreatingSucceeded200OptionalParams,
  ): Promise<LROsCustomHeaderPut201CreatingSucceeded200Response>;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running post request, service returns a 202 to the initial request, with 'Location'
   * and 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200(
    options?: LROsCustomHeaderPost202Retry200OptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsCustomHeaderPost202Retry200Response>,
      LROsCustomHeaderPost202Retry200Response
    >
  >;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running post request, service returns a 202 to the initial request, with 'Location'
   * and 'Retry-After' headers, Polls return a 200 with a response body after success
   * @param options The options parameters.
   */
  beginPost202Retry200AndWait(
    options?: LROsCustomHeaderPost202Retry200OptionalParams,
  ): Promise<LROsCustomHeaderPost202Retry200Response>;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running post request, service returns a 202 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceeded(
    options?: LROsCustomHeaderPostAsyncRetrySucceededOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<LROsCustomHeaderPostAsyncRetrySucceededResponse>,
      LROsCustomHeaderPostAsyncRetrySucceededResponse
    >
  >;
  /**
   * x-ms-client-request-id = 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0 is required message header for all
   * requests. Long running post request, service returns a 202 to the initial request, with an entity
   * that contains ProvisioningState=’Creating’. Poll the endpoint indicated in the Azure-AsyncOperation
   * header for operation status
   * @param options The options parameters.
   */
  beginPostAsyncRetrySucceededAndWait(
    options?: LROsCustomHeaderPostAsyncRetrySucceededOptionalParams,
  ): Promise<LROsCustomHeaderPostAsyncRetrySucceededResponse>;
}
